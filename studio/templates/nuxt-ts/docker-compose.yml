# Docker Services
services:
  # CouchDB
  # (https://couchdb.apache.org/)
  couchdb:
    image: couchdb:3.3.3
    container_name: couchdb
    restart: unless-stopped
    ports:
      - '127.0.0.1:5984:5984'
      - '127.0.0.1:4369:4369'
      - '127.0.0.1:9100:9100'
    # env_file: .env
    environment:
      - COUCHDB_USER=${COUCHDB_USER}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
    volumes:
        - ./dbdata:/opt/couchdb/data
    logging: # apply better controls to Docker overlay folder
      driver: 'json-file'
      options:
        max-file: '5'
        max-size: '10m'
  # Web Application
  # (https://nuxt.com/)
  webapp:
    depends_on:
      - couchdb
    build: .
    image: myapp
    container_name: myapp
    restart: unless-stopped
    network_mode: 'host'
    # ports:
    #   - '127.0.0.1:3000:3000'
    #   - '0.0.0.0:80:3000'     # use without proxy server
    logging: # apply better controls to Docker overlay folder
      driver: 'json-file'
      options:
        max-file: '5'
        max-size: '10m'
    # env_file: .env
    environment:
      - PROJECT_ID=${PROJECT_ID} # change to match your own environment
      - PROJECT_NAME=${PROJECT_NAME} # change to match your own environment
      - PROJECT_MNEMONIC=${PROJECT_MNEMONIC} # change to match your own environment
  # Nginx Webserver
  # (https://nginx.org/en/)
  # webserver:
  #   depends_on:
  #     - myapp
  #   image: nginx:1.15.12-alpine
  #   container_name: webserver
  #   restart: unless-stopped
  #   ports:
  #     - '80:80'
  #     # - '443:443'
  #   volumes:
  #     - myapp:/var/www/html
  #     - ./nginx-conf:/etc/nginx/conf.d
  #     - certbot-etc:/etc/letsencrypt
  #   networks:
  #     - myapp-network
  # Certbot
  # (https://certbot.eff.org/)
  # certbot:
  #   depends_on:
  #     - webserver
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - certbot-etc:/etc/letsencrypt
  #     - myapp:/var/www/html
  #   command: certonly --webroot --webroot-path=/var/www/html --email satoshi@your_domain --agree-tos --no-eff-email --staging -d your_domain -d www.your_domain
# Volumes
volumes:
  certbot-etc:
  myapp:
# Networks
networks:
  myapp-network:
    driver: bridge
