{"version":3,"file":"worker/conoutSocketWorker.js","mappings":";;;;;;;;;;;AAAA;;GAEG;;;AAUH,SAAgB,iBAAiB,CAAC,cAAsB;IACtD,OAAU,cAAc,YAAS,CAAC;AACpC,CAAC;AAFD,8CAEC;;;;;;;;;;;ACdD;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;;ACtBA;;GAEG;;AAEH,mFAAwD;AACxD,kDAA2C;AAC3C,2GAAuF;AAEvF,IAAM,cAAc,GAAI,2BAA0B,CAAC,cAAc,CAAC;AAClE,IAAM,YAAY,GAAG,IAAI,YAAM,EAAE,CAAC;AAClC,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AACjC,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE;IACnC,IAAM,MAAM,GAAG,kBAAY,CAAC,sBAAY;QACtC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,MAAM,CAAC,0BAAiB,CAAC,cAAc,CAAC,CAAC,CAAC;IACjD,2BAAU,CAAC,WAAW,eAA2B,CAAC;AACpD,CAAC,CAAC,CAAC","sources":["webpack:////Workspace/avasdao/nexajs/studio-code/node_modules/node-pty/src/shared/conout.ts?","webpack:///external node-commonjs \"net\"?","webpack:///external node-commonjs \"worker_threads\"?","webpack:///webpack/bootstrap?","webpack:////Workspace/avasdao/nexajs/studio-code/node_modules/node-pty/src/worker/conoutSocketWorker.ts?"],"sourcesContent":["/**\n * Copyright (c) 2020, Microsoft Corporation (MIT License).\n */\n\nexport interface IWorkerData {\n  conoutPipeName: string;\n}\n\nexport const enum ConoutWorkerMessage {\n  READY = 1\n}\n\nexport function getWorkerPipeName(conoutPipeName: string): string {\n  return `${conoutPipeName}-worker`;\n}\n","module.exports = require(\"net\");","module.exports = require(\"worker_threads\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2020, Microsoft Corporation (MIT License).\n */\n\nimport { parentPort, workerData } from 'worker_threads';\nimport { Socket, createServer } from 'net';\nimport { ConoutWorkerMessage, IWorkerData, getWorkerPipeName } from '../shared/conout';\n\nconst conoutPipeName = (workerData as IWorkerData).conoutPipeName;\nconst conoutSocket = new Socket();\nconoutSocket.setEncoding('utf8');\nconoutSocket.connect(conoutPipeName, () => {\n  const server = createServer(workerSocket => {\n    conoutSocket.pipe(workerSocket);\n  });\n  server.listen(getWorkerPipeName(conoutPipeName));\n  parentPort.postMessage(ConoutWorkerMessage.READY);\n});\n"],"names":[],"sourceRoot":""}