{"version":3,"file":"vendors-node_modules_theia_scm-extra_lib_browser_history_scm-history-widget_js-node_modules_t-45d155.js","mappings":"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","sources":["webpack:///./node_modules/@theia/core/shared/react-virtuoso/index.js?","webpack:///./node_modules/@theia/scm-extra/src/browser/history/scm-history-constants.ts?","webpack:///./node_modules/@theia/scm-extra/src/browser/history/scm-history-provider.ts?","webpack:///./node_modules/@theia/scm-extra/src/browser/history/scm-history-widget.tsx?","webpack:///./node_modules/@theia/scm-extra/src/browser/scm-extra-contribution.ts?","webpack:///./node_modules/@theia/scm-extra/src/browser/scm-file-change-label-provider.ts?","webpack:///./node_modules/@theia/scm-extra/src/browser/scm-file-change-node.ts?","webpack:///./node_modules/@theia/scm-extra/src/browser/scm-navigable-list-widget.tsx?"],"sourcesContent":["module.exports = require('react-virtuoso');\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Command, Event, nls } from '@theia/core';\nimport { OpenViewArguments } from '@theia/core/lib/browser';\nimport { ScmFileChangeNode, ScmHistoryCommit } from '../scm-file-change-node';\n\nexport const SCM_HISTORY_ID = 'scm-history';\nexport const SCM_HISTORY_LABEL = nls.localize('theia/scm/history', 'History');\nexport const SCM_HISTORY_TOGGLE_KEYBINDING = 'alt+h';\nexport const SCM_HISTORY_MAX_COUNT = 100;\n\nexport namespace ScmHistoryCommands {\n    export const OPEN_FILE_HISTORY: Command = {\n        id: 'scm-history:open-file-history',\n    };\n    export const OPEN_BRANCH_HISTORY: Command = {\n        id: 'scm-history:open-branch-history',\n        label: SCM_HISTORY_LABEL\n    };\n}\n\nexport interface ScmHistoryOpenViewArguments extends OpenViewArguments {\n    uri: string | undefined;\n}\n\nexport const ScmHistorySupport = Symbol('scm-history-support');\nexport interface ScmHistorySupport {\n    getCommitHistory(options?: HistoryWidgetOptions): Promise<ScmHistoryCommit[]>;\n    readonly onDidChangeHistory: Event<void>;\n}\n\nexport interface ScmCommitNode {\n    commitDetails: ScmHistoryCommit;\n    authorAvatar: string;\n    fileChangeNodes: ScmFileChangeNode[];\n    expanded: boolean;\n    selected: boolean;\n}\n\nexport namespace ScmCommitNode {\n    export function is(node: unknown): node is ScmCommitNode {\n        return !!node && typeof node === 'object' && 'commitDetails' in node && 'expanded' in node && 'selected' in node;\n    }\n}\n\nexport interface HistoryWidgetOptions {\n    range?: {\n        toRevision?: string;\n        fromRevision?: string;\n    };\n    uri?: string;\n    maxCount?: number;\n}\n\nexport type ScmHistoryListNode = (ScmCommitNode | ScmFileChangeNode);\n","// *****************************************************************************\n// Copyright (C) 2020 Arm and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ScmProvider } from '@theia/scm/lib/browser/scm-provider';\nimport { ScmHistorySupport } from './scm-history-constants';\n\nexport interface ScmHistoryProvider extends ScmProvider {\n    historySupport?: ScmHistorySupport;\n}\nexport namespace ScmHistoryProvider {\n    export function is(scmProvider: ScmProvider | undefined): scmProvider is ScmHistoryProvider {\n        return !!scmProvider && 'historySupport' in scmProvider;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { DisposableCollection } from '@theia/core';\nimport { OpenerService, open, StatefulWidget, SELECTED_CLASS, WidgetManager, ApplicationShell, codicon } from '@theia/core/lib/browser';\nimport { CancellationTokenSource } from '@theia/core/lib/common/cancellation';\nimport { Message } from '@theia/core/shared/@phosphor/messaging';\nimport { Virtuoso, VirtuosoHandle } from '@theia/core/shared/react-virtuoso';\nimport URI from '@theia/core/lib/common/uri';\nimport { ScmFileChange, ScmFileChangeNode } from '../scm-file-change-node';\nimport { ScmAvatarService } from '@theia/scm/lib/browser/scm-avatar-service';\nimport { ScmItemComponent, ScmNavigableListWidget } from '../scm-navigable-list-widget';\nimport * as React from '@theia/core/shared/react';\nimport { AlertMessage } from '@theia/core/lib/browser/widgets/alert-message';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { ScmHistoryProvider } from './scm-history-provider';\nimport throttle = require('@theia/core/shared/lodash.throttle');\nimport { HistoryWidgetOptions, ScmCommitNode, ScmHistoryListNode, ScmHistorySupport, SCM_HISTORY_ID, SCM_HISTORY_LABEL, SCM_HISTORY_MAX_COUNT } from './scm-history-constants';\nexport { HistoryWidgetOptions, ScmCommitNode, ScmHistoryListNode, ScmHistorySupport };\n\n@injectable()\nexport class ScmHistoryWidget extends ScmNavigableListWidget<ScmHistoryListNode> implements StatefulWidget {\n    protected options: HistoryWidgetOptions;\n    protected singleFileMode: boolean;\n    private cancelIndicator: CancellationTokenSource;\n    protected listView: ScmHistoryList | undefined;\n    protected hasMoreCommits: boolean;\n    protected allowScrollToSelected: boolean;\n\n    protected status: {\n        state: 'loading',\n    } | {\n        state: 'ready',\n        commits: ScmCommitNode[];\n    } | {\n        state: 'error',\n        errorMessage: React.ReactNode\n    };\n\n    protected readonly toDisposeOnRepositoryChange = new DisposableCollection();\n\n    protected historySupport: ScmHistorySupport | undefined;\n\n    constructor(\n        @inject(OpenerService) protected readonly openerService: OpenerService,\n        @inject(ApplicationShell) protected readonly shell: ApplicationShell,\n        @inject(FileService) protected readonly fileService: FileService,\n        @inject(ScmAvatarService) protected readonly avatarService: ScmAvatarService,\n        @inject(WidgetManager) protected readonly widgetManager: WidgetManager,\n    ) {\n        super();\n        this.id = SCM_HISTORY_ID;\n        this.scrollContainer = 'scm-history-list-container';\n        this.title.label = SCM_HISTORY_LABEL;\n        this.title.caption = SCM_HISTORY_LABEL;\n        this.title.iconClass = codicon('history');\n        this.title.closable = true;\n        this.addClass('theia-scm');\n        this.addClass('theia-scm-history');\n        this.status = { state: 'loading' };\n        this.resetState();\n        this.cancelIndicator = new CancellationTokenSource();\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.refreshOnRepositoryChange();\n        this.toDispose.push(this.scmService.onDidChangeSelectedRepository(() => this.refreshOnRepositoryChange()));\n        this.toDispose.push(this.labelProvider.onDidChange(event => {\n            if (this.scmNodes.some(node => ScmFileChangeNode.is(node) && event.affects(new URI(node.fileChange.uri)))) {\n                this.update();\n            }\n        }));\n    }\n\n    protected refreshOnRepositoryChange(): void {\n        this.toDisposeOnRepositoryChange.dispose();\n\n        const repository = this.scmService.selectedRepository;\n        if (repository && ScmHistoryProvider.is(repository.provider)) {\n            this.historySupport = repository.provider.historySupport;\n            if (this.historySupport) {\n                this.toDisposeOnRepositoryChange.push(this.historySupport.onDidChangeHistory(() => this.setContent(this.options)));\n            }\n        } else {\n            this.historySupport = undefined;\n        }\n        this.setContent(this.options);\n\n        // If switching repository, discard options because they are specific to a repository\n        this.options = this.createHistoryOptions();\n\n        this.refresh();\n    }\n\n    protected createHistoryOptions(): HistoryWidgetOptions {\n        return {\n            maxCount: SCM_HISTORY_MAX_COUNT\n        };\n    }\n\n    protected readonly toDisposeOnRefresh = new DisposableCollection();\n    protected refresh(): void {\n        this.toDisposeOnRefresh.dispose();\n        this.toDispose.push(this.toDisposeOnRefresh);\n        const repository = this.scmService.selectedRepository;\n        this.title.label = SCM_HISTORY_LABEL;\n        if (repository) {\n            this.title.label += ': ' + repository.provider.label;\n        }\n        const area = this.shell.getAreaFor(this);\n        if (area === 'left') {\n            this.shell.leftPanelHandler.refresh();\n        } else if (area === 'right') {\n            this.shell.rightPanelHandler.refresh();\n        }\n        this.update();\n\n        if (repository) {\n            this.toDisposeOnRefresh.push(repository.onDidChange(() => this.update()));\n            // render synchronously to avoid cursor jumping\n            // see https://stackoverflow.com/questions/28922275/in-reactjs-why-does-setstate-behave-differently-when-called-synchronously/28922465#28922465\n            this.toDisposeOnRefresh.push(repository.input.onDidChange(() => this.setContent(this.options)));\n        }\n    }\n\n    protected override onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        this.addListNavigationKeyListeners(this.node);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.addEventListener<any>(this.node, 'ps-scroll-y', (e: Event & { target: { scrollTop: number } }) => {\n            if (this.listView?.list) {\n                const { scrollTop } = e.target;\n                this.listView.list.scrollTo({\n                    top: scrollTop\n                });\n            }\n        });\n    }\n\n    setContent = throttle((options?: HistoryWidgetOptions) => this.doSetContent(options), 100);\n\n    protected async doSetContent(options?: HistoryWidgetOptions): Promise<void> {\n        this.resetState(options);\n        if (options && options.uri) {\n            try {\n                const fileStat = await this.fileService.resolve(new URI(options.uri));\n                this.singleFileMode = !fileStat.isDirectory;\n            } catch {\n                this.singleFileMode = true;\n            }\n        }\n        await this.addCommits(options);\n        this.onDataReady();\n        if (this.scmNodes.length > 0) {\n            this.selectNode(this.scmNodes[0]);\n        }\n    }\n\n    protected resetState(options?: HistoryWidgetOptions): void {\n        this.options = options || this.createHistoryOptions();\n        this.hasMoreCommits = true;\n        this.allowScrollToSelected = true;\n    }\n\n    protected async addCommits(options?: HistoryWidgetOptions): Promise<void> {\n        const repository = this.scmService.selectedRepository;\n\n        this.cancelIndicator.cancel();\n        this.cancelIndicator = new CancellationTokenSource();\n        const token = this.cancelIndicator.token;\n\n        if (repository) {\n            if (this.historySupport) {\n                try {\n                    const history = await this.historySupport.getCommitHistory(options);\n                    if (token.isCancellationRequested || !this.hasMoreCommits) {\n                        return;\n                    }\n\n                    if (options && (options.maxCount && history.length < options.maxCount)) {\n                        this.hasMoreCommits = false;\n                    }\n\n                    const avatarCache = new Map<string, string>();\n\n                    const commits: ScmCommitNode[] = [];\n                    for (const commit of history) {\n                        const fileChangeNodes: ScmFileChangeNode[] = [];\n                        await Promise.all(commit.fileChanges.map(async fileChange => {\n                            fileChangeNodes.push({\n                                fileChange, commitId: commit.id\n                            });\n                        }));\n\n                        let avatarUrl = '';\n                        if (avatarCache.has(commit.authorEmail)) {\n                            avatarUrl = avatarCache.get(commit.authorEmail)!;\n                        } else {\n                            avatarUrl = await this.avatarService.getAvatar(commit.authorEmail);\n                            avatarCache.set(commit.authorEmail, avatarUrl);\n                        }\n\n                        commits.push({\n                            commitDetails: commit,\n                            authorAvatar: avatarUrl,\n                            fileChangeNodes,\n                            expanded: false,\n                            selected: false\n                        });\n                    }\n                    this.status = { state: 'ready', commits };\n                } catch (error) {\n                    if (options && options.uri && repository) {\n                        this.hasMoreCommits = false;\n                    }\n                    this.status = { state: 'error', errorMessage: <React.Fragment> {error.message} </React.Fragment> };\n                }\n            } else {\n                this.status = { state: 'error', errorMessage: <React.Fragment>History is not supported for {repository.provider.label} source control.</React.Fragment> };\n            }\n        } else {\n            this.status = {\n                state: 'error',\n                errorMessage: <React.Fragment>{nls.localizeByDefault('No source control providers registered.')}</React.Fragment>\n            };\n        }\n    }\n\n    protected async addOrRemoveFileChangeNodes(commit: ScmCommitNode): Promise<void> {\n        const id = this.scmNodes.findIndex(node => node === commit);\n        if (commit.expanded) {\n            this.removeFileChangeNodes(commit, id);\n        } else {\n            await this.addFileChangeNodes(commit, id);\n        }\n        commit.expanded = !commit.expanded;\n        this.update();\n    }\n\n    protected async addFileChangeNodes(commit: ScmCommitNode, scmNodesArrayIndex: number): Promise<void> {\n        if (commit.fileChangeNodes) {\n            this.scmNodes.splice(scmNodesArrayIndex + 1, 0, ...commit.fileChangeNodes.map(node =>\n                Object.assign(node, { commitSha: commit.commitDetails.id })\n            ));\n        }\n    }\n\n    protected removeFileChangeNodes(commit: ScmCommitNode, scmNodesArrayIndex: number): void {\n        if (commit.fileChangeNodes) {\n            this.scmNodes.splice(scmNodesArrayIndex + 1, commit.fileChangeNodes.length);\n        }\n    }\n\n    storeState(): object {\n        const { options, singleFileMode } = this;\n        return {\n            options,\n            singleFileMode\n        };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    restoreState(oldState: any): void {\n        this.options = oldState['options'];\n        this.options.maxCount = SCM_HISTORY_MAX_COUNT;\n        this.singleFileMode = oldState['singleFileMode'];\n        this.setContent(this.options);\n    }\n\n    protected onDataReady(): void {\n        if (this.status.state === 'ready') {\n            this.scmNodes = this.status.commits;\n        }\n        this.update();\n    }\n\n    protected render(): React.ReactNode {\n        let content: React.ReactNode;\n        switch (this.status.state) {\n            case 'ready':\n                content = < React.Fragment >\n                    {this.renderHistoryHeader()}\n                    {this.renderCommitList()}\n                </React.Fragment>;\n                break;\n\n            case 'error':\n                const reason: React.ReactNode = this.status.errorMessage;\n                let path: React.ReactNode = '';\n                if (this.options.uri) {\n                    const relPathEncoded = this.scmLabelProvider.relativePath(this.options.uri);\n                    const relPath = relPathEncoded ? `${decodeURIComponent(relPathEncoded)}` : '';\n\n                    const repo = this.scmService.findRepository(new URI(this.options.uri));\n                    const repoName = repo ? `${this.labelProvider.getName(new URI(repo.provider.rootUri))}` : '';\n\n                    const relPathAndRepo = [relPath, repoName].filter(Boolean).join(\n                        ` ${nls.localize('theia/git/prepositionIn', 'in')} `\n                    );\n                    path = `${relPathAndRepo}`;\n                }\n                content = <AlertMessage\n                    type='WARNING'\n                    header={nls.localize('theia/git/noHistoryForError', 'There is no history available for {0}', `${path}`)}>\n                    {reason}\n                </AlertMessage>;\n                break;\n\n            case 'loading':\n                content = <div className='spinnerContainer'>\n                    <span className={`${codicon('loading')} theia-animation-spin large-spinner`}></span>\n                </div>;\n                break;\n        }\n        return <div className='history-container'>\n            {content}\n        </div>;\n    }\n\n    protected renderHistoryHeader(): React.ReactNode {\n        if (this.options.uri) {\n            const path = this.scmLabelProvider.relativePath(this.options.uri);\n            const fileName = path.split('/').pop();\n            return <div className='diff-header'>\n                {\n                    this.renderHeaderRow({ name: 'repository', value: this.getRepositoryLabel(this.options.uri) })\n                }\n                {\n                    this.renderHeaderRow({ name: 'file', value: fileName, title: path })\n                }\n                <div className='theia-header'>\n                    Commits\n                </div>\n            </div>;\n        }\n    }\n\n    protected renderCommitList(): React.ReactNode {\n        const list = <div className='listContainer' id={this.scrollContainer}>\n            <ScmHistoryList\n                ref={listView => this.listView = (listView || undefined)}\n                rows={this.scmNodes}\n                hasMoreRows={this.hasMoreCommits}\n                loadMoreRows={this.loadMoreRows}\n                renderCommit={this.renderCommit}\n                renderFileChangeList={this.renderFileChangeList}\n            ></ScmHistoryList>\n        </div>;\n        this.allowScrollToSelected = true;\n        return list;\n    }\n\n    protected readonly loadMoreRows = (index: number) => this.doLoadMoreRows(index);\n    protected doLoadMoreRows(index: number): Promise<void> {\n        let resolver: () => void;\n        const promise = new Promise<void>(resolve => resolver = resolve);\n        const lastRow = this.scmNodes[index - 1];\n        if (ScmCommitNode.is(lastRow)) {\n            const toRevision = lastRow.commitDetails.id;\n            this.addCommits({\n                range: { toRevision },\n                maxCount: SCM_HISTORY_MAX_COUNT,\n                uri: this.options.uri\n            }).then(() => {\n                this.allowScrollToSelected = false;\n                this.onDataReady();\n                resolver();\n            });\n        }\n        return promise;\n    }\n\n    protected readonly renderCommit = (commit: ScmCommitNode) => this.doRenderCommit(commit);\n    protected doRenderCommit(commit: ScmCommitNode): React.ReactNode {\n        let expansionToggleIcon = codicon('chevron-right');\n        if (commit && commit.expanded) {\n            expansionToggleIcon = codicon('chevron-down');\n        }\n        return <div\n            className={`containerHead${commit.selected ? ' ' + SELECTED_CLASS : ''}`}\n            onClick={\n                e => {\n                    if (commit.selected && !this.singleFileMode) {\n                        this.addOrRemoveFileChangeNodes(commit);\n                    } else {\n                        this.selectNode(commit);\n                    }\n                    e.preventDefault();\n                }\n            }\n            onDoubleClick={\n                e => {\n                    if (this.singleFileMode && commit.fileChangeNodes.length > 0) {\n                        this.openFile(commit.fileChangeNodes[0].fileChange);\n                    }\n                    e.preventDefault();\n                }\n            }\n        >\n            <div className='headContent'><div className='image-container'>\n                <img className='gravatar' src={commit.authorAvatar}></img>\n            </div>\n                <div className={`headLabelContainer${this.singleFileMode ? ' singleFileMode' : ''}`}>\n                    <div className='headLabel noWrapInfo noselect'>\n                        {commit.commitDetails.summary}\n                    </div>\n                    <div className='commitTime noWrapInfo noselect'>\n                        {commit.commitDetails.authorDateRelative + ' by ' + commit.commitDetails.authorName}\n                    </div>\n                </div>\n                <div className={`${codicon('eye')} detailButton`} onClick={() => this.openDetailWidget(commit)}></div>\n                {!this.singleFileMode && <div className='expansionToggle noselect'>\n                    <div className='toggle'>\n                        <div className='number'>{commit.commitDetails.fileChanges.length.toString()}</div>\n                        <div className={'icon ' + expansionToggleIcon}></div>\n                    </div>\n                </div>}\n            </div>\n        </div >;\n    }\n\n    protected async openDetailWidget(commitNode: ScmCommitNode): Promise<void> {\n        const options = {\n            ...commitNode.commitDetails.commitDetailOptions,\n            mode: 'reveal'\n        };\n        open(\n            this.openerService,\n            commitNode.commitDetails.commitDetailUri,\n            options\n        );\n    }\n\n    protected readonly renderFileChangeList = (fileChange: ScmFileChangeNode) => this.doRenderFileChangeList(fileChange);\n    protected doRenderFileChangeList(fileChange: ScmFileChangeNode): React.ReactNode {\n        const fileChangeElement: React.ReactNode = this.renderScmItem(fileChange, fileChange.commitId);\n        return fileChangeElement;\n    }\n\n    protected renderScmItem(change: ScmFileChangeNode, commitSha: string): React.ReactNode {\n        return <ScmItemComponent key={change.fileChange.uri.toString()} {...{\n            labelProvider: this.labelProvider,\n            scmLabelProvider: this.scmLabelProvider,\n            change,\n            revealChange: () => this.openFile(change.fileChange),\n            selectNode: () => this.selectNode(change)\n        }} />;\n    }\n\n    protected override navigateLeft(): void {\n        const selected = this.getSelected();\n        if (selected && this.status.state === 'ready') {\n            if (ScmCommitNode.is(selected)) {\n                const idx = this.status.commits.findIndex(c => c.commitDetails.id === selected.commitDetails.id);\n                if (selected.expanded) {\n                    this.addOrRemoveFileChangeNodes(selected);\n                } else {\n                    if (idx > 0) {\n                        this.selectNode(this.status.commits[idx - 1]);\n                    }\n                }\n            } else if (ScmFileChangeNode.is(selected)) {\n                const idx = this.status.commits.findIndex(c => c.commitDetails.id === selected.commitId);\n                this.selectNode(this.status.commits[idx]);\n            }\n        }\n        this.update();\n    }\n\n    protected override navigateRight(): void {\n        const selected = this.getSelected();\n        if (selected) {\n            if (ScmCommitNode.is(selected) && !selected.expanded && !this.singleFileMode) {\n                this.addOrRemoveFileChangeNodes(selected);\n            } else {\n                this.selectNextNode();\n            }\n        }\n        this.update();\n    }\n\n    protected override handleListEnter(): void {\n        const selected = this.getSelected();\n        if (selected) {\n            if (ScmCommitNode.is(selected)) {\n                if (this.singleFileMode) {\n                    this.openFile(selected.fileChangeNodes[0].fileChange);\n                } else {\n                    this.openDetailWidget(selected);\n                }\n            } else if (ScmFileChangeNode.is(selected)) {\n                this.openFile(selected.fileChange);\n            }\n        }\n        this.update();\n    }\n\n    protected openFile(change: ScmFileChange): void {\n        const uriToOpen = change.getUriToOpen();\n        open(this.openerService, uriToOpen, { mode: 'reveal' });\n    }\n}\n\nexport namespace ScmHistoryList {\n    export interface Props {\n        readonly rows: ScmHistoryListNode[]\n        readonly hasMoreRows: boolean\n        readonly loadMoreRows: (index: number) => Promise<void>\n        readonly renderCommit: (commit: ScmCommitNode) => React.ReactNode\n        readonly renderFileChangeList: (fileChange: ScmFileChangeNode) => React.ReactNode\n    }\n}\nexport class ScmHistoryList extends React.Component<ScmHistoryList.Props> {\n    list: VirtuosoHandle | undefined;\n\n    protected readonly checkIfRowIsLoaded = (opts: { index: number }) => this.doCheckIfRowIsLoaded(opts);\n    protected doCheckIfRowIsLoaded(opts: { index: number }): boolean {\n        const row = this.props.rows[opts.index];\n        return !!row;\n    }\n\n    override render(): React.ReactNode {\n        const { hasMoreRows, loadMoreRows, rows } = this.props;\n        return <Virtuoso\n            ref={list => this.list = (list || undefined)}\n            data={rows}\n            itemContent={index => this.renderRow(index)}\n            endReached={hasMoreRows ? loadMoreRows : undefined}\n            overscan={500}\n            style={{\n                overflowX: 'hidden'\n            }}\n        />;\n    }\n\n    protected renderRow(index: number): React.ReactNode {\n        if (this.checkIfRowIsLoaded({ index })) {\n            const row = this.props.rows[index];\n            if (ScmCommitNode.is(row)) {\n                const head = this.props.renderCommit(row);\n                return <div className={`commitListElement${index === 0 ? ' first' : ''}`} >\n                    {head}\n                </div>;\n            } else if (ScmFileChangeNode.is(row)) {\n                return <div className='fileChangeListElement'>\n                    {this.props.renderFileChangeList(row)}\n                </div>;\n            }\n        } else {\n            return <div className={`commitListElement${index === 0 ? ' first' : ''}`} >\n                <span className={`${codicon('loading')} theia-animation-spin`}></span>\n            </div>;\n        }\n    };\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Arm and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { EDITOR_CONTEXT_MENU } from '@theia/editor/lib/browser';\n\nexport const EDITOR_CONTEXT_MENU_SCM = [...EDITOR_CONTEXT_MENU, '3_scm'];\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { LabelProviderContribution, DidChangeLabelEvent, LabelProvider } from '@theia/core/lib/browser/label-provider';\nimport { ScmFileChangeNode } from './scm-file-change-node';\nimport URI from '@theia/core/lib/common/uri';\nimport { ScmService } from '@theia/scm/lib/browser/scm-service';\n\n@injectable()\nexport class ScmFileChangeLabelProvider implements LabelProviderContribution {\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(ScmService)\n    protected readonly scmService: ScmService;\n\n    canHandle(element: object): number {\n        return ScmFileChangeNode.is(element) ? 100 : 0;\n    }\n\n    getIcon(node: ScmFileChangeNode): string {\n        return this.labelProvider.getIcon(new URI(node.fileChange.uri));\n    }\n\n    getName(node: ScmFileChangeNode): string {\n        return this.labelProvider.getName(new URI(node.fileChange.uri));\n    }\n\n    getDescription(node: ScmFileChangeNode): string {\n        return this.relativePath(new URI(node.fileChange.uri).parent);\n    }\n\n    affects(node: ScmFileChangeNode, event: DidChangeLabelEvent): boolean {\n        return event.affects(new URI(node.fileChange.uri));\n    }\n\n    getCaption(node: ScmFileChangeNode): string {\n        return node.fileChange.getCaption();\n    }\n\n    relativePath(uri: URI | string): string {\n        const parsedUri = typeof uri === 'string' ? new URI(uri) : uri;\n        const repo = this.scmService.findRepository(parsedUri);\n        if (repo) {\n            const repositoryUri = new URI(repo.provider.rootUri);\n            const relativePath = repositoryUri.relative(parsedUri);\n            if (relativePath) {\n                return relativePath.toString();\n            }\n        }\n        return this.labelProvider.getLongName(parsedUri);\n    }\n\n    getStatusCaption(node: ScmFileChangeNode): string {\n        return node.fileChange.getStatusCaption();\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ScmCommit } from '@theia/scm/lib/browser/scm-provider';\nimport URI from '@theia/core/lib/common/uri';\nimport { isObject } from '@theia/core/lib/common';\n\nexport interface ScmFileChangeNode {\n    readonly fileChange: ScmFileChange;\n    readonly commitId: string;\n    selected?: boolean;\n}\nexport namespace ScmFileChangeNode {\n    export function is(node: unknown): node is ScmFileChangeNode {\n        return isObject(node) && 'fileChange' in node && 'commitId' in node;\n    }\n}\n\nexport interface ScmHistoryCommit extends ScmCommit {\n    readonly commitDetailUri: URI;\n    readonly fileChanges: ScmFileChange[];\n    readonly commitDetailOptions: {};\n}\n\nexport interface ScmFileChange {\n    readonly uri: string;\n    getCaption(): string;\n    getStatusCaption(): string;\n    getStatusAbbreviation(): string;\n    getClassNameForStatus(): string;\n    getUriToOpen(): URI;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { SELECTED_CLASS, Key, Widget } from '@theia/core/lib/browser';\nimport { ScmService } from '@theia/scm/lib/browser/scm-service';\nimport URI from '@theia/core/lib/common/uri';\nimport { LabelProvider } from '@theia/core/lib/browser/label-provider';\nimport { Message } from '@theia/core/shared/@phosphor/messaging';\nimport { ElementExt } from '@theia/core/shared/@phosphor/domutils';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { ReactWidget } from '@theia/core/lib/browser/widgets/react-widget';\nimport * as React from '@theia/core/shared/react';\nimport { ScmFileChangeLabelProvider } from './scm-file-change-label-provider';\nimport { ScmFileChangeNode } from './scm-file-change-node';\n\n@injectable()\nexport abstract class ScmNavigableListWidget<T extends { selected?: boolean }> extends ReactWidget {\n\n    protected scmNodes: T[] = [];\n    private _scrollContainer: string;\n\n    @inject(ScmService) protected readonly scmService: ScmService;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(ScmFileChangeLabelProvider) protected readonly scmLabelProvider: ScmFileChangeLabelProvider;\n\n    constructor() {\n        super();\n        this.node.tabIndex = 0;\n    }\n\n    protected override onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.update();\n        this.node.focus();\n    }\n\n    protected set scrollContainer(id: string) {\n        this._scrollContainer = id + Date.now();\n    }\n\n    protected get scrollContainer(): string {\n        return this._scrollContainer;\n    }\n\n    protected override onUpdateRequest(msg: Message): void {\n        if (!this.isAttached || !this.isVisible) {\n            return;\n        }\n        super.onUpdateRequest(msg);\n        (async () => {\n            const selected = this.node.getElementsByClassName(SELECTED_CLASS)[0];\n            if (selected) {\n                const container = document.getElementById(this.scrollContainer);\n                if (container) {\n                    ElementExt.scrollIntoViewIfNeeded(container, selected);\n                }\n            }\n        })();\n    }\n\n    protected override onResize(msg: Widget.ResizeMessage): void {\n        super.onResize(msg);\n        this.update();\n    }\n\n    protected getRepositoryLabel(uri: string): string | undefined {\n        const repository = this.scmService.findRepository(new URI(uri));\n        const isSelectedRepo = this.scmService.selectedRepository && repository && this.scmService.selectedRepository.provider.rootUri === repository.provider.rootUri;\n        return repository && !isSelectedRepo ? this.labelProvider.getLongName(new URI(repository.provider.rootUri)) : undefined;\n    }\n\n    protected renderHeaderRow({ name, value, classNames, title }: { name: string, value: React.ReactNode, classNames?: string[], title?: string }): React.ReactNode {\n        if (!value) {\n            return;\n        }\n        const className = ['header-row', ...(classNames || [])].join(' ');\n        return <div key={name} className={className} title={title}>\n            <div className='theia-header'>{name}</div>\n            <div className='header-value'>{value}</div>\n        </div>;\n    }\n\n    protected addListNavigationKeyListeners(container: HTMLElement): void {\n        this.addKeyListener(container, Key.ARROW_LEFT, () => this.navigateLeft());\n        this.addKeyListener(container, Key.ARROW_RIGHT, () => this.navigateRight());\n        this.addKeyListener(container, Key.ARROW_UP, () => this.navigateUp());\n        this.addKeyListener(container, Key.ARROW_DOWN, () => this.navigateDown());\n        this.addKeyListener(container, Key.ENTER, () => this.handleListEnter());\n    }\n\n    protected navigateLeft(): void {\n        this.selectPreviousNode();\n    }\n\n    protected navigateRight(): void {\n        this.selectNextNode();\n    }\n\n    protected navigateUp(): void {\n        this.selectPreviousNode();\n    }\n\n    protected navigateDown(): void {\n        this.selectNextNode();\n    }\n\n    protected handleListEnter(): void {\n\n    }\n\n    protected getSelected(): T | undefined {\n        return this.scmNodes ? this.scmNodes.find(c => c.selected || false) : undefined;\n    }\n\n    protected selectNode(node: T): void {\n        const n = this.getSelected();\n        if (n) {\n            n.selected = false;\n        }\n        node.selected = true;\n        this.update();\n    }\n\n    protected selectNextNode(): void {\n        const idx = this.indexOfSelected;\n        if (idx >= 0 && idx < this.scmNodes.length - 1) {\n            this.selectNode(this.scmNodes[idx + 1]);\n        } else if (this.scmNodes.length > 0 && idx === -1) {\n            this.selectNode(this.scmNodes[0]);\n        }\n    }\n\n    protected selectPreviousNode(): void {\n        const idx = this.indexOfSelected;\n        if (idx > 0) {\n            this.selectNode(this.scmNodes[idx - 1]);\n        }\n    }\n\n    protected get indexOfSelected(): number {\n        if (this.scmNodes && this.scmNodes.length > 0) {\n            return this.scmNodes.findIndex(c => c.selected || false);\n        }\n        return -1;\n    }\n}\n\nexport namespace ScmItemComponent {\n    export interface Props {\n        labelProvider: LabelProvider;\n        scmLabelProvider: ScmFileChangeLabelProvider;\n        change: ScmFileChangeNode;\n        revealChange: (change: ScmFileChangeNode) => void\n        selectNode: (change: ScmFileChangeNode) => void\n    }\n}\nexport class ScmItemComponent extends React.Component<ScmItemComponent.Props> {\n\n    override render(): JSX.Element {\n        const { labelProvider, scmLabelProvider, change } = this.props;\n        const icon = labelProvider.getIcon(change);\n        const label = labelProvider.getName(change);\n        const description = labelProvider.getLongName(change);\n        const caption = scmLabelProvider.getCaption(change);\n        const statusCaption = scmLabelProvider.getStatusCaption(change);\n        return <div className={`scmItem noselect${change.selected ? ' ' + SELECTED_CLASS : ''}`}\n            onDoubleClick={this.revealChange}\n            onClick={this.selectNode}>\n            <span className={icon + ' file-icon'}></span>\n            <div className='noWrapInfo' title={caption} >\n                <span className='name'>{label + ' '}</span>\n                <span className='path'>{description}</span>\n            </div>\n            <div\n                title={caption}\n                className={change.fileChange.getClassNameForStatus()}>\n                {statusCaption.charAt(0)}\n            </div>\n        </div>;\n    }\n\n    protected readonly revealChange = () => this.props.revealChange(this.props.change);\n    protected readonly selectNode = () => this.props.selectNode(this.props.change);\n}\n"],"names":[],"sourceRoot":""}