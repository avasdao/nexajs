{"version":3,"file":"vendors-node_modules_theia_markers_lib_browser_problem_problem-widget_js.js","mappings":"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","sources":["webpack:///./node_modules/@theia/markers/src/browser/marker-tree-model.ts?","webpack:///./node_modules/@theia/markers/src/browser/marker-tree.ts?","webpack:///./node_modules/@theia/markers/src/browser/problem/problem-composite-tree-node.ts?","webpack:///./node_modules/@theia/markers/src/browser/problem/problem-preferences.ts?","webpack:///./node_modules/@theia/markers/src/browser/problem/problem-selection.ts?","webpack:///./node_modules/@theia/markers/src/browser/problem/problem-tree-model.ts?","webpack:///./node_modules/@theia/markers/src/browser/problem/problem-utils.ts?","webpack:///./node_modules/@theia/markers/src/browser/problem/problem-widget.tsx?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { MarkerNode } from './marker-tree';\nimport { TreeModelImpl, OpenerService, open, TreeNode, OpenerOptions } from '@theia/core/lib/browser';\n\n@injectable()\nexport class MarkerTreeModel extends TreeModelImpl {\n\n    @inject(OpenerService) protected readonly openerService: OpenerService;\n\n    protected override doOpenNode(node: TreeNode): void {\n        if (MarkerNode.is(node)) {\n            open(this.openerService, node.uri, this.getOpenerOptionsByMarker(node));\n        } else {\n            super.doOpenNode(node);\n        }\n    }\n\n    protected getOpenerOptionsByMarker(node: MarkerNode): OpenerOptions | undefined {\n        return undefined;\n    }\n\n    /**\n     * Reveal the corresponding node at the marker.\n     * @param node {TreeNode} the tree node.\n     */\n    revealNode(node: TreeNode): void {\n        if (MarkerNode.is(node)) {\n            open(this.openerService, node.uri, { ...this.getOpenerOptionsByMarker(node), mode: 'reveal' });\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { TreeImpl, CompositeTreeNode, TreeNode, SelectableTreeNode, ExpandableTreeNode } from '@theia/core/lib/browser';\nimport { MarkerManager } from './marker-manager';\nimport { Marker } from '../common/marker';\nimport { UriSelection } from '@theia/core/lib/common/selection';\nimport URI from '@theia/core/lib/common/uri';\nimport { ProblemSelection } from './problem/problem-selection';\nimport { DiagnosticSeverity } from '@theia/core/shared/vscode-languageserver-protocol';\n\nexport const MarkerOptions = Symbol('MarkerOptions');\nexport interface MarkerOptions {\n    readonly kind: string;\n}\n\n@injectable()\nexport abstract class MarkerTree<T extends object> extends TreeImpl {\n\n    constructor(\n        protected readonly markerManager: MarkerManager<T>,\n        protected readonly markerOptions: MarkerOptions\n    ) {\n        super();\n\n        this.toDispose.push(markerManager.onDidChangeMarkers(uri => this.refreshMarkerInfo(uri)));\n\n        this.root = <MarkerRootNode>{\n            visible: false,\n            id: 'theia-' + markerOptions.kind + '-marker-widget',\n            name: 'MarkerTree',\n            kind: markerOptions.kind,\n            children: [],\n            parent: undefined\n        };\n    }\n\n    protected async refreshMarkerInfo(uri: URI): Promise<void> {\n        const id = uri.toString();\n        const existing = this.getNode(id);\n        const markers = this.markerManager.findMarkers({ uri });\n        if (markers.length <= 0) {\n            if (MarkerInfoNode.is(existing)) {\n                CompositeTreeNode.removeChild(existing.parent, existing);\n                this.removeNode(existing);\n                this.fireChanged();\n            }\n            return;\n        }\n        const node = MarkerInfoNode.is(existing) ? existing : this.createMarkerInfo(id, uri);\n        this.insertNodeWithMarkers(node, markers);\n    }\n\n    protected insertNodeWithMarkers(node: MarkerInfoNode, markers: Marker<T>[]): void {\n        CompositeTreeNode.addChild(node.parent, node);\n        const children = this.getMarkerNodes(node, markers);\n        node.numberOfMarkers = markers.length;\n        this.setChildren(node, children);\n    }\n\n    protected override async resolveChildren(parent: CompositeTreeNode): Promise<TreeNode[]> {\n        if (MarkerRootNode.is(parent)) {\n            const nodes: MarkerInfoNode[] = [];\n            for (const id of this.markerManager.getUris()) {\n                const uri = new URI(id);\n                const existing = this.getNode(id);\n                const markers = this.markerManager.findMarkers({ uri });\n                const node = MarkerInfoNode.is(existing) ? existing : this.createMarkerInfo(id, uri);\n                node.children = this.getMarkerNodes(node, markers);\n                node.numberOfMarkers = node.children.length;\n                nodes.push(node);\n            }\n            return nodes;\n        }\n        return super.resolveChildren(parent);\n    }\n\n    protected createMarkerInfo(id: string, uri: URI): MarkerInfoNode {\n        return {\n            children: [],\n            expanded: true,\n            uri,\n            id,\n            parent: this.root as MarkerRootNode,\n            selected: false,\n            numberOfMarkers: 0\n        };\n    }\n\n    protected getMarkerNodes(parent: MarkerInfoNode, markers: Marker<T>[]): MarkerNode[] {\n        return markers.map((marker, index) =>\n            this.createMarkerNode(marker, index, parent)\n        );\n    }\n    protected createMarkerNode(marker: Marker<T>, index: number, parent: MarkerInfoNode): MarkerNode {\n        const id = parent.id + '_' + index;\n        const existing = this.getNode(id);\n        if (MarkerNode.is(existing)) {\n            existing.marker = marker;\n            return existing;\n        }\n        return {\n            id,\n            name: 'marker',\n            parent,\n            selected: false,\n            uri: parent.uri,\n            marker\n        };\n    }\n}\n\nexport interface MarkerNode extends UriSelection, SelectableTreeNode, ProblemSelection {\n    marker: Marker<object>;\n}\nexport namespace MarkerNode {\n    export function is(node: TreeNode | undefined): node is MarkerNode {\n        return UriSelection.is(node) && SelectableTreeNode.is(node) && ProblemSelection.is(node);\n    }\n}\n\nexport interface MarkerInfoNode extends UriSelection, SelectableTreeNode, ExpandableTreeNode {\n    parent: MarkerRootNode;\n    numberOfMarkers: number;\n    severity?: DiagnosticSeverity;\n}\nexport namespace MarkerInfoNode {\n    export function is(node: unknown): node is MarkerInfoNode {\n        return ExpandableTreeNode.is(node) && UriSelection.is(node) && 'numberOfMarkers' in node;\n    }\n}\n\nexport interface MarkerRootNode extends CompositeTreeNode {\n    kind: string;\n}\nexport namespace MarkerRootNode {\n    export function is(node: TreeNode | undefined): node is MarkerRootNode {\n        return CompositeTreeNode.is(node) && 'kind' in node;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { CompositeTreeNode } from '@theia/core/lib/browser/tree/tree';\nimport { MarkerInfoNode } from '../marker-tree';\nimport URI from '@theia/core/lib/common/uri';\nimport { Marker } from '../../common/marker';\nimport { Diagnostic, DiagnosticSeverity } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { ProblemUtils } from './problem-utils';\n\nexport namespace ProblemCompositeTreeNode {\n\n    export function setSeverity(parent: MarkerInfoNode, markers: Marker<Diagnostic>[]): void {\n        let maxSeverity: DiagnosticSeverity | undefined;\n        markers.forEach(marker => {\n            if (ProblemUtils.severityCompare(marker.data.severity, maxSeverity) < 0) {\n                maxSeverity = marker.data.severity;\n            }\n        });\n        parent.severity = maxSeverity;\n    };\n\n    export function addChildren(parent: CompositeTreeNode, insertChildren: { node: MarkerInfoNode, markers: Marker<Diagnostic>[] }[]): void {\n        for (const { node, markers } of insertChildren) {\n            ProblemCompositeTreeNode.setSeverity(node, markers);\n        }\n\n        const sortedInsertChildren = insertChildren.sort(\n            (a, b) => (ProblemUtils.severityCompare(a.node.severity, b.node.severity) || compareURI(a.node.uri, b.node.uri))\n        );\n\n        let startIndex = 0;\n        const children = parent.children as MarkerInfoNode[];\n        for (const { node } of sortedInsertChildren) {\n            const index = children.findIndex(value => value.id === node.id);\n            if (index !== -1) {\n                CompositeTreeNode.removeChild(parent, node);\n            }\n            if (children.length === 0) {\n                children.push(node);\n                startIndex = 1;\n                CompositeTreeNode.setParent(node, 0, parent);\n            } else {\n                let inserted = false;\n                for (let i = startIndex; i < children.length; i++) {\n                    // sort by severity, equal severity => sort by URI\n                    if (ProblemUtils.severityCompare(node.severity, children[i].severity) < 0\n                        || (ProblemUtils.severityCompare(node.severity, children[i].severity) === 0 && compareURI(node.uri, children[i].uri) < 0)) {\n                        children.splice(i, 0, node);\n                        inserted = true;\n                        startIndex = i + 1;\n                        CompositeTreeNode.setParent(node, i, parent);\n                        break;\n                    };\n                }\n                if (inserted === false) {\n                    children.push(node);\n                    startIndex = children.length;\n                    CompositeTreeNode.setParent(node, children.length - 1, parent);\n                }\n            }\n        }\n    }\n\n    const compareURI = (uri1: URI, uri2: URI): number =>\n        uri1.toString().localeCompare(uri2.toString(), undefined, { sensitivity: 'base' });\n    ;\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { createPreferenceProxy, PreferenceProxy, PreferenceService, PreferenceContribution, PreferenceSchema } from '@theia/core/lib/browser';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport const ProblemConfigSchema: PreferenceSchema = {\n    'type': 'object',\n    'properties': {\n        'problems.decorations.enabled': {\n            'type': 'boolean',\n            'description': nls.localizeByDefault('Show Errors & Warnings on files and folder.'),\n            'default': true,\n        },\n        'problems.decorations.tabbar.enabled': {\n            'type': 'boolean',\n            'description': nls.localize('theia/markers/tabbarDecorationsEnabled', 'Show problem decorators (diagnostic markers) in the tab bars.'),\n            'default': true\n        },\n        'problems.autoReveal': {\n            'type': 'boolean',\n            'description': nls.localizeByDefault('Controls whether Problems view should automatically reveal files when opening them.'),\n            'default': true\n        }\n    }\n};\n\nexport interface ProblemConfiguration {\n    'problems.decorations.enabled': boolean,\n    'problems.decorations.tabbar.enabled': boolean,\n    'problems.autoReveal': boolean\n}\n\nexport const ProblemPreferenceContribution = Symbol('ProblemPreferenceContribution');\nexport const ProblemPreferences = Symbol('ProblemPreferences');\nexport type ProblemPreferences = PreferenceProxy<ProblemConfiguration>;\n\nexport function createProblemPreferences(preferences: PreferenceService, schema: PreferenceSchema = ProblemConfigSchema): ProblemPreferences {\n    return createPreferenceProxy(preferences, schema);\n}\n\nexport const bindProblemPreferences = (bind: interfaces.Bind): void => {\n    bind(ProblemPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        const contribution = ctx.container.get<PreferenceContribution>(ProblemPreferenceContribution);\n        return createProblemPreferences(preferences, contribution.schema);\n    }).inSingletonScope();\n    bind(ProblemPreferenceContribution).toConstantValue({ schema: ProblemConfigSchema });\n    bind(PreferenceContribution).toService(ProblemPreferenceContribution);\n};\n","// *****************************************************************************\n// Copyright (C) 2019 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { SelectionCommandHandler } from '@theia/core/lib/common/selection-command-handler';\nimport { isObject } from '@theia/core/lib/common';\nimport { Marker } from '../../common/marker';\nimport { ProblemMarker } from '../../common/problem-marker';\n\nexport interface ProblemSelection {\n    marker: Marker<object>;\n}\nexport namespace ProblemSelection {\n    export function is(arg: unknown): arg is ProblemSelection {\n        return isObject<ProblemSelection>(arg) && ProblemMarker.is(arg.marker);\n    }\n\n    export class CommandHandler extends SelectionCommandHandler<ProblemSelection> {\n\n        constructor(\n            selectionService: SelectionService,\n            options: SelectionCommandHandler.Options<ProblemSelection>\n        ) {\n            super(\n                selectionService,\n                arg => ProblemSelection.is(arg) ? arg : undefined,\n                options\n            );\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ProblemMarker } from '../../common/problem-marker';\nimport { ProblemManager } from './problem-manager';\nimport { ProblemCompositeTreeNode } from './problem-composite-tree-node';\nimport { MarkerNode, MarkerTree, MarkerOptions, MarkerInfoNode, MarkerRootNode } from '../marker-tree';\nimport { MarkerTreeModel } from '../marker-tree-model';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { OpenerOptions, TreeNode } from '@theia/core/lib/browser';\nimport { Marker } from '../../common/marker';\nimport { Diagnostic } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { ProblemUtils } from './problem-utils';\nimport debounce = require('@theia/core/shared/lodash.debounce');\n\n@injectable()\nexport class ProblemTree extends MarkerTree<Diagnostic> {\n    protected markers: { node: MarkerInfoNode, markers: Marker<Diagnostic>[] }[] = [];\n\n    constructor(\n        @inject(ProblemManager) markerManager: ProblemManager,\n        @inject(MarkerOptions) markerOptions: MarkerOptions\n    ) {\n        super(markerManager, markerOptions);\n    }\n\n    protected override getMarkerNodes(parent: MarkerInfoNode, markers: Marker<Diagnostic>[]): MarkerNode[] {\n        const nodes = super.getMarkerNodes(parent, markers);\n        return nodes.sort((a, b) => this.sortMarkers(a, b));\n    }\n\n    /**\n     * Sort markers based on the following rules:\n     * - Markers are fist sorted by `severity`.\n     * - Markers are sorted by `line number` if applicable.\n     * - Markers are sorted by `column number` if applicable.\n     * - Markers are then finally sorted by `owner` if applicable.\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n    protected sortMarkers(a: MarkerNode, b: MarkerNode): number {\n        const markerA = a.marker as Marker<Diagnostic>;\n        const markerB = b.marker as Marker<Diagnostic>;\n\n        // Determine the marker with the highest severity.\n        const severity = ProblemUtils.severityCompareMarker(markerA, markerB);\n        if (severity !== 0) {\n            return severity;\n        }\n        // Determine the marker with the lower line number.\n        const lineNumber = ProblemUtils.lineNumberCompare(markerA, markerB);\n        if (lineNumber !== 0) {\n            return lineNumber;\n        }\n        // Determine the marker with the lower column number.\n        const columnNumber = ProblemUtils.columnNumberCompare(markerA, markerB);\n        if (columnNumber !== 0) {\n            return columnNumber;\n        }\n        // Sort by owner in alphabetical order.\n        const owner = ProblemUtils.ownerCompare(markerA, markerB);\n        if (owner !== 0) {\n            return owner;\n        }\n        return 0;\n    }\n\n    protected override insertNodeWithMarkers(node: MarkerInfoNode, markers: Marker<Diagnostic>[]): void {\n        this.markers.push({ node, markers });\n        this.doInsertNodesWithMarkers();\n    }\n\n    protected doInsertNodesWithMarkers = debounce(() => {\n        ProblemCompositeTreeNode.addChildren(this.root as MarkerRootNode, this.markers);\n\n        for (const { node, markers } of this.markers) {\n            const children = this.getMarkerNodes(node, markers);\n            node.numberOfMarkers = markers.length;\n            this.setChildren(node, children);\n        }\n\n        this.markers.length = 0;\n    }, 50);\n}\n\n@injectable()\nexport class ProblemTreeModel extends MarkerTreeModel {\n\n    @inject(ProblemManager) protected readonly problemManager: ProblemManager;\n\n    protected override getOpenerOptionsByMarker(node: MarkerNode): OpenerOptions | undefined {\n        if (ProblemMarker.is(node.marker)) {\n            return {\n                selection: node.marker.data.range\n            };\n        }\n        return undefined;\n    }\n\n    removeNode(node: TreeNode): void {\n        if (MarkerInfoNode.is(node)) {\n            this.problemManager.cleanAllMarkers(node.uri);\n        }\n        if (MarkerNode.is(node)) {\n            const { uri } = node;\n            const { owner } = node.marker;\n            const diagnostics = this.problemManager.findMarkers({ uri, owner, dataFilter: data => node.marker.data !== data }).map(({ data }) => data);\n            this.problemManager.setMarkers(uri, owner, diagnostics);\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Marker } from '../../common/marker';\nimport { Diagnostic, DiagnosticSeverity } from '@theia/core/shared/vscode-languageserver-protocol';\n\nexport namespace ProblemUtils {\n\n    /**\n     * Comparator for severity.\n     * - The highest severity (`error`) come first followed by others.\n     * - `undefined` severities are treated as the last ones.\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n    export const severityCompareMarker = (a: Marker<Diagnostic>, b: Marker<Diagnostic>): number =>\n        (a.data.severity || Number.MAX_SAFE_INTEGER) - (b.data.severity || Number.MAX_SAFE_INTEGER);\n\n    /**\n     * Comparator for severity.\n     * - The highest severity (`error`) come first followed by others.\n     * - `undefined` severities are treated as the last ones.\n     * @param a the first severity for comparison.\n     * @param b the second severity for comparison.\n     */\n    export const severityCompare = (a: DiagnosticSeverity | undefined, b: DiagnosticSeverity | undefined): number =>\n        (a || Number.MAX_SAFE_INTEGER) - (b || Number.MAX_SAFE_INTEGER);\n\n    /**\n     * Comparator for line numbers.\n     * - The lowest line number comes first.\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n    export const lineNumberCompare = (a: Marker<Diagnostic>, b: Marker<Diagnostic>): number => a.data.range.start.line - b.data.range.start.line;\n\n    /**\n     * Comparator for column numbers.\n     * - The lowest column number comes first.\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n    export const columnNumberCompare = (a: Marker<Diagnostic>, b: Marker<Diagnostic>): number => a.data.range.start.character - b.data.range.start.character;\n\n    /**\n     * Comparator for marker owner (source).\n     * - The order is alphabetical.\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n    export const ownerCompare = (a: Marker<Diagnostic>, b: Marker<Diagnostic>): number => a.owner.localeCompare(b.owner);\n\n    export function getPriority(marker: Marker<Diagnostic>): number {\n        const { severity } = marker.data;\n        switch (severity) {\n            case DiagnosticSeverity.Error: return 30;\n            case DiagnosticSeverity.Warning: return 20;\n            case DiagnosticSeverity.Information: return 10;\n            default: return 0;\n        }\n    }\n\n    export function getColor(marker: Marker<Diagnostic>): string {\n        const { severity } = marker.data;\n        switch (severity) {\n            case DiagnosticSeverity.Error: return 'list.errorForeground';\n            case DiagnosticSeverity.Warning: return 'list.warningForeground';\n            default: return ''; // other severities should not be decorated.\n        }\n    }\n\n    export function filterMarker(marker: Marker<Diagnostic>): boolean {\n        const { severity } = marker.data;\n        return severity === DiagnosticSeverity.Error\n            || severity === DiagnosticSeverity.Warning;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { ProblemManager } from './problem-manager';\nimport { ProblemMarker } from '../../common/problem-marker';\nimport { ProblemTreeModel } from './problem-tree-model';\nimport { MarkerInfoNode, MarkerNode, MarkerRootNode } from '../marker-tree';\nimport {\n    TreeWidget, TreeProps, ContextMenuRenderer, TreeNode, NodeProps, TreeModel,\n    ApplicationShell, Navigatable, ExpandableTreeNode, SelectableTreeNode, TREE_NODE_INFO_CLASS, codicon, Message\n} from '@theia/core/lib/browser';\nimport { DiagnosticSeverity } from '@theia/core/shared/vscode-languageserver-protocol';\nimport * as React from '@theia/core/shared/react';\nimport { ProblemPreferences } from './problem-preferences';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport const PROBLEMS_WIDGET_ID = 'problems';\n\n@injectable()\nexport class ProblemWidget extends TreeWidget {\n\n    protected readonly toDisposeOnCurrentWidgetChanged = new DisposableCollection();\n\n    @inject(ProblemPreferences)\n    protected readonly preferences: ProblemPreferences;\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    @inject(ProblemManager)\n    protected readonly problemManager: ProblemManager;\n\n    constructor(\n        @inject(TreeProps) treeProps: TreeProps,\n        @inject(ProblemTreeModel) override readonly model: ProblemTreeModel,\n        @inject(ContextMenuRenderer) contextMenuRenderer: ContextMenuRenderer\n    ) {\n        super(treeProps, model, contextMenuRenderer);\n\n        this.id = PROBLEMS_WIDGET_ID;\n        this.title.label = nls.localizeByDefault('Problems');\n        this.title.caption = this.title.label;\n        this.title.iconClass = codicon('warning');\n        this.title.closable = true;\n        this.addClass('theia-marker-container');\n\n        this.addClipboardListener(this.node, 'copy', e => this.handleCopy(e));\n    }\n\n    @postConstruct()\n    protected override init(): void {\n        super.init();\n        this.updateFollowActiveEditor();\n        this.toDispose.push(this.preferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'problems.autoReveal') {\n                this.updateFollowActiveEditor();\n            }\n        }));\n    }\n\n    protected override onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.update();\n    }\n\n    protected updateFollowActiveEditor(): void {\n        this.toDisposeOnCurrentWidgetChanged.dispose();\n        this.toDispose.push(this.toDisposeOnCurrentWidgetChanged);\n        if (this.preferences.get('problems.autoReveal')) {\n            this.followActiveEditor();\n        }\n    }\n\n    protected followActiveEditor(): void {\n        this.autoRevealFromActiveEditor();\n        this.toDisposeOnCurrentWidgetChanged.push(this.shell.onDidChangeCurrentWidget(() => this.autoRevealFromActiveEditor()));\n    }\n\n    protected autoRevealFromActiveEditor(): void {\n        const widget = this.shell.currentWidget;\n        if (widget && Navigatable.is(widget)) {\n            const uri = widget.getResourceUri();\n            const node = uri && this.model.getNode(uri.toString());\n            if (ExpandableTreeNode.is(node) && SelectableTreeNode.is(node)) {\n                this.model.expandNode(node);\n                this.model.selectNode(node);\n            }\n        }\n    }\n\n    override storeState(): object {\n        // no-op\n        return {};\n    }\n    protected superStoreState(): object {\n        return super.storeState();\n    }\n    override restoreState(state: object): void {\n        // no-op\n    }\n    protected superRestoreState(state: object): void {\n        super.restoreState(state);\n        return;\n    }\n\n    protected override tapNode(node?: TreeNode): void {\n        super.tapNode(node);\n        if (MarkerNode.is(node)) {\n            this.model.revealNode(node);\n        }\n    }\n\n    protected handleCopy(event: ClipboardEvent): void {\n        const uris = this.model.selectedNodes.filter(MarkerNode.is).map(node => node.uri.toString());\n        if (uris.length > 0 && event.clipboardData) {\n            event.clipboardData.setData('text/plain', uris.join('\\n'));\n            event.preventDefault();\n        }\n    }\n\n    protected override handleDown(event: KeyboardEvent): void {\n        const node = this.model.getNextSelectableNode();\n        super.handleDown(event);\n        if (MarkerNode.is(node)) {\n            this.model.revealNode(node);\n        }\n    }\n\n    protected override handleUp(event: KeyboardEvent): void {\n        const node = this.model.getPrevSelectableNode();\n        super.handleUp(event);\n        if (MarkerNode.is(node)) {\n            this.model.revealNode(node);\n        }\n    }\n\n    protected override renderTree(model: TreeModel): React.ReactNode {\n        if (MarkerRootNode.is(model.root) && model.root.children.length > 0) {\n            return super.renderTree(model);\n        }\n        return <div className='theia-widget-noInfo noMarkers'>{nls.localize('theia/markers/noProblems', 'No problems have been detected in the workspace so far.')}</div>;\n    }\n\n    protected override renderCaption(node: TreeNode, props: NodeProps): React.ReactNode {\n        if (MarkerInfoNode.is(node)) {\n            return this.decorateMarkerFileNode(node);\n        } else if (MarkerNode.is(node)) {\n            return this.decorateMarkerNode(node);\n        }\n        return 'caption';\n    }\n\n    protected override renderTailDecorations(node: TreeNode, props: NodeProps): JSX.Element {\n        return <div className='row-button-container'>\n            {this.renderRemoveButton(node)}\n        </div>;\n    }\n\n    protected renderRemoveButton(node: TreeNode): React.ReactNode {\n        return <ProblemMarkerRemoveButton model={this.model} node={node} />;\n    }\n\n    protected decorateMarkerNode(node: MarkerNode): React.ReactNode {\n        if (ProblemMarker.is(node.marker)) {\n            let severityClass: string = '';\n            const problemMarker = node.marker;\n            if (problemMarker.data.severity) {\n                severityClass = this.getSeverityClass(problemMarker.data.severity);\n            }\n            const location = nls.localizeByDefault('Ln {0}, Col {1}', problemMarker.data.range.start.line + 1, problemMarker.data.range.start.character + 1);\n            return <div\n                className='markerNode'\n                title={`${problemMarker.data.message} (${problemMarker.data.range.start.line + 1}, ${problemMarker.data.range.start.character + 1})`}>\n                <div>\n                    <i className={`${severityClass} ${TREE_NODE_INFO_CLASS}`}></i>\n                </div>\n                <div className='message'>{problemMarker.data.message}\n                    {(!!problemMarker.data.source || !!problemMarker.data.code) &&\n                        <span className={'owner ' + TREE_NODE_INFO_CLASS}>\n                            {problemMarker.data.source || ''}\n                            {problemMarker.data.code ? `(${problemMarker.data.code})` : ''}\n                        </span>\n                    }\n                    <span className={'position ' + TREE_NODE_INFO_CLASS}>\n                        {`[${location}]`}\n                    </span>\n                </div>\n            </div>;\n        }\n        return '';\n    }\n\n    protected getSeverityClass(severity: DiagnosticSeverity): string {\n        switch (severity) {\n            case 1: return `${codicon('error')} error`;\n            case 2: return `${codicon('warning')} warning`;\n            case 3: return `${codicon('info')} information`;\n            default: return `${codicon('thumbsup')} hint`;\n        }\n    }\n\n    protected decorateMarkerFileNode(node: MarkerInfoNode): React.ReactNode {\n        const icon = this.toNodeIcon(node);\n        const name = this.toNodeName(node);\n        const description = this.toNodeDescription(node);\n        // Use a custom scheme so that we fallback to the `DefaultUriLabelProviderContribution`.\n        const path = this.labelProvider.getLongName(node.uri.withScheme('marker'));\n        return <div title={path} className='markerFileNode'>\n            {icon && <div className={icon + ' file-icon'}></div>}\n            <div className='name'>{name}</div>\n            <div className={'path ' + TREE_NODE_INFO_CLASS}>{description}</div>\n            <div className='notification-count-container'>\n                <span className='notification-count'>{node.numberOfMarkers.toString()}</span>\n            </div>\n        </div>;\n    }\n\n}\n\nexport class ProblemMarkerRemoveButton extends React.Component<{ model: ProblemTreeModel, node: TreeNode }> {\n\n    override render(): React.ReactNode {\n        return <span className={codicon('close')} onClick={this.remove}></span>;\n    }\n\n    protected readonly remove = (e: React.MouseEvent<HTMLElement>) => this.doRemove(e);\n    protected doRemove(e: React.MouseEvent<HTMLElement>): void {\n        this.props.model.removeNode(this.props.node);\n        e.stopPropagation();\n    }\n}\n"],"names":[],"sourceRoot":""}