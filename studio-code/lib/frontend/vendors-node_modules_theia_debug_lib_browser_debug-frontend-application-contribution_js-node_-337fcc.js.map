{"version":3,"file":"vendors-node_modules_theia_debug_lib_browser_debug-frontend-application-contribution_js-node_-337fcc.js","mappings":"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,QAAQ;AAC7B;;AAEA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,mBAAmB,QAAQ;AAC3B,qBAAqB,QAAQ;AAC7B;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,qBAAqB,QAAQ;AAC7B;;AAEA,KAAK;AACL;AACA;AACA,uCAAuC;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,uDAAuD;;AAEvD;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA;AACA,yDAAyD;AACzD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;;AAE3D;;AAEA;AACA,0CAA0C;;AAE1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA;AACA,kBAAkB;AAClB;AACA;AACA,kBAAkB;AAClB;AACA;AACA,kBAAkB;AAClB;AACA;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B,oBAAoB,eAAe;AACnC;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd,4EAA4E;AAC5E;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC;;AAED","sources":["webpack:///./node_modules/@theia/console/src/browser/ansi-console-item.tsx?","webpack:///./node_modules/@theia/debug/src/browser/console/debug-console-contribution.tsx?","webpack:///./node_modules/@theia/debug/src/browser/console/debug-console-session.ts?","webpack:///./node_modules/@theia/debug/src/browser/debug-frontend-application-contribution.ts?","webpack:///./node_modules/@theia/debug/src/browser/debug-schema-updater.ts?","webpack:///./node_modules/@theia/debug/src/browser/editor/debug-breakpoint-widget.tsx?","webpack:///./node_modules/@theia/debug/src/browser/editor/debug-editor-model.ts?","webpack:///./node_modules/@theia/debug/src/browser/editor/debug-editor-service.ts?","webpack:///./node_modules/@theia/debug/src/browser/editor/debug-editor.ts?","webpack:///./node_modules/@theia/debug/src/browser/editor/debug-exception-widget.tsx?","webpack:///./node_modules/@theia/debug/src/browser/editor/debug-expression-provider.ts?","webpack:///./node_modules/@theia/debug/src/browser/editor/debug-hover-source.tsx?","webpack:///./node_modules/@theia/debug/src/browser/editor/debug-hover-widget.ts?","webpack:///./node_modules/@theia/debug/src/browser/editor/debug-inline-value-decorator.ts?","webpack:///./node_modules/@theia/debug/src/browser/view/debug-breakpoints-source.tsx?","webpack:///./node_modules/@theia/debug/src/browser/view/debug-breakpoints-widget.ts?","webpack:///./node_modules/@theia/debug/src/browser/view/debug-configuration-select.tsx?","webpack:///./node_modules/@theia/debug/src/browser/view/debug-configuration-widget.tsx?","webpack:///./node_modules/@theia/debug/src/browser/view/debug-exception-breakpoint.tsx?","webpack:///./node_modules/@theia/debug/src/browser/view/debug-session-widget.ts?","webpack:///./node_modules/@theia/debug/src/browser/view/debug-watch-source.ts?","webpack:///./node_modules/@theia/debug/src/browser/view/debug-watch-widget.ts?","webpack:///./node_modules/@theia/debug/src/browser/view/debug-widget.ts?","webpack:///./node_modules/anser/lib/index.js?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as React from '@theia/core/shared/react';\nimport * as DOMPurify from '@theia/core/shared/dompurify';\nimport { ConsoleItem } from './console-session';\nimport { Severity } from '@theia/core/lib/common/severity';\nimport Anser = require('anser');\n\nexport class AnsiConsoleItem implements ConsoleItem {\n\n    protected readonly htmlContent: string;\n\n    constructor(\n        public readonly content: string,\n        public readonly severity?: Severity\n    ) {\n        this.htmlContent = new Anser().ansiToHtml(this.content, {\n            use_classes: true,\n            remove_empty: true\n        });\n    }\n\n    get visible(): boolean {\n        return !!this.htmlContent;\n    }\n\n    render(): React.ReactNode {\n        return <div\n            className='theia-console-ansi-console-item'\n            dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(this.htmlContent) }} // eslint-disable-line react/no-danger\n        />;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ConsoleSessionManager } from '@theia/console/lib/browser/console-session-manager';\nimport { ConsoleOptions, ConsoleWidget } from '@theia/console/lib/browser/console-widget';\nimport { AbstractViewContribution, bindViewContribution, codicon, Widget, WidgetFactory } from '@theia/core/lib/browser';\nimport { ContextKey, ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { Command, CommandRegistry } from '@theia/core/lib/common/command';\nimport { Severity } from '@theia/core/lib/common/severity';\nimport { inject, injectable, interfaces, postConstruct } from '@theia/core/shared/inversify';\nimport * as React from '@theia/core/shared/react';\nimport { SelectComponent, SelectOption } from '@theia/core/lib/browser/widgets/select-component';\nimport { DebugSession } from '../debug-session';\nimport { DebugSessionManager, DidChangeActiveDebugSession } from '../debug-session-manager';\nimport { DebugConsoleSession, DebugConsoleSessionFactory } from './debug-console-session';\n\nexport type InDebugReplContextKey = ContextKey<boolean>;\nexport const InDebugReplContextKey = Symbol('inDebugReplContextKey');\n\nexport namespace DebugConsoleCommands {\n\n    export const DEBUG_CATEGORY = 'Debug';\n\n    export const CLEAR = Command.toDefaultLocalizedCommand({\n        id: 'debug.console.clear',\n        category: DEBUG_CATEGORY,\n        label: 'Clear Console',\n        iconClass: codicon('clear-all')\n    });\n}\n\n@injectable()\nexport class DebugConsoleContribution extends AbstractViewContribution<ConsoleWidget> implements TabBarToolbarContribution {\n\n    @inject(ConsoleSessionManager)\n    protected consoleSessionManager: ConsoleSessionManager;\n\n    @inject(DebugConsoleSessionFactory)\n    protected debugConsoleSessionFactory: DebugConsoleSessionFactory;\n\n    @inject(DebugSessionManager)\n    protected debugSessionManager: DebugSessionManager;\n\n    constructor() {\n        super({\n            widgetId: DebugConsoleContribution.options.id,\n            widgetName: DebugConsoleContribution.options.title!.label!,\n            defaultWidgetOptions: {\n                area: 'bottom'\n            },\n            toggleCommandId: 'debug:console:toggle',\n            toggleKeybinding: 'ctrlcmd+shift+y'\n        });\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.debugSessionManager.onDidCreateDebugSession(session => {\n            const consoleParent = session.findConsoleParent();\n            if (consoleParent) {\n                const parentConsoleSession = this.consoleSessionManager.get(consoleParent.id);\n                if (parentConsoleSession instanceof DebugConsoleSession) {\n                    session.on('output', event => parentConsoleSession.logOutput(parentConsoleSession.debugSession, event));\n                }\n            } else {\n                const consoleSession = this.debugConsoleSessionFactory(session);\n                this.consoleSessionManager.add(consoleSession);\n                session.on('output', event => consoleSession.logOutput(session, event));\n            }\n        });\n        this.debugSessionManager.onDidChangeActiveDebugSession(event => this.handleActiveDebugSessionChanged(event));\n        this.debugSessionManager.onDidDestroyDebugSession(session => {\n            this.consoleSessionManager.delete(session.id);\n        });\n    }\n\n    protected handleActiveDebugSessionChanged(event: DidChangeActiveDebugSession): void {\n        if (!event.current) {\n            this.consoleSessionManager.selectedSession = undefined;\n        } else {\n            const topSession = event.current.findConsoleParent() || event.current;\n            const consoleSession = topSession ? this.consoleSessionManager.get(topSession.id) : undefined;\n            this.consoleSessionManager.selectedSession = consoleSession;\n            const consoleSelector = document.getElementById('debugConsoleSelector');\n            if (consoleSession && consoleSelector instanceof HTMLSelectElement) {\n                consoleSelector.value = consoleSession.id;\n            }\n        }\n    }\n\n    override registerCommands(commands: CommandRegistry): void {\n        super.registerCommands(commands);\n        commands.registerCommand(DebugConsoleCommands.CLEAR, {\n            isEnabled: widget => this.withWidget(widget, () => true),\n            isVisible: widget => this.withWidget(widget, () => true),\n            execute: widget => this.withWidget(widget, () => {\n                this.clearConsole();\n            }),\n        });\n    }\n\n    async registerToolbarItems(toolbarRegistry: TabBarToolbarRegistry): Promise<void> {\n        toolbarRegistry.registerItem({\n            id: 'debug-console-severity',\n            render: widget => this.renderSeveritySelector(widget),\n            isVisible: widget => this.withWidget(widget, () => true),\n            onDidChange: this.consoleSessionManager.onDidChangeSeverity\n        });\n\n        toolbarRegistry.registerItem({\n            id: 'debug-console-session-selector',\n            render: widget => this.renderDebugConsoleSelector(widget),\n            isVisible: widget => this.withWidget(widget, () => this.consoleSessionManager.all.length > 1)\n        });\n\n        toolbarRegistry.registerItem({\n            id: DebugConsoleCommands.CLEAR.id,\n            command: DebugConsoleCommands.CLEAR.id,\n            tooltip: DebugConsoleCommands.CLEAR.label,\n            priority: 0,\n        });\n    }\n\n    static options: ConsoleOptions = {\n        id: 'debug-console',\n        title: {\n            label: nls.localizeByDefault('Debug Console'),\n            iconClass: codicon('debug-console')\n        },\n        input: {\n            uri: DebugConsoleSession.uri,\n            options: {\n                autoSizing: true,\n                minHeight: 1,\n                maxHeight: 10\n            }\n        }\n    };\n\n    static create(parent: interfaces.Container): ConsoleWidget {\n        const inputFocusContextKey = parent.get<InDebugReplContextKey>(InDebugReplContextKey);\n        const child = ConsoleWidget.createContainer(parent, {\n            ...DebugConsoleContribution.options,\n            inputFocusContextKey\n        });\n        const widget = child.get(ConsoleWidget);\n        return widget;\n    }\n\n    static bindContribution(bind: interfaces.Bind): void {\n        bind(InDebugReplContextKey).toDynamicValue(({ container }) =>\n            container.get<ContextKeyService>(ContextKeyService).createKey('inDebugRepl', false)\n        ).inSingletonScope();\n        bind(DebugConsoleSession).toSelf().inRequestScope();\n        bind(DebugConsoleSessionFactory).toFactory(context => (session: DebugSession) => {\n            const consoleSession = context.container.get(DebugConsoleSession);\n            consoleSession.debugSession = session;\n            return consoleSession;\n        });\n        bind(ConsoleSessionManager).toSelf().inSingletonScope();\n        bindViewContribution(bind, DebugConsoleContribution);\n        bind(TabBarToolbarContribution).toService(DebugConsoleContribution);\n        bind(WidgetFactory).toDynamicValue(({ container }) => ({\n            id: DebugConsoleContribution.options.id,\n            createWidget: () => DebugConsoleContribution.create(container)\n        }));\n    }\n\n    protected renderSeveritySelector(widget: Widget | undefined): React.ReactNode {\n        const severityElements: SelectOption[] = Severity.toArray().map(e => ({\n            value: e,\n            label: Severity.toLocaleString(e)\n        }));\n\n        return <SelectComponent\n            key=\"debugConsoleSeverity\"\n            options={severityElements}\n            defaultValue={this.consoleSessionManager.severity || Severity.Ignore}\n            onChange={this.changeSeverity} />;\n    }\n\n    protected renderDebugConsoleSelector(widget: Widget | undefined): React.ReactNode {\n        const availableConsoles: SelectOption[] = [];\n        this.consoleSessionManager.all.forEach(e => {\n            if (e instanceof DebugConsoleSession) {\n                availableConsoles.push({\n                    value: e.id,\n                    label: e.debugSession.label\n                });\n            }\n        });\n\n        return <SelectComponent\n            key=\"debugConsoleSelector\"\n            options={availableConsoles}\n            defaultValue={0}\n            onChange={this.changeDebugConsole} />;\n    }\n\n    protected changeDebugConsole = (option: SelectOption) => {\n        const id = option.value!;\n        const session = this.consoleSessionManager.get(id);\n        this.consoleSessionManager.selectedSession = session;\n    };\n\n    protected changeSeverity = (option: SelectOption) => {\n        this.consoleSessionManager.severity = Severity.fromValue(option.value);\n    };\n\n    protected withWidget<T>(widget: Widget | undefined = this.tryGetWidget(), fn: (widget: ConsoleWidget) => T): T | false {\n        if (widget instanceof ConsoleWidget && widget.id === DebugConsoleContribution.options.id) {\n            return fn(widget);\n        }\n        return false;\n    }\n\n    /**\n     * Clear the console widget.\n     */\n    protected async clearConsole(): Promise<void> {\n        const widget = await this.widget;\n        widget.clear();\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport throttle = require('@theia/core/shared/lodash.throttle');\nimport { DebugProtocol } from '@vscode/debugprotocol/lib/debugProtocol';\nimport { ConsoleSession, ConsoleItem } from '@theia/console/lib/browser/console-session';\nimport { AnsiConsoleItem } from '@theia/console/lib/browser/ansi-console-item';\nimport { DebugSession } from '../debug-session';\nimport URI from '@theia/core/lib/common/uri';\nimport { ExpressionContainer, ExpressionItem } from './debug-console-items';\nimport { Severity } from '@theia/core/lib/common/severity';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { DebugSessionManager } from '../debug-session-manager';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { LanguageSelector } from '@theia/monaco-editor-core/esm/vs/editor/common/languageSelector';\nimport { Disposable } from '@theia/core';\n\nexport const DebugConsoleSessionFactory = Symbol('DebugConsoleSessionFactory');\n\nexport type DebugConsoleSessionFactory = (debugSession: DebugSession) => DebugConsoleSession;\n\n@injectable()\nexport class DebugConsoleSession extends ConsoleSession {\n\n    static uri = new URI().withScheme('debugconsole');\n\n    @inject(DebugSessionManager) protected readonly sessionManager: DebugSessionManager;\n\n    protected items: ConsoleItem[] = [];\n\n    protected _debugSession: DebugSession;\n\n    // content buffer for [append](#append) method\n    protected uncompletedItemContent: string | undefined;\n\n    protected readonly completionKinds = new Map<DebugProtocol.CompletionItemType | undefined, monaco.languages.CompletionItemKind>();\n\n    get debugSession(): DebugSession {\n        return this._debugSession;\n    }\n\n    set debugSession(value: DebugSession) {\n        this._debugSession = value;\n        this.id = value.id;\n    }\n\n    @postConstruct()\n    init(): void {\n        this.completionKinds.set('method', monaco.languages.CompletionItemKind.Method);\n        this.completionKinds.set('function', monaco.languages.CompletionItemKind.Function);\n        this.completionKinds.set('constructor', monaco.languages.CompletionItemKind.Constructor);\n        this.completionKinds.set('field', monaco.languages.CompletionItemKind.Field);\n        this.completionKinds.set('variable', monaco.languages.CompletionItemKind.Variable);\n        this.completionKinds.set('class', monaco.languages.CompletionItemKind.Class);\n        this.completionKinds.set('interface', monaco.languages.CompletionItemKind.Interface);\n        this.completionKinds.set('module', monaco.languages.CompletionItemKind.Module);\n        this.completionKinds.set('property', monaco.languages.CompletionItemKind.Property);\n        this.completionKinds.set('unit', monaco.languages.CompletionItemKind.Unit);\n        this.completionKinds.set('value', monaco.languages.CompletionItemKind.Value);\n        this.completionKinds.set('enum', monaco.languages.CompletionItemKind.Enum);\n        this.completionKinds.set('keyword', monaco.languages.CompletionItemKind.Keyword);\n        this.completionKinds.set('snippet', monaco.languages.CompletionItemKind.Snippet);\n        this.completionKinds.set('text', monaco.languages.CompletionItemKind.Text);\n        this.completionKinds.set('color', monaco.languages.CompletionItemKind.Color);\n        this.completionKinds.set('file', monaco.languages.CompletionItemKind.File);\n        this.completionKinds.set('reference', monaco.languages.CompletionItemKind.Reference);\n        this.completionKinds.set('customcolor', monaco.languages.CompletionItemKind.Color);\n        this.toDispose.push((monaco.languages.registerCompletionItemProvider as (languageId: LanguageSelector, provider: monaco.languages.CompletionItemProvider) => Disposable)({\n            scheme: DebugConsoleSession.uri.scheme,\n            hasAccessToAllModels: true\n        }, {\n            triggerCharacters: ['.'],\n            provideCompletionItems: (model, position) => this.completions(model, position),\n        }));\n    }\n\n    getElements(): IterableIterator<ConsoleItem> {\n        return this.items.filter(e => !this.severity || e.severity === this.severity)[Symbol.iterator]();\n    }\n\n    protected async completions(model: monaco.editor.ITextModel, position: monaco.Position): Promise<monaco.languages.CompletionList | undefined> {\n        const completionSession = this.findCompletionSession();\n        if (completionSession) {\n            const column = position.column;\n            const lineNumber = position.lineNumber;\n            const word = model.getWordAtPosition({ column, lineNumber });\n            const overwriteBefore = word ? word.word.length : 0;\n            const text = model.getValue();\n            const items = await completionSession.completions(text, column, lineNumber);\n            const suggestions = items.map(item => this.asCompletionItem(text, position, overwriteBefore, item));\n            return { suggestions };\n        }\n        return undefined;\n    }\n\n    protected findCurrentSession(): DebugSession | undefined {\n        const currentSession = this.sessionManager.currentSession;\n        if (!currentSession) {\n            return undefined;\n        }\n        if (currentSession.id === this.debugSession.id) {\n            // perfect match\n            return this.debugSession;\n        }\n        const parentSession = currentSession.findConsoleParent();\n        if (parentSession?.id === this.debugSession.id) {\n            // child of our session\n            return currentSession;\n        }\n        return undefined;\n    }\n\n    protected findCompletionSession(): DebugSession | undefined {\n        let completionSession: DebugSession | undefined = this.findCurrentSession();\n        while (completionSession !== undefined) {\n            if (completionSession.capabilities.supportsCompletionsRequest) {\n                return completionSession;\n            }\n            completionSession = completionSession.parentSession;\n        }\n        return completionSession;\n    }\n\n    protected asCompletionItem(text: string, position: monaco.Position, overwriteBefore: number, item: DebugProtocol.CompletionItem): monaco.languages.CompletionItem {\n        return {\n            label: item.label,\n            insertText: item.text || item.label,\n            kind: this.completionKinds.get(item.type) || monaco.languages.CompletionItemKind.Property,\n            filterText: (item.start && item.length) ? text.substring(item.start, item.start + item.length).concat(item.label) : undefined,\n            range: monaco.Range.fromPositions(position.delta(0, -(item.length || overwriteBefore)), position),\n            sortText: item.sortText\n        };\n    }\n\n    async execute(value: string): Promise<void> {\n        const expression = new ExpressionItem(value, () => this.findCurrentSession());\n        this.items.push(expression);\n        await expression.evaluate();\n        this.fireDidChange();\n    }\n\n    clear(): void {\n        this.items = [];\n        this.fireDidChange();\n    }\n\n    append(value: string): void {\n        if (!value) {\n            return;\n        }\n\n        const lastItem = this.items.slice(-1)[0];\n        if (lastItem instanceof AnsiConsoleItem && lastItem.content === this.uncompletedItemContent) {\n            this.items.pop();\n            this.uncompletedItemContent += value;\n        } else {\n            this.uncompletedItemContent = value;\n        }\n\n        this.items.push(new AnsiConsoleItem(this.uncompletedItemContent, Severity.Info));\n        this.fireDidChange();\n    }\n\n    appendLine(value: string): void {\n        this.items.push(new AnsiConsoleItem(value, Severity.Info));\n        this.fireDidChange();\n    }\n\n    async logOutput(session: DebugSession, event: DebugProtocol.OutputEvent): Promise<void> {\n        const body = event.body;\n        const { category, variablesReference } = body;\n        if (category === 'telemetry') {\n            console.debug(`telemetry/${event.body.output}`, event.body.data);\n            return;\n        }\n        const severity = category === 'stderr' ? Severity.Error : event.body.category === 'console' ? Severity.Warning : Severity.Info;\n        if (variablesReference) {\n            const items = await new ExpressionContainer({ session: () => session, variablesReference }).getElements();\n            for (const item of items) {\n                this.items.push(Object.assign(item, { severity }));\n            }\n        } else if (typeof body.output === 'string') {\n            for (const line of body.output.split('\\n')) {\n                this.items.push(new AnsiConsoleItem(line, severity));\n            }\n        }\n        this.fireDidChange();\n    }\n\n    protected override fireDidChange = throttle(() => super.fireDidChange(), 50);\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport {\n    AbstractViewContribution, KeybindingRegistry, Widget, CompositeTreeNode, LabelProvider, codicon, OnWillStopAction, FrontendApplicationContribution, ConfirmDialog, Dialog\n} from '@theia/core/lib/browser';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { MenuModelRegistry, CommandRegistry, MAIN_MENU_BAR, Command, Emitter, Mutable, CompoundMenuNodeRole } from '@theia/core/lib/common';\nimport { EDITOR_LINENUMBER_CONTEXT_MENU, EditorManager } from '@theia/editor/lib/browser';\nimport { DebugSessionManager } from './debug-session-manager';\nimport { DebugWidget } from './view/debug-widget';\nimport { FunctionBreakpoint } from './breakpoint/breakpoint-marker';\nimport { BreakpointManager } from './breakpoint/breakpoint-manager';\nimport { DebugConfigurationManager } from './debug-configuration-manager';\nimport { DebugState, DebugSession } from './debug-session';\nimport { DebugBreakpointsWidget } from './view/debug-breakpoints-widget';\nimport { DebugSourceBreakpoint } from './model/debug-source-breakpoint';\nimport { DebugThreadsWidget } from './view/debug-threads-widget';\nimport { DebugThread } from './model/debug-thread';\nimport { DebugStackFramesWidget } from './view/debug-stack-frames-widget';\nimport { DebugStackFrame } from './model/debug-stack-frame';\nimport { DebugVariablesWidget } from './view/debug-variables-widget';\nimport { DebugVariable } from './console/debug-console-items';\nimport { DebugSessionWidget } from './view/debug-session-widget';\nimport { DebugEditorModel } from './editor/debug-editor-model';\nimport { DebugEditorService } from './editor/debug-editor-service';\nimport { DebugConsoleContribution } from './console/debug-console-contribution';\nimport { DebugService } from '../common/debug-service';\nimport { DebugSchemaUpdater } from './debug-schema-updater';\nimport { DebugPreferences } from './debug-preferences';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry, TabBarToolbarItem } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { DebugWatchWidget } from './view/debug-watch-widget';\nimport { DebugWatchExpression } from './view/debug-watch-expression';\nimport { DebugWatchManager } from './debug-watch-manager';\nimport { DebugSessionOptions } from './debug-session-options';\nimport { ColorContribution } from '@theia/core/lib/browser/color-application-contribution';\nimport { ColorRegistry } from '@theia/core/lib/browser/color-registry';\nimport { DebugFunctionBreakpoint } from './model/debug-function-breakpoint';\nimport { DebugBreakpoint } from './model/debug-breakpoint';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { DebugInstructionBreakpoint } from './model/debug-instruction-breakpoint';\nimport { DebugConfiguration } from '../common/debug-configuration';\nimport { DebugExceptionBreakpoint } from './view/debug-exception-breakpoint';\n\nexport namespace DebugMenus {\n    export const DEBUG = [...MAIN_MENU_BAR, '6_debug'];\n    export const DEBUG_CONTROLS = [...DEBUG, 'a_controls'];\n    export const DEBUG_CONFIGURATION = [...DEBUG, 'b_configuration'];\n    export const DEBUG_THREADS = [...DEBUG, 'c_threads'];\n    export const DEBUG_SESSIONS = [...DEBUG, 'd_sessions'];\n    export const DEBUG_BREAKPOINT = [...DEBUG, 'e_breakpoint'];\n    export const DEBUG_NEW_BREAKPOINT = [...DEBUG_BREAKPOINT, 'a_new_breakpoint'];\n    export const DEBUG_BREAKPOINTS = [...DEBUG, 'f_breakpoints'];\n}\n\nfunction nlsEditBreakpoint(breakpoint: string): string {\n    return nls.localizeByDefault('Edit {0}...', nls.localizeByDefault(breakpoint));\n}\n\nfunction nlsRemoveBreakpoint(breakpoint: string): string {\n    return nls.localizeByDefault('Remove {0}', nls.localizeByDefault(breakpoint));\n}\n\nfunction nlsEnableBreakpoint(breakpoint: string): string {\n    return nls.localizeByDefault('Enable {0}', nls.localizeByDefault(breakpoint));\n}\n\nfunction nlsDisableBreakpoint(breakpoint: string): string {\n    return nls.localizeByDefault('Disable {0}', nls.localizeByDefault(breakpoint));\n}\n\nexport namespace DebugCommands {\n\n    export const DEBUG_CATEGORY = 'Debug';\n    export const DEBUG_CATEGORY_KEY = nls.getDefaultKey(DEBUG_CATEGORY);\n\n    export const START = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.debug.start',\n        category: DEBUG_CATEGORY,\n        label: 'Start Debugging',\n        iconClass: codicon('debug-alt')\n    });\n    export const START_NO_DEBUG = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.debug.run',\n        category: DEBUG_CATEGORY,\n        label: 'Start Without Debugging'\n    });\n    export const STOP = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.debug.stop',\n        category: DEBUG_CATEGORY,\n        label: 'Stop',\n        iconClass: codicon('debug-stop')\n    });\n    export const RESTART = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.debug.restart',\n        category: DEBUG_CATEGORY,\n        label: 'Restart',\n    });\n\n    export const OPEN_CONFIGURATIONS = Command.toDefaultLocalizedCommand({\n        id: 'debug.configurations.open',\n        category: DEBUG_CATEGORY,\n        label: 'Open Configurations'\n    });\n    export const ADD_CONFIGURATION = Command.toDefaultLocalizedCommand({\n        id: 'debug.configurations.add',\n        category: DEBUG_CATEGORY,\n        label: 'Add Configuration...'\n    });\n\n    export const STEP_OVER = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.debug.stepOver',\n        category: DEBUG_CATEGORY,\n        label: 'Step Over',\n        iconClass: codicon('debug-step-over')\n    });\n    export const STEP_INTO = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.debug.stepInto',\n        category: DEBUG_CATEGORY,\n        label: 'Step Into',\n        iconClass: codicon('debug-step-into')\n    });\n    export const STEP_OUT = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.debug.stepOut',\n        category: DEBUG_CATEGORY,\n        label: 'Step Out',\n        iconClass: codicon('debug-step-out')\n    });\n    export const CONTINUE = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.debug.continue',\n        category: DEBUG_CATEGORY,\n        label: 'Continue',\n        iconClass: codicon('debug-continue')\n    });\n    export const PAUSE = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.debug.pause',\n        category: DEBUG_CATEGORY,\n        label: 'Pause',\n        iconClass: codicon('debug-pause')\n    });\n    export const CONTINUE_ALL = Command.toLocalizedCommand({\n        id: 'debug.thread.continue.all',\n        category: DEBUG_CATEGORY,\n        label: 'Continue All',\n        iconClass: codicon('debug-continue')\n    }, 'theia/debug/continueAll', DEBUG_CATEGORY_KEY);\n    export const PAUSE_ALL = Command.toLocalizedCommand({\n        id: 'debug.thread.pause.all',\n        category: DEBUG_CATEGORY,\n        label: 'Pause All',\n        iconClass: codicon('debug-pause')\n    }, 'theia/debug/pauseAll', DEBUG_CATEGORY_KEY);\n\n    export const TOGGLE_BREAKPOINT = Command.toDefaultLocalizedCommand({\n        id: 'editor.debug.action.toggleBreakpoint',\n        category: DEBUG_CATEGORY,\n        label: 'Toggle Breakpoint',\n    });\n    export const INLINE_BREAKPOINT = Command.toDefaultLocalizedCommand({\n        id: 'editor.debug.action.inlineBreakpoint',\n        category: DEBUG_CATEGORY,\n        label: 'Inline Breakpoint',\n    });\n    export const ADD_CONDITIONAL_BREAKPOINT = Command.toDefaultLocalizedCommand({\n        id: 'debug.breakpoint.add.conditional',\n        category: DEBUG_CATEGORY,\n        label: 'Add Conditional Breakpoint...',\n    });\n    export const ADD_LOGPOINT = Command.toDefaultLocalizedCommand({\n        id: 'debug.breakpoint.add.logpoint',\n        category: DEBUG_CATEGORY,\n        label: 'Add Logpoint...',\n    });\n    export const ADD_FUNCTION_BREAKPOINT = Command.toDefaultLocalizedCommand({\n        id: 'debug.breakpoint.add.function',\n        category: DEBUG_CATEGORY,\n        label: 'Add Function Breakpoint',\n    });\n    export const ENABLE_ALL_BREAKPOINTS = Command.toDefaultLocalizedCommand({\n        id: 'debug.breakpoint.enableAll',\n        category: DEBUG_CATEGORY,\n        label: 'Enable All Breakpoints',\n    });\n    export const DISABLE_ALL_BREAKPOINTS = Command.toDefaultLocalizedCommand({\n        id: 'debug.breakpoint.disableAll',\n        category: DEBUG_CATEGORY,\n        label: 'Disable All Breakpoints',\n    });\n    export const EDIT_BREAKPOINT = Command.toLocalizedCommand({\n        id: 'debug.breakpoint.edit',\n        category: DEBUG_CATEGORY,\n        originalLabel: 'Edit Breakpoint...',\n        label: nlsEditBreakpoint('Breakpoint')\n    }, '', DEBUG_CATEGORY_KEY);\n    export const EDIT_LOGPOINT = Command.toLocalizedCommand({\n        id: 'debug.logpoint.edit',\n        category: DEBUG_CATEGORY,\n        originalLabel: 'Edit Logpoint...',\n        label: nlsEditBreakpoint('Logpoint')\n    }, '', DEBUG_CATEGORY_KEY);\n    export const EDIT_BREAKPOINT_CONDITION = Command.toLocalizedCommand({\n        id: 'debug.breakpoint.editCondition',\n        category: DEBUG_CATEGORY,\n        label: 'Edit Condition...'\n    }, '', DEBUG_CATEGORY_KEY);\n    export const REMOVE_BREAKPOINT = Command.toLocalizedCommand({\n        id: 'debug.breakpoint.remove',\n        category: DEBUG_CATEGORY,\n        originalLabel: 'Remove Breakpoint',\n        label: nlsRemoveBreakpoint('Breakpoint')\n    }, '', DEBUG_CATEGORY_KEY);\n    export const REMOVE_LOGPOINT = Command.toLocalizedCommand({\n        id: 'debug.logpoint.remove',\n        category: DEBUG_CATEGORY,\n        originalLabel: 'Remove Logpoint',\n        label: nlsRemoveBreakpoint('Logpoint')\n    }, '', DEBUG_CATEGORY_KEY);\n    export const REMOVE_ALL_BREAKPOINTS = Command.toDefaultLocalizedCommand({\n        id: 'debug.breakpoint.removeAll',\n        category: DEBUG_CATEGORY,\n        label: 'Remove All Breakpoints',\n    });\n    export const TOGGLE_BREAKPOINTS_ENABLED = Command.toLocalizedCommand({\n        id: 'debug.breakpoint.toggleEnabled'\n    });\n    export const SHOW_HOVER = Command.toDefaultLocalizedCommand({\n        id: 'editor.debug.action.showDebugHover',\n        label: 'Debug: Show Hover'\n    });\n\n    export const RESTART_FRAME = Command.toDefaultLocalizedCommand({\n        id: 'debug.frame.restart',\n        category: DEBUG_CATEGORY,\n        label: 'Restart Frame',\n    });\n    export const COPY_CALL_STACK = Command.toDefaultLocalizedCommand({\n        id: 'debug.callStack.copy',\n        category: DEBUG_CATEGORY,\n        label: 'Copy Call Stack',\n    });\n\n    export const SET_VARIABLE_VALUE = Command.toDefaultLocalizedCommand({\n        id: 'debug.variable.setValue',\n        category: DEBUG_CATEGORY,\n        label: 'Set Value',\n    });\n    export const COPY_VARIABLE_VALUE = Command.toDefaultLocalizedCommand({\n        id: 'debug.variable.copyValue',\n        category: DEBUG_CATEGORY,\n        label: 'Copy Value',\n    });\n    export const COPY_VARIABLE_AS_EXPRESSION = Command.toDefaultLocalizedCommand({\n        id: 'debug.variable.copyAsExpression',\n        category: DEBUG_CATEGORY,\n        label: 'Copy as Expression',\n    });\n    export const WATCH_VARIABLE = Command.toDefaultLocalizedCommand({\n        id: 'debug.variable.watch',\n        category: DEBUG_CATEGORY,\n        label: 'Add to Watch',\n    });\n\n    export const ADD_WATCH_EXPRESSION = Command.toDefaultLocalizedCommand({\n        id: 'debug.watch.addExpression',\n        category: DEBUG_CATEGORY,\n        label: 'Add Expression'\n    });\n    export const EDIT_WATCH_EXPRESSION = Command.toDefaultLocalizedCommand({\n        id: 'debug.watch.editExpression',\n        category: DEBUG_CATEGORY,\n        label: 'Edit Expression'\n    });\n    export const COPY_WATCH_EXPRESSION_VALUE = Command.toLocalizedCommand({\n        id: 'debug.watch.copyExpressionValue',\n        category: DEBUG_CATEGORY,\n        label: 'Copy Expression Value'\n    }, 'theia/debug/copyExpressionValue', DEBUG_CATEGORY_KEY);\n    export const REMOVE_WATCH_EXPRESSION = Command.toDefaultLocalizedCommand({\n        id: 'debug.watch.removeExpression',\n        category: DEBUG_CATEGORY,\n        label: 'Remove Expression'\n    });\n    export const COLLAPSE_ALL_WATCH_EXPRESSIONS = Command.toDefaultLocalizedCommand({\n        id: 'debug.watch.collapseAllExpressions',\n        category: DEBUG_CATEGORY,\n        label: 'Collapse All'\n    });\n    export const REMOVE_ALL_WATCH_EXPRESSIONS = Command.toDefaultLocalizedCommand({\n        id: 'debug.watch.removeAllExpressions',\n        category: DEBUG_CATEGORY,\n        label: 'Remove All Expressions'\n    });\n}\nexport namespace DebugThreadContextCommands {\n    export const STEP_OVER = {\n        id: 'debug.thread.context.context.next'\n    };\n    export const STEP_INTO = {\n        id: 'debug.thread.context.stepin'\n    };\n    export const STEP_OUT = {\n        id: 'debug.thread.context.stepout'\n    };\n    export const CONTINUE = {\n        id: 'debug.thread.context.continue'\n    };\n    export const PAUSE = {\n        id: 'debug.thread.context.pause'\n    };\n    export const TERMINATE = {\n        id: 'debug.thread.context.terminate'\n    };\n}\nexport namespace DebugSessionContextCommands {\n    export const STOP = {\n        id: 'debug.session.context.stop'\n    };\n    export const RESTART = {\n        id: 'debug.session.context.restart'\n    };\n    export const PAUSE_ALL = {\n        id: 'debug.session.context.pauseAll'\n    };\n    export const CONTINUE_ALL = {\n        id: 'debug.session.context.continueAll'\n    };\n    export const REVEAL = {\n        id: 'debug.session.context.reveal'\n    };\n}\nexport namespace DebugEditorContextCommands {\n    export const ADD_BREAKPOINT = {\n        id: 'debug.editor.context.addBreakpoint'\n    };\n    export const ADD_CONDITIONAL_BREAKPOINT = {\n        id: 'debug.editor.context.addBreakpoint.conditional'\n    };\n    export const ADD_LOGPOINT = {\n        id: 'debug.editor.context.add.logpoint'\n    };\n    export const REMOVE_BREAKPOINT = {\n        id: 'debug.editor.context.removeBreakpoint'\n    };\n    export const EDIT_BREAKPOINT = {\n        id: 'debug.editor.context.edit.breakpoint'\n    };\n    export const ENABLE_BREAKPOINT = {\n        id: 'debug.editor.context.enableBreakpoint'\n    };\n    export const DISABLE_BREAKPOINT = {\n        id: 'debug.editor.context.disableBreakpoint'\n    };\n    export const REMOVE_LOGPOINT = {\n        id: 'debug.editor.context.logpoint.remove'\n    };\n    export const EDIT_LOGPOINT = {\n        id: 'debug.editor.context.logpoint.edit'\n    };\n    export const ENABLE_LOGPOINT = {\n        id: 'debug.editor.context.logpoint.enable'\n    };\n    export const DISABLE_LOGPOINT = {\n        id: 'debug.editor.context.logpoint.disable'\n    };\n}\nexport namespace DebugBreakpointWidgetCommands {\n    export const ACCEPT = {\n        id: 'debug.breakpointWidget.accept'\n    };\n    export const CLOSE = {\n        id: 'debug.breakpointWidget.close'\n    };\n}\n\n@injectable()\nexport class DebugFrontendApplicationContribution extends AbstractViewContribution<DebugWidget>\n    implements TabBarToolbarContribution, ColorContribution, FrontendApplicationContribution {\n\n    @inject(DebugService)\n    protected readonly debug: DebugService;\n\n    @inject(DebugSessionManager)\n    protected readonly manager: DebugSessionManager;\n\n    @inject(DebugConfigurationManager)\n    protected readonly configurations: DebugConfigurationManager;\n\n    @inject(BreakpointManager)\n    protected readonly breakpointManager: BreakpointManager;\n\n    @inject(DebugEditorService)\n    protected readonly editors: DebugEditorService;\n\n    @inject(DebugConsoleContribution)\n    protected readonly console: DebugConsoleContribution;\n\n    @inject(DebugSchemaUpdater)\n    protected readonly schemaUpdater: DebugSchemaUpdater;\n\n    @inject(DebugPreferences)\n    protected readonly preference: DebugPreferences;\n\n    @inject(DebugWatchManager)\n    protected readonly watchManager: DebugWatchManager;\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    constructor() {\n        super({\n            widgetId: DebugWidget.ID,\n            widgetName: DebugWidget.LABEL,\n            defaultWidgetOptions: {\n                area: 'left',\n                rank: 400\n            },\n            toggleCommandId: 'debug:toggle',\n            toggleKeybinding: 'ctrlcmd+shift+d'\n        });\n    }\n\n    async initializeLayout(): Promise<void> {\n        await this.openView();\n    }\n\n    protected firstSessionStart = true;\n    async onStart(): Promise<void> {\n        this.manager.onDidCreateDebugSession(session => this.openSession(session, { reveal: false }));\n        this.manager.onDidStartDebugSession(session => {\n            const { noDebug } = session.configuration;\n            const openDebug = session.configuration.openDebug || this.preference['debug.openDebug'];\n            const internalConsoleOptions = session.configuration.internalConsoleOptions || this.preference['debug.internalConsoleOptions'];\n            if (internalConsoleOptions === 'openOnSessionStart' ||\n                (internalConsoleOptions === 'openOnFirstSessionStart' && this.firstSessionStart)) {\n                this.console.openView({\n                    reveal: true,\n                    activate: false,\n                });\n            }\n            const shouldOpenDebug = openDebug === 'openOnSessionStart' || (openDebug === 'openOnFirstSessionStart' && this.firstSessionStart);\n            // Do not open debug view when suppressed via configuration\n            if (!noDebug && !this.getOption(session, 'suppressDebugView') && shouldOpenDebug) {\n                this.openSession(session);\n            }\n            this.firstSessionStart = false;\n        });\n        this.manager.onDidStopDebugSession(session => {\n            const { openDebug } = session.configuration;\n            if (!this.getOption(session, 'suppressDebugView') && openDebug === 'openOnDebugBreak') {\n                this.openSession(session);\n            }\n        });\n\n        this.updateStatusBar();\n        this.manager.onDidChange(() => this.updateStatusBar());\n\n        this.schemaUpdater.update();\n        this.configurations.load();\n        this.breakpointManager.load();\n        this.watchManager.load();\n    }\n\n    onStop(): void {\n        this.configurations.save();\n        this.breakpointManager.save();\n        this.watchManager.save();\n    }\n\n    onWillStop(): OnWillStopAction | undefined {\n        if (this.preference['debug.confirmOnExit'] === 'always' && this.manager.currentSession) {\n            return {\n                reason: 'active-debug-sessions',\n                action: async () => {\n                    if (this.manager.currentSession) {\n                        const msg = this.manager.sessions.length === 1\n                            ? nls.localizeByDefault('There is an active debug session, are you sure you want to stop it?')\n                            : nls.localizeByDefault('There are active debug sessions, are you sure you want to stop them?');\n                        const safeToExit = await new ConfirmDialog({\n                            title: '',\n                            msg,\n                            ok: nls.localizeByDefault('Stop Debugging'),\n                            cancel: Dialog.CANCEL,\n                        }).open();\n                        return safeToExit === true;\n                    }\n                    return true;\n                },\n            };\n        }\n    }\n\n    override registerMenus(menus: MenuModelRegistry): void {\n        super.registerMenus(menus);\n        const registerMenuActions = (menuPath: string[], ...commands: Command[]) => {\n            for (const [index, command] of commands.entries()) {\n                const label = command.label;\n                const debug = `${DebugCommands.DEBUG_CATEGORY}:`;\n                menus.registerMenuAction(menuPath, {\n                    commandId: command.id,\n                    label: label && label.startsWith(debug) && label.slice(debug.length).trimStart() || label,\n                    icon: command.iconClass,\n                    order: String.fromCharCode('a'.charCodeAt(0) + index)\n                });\n            }\n        };\n\n        menus.registerSubmenu(DebugMenus.DEBUG, nls.localizeByDefault('Run'));\n        registerMenuActions(DebugMenus.DEBUG_CONTROLS,\n            DebugCommands.START,\n            DebugCommands.START_NO_DEBUG,\n            DebugCommands.STOP,\n            DebugCommands.RESTART\n        );\n        registerMenuActions(DebugMenus.DEBUG_CONFIGURATION,\n            DebugCommands.OPEN_CONFIGURATIONS,\n            DebugCommands.ADD_CONFIGURATION\n        );\n        registerMenuActions(DebugMenus.DEBUG_THREADS,\n            DebugCommands.CONTINUE,\n            DebugCommands.STEP_OVER,\n            DebugCommands.STEP_INTO,\n            DebugCommands.STEP_OUT,\n            DebugCommands.PAUSE\n        );\n        registerMenuActions(DebugMenus.DEBUG_SESSIONS,\n            DebugCommands.CONTINUE_ALL,\n            DebugCommands.PAUSE_ALL\n        );\n        registerMenuActions(DebugMenus.DEBUG_BREAKPOINT,\n            DebugCommands.TOGGLE_BREAKPOINT\n        );\n        menus.registerSubmenu(DebugMenus.DEBUG_NEW_BREAKPOINT, nls.localizeByDefault('New Breakpoint'));\n        registerMenuActions(DebugMenus.DEBUG_NEW_BREAKPOINT,\n            DebugCommands.ADD_CONDITIONAL_BREAKPOINT,\n            DebugCommands.INLINE_BREAKPOINT,\n            DebugCommands.ADD_FUNCTION_BREAKPOINT,\n            DebugCommands.ADD_LOGPOINT,\n        );\n        registerMenuActions(DebugMenus.DEBUG_BREAKPOINTS,\n            DebugCommands.ENABLE_ALL_BREAKPOINTS,\n            DebugCommands.DISABLE_ALL_BREAKPOINTS,\n            DebugCommands.REMOVE_ALL_BREAKPOINTS\n        );\n\n        registerMenuActions(DebugThreadsWidget.CONTROL_MENU,\n            { ...DebugCommands.PAUSE, ...DebugThreadContextCommands.PAUSE },\n            { ...DebugCommands.CONTINUE, ...DebugThreadContextCommands.CONTINUE },\n            { ...DebugCommands.STEP_OVER, ...DebugThreadContextCommands.STEP_OVER },\n            { ...DebugCommands.STEP_INTO, ...DebugThreadContextCommands.STEP_INTO },\n            { ...DebugCommands.STEP_OUT, ...DebugThreadContextCommands.STEP_OUT },\n            { ...DebugCommands.PAUSE_ALL, ...DebugSessionContextCommands.PAUSE_ALL },\n            { ...DebugCommands.CONTINUE_ALL, ...DebugSessionContextCommands.CONTINUE_ALL }\n        );\n        registerMenuActions(DebugThreadsWidget.TERMINATE_MENU,\n            { ...DebugCommands.RESTART, ...DebugSessionContextCommands.RESTART },\n            { ...DebugCommands.STOP, ...DebugSessionContextCommands.STOP },\n            { ...DebugThreadContextCommands.TERMINATE, label: nls.localizeByDefault('Terminate Thread') }\n        );\n        registerMenuActions(DebugThreadsWidget.OPEN_MENU, { ...DebugSessionContextCommands.REVEAL, label: nls.localize('theia/debug/reveal', 'Reveal') });\n\n        registerMenuActions(DebugStackFramesWidget.CONTEXT_MENU,\n            DebugCommands.RESTART_FRAME,\n            DebugCommands.COPY_CALL_STACK\n        );\n\n        registerMenuActions(DebugVariablesWidget.EDIT_MENU,\n            DebugCommands.SET_VARIABLE_VALUE,\n            DebugCommands.COPY_VARIABLE_VALUE,\n            DebugCommands.COPY_VARIABLE_AS_EXPRESSION\n        );\n        registerMenuActions(DebugVariablesWidget.WATCH_MENU,\n            DebugCommands.WATCH_VARIABLE\n        );\n\n        registerMenuActions(DebugWatchWidget.EDIT_MENU,\n            DebugCommands.EDIT_WATCH_EXPRESSION,\n            DebugCommands.COPY_WATCH_EXPRESSION_VALUE\n        );\n        registerMenuActions(DebugWatchWidget.REMOVE_MENU,\n            DebugCommands.REMOVE_WATCH_EXPRESSION,\n            DebugCommands.REMOVE_ALL_WATCH_EXPRESSIONS\n        );\n\n        registerMenuActions(DebugBreakpointsWidget.EDIT_MENU,\n            DebugCommands.EDIT_BREAKPOINT,\n            DebugCommands.EDIT_LOGPOINT,\n            DebugCommands.EDIT_BREAKPOINT_CONDITION\n        );\n        registerMenuActions(DebugBreakpointsWidget.REMOVE_MENU,\n            DebugCommands.REMOVE_BREAKPOINT,\n            DebugCommands.REMOVE_LOGPOINT,\n            DebugCommands.REMOVE_ALL_BREAKPOINTS\n        );\n        registerMenuActions(DebugBreakpointsWidget.ENABLE_MENU,\n            DebugCommands.ENABLE_ALL_BREAKPOINTS,\n            DebugCommands.DISABLE_ALL_BREAKPOINTS\n        );\n\n        registerMenuActions(DebugEditorModel.CONTEXT_MENU,\n            { ...DebugEditorContextCommands.ADD_BREAKPOINT, label: nls.localizeByDefault('Add Breakpoint') },\n            { ...DebugEditorContextCommands.ADD_CONDITIONAL_BREAKPOINT, label: DebugCommands.ADD_CONDITIONAL_BREAKPOINT.label },\n            { ...DebugEditorContextCommands.ADD_LOGPOINT, label: DebugCommands.ADD_LOGPOINT.label },\n            { ...DebugEditorContextCommands.REMOVE_BREAKPOINT, label: DebugCommands.REMOVE_BREAKPOINT.label },\n            { ...DebugEditorContextCommands.EDIT_BREAKPOINT, label: DebugCommands.EDIT_BREAKPOINT.label },\n            { ...DebugEditorContextCommands.ENABLE_BREAKPOINT, label: nlsEnableBreakpoint('Breakpoint') },\n            { ...DebugEditorContextCommands.DISABLE_BREAKPOINT, label: nlsDisableBreakpoint('Breakpoint') },\n            { ...DebugEditorContextCommands.REMOVE_LOGPOINT, label: DebugCommands.REMOVE_LOGPOINT.label },\n            { ...DebugEditorContextCommands.EDIT_LOGPOINT, label: DebugCommands.EDIT_LOGPOINT.label },\n            { ...DebugEditorContextCommands.ENABLE_LOGPOINT, label: nlsEnableBreakpoint('Logpoint') },\n            { ...DebugEditorContextCommands.DISABLE_LOGPOINT, label: nlsDisableBreakpoint('Logpoint') }\n        );\n        menus.linkSubmenu(EDITOR_LINENUMBER_CONTEXT_MENU, DebugEditorModel.CONTEXT_MENU, { role: CompoundMenuNodeRole.Group });\n    }\n\n    override registerCommands(registry: CommandRegistry): void {\n        super.registerCommands(registry);\n        registry.registerCommand(DebugCommands.START, {\n            execute: (config?: DebugSessionOptions) => this.start(false, config)\n        });\n        registry.registerCommand(DebugCommands.START_NO_DEBUG, {\n            execute: (config?: DebugSessionOptions) => this.start(true, config)\n        });\n        registry.registerCommand(DebugCommands.STOP, {\n            execute: () => this.manager.terminateSession(),\n            isEnabled: () => this.manager.state !== DebugState.Inactive\n        });\n        registry.registerCommand(DebugCommands.RESTART, {\n            execute: () => this.manager.restartSession(),\n            isEnabled: () => this.manager.state !== DebugState.Inactive\n        });\n\n        registry.registerCommand(DebugCommands.OPEN_CONFIGURATIONS, {\n            execute: () => this.configurations.openConfiguration()\n        });\n        registry.registerCommand(DebugCommands.ADD_CONFIGURATION, {\n            execute: () => this.configurations.addConfiguration()\n        });\n\n        registry.registerCommand(DebugCommands.STEP_OVER, {\n            execute: () => this.manager.currentThread && this.manager.currentThread.stepOver(),\n            isEnabled: () => this.manager.state === DebugState.Stopped\n        });\n        registry.registerCommand(DebugCommands.STEP_INTO, {\n            execute: () => this.manager.currentThread && this.manager.currentThread.stepIn(),\n            isEnabled: () => this.manager.state === DebugState.Stopped\n        });\n        registry.registerCommand(DebugCommands.STEP_OUT, {\n            execute: () => this.manager.currentThread && this.manager.currentThread.stepOut(),\n            isEnabled: () => this.manager.state === DebugState.Stopped\n        });\n        registry.registerCommand(DebugCommands.CONTINUE, {\n            execute: () => this.manager.currentThread && this.manager.currentThread.continue(),\n            isEnabled: () => this.manager.state === DebugState.Stopped\n        });\n        registry.registerCommand(DebugCommands.PAUSE, {\n            execute: () => this.manager.currentThread && this.manager.currentThread.pause(),\n            isEnabled: () => this.manager.state === DebugState.Running\n        });\n        registry.registerCommand(DebugCommands.PAUSE_ALL, {\n            execute: () => this.manager.currentSession && this.manager.currentSession.pauseAll(),\n            isEnabled: () => !!this.manager.currentSession && !!this.manager.currentSession.runningThreads.next().value\n        });\n        registry.registerCommand(DebugCommands.CONTINUE_ALL, {\n            execute: () => this.manager.currentSession && this.manager.currentSession.continueAll(),\n            isEnabled: () => !!this.manager.currentSession && !!this.manager.currentSession.stoppedThreads.next().value\n        });\n\n        registry.registerCommand(DebugThreadContextCommands.STEP_OVER, {\n            execute: () => this.selectedThread && this.selectedThread.stepOver(),\n            isEnabled: () => !!this.selectedThread && this.selectedThread.stopped,\n            isVisible: () => !!this.selectedThread\n        });\n        registry.registerCommand(DebugThreadContextCommands.STEP_INTO, {\n            execute: () => this.selectedThread && this.selectedThread.stepIn(),\n            isEnabled: () => !!this.selectedThread && this.selectedThread.stopped,\n            isVisible: () => !!this.selectedThread\n        });\n        registry.registerCommand(DebugThreadContextCommands.STEP_OUT, {\n            execute: () => this.selectedThread && this.selectedThread.stepOut(),\n            isEnabled: () => !!this.selectedThread && this.selectedThread.stopped,\n            isVisible: () => !!this.selectedThread\n        });\n        registry.registerCommand(DebugThreadContextCommands.CONTINUE, {\n            execute: () => this.selectedThread && this.selectedThread.continue(),\n            isEnabled: () => !!this.selectedThread && this.selectedThread.stopped,\n            isVisible: () => !!this.selectedThread && this.selectedThread.stopped,\n        });\n        registry.registerCommand(DebugThreadContextCommands.PAUSE, {\n            execute: () => this.selectedThread && this.selectedThread.pause(),\n            isEnabled: () => !!this.selectedThread && !this.selectedThread.stopped,\n            isVisible: () => !!this.selectedThread && !this.selectedThread.stopped,\n        });\n        registry.registerCommand(DebugThreadContextCommands.TERMINATE, {\n            execute: () => this.selectedThread && this.selectedThread.terminate(),\n            isEnabled: () => !!this.selectedThread && this.selectedThread.supportsTerminate,\n            isVisible: () => !!this.selectedThread && this.selectedThread.supportsTerminate\n        });\n\n        registry.registerCommand(DebugSessionContextCommands.STOP, {\n            execute: () => this.selectedSession && this.manager.terminateSession(this.selectedSession),\n            isEnabled: () => !!this.selectedSession && this.selectedSession.state !== DebugState.Inactive,\n            isVisible: () => !this.selectedThread\n        });\n        registry.registerCommand(DebugSessionContextCommands.RESTART, {\n            execute: () => this.selectedSession && this.manager.restartSession(this.selectedSession),\n            isEnabled: () => !!this.selectedSession && this.selectedSession.state !== DebugState.Inactive,\n            isVisible: () => !this.selectedThread\n        });\n        registry.registerCommand(DebugSessionContextCommands.CONTINUE_ALL, {\n            execute: () => this.selectedSession && this.selectedSession.continueAll(),\n            isEnabled: () => !!this.selectedSession && !!this.selectedSession.stoppedThreads.next().value,\n            isVisible: () => !this.selectedThread\n        });\n        registry.registerCommand(DebugSessionContextCommands.PAUSE_ALL, {\n            execute: () => this.selectedSession && this.selectedSession.pauseAll(),\n            isEnabled: () => !!this.selectedSession && !!this.selectedSession.runningThreads.next().value,\n            isVisible: () => !this.selectedThread\n        });\n        registry.registerCommand(DebugSessionContextCommands.REVEAL, {\n            execute: () => this.selectedSession && this.revealSession(this.selectedSession),\n            isEnabled: () => Boolean(this.selectedSession),\n            isVisible: () => !this.selectedThread && Boolean(this.selectedSession)\n        });\n        registry.registerCommand(DebugCommands.TOGGLE_BREAKPOINT, {\n            execute: () => this.editors.toggleBreakpoint(),\n            isEnabled: () => !!this.editors.model\n        });\n        registry.registerCommand(DebugCommands.INLINE_BREAKPOINT, {\n            execute: () => this.editors.addInlineBreakpoint(),\n            isEnabled: () => !!this.editors.model && !this.editors.getInlineBreakpoint()\n        });\n        registry.registerCommand(DebugCommands.ADD_CONDITIONAL_BREAKPOINT, {\n            execute: () => this.editors.addBreakpoint('condition'),\n            isEnabled: () => !!this.editors.model && !this.editors.anyBreakpoint()\n        });\n        registry.registerCommand(DebugCommands.ADD_LOGPOINT, {\n            execute: () => this.editors.addBreakpoint('logMessage'),\n            isEnabled: () => !!this.editors.model && !this.editors.anyBreakpoint()\n        });\n        registry.registerCommand(DebugCommands.ADD_FUNCTION_BREAKPOINT, {\n            execute: async () => {\n                const { labelProvider, breakpointManager, editorManager } = this;\n                const options = { labelProvider, breakpoints: breakpointManager, editorManager };\n                await new DebugFunctionBreakpoint(FunctionBreakpoint.create({ name: '' }), options).open();\n            },\n            isEnabled: widget => !(widget instanceof Widget) || widget instanceof DebugBreakpointsWidget,\n            isVisible: widget => !(widget instanceof Widget) || widget instanceof DebugBreakpointsWidget\n        });\n        registry.registerCommand(DebugCommands.ENABLE_ALL_BREAKPOINTS, {\n            execute: () => this.breakpointManager.enableAllBreakpoints(true),\n            isEnabled: () => this.breakpointManager.hasBreakpoints()\n        });\n        registry.registerCommand(DebugCommands.DISABLE_ALL_BREAKPOINTS, {\n            execute: () => this.breakpointManager.enableAllBreakpoints(false),\n            isEnabled: () => this.breakpointManager.hasBreakpoints()\n        });\n        registry.registerCommand(DebugCommands.EDIT_BREAKPOINT, {\n            execute: async () => {\n                const { selectedBreakpoint, selectedFunctionBreakpoint } = this;\n                if (selectedBreakpoint) {\n                    await this.editors.editBreakpoint(selectedBreakpoint);\n                } else if (selectedFunctionBreakpoint) {\n                    await selectedFunctionBreakpoint.open();\n                }\n            },\n            isEnabled: () => !!this.selectedBreakpoint || !!this.selectedFunctionBreakpoint,\n            isVisible: () => !!this.selectedBreakpoint || !!this.selectedFunctionBreakpoint\n        });\n        registry.registerCommand(DebugCommands.EDIT_LOGPOINT, {\n            execute: async () => {\n                const { selectedLogpoint } = this;\n                if (selectedLogpoint) {\n                    await this.editors.editBreakpoint(selectedLogpoint);\n                }\n            },\n            isEnabled: () => !!this.selectedLogpoint,\n            isVisible: () => !!this.selectedLogpoint\n        });\n        registry.registerCommand(DebugCommands.EDIT_BREAKPOINT_CONDITION, {\n            execute: async () => {\n                const { selectedExceptionBreakpoint } = this;\n                if (selectedExceptionBreakpoint) {\n                    await selectedExceptionBreakpoint.editCondition();\n                }\n            },\n            isEnabled: () => !!this.selectedExceptionBreakpoint?.data.raw.supportsCondition,\n            isVisible: () => !!this.selectedExceptionBreakpoint?.data.raw.supportsCondition\n        });\n        registry.registerCommand(DebugCommands.REMOVE_BREAKPOINT, {\n            execute: () => {\n                const selectedBreakpoint = this.selectedSettableBreakpoint;\n                if (selectedBreakpoint) {\n                    selectedBreakpoint.remove();\n                }\n            },\n            isEnabled: () => Boolean(this.selectedSettableBreakpoint),\n            isVisible: () => Boolean(this.selectedSettableBreakpoint),\n        });\n        registry.registerCommand(DebugCommands.REMOVE_LOGPOINT, {\n            execute: () => {\n                const { selectedLogpoint } = this;\n                if (selectedLogpoint) {\n                    selectedLogpoint.remove();\n                }\n            },\n            isEnabled: () => !!this.selectedLogpoint,\n            isVisible: () => !!this.selectedLogpoint\n        });\n        registry.registerCommand(DebugCommands.REMOVE_ALL_BREAKPOINTS, {\n            execute: () => this.breakpointManager.removeBreakpoints(),\n            isEnabled: () => this.breakpointManager.hasBreakpoints(),\n            isVisible: widget => !(widget instanceof Widget) || (widget instanceof DebugBreakpointsWidget)\n        });\n        registry.registerCommand(DebugCommands.TOGGLE_BREAKPOINTS_ENABLED, {\n            execute: () => this.breakpointManager.breakpointsEnabled = !this.breakpointManager.breakpointsEnabled,\n            isVisible: arg => arg instanceof DebugBreakpointsWidget\n        });\n        registry.registerCommand(DebugCommands.SHOW_HOVER, {\n            execute: () => this.editors.showHover(),\n            isEnabled: () => this.editors.canShowHover()\n        });\n\n        registry.registerCommand(DebugCommands.RESTART_FRAME, {\n            execute: () => this.selectedFrame && this.selectedFrame.restart(),\n            isEnabled: () => !!this.selectedFrame\n        });\n        registry.registerCommand(DebugCommands.COPY_CALL_STACK, {\n            execute: () => {\n                const { frames } = this;\n                const selection = document.getSelection();\n                if (frames && selection) {\n                    selection.selectAllChildren(frames.node);\n                    document.execCommand('copy');\n                }\n            },\n            isEnabled: () => document.queryCommandSupported('copy'),\n            isVisible: () => document.queryCommandSupported('copy')\n        });\n\n        registry.registerCommand(DebugCommands.SET_VARIABLE_VALUE, {\n            execute: () => this.selectedVariable && this.selectedVariable.open(),\n            isEnabled: () => !!this.selectedVariable && this.selectedVariable.supportSetVariable,\n            isVisible: () => !!this.selectedVariable && this.selectedVariable.supportSetVariable\n        });\n        registry.registerCommand(DebugCommands.COPY_VARIABLE_VALUE, {\n            execute: () => this.selectedVariable && this.selectedVariable.copyValue(),\n            isEnabled: () => !!this.selectedVariable && this.selectedVariable.supportCopyValue,\n            isVisible: () => !!this.selectedVariable && this.selectedVariable.supportCopyValue\n        });\n        registry.registerCommand(DebugCommands.COPY_VARIABLE_AS_EXPRESSION, {\n            execute: () => this.selectedVariable && this.selectedVariable.copyAsExpression(),\n            isEnabled: () => !!this.selectedVariable && this.selectedVariable.supportCopyAsExpression,\n            isVisible: () => !!this.selectedVariable && this.selectedVariable.supportCopyAsExpression\n        });\n        registry.registerCommand(DebugCommands.WATCH_VARIABLE, {\n            execute: () => {\n                const { selectedVariable, watch } = this;\n                if (selectedVariable && watch) {\n                    watch.viewModel.addWatchExpression(selectedVariable.name);\n                }\n            },\n            isEnabled: () => !!this.selectedVariable && !!this.watch,\n            isVisible: () => !!this.selectedVariable && !!this.watch,\n        });\n\n        // Debug context menu commands\n        registry.registerCommand(DebugEditorContextCommands.ADD_BREAKPOINT, {\n            execute: position => this.isPosition(position) && this.editors.toggleBreakpoint(this.asPosition(position)),\n            isEnabled: position => this.isPosition(position) && !this.editors.anyBreakpoint(this.asPosition(position)),\n            isVisible: position => this.isPosition(position) && !this.editors.anyBreakpoint(this.asPosition(position))\n        });\n        registry.registerCommand(DebugEditorContextCommands.ADD_CONDITIONAL_BREAKPOINT, {\n            execute: position => this.isPosition(position) && this.editors.addBreakpoint('condition', this.asPosition(position)),\n            isEnabled: position => this.isPosition(position) && !this.editors.anyBreakpoint(this.asPosition(position)),\n            isVisible: position => this.isPosition(position) && !this.editors.anyBreakpoint(this.asPosition(position))\n        });\n        registry.registerCommand(DebugEditorContextCommands.ADD_LOGPOINT, {\n            execute: position => this.isPosition(position) && this.editors.addBreakpoint('logMessage', this.asPosition(position)),\n            isEnabled: position => this.isPosition(position) && !this.editors.anyBreakpoint(this.asPosition(position)),\n            isVisible: position => this.isPosition(position) && !this.editors.anyBreakpoint(this.asPosition(position))\n        });\n        registry.registerCommand(DebugEditorContextCommands.REMOVE_BREAKPOINT, {\n            execute: position => this.isPosition(position) && this.editors.toggleBreakpoint(this.asPosition(position)),\n            isEnabled: position => this.isPosition(position) && !!this.editors.getBreakpoint(this.asPosition(position)),\n            isVisible: position => this.isPosition(position) && !!this.editors.getBreakpoint(this.asPosition(position))\n        });\n        registry.registerCommand(DebugEditorContextCommands.EDIT_BREAKPOINT, {\n            execute: position => this.isPosition(position) && this.editors.editBreakpoint(this.asPosition(position)),\n            isEnabled: position => this.isPosition(position) && !!this.editors.getBreakpoint(this.asPosition(position)),\n            isVisible: position => this.isPosition(position) && !!this.editors.getBreakpoint(this.asPosition(position))\n        });\n        registry.registerCommand(DebugEditorContextCommands.ENABLE_BREAKPOINT, {\n            execute: position => this.isPosition(position) && this.editors.setBreakpointEnabled(this.asPosition(position), true),\n            isEnabled: position => this.isPosition(position) && this.editors.getBreakpointEnabled(this.asPosition(position)) === false,\n            isVisible: position => this.isPosition(position) && this.editors.getBreakpointEnabled(this.asPosition(position)) === false\n        });\n        registry.registerCommand(DebugEditorContextCommands.DISABLE_BREAKPOINT, {\n            execute: position => this.isPosition(position) && this.editors.setBreakpointEnabled(this.asPosition(position), false),\n            isEnabled: position => this.isPosition(position) && !!this.editors.getBreakpointEnabled(this.asPosition(position)),\n            isVisible: position => this.isPosition(position) && !!this.editors.getBreakpointEnabled(this.asPosition(position))\n        });\n        registry.registerCommand(DebugEditorContextCommands.REMOVE_LOGPOINT, {\n            execute: position => this.isPosition(position) && this.editors.toggleBreakpoint(this.asPosition(position)),\n            isEnabled: position => this.isPosition(position) && !!this.editors.getLogpoint(this.asPosition(position)),\n            isVisible: position => this.isPosition(position) && !!this.editors.getLogpoint(this.asPosition(position))\n        });\n        registry.registerCommand(DebugEditorContextCommands.EDIT_LOGPOINT, {\n            execute: position => this.isPosition(position) && this.editors.editBreakpoint(this.asPosition(position)),\n            isEnabled: position => this.isPosition(position) && !!this.editors.getLogpoint(this.asPosition(position)),\n            isVisible: position => this.isPosition(position) && !!this.editors.getLogpoint(this.asPosition(position))\n        });\n        registry.registerCommand(DebugEditorContextCommands.ENABLE_LOGPOINT, {\n            execute: position => this.isPosition(position) && this.editors.setBreakpointEnabled(this.asPosition(position), true),\n            isEnabled: position => this.isPosition(position) && this.editors.getLogpointEnabled(this.asPosition(position)) === false,\n            isVisible: position => this.isPosition(position) && this.editors.getLogpointEnabled(this.asPosition(position)) === false\n        });\n        registry.registerCommand(DebugEditorContextCommands.DISABLE_LOGPOINT, {\n            execute: position => this.isPosition(position) && this.editors.setBreakpointEnabled(this.asPosition(position), false),\n            isEnabled: position => this.isPosition(position) && !!this.editors.getLogpointEnabled(this.asPosition(position)),\n            isVisible: position => this.isPosition(position) && !!this.editors.getLogpointEnabled(this.asPosition(position))\n        });\n\n        registry.registerCommand(DebugBreakpointWidgetCommands.ACCEPT, {\n            execute: () => this.editors.acceptBreakpoint()\n        });\n        registry.registerCommand(DebugBreakpointWidgetCommands.CLOSE, {\n            execute: () => this.editors.closeBreakpoint()\n        });\n\n        registry.registerCommand(DebugCommands.ADD_WATCH_EXPRESSION, {\n            execute: widget => {\n                if (widget instanceof Widget) {\n                    if (widget instanceof DebugWatchWidget) {\n                        widget.viewModel.addWatchExpression();\n                    }\n                } else if (this.watch) {\n                    this.watch.viewModel.addWatchExpression();\n                }\n            },\n            isEnabled: widget => widget instanceof Widget ? widget instanceof DebugWatchWidget : !!this.watch,\n            isVisible: widget => widget instanceof Widget ? widget instanceof DebugWatchWidget : !!this.watch\n        });\n        registry.registerCommand(DebugCommands.EDIT_WATCH_EXPRESSION, {\n            execute: () => {\n                const { watchExpression } = this;\n                if (watchExpression) {\n                    watchExpression.open();\n                }\n            },\n            isEnabled: () => !!this.watchExpression,\n            isVisible: () => !!this.watchExpression\n        });\n        registry.registerCommand(DebugCommands.COPY_WATCH_EXPRESSION_VALUE, {\n            execute: () => this.watchExpression && this.watchExpression.copyValue(),\n            isEnabled: () => !!this.watchExpression && this.watchExpression.supportCopyValue,\n            isVisible: () => !!this.watchExpression && this.watchExpression.supportCopyValue\n        });\n        registry.registerCommand(DebugCommands.COLLAPSE_ALL_WATCH_EXPRESSIONS, {\n            execute: widget => {\n                if (widget instanceof DebugWatchWidget) {\n                    const root = widget.model.root;\n                    widget.model.collapseAll(CompositeTreeNode.is(root) ? root : undefined);\n                }\n            },\n            isEnabled: widget => widget instanceof DebugWatchWidget,\n            isVisible: widget => widget instanceof DebugWatchWidget\n        });\n        registry.registerCommand(DebugCommands.REMOVE_WATCH_EXPRESSION, {\n            execute: () => {\n                const { watch, watchExpression } = this;\n                if (watch && watchExpression) {\n                    watch.viewModel.removeWatchExpression(watchExpression);\n                }\n            },\n            isEnabled: () => !!this.watchExpression,\n            isVisible: () => !!this.watchExpression\n        });\n        registry.registerCommand(DebugCommands.REMOVE_ALL_WATCH_EXPRESSIONS, {\n            execute: widget => {\n                if (widget instanceof Widget) {\n                    if (widget instanceof DebugWatchWidget) {\n                        widget.viewModel.removeWatchExpressions();\n                    }\n                } else if (this.watch) {\n                    this.watch.viewModel.removeWatchExpressions();\n                }\n            },\n            isEnabled: widget => widget instanceof Widget ? widget instanceof DebugWatchWidget : !!this.watch,\n            isVisible: widget => widget instanceof Widget ? widget instanceof DebugWatchWidget : !!this.watch\n        });\n    }\n\n    override registerKeybindings(keybindings: KeybindingRegistry): void {\n        super.registerKeybindings(keybindings);\n        keybindings.registerKeybinding({\n            command: DebugCommands.START.id,\n            keybinding: 'f5'\n        });\n        keybindings.registerKeybinding({\n            command: DebugCommands.START_NO_DEBUG.id,\n            keybinding: 'ctrl+f5'\n        });\n        keybindings.registerKeybinding({\n            command: DebugCommands.STOP.id,\n            keybinding: 'shift+f5',\n            when: 'inDebugMode'\n        });\n\n        keybindings.registerKeybinding({\n            command: DebugCommands.RESTART.id,\n            keybinding: 'shift+ctrlcmd+f5',\n            when: 'inDebugMode'\n        });\n        keybindings.registerKeybinding({\n            command: DebugCommands.STEP_OVER.id,\n            keybinding: 'f10',\n            when: 'inDebugMode'\n        });\n        keybindings.registerKeybinding({\n            command: DebugCommands.STEP_INTO.id,\n            keybinding: 'f11',\n            when: 'inDebugMode'\n        });\n        keybindings.registerKeybinding({\n            command: DebugCommands.STEP_OUT.id,\n            keybinding: 'shift+f11',\n            when: 'inDebugMode'\n        });\n        keybindings.registerKeybinding({\n            command: DebugCommands.CONTINUE.id,\n            keybinding: 'f5',\n            when: 'inDebugMode'\n        });\n        keybindings.registerKeybinding({\n            command: DebugCommands.PAUSE.id,\n            keybinding: 'f6',\n            when: 'inDebugMode'\n        });\n\n        keybindings.registerKeybinding({\n            command: DebugCommands.TOGGLE_BREAKPOINT.id,\n            keybinding: 'f9',\n            when: 'editorTextFocus'\n        });\n        keybindings.registerKeybinding({\n            command: DebugCommands.INLINE_BREAKPOINT.id,\n            keybinding: 'shift+f9',\n            when: 'editorTextFocus'\n        });\n\n        keybindings.registerKeybinding({\n            command: DebugBreakpointWidgetCommands.ACCEPT.id,\n            keybinding: 'enter',\n            when: 'breakpointWidgetFocus'\n        });\n        keybindings.registerKeybinding({\n            command: DebugBreakpointWidgetCommands.CLOSE.id,\n            keybinding: 'esc',\n            when: 'isBreakpointWidgetVisible || breakpointWidgetFocus'\n        });\n    }\n\n    registerToolbarItems(toolbar: TabBarToolbarRegistry): void {\n        const onDidChangeToggleBreakpointsEnabled = new Emitter<void>();\n        const toggleBreakpointsEnabled: Mutable<TabBarToolbarItem> = {\n            id: DebugCommands.TOGGLE_BREAKPOINTS_ENABLED.id,\n            command: DebugCommands.TOGGLE_BREAKPOINTS_ENABLED.id,\n            icon: codicon('activate-breakpoints'),\n            onDidChange: onDidChangeToggleBreakpointsEnabled.event,\n            priority: 1\n        };\n        const updateToggleBreakpointsEnabled = () => {\n            const activateBreakpoints = nls.localizeByDefault('Enable All Breakpoints');\n            const deactivateBreakpoints = nls.localizeByDefault('Disable All Breakpoints');\n            const tooltip = this.breakpointManager.breakpointsEnabled ? deactivateBreakpoints : activateBreakpoints;\n            if (toggleBreakpointsEnabled.tooltip !== tooltip) {\n                toggleBreakpointsEnabled.tooltip = tooltip;\n                onDidChangeToggleBreakpointsEnabled.fire(undefined);\n            }\n        };\n        toolbar.registerItem({\n            id: DebugCommands.ADD_FUNCTION_BREAKPOINT.id,\n            command: DebugCommands.ADD_FUNCTION_BREAKPOINT.id,\n            icon: codicon('add'),\n            tooltip: DebugCommands.ADD_FUNCTION_BREAKPOINT.label\n        });\n        updateToggleBreakpointsEnabled();\n        this.breakpointManager.onDidChangeBreakpoints(updateToggleBreakpointsEnabled);\n        toolbar.registerItem(toggleBreakpointsEnabled);\n        toolbar.registerItem({\n            id: DebugCommands.REMOVE_ALL_BREAKPOINTS.id,\n            command: DebugCommands.REMOVE_ALL_BREAKPOINTS.id,\n            icon: codicon('close-all'),\n            priority: 2\n        });\n\n        toolbar.registerItem({\n            id: DebugCommands.ADD_WATCH_EXPRESSION.id,\n            command: DebugCommands.ADD_WATCH_EXPRESSION.id,\n            icon: codicon('add'),\n            tooltip: DebugCommands.ADD_WATCH_EXPRESSION.label\n        });\n        toolbar.registerItem({\n            id: DebugCommands.COLLAPSE_ALL_WATCH_EXPRESSIONS.id,\n            command: DebugCommands.COLLAPSE_ALL_WATCH_EXPRESSIONS.id,\n            icon: codicon('collapse-all'),\n            tooltip: DebugCommands.COLLAPSE_ALL_WATCH_EXPRESSIONS.label,\n            priority: 1\n        });\n        toolbar.registerItem({\n            id: DebugCommands.REMOVE_ALL_WATCH_EXPRESSIONS.id,\n            command: DebugCommands.REMOVE_ALL_WATCH_EXPRESSIONS.id,\n            icon: codicon('close-all'),\n            tooltip: DebugCommands.REMOVE_ALL_WATCH_EXPRESSIONS.label,\n            priority: 2\n        });\n    }\n\n    protected async openSession(\n        session: DebugSession,\n        options?: {\n            reveal?: boolean;\n        }\n    ): Promise<DebugWidget | DebugSessionWidget> {\n        const { reveal } = {\n            reveal: true,\n            ...options\n        };\n        const debugWidget = await this.openView({ reveal });\n        debugWidget.sessionManager.currentSession = session;\n        return debugWidget['sessionWidget'];\n    }\n\n    protected revealSession(session: DebugSession): DebugSessionWidget | undefined {\n        const widget = this.tryGetWidget()?.['sessionWidget'];\n        if (widget) {\n            this.shell.revealWidget(widget.id);\n        }\n        return widget;\n    }\n\n    async start(noDebug?: boolean, debugSessionOptions?: DebugSessionOptions): Promise<void> {\n        let current = debugSessionOptions ? debugSessionOptions : this.configurations.current;\n        // If no configurations are currently present, create the `launch.json` and prompt users to select the config.\n        if (!current) {\n            await this.configurations.addConfiguration();\n            return;\n        }\n\n        if (noDebug !== undefined) {\n            if (current.configuration) {\n                current = {\n                    ...current,\n                    configuration: {\n                        ...current.configuration,\n                        noDebug\n                    }\n                };\n            } else {\n                current = {\n                    ...current,\n                    noDebug\n                };\n            }\n        }\n\n        await this.manager.start(current);\n    }\n\n    get threads(): DebugThreadsWidget | undefined {\n        const { currentWidget } = this.shell;\n        return currentWidget instanceof DebugThreadsWidget && currentWidget || undefined;\n    }\n    get selectedSession(): DebugSession | undefined {\n        const { threads } = this;\n        return threads && threads.selectedElement instanceof DebugSession && threads.selectedElement || undefined;\n    }\n    get selectedThread(): DebugThread | undefined {\n        const { threads } = this;\n        return threads && threads.selectedElement instanceof DebugThread && threads.selectedElement || undefined;\n    }\n\n    get frames(): DebugStackFramesWidget | undefined {\n        const { currentWidget } = this.shell;\n        return currentWidget instanceof DebugStackFramesWidget && currentWidget || undefined;\n    }\n    get selectedFrame(): DebugStackFrame | undefined {\n        const { frames } = this;\n        return frames && frames.selectedElement instanceof DebugStackFrame && frames.selectedElement || undefined;\n    }\n\n    get breakpoints(): DebugBreakpointsWidget | undefined {\n        const { currentWidget } = this.shell;\n        return currentWidget instanceof DebugBreakpointsWidget && currentWidget || undefined;\n    }\n    get selectedAnyBreakpoint(): DebugBreakpoint | undefined {\n        const { breakpoints } = this;\n        const selectedElement = breakpoints && breakpoints.selectedElement;\n        return selectedElement instanceof DebugBreakpoint ? selectedElement : undefined;\n    }\n    get selectedBreakpoint(): DebugSourceBreakpoint | undefined {\n        const breakpoint = this.selectedAnyBreakpoint;\n        return breakpoint && breakpoint instanceof DebugSourceBreakpoint && !breakpoint.logMessage ? breakpoint : undefined;\n    }\n    get selectedLogpoint(): DebugSourceBreakpoint | undefined {\n        const breakpoint = this.selectedAnyBreakpoint;\n        return breakpoint && breakpoint instanceof DebugSourceBreakpoint && !!breakpoint.logMessage ? breakpoint : undefined;\n    }\n    get selectedFunctionBreakpoint(): DebugFunctionBreakpoint | undefined {\n        const breakpoint = this.selectedAnyBreakpoint;\n        return breakpoint && breakpoint instanceof DebugFunctionBreakpoint ? breakpoint : undefined;\n    }\n    get selectedInstructionBreakpoint(): DebugInstructionBreakpoint | undefined {\n        if (this.selectedAnyBreakpoint instanceof DebugInstructionBreakpoint) {\n            return this.selectedAnyBreakpoint;\n        }\n    }\n    get selectedExceptionBreakpoint(): DebugExceptionBreakpoint | undefined {\n        const { breakpoints } = this;\n        const selectedElement = breakpoints && breakpoints.selectedElement;\n        return selectedElement instanceof DebugExceptionBreakpoint ? selectedElement : undefined;\n    }\n\n    get selectedSettableBreakpoint(): DebugFunctionBreakpoint | DebugInstructionBreakpoint | DebugSourceBreakpoint | undefined {\n        const selected = this.selectedAnyBreakpoint;\n        if (selected instanceof DebugFunctionBreakpoint || selected instanceof DebugInstructionBreakpoint || selected instanceof DebugSourceBreakpoint) {\n            return selected;\n        }\n    }\n\n    get variables(): DebugVariablesWidget | undefined {\n        const { currentWidget } = this.shell;\n        return currentWidget instanceof DebugVariablesWidget && currentWidget || undefined;\n    }\n    get selectedVariable(): DebugVariable | undefined {\n        const { variables } = this;\n        return variables && variables.selectedElement instanceof DebugVariable && variables.selectedElement || undefined;\n    }\n\n    get watch(): DebugWatchWidget | undefined {\n        const { currentWidget } = this.shell;\n        return currentWidget instanceof DebugWatchWidget && currentWidget || undefined;\n    }\n    get watchExpression(): DebugWatchExpression | undefined {\n        const { watch } = this;\n        return watch && watch.selectedElement instanceof DebugWatchExpression && watch.selectedElement || undefined;\n    }\n\n    protected isPosition(position: unknown): boolean {\n        return monaco.Position.isIPosition(position);\n    }\n\n    protected asPosition(position: monaco.IPosition): monaco.Position {\n        return monaco.Position.lift(position);\n    }\n\n    registerColors(colors: ColorRegistry): void {\n        colors.register(\n            // Debug colors should be aligned with https://code.visualstudio.com/api/references/theme-color#debug-colors\n            {\n                id: 'editor.stackFrameHighlightBackground',\n                defaults: {\n                    dark: '#ffff0033',\n                    light: '#ffff6673',\n                    hcDark: '#fff600',\n                    hcLight: '#ffff6673'\n                }, description: 'Background color for the highlight of line at the top stack frame position.'\n            },\n            {\n                id: 'editor.focusedStackFrameHighlightBackground',\n                defaults: {\n                    dark: '#7abd7a4d',\n                    light: '#cee7ce73',\n                    hcDark: '#cee7ce',\n                    hcLight: '#cee7ce73'\n                }, description: 'Background color for the highlight of line at focused stack frame position.'\n            },\n            // Status bar colors should be aligned with debugging colors from https://code.visualstudio.com/api/references/theme-color#status-bar-colors\n            {\n                id: 'statusBar.debuggingBackground', defaults: {\n                    dark: '#CC6633',\n                    light: '#CC6633',\n                    hcDark: '#CC6633',\n                    hcLight: '#B5200D'\n                }, description: 'Status bar background color when a program is being debugged. The status bar is shown in the bottom of the window'\n            },\n            {\n                id: 'statusBar.debuggingForeground', defaults: {\n                    dark: 'statusBar.foreground',\n                    light: 'statusBar.foreground',\n                    hcDark: 'statusBar.foreground',\n                    hcLight: 'statusBar.foreground'\n                }, description: 'Status bar foreground color when a program is being debugged. The status bar is shown in the bottom of the window'\n            },\n            {\n                id: 'statusBar.debuggingBorder', defaults: {\n                    dark: 'statusBar.border',\n                    light: 'statusBar.border',\n                    hcDark: 'statusBar.border',\n                    hcLight: 'statusBar.border'\n                }, description: 'Status bar border color separating to the sidebar and editor when a program is being debugged. The status bar is shown in the bottom of the window'\n            },\n            // Debug Exception Widget colors should be aligned with\n            // https://github.com/microsoft/vscode/blob/ff5f581425da6230b6f9216ecf19abf6c9d285a6/src/vs/workbench/contrib/debug/browser/exceptionWidget.ts#L23\n            {\n                id: 'debugExceptionWidget.border', defaults: {\n                    dark: '#a31515',\n                    light: '#a31515',\n                    hcDark: '#a31515',\n                    hcLight: '#a31515'\n                }, description: 'Exception widget border color.',\n            },\n            {\n                id: 'debugExceptionWidget.background', defaults: {\n                    dark: '#420b0d',\n                    light: '#f1dfde',\n                    hcDark: '#420b0d',\n                    hcLight: '#f1dfde'\n                }, description: 'Exception widget background color.'\n            },\n            // Debug Icon colors should be aligned with\n            // https://code.visualstudio.com/api/references/theme-color#debug-icons-colors\n            {\n                id: 'debugIcon.breakpointForeground', defaults: {\n                    dark: '#E51400',\n                    light: '#E51400',\n                    hcDark: '#E51400',\n                    hcLight: '#E51400'\n                },\n                description: 'Icon color for breakpoints.'\n            },\n            {\n                id: 'debugIcon.breakpointDisabledForeground', defaults: {\n                    dark: '#848484',\n                    light: '#848484',\n                    hcDark: '#848484',\n                    hcLight: '#848484'\n                },\n                description: 'Icon color for disabled breakpoints.'\n            },\n            {\n                id: 'debugIcon.breakpointUnverifiedForeground', defaults: {\n                    dark: '#848484',\n                    light: '#848484',\n                    hcDark: '#848484',\n                    hcLight: '#848484'\n                },\n                description: 'Icon color for unverified breakpoints.'\n            },\n            {\n                id: 'debugIcon.breakpointCurrentStackframeForeground', defaults: {\n                    dark: '#FFCC00',\n                    light: '#BE8700',\n                    hcDark: '#FFCC00',\n                    hcLight: '#BE8700'\n                },\n                description: 'Icon color for the current breakpoint stack frame.'\n            },\n            {\n                id: 'debugIcon.breakpointStackframeForeground', defaults: {\n                    dark: '#89D185',\n                    light: '#89D185',\n                    hcDark: '#89D185',\n                    hcLight: '#89D185'\n                },\n                description: 'Icon color for all breakpoint stack frames.'\n            },\n            {\n                id: 'debugIcon.startForeground', defaults: {\n                    dark: '#89D185',\n                    light: '#388A34',\n                    hcDark: '#89D185',\n                    hcLight: '#388A34'\n                }, description: 'Debug toolbar icon for start debugging.'\n            },\n            {\n                id: 'debugIcon.pauseForeground', defaults: {\n                    dark: '#75BEFF',\n                    light: '#007ACC',\n                    hcDark: '#75BEFF',\n                    hcLight: '#007ACC'\n                }, description: 'Debug toolbar icon for pause.'\n            },\n            {\n                id: 'debugIcon.stopForeground', defaults: {\n                    dark: '#F48771',\n                    light: '#A1260D',\n                    hcDark: '#F48771',\n                    hcLight: '#A1260D'\n                }, description: 'Debug toolbar icon for stop.'\n            },\n            {\n                id: 'debugIcon.disconnectForeground', defaults: {\n                    dark: '#F48771',\n                    light: '#A1260D',\n                    hcDark: '#F48771',\n                    hcLight: '#A1260D'\n                }, description: 'Debug toolbar icon for disconnect.'\n            },\n            {\n                id: 'debugIcon.restartForeground', defaults: {\n                    dark: '#89D185',\n                    light: '#388A34',\n                    hcDark: '#89D185',\n                    hcLight: '#388A34'\n                }, description: 'Debug toolbar icon for restart.'\n            },\n            {\n                id: 'debugIcon.stepOverForeground', defaults: {\n                    dark: '#75BEFF',\n                    light: '#007ACC',\n                    hcDark: '#75BEFF',\n                    hcLight: '#007ACC',\n                }, description: 'Debug toolbar icon for step over.'\n            },\n            {\n                id: 'debugIcon.stepIntoForeground', defaults: {\n                    dark: '#75BEFF',\n                    light: '#007ACC',\n                    hcDark: '#75BEFF',\n                    hcLight: '#007ACC'\n                }, description: 'Debug toolbar icon for step into.'\n            },\n            {\n                id: 'debugIcon.stepOutForeground', defaults: {\n                    dark: '#75BEFF',\n                    light: '#007ACC',\n                    hcDark: '#75BEFF',\n                    hcLight: '#007ACC',\n                }, description: 'Debug toolbar icon for step over.'\n            },\n            {\n                id: 'debugIcon.continueForeground', defaults: {\n                    dark: '#75BEFF',\n                    light: '#007ACC',\n                    hcDark: '#75BEFF',\n                    hcLight: '#007ACC'\n                }, description: 'Debug toolbar icon for continue.'\n            },\n            {\n                id: 'debugIcon.stepBackForeground', defaults: {\n                    dark: '#75BEFF',\n                    light: '#007ACC',\n                    hcDark: '#75BEFF',\n                    hcLight: '#007ACC'\n                }, description: 'Debug toolbar icon for step back.'\n            },\n            {\n                id: 'debugConsole.infoForeground', defaults: {\n                    dark: 'editorInfo.foreground',\n                    light: 'editorInfo.foreground',\n                    hcDark: 'foreground',\n                    hcLight: 'foreground'\n                }, description: 'Foreground color for info messages in debug REPL console.'\n            },\n            {\n                id: 'debugConsole.warningForeground', defaults: {\n                    dark: 'editorWarning.foreground',\n                    light: 'editorWarning.foreground',\n                    hcDark: '#008000',\n                    hcLight: 'editorWarning.foreground'\n                },\n                description: 'Foreground color for warning messages in debug REPL console.'\n            },\n            {\n                id: 'debugConsole.errorForeground', defaults: {\n                    dark: 'errorForeground',\n                    light: 'errorForeground',\n                    hcDark: 'errorForeground',\n                    hcLight: 'errorForeground'\n                },\n                description: 'Foreground color for error messages in debug REPL console.',\n            },\n            {\n                id: 'debugConsole.sourceForeground', defaults: {\n                    dark: 'foreground',\n                    light: 'foreground',\n                    hcDark: 'foreground',\n                    hcLight: 'foreground'\n                },\n                description: 'Foreground color for source filenames in debug REPL console.',\n            },\n            {\n                id: 'debugConsoleInputIcon.foreground', defaults: {\n                    dark: 'foreground',\n                    light: 'foreground',\n                    hcDark: 'foreground',\n                    hcLight: 'foreground'\n                },\n                description: 'Foreground color for debug console input marker icon.'\n            }\n        );\n    }\n\n    protected updateStatusBar(): void {\n        if (this.debuggingStatusBar === document.body.classList.contains('theia-mod-debugging')) {\n            return;\n        }\n        document.body.classList.toggle('theia-mod-debugging');\n    }\n\n    protected get debuggingStatusBar(): boolean {\n        if (this.manager.state < DebugState.Running) {\n            return false;\n        }\n\n        const session = this.manager.currentSession;\n        if (session) {\n            if (session.configuration.noDebug) {\n                return false;\n            }\n            if (this.getOption(session, 'suppressDebugStatusbar')) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    protected getOption(session: DebugSession | undefined, option: keyof {\n        [Property in keyof DebugConfiguration]: boolean;\n    }): boolean | undefined {\n        // If session is undefined there will be no option\n        if (!session) {\n            return false;\n        }\n        // If undefined take the value of the parent\n        if (option in session.configuration && session.configuration[option] !== undefined) {\n            return session.configuration[option];\n        }\n\n        return this.getOption(session.parentSession, option);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { JsonSchemaRegisterContext, JsonSchemaContribution } from '@theia/core/lib/browser/json-schema-store';\nimport { InMemoryResources, deepClone, nls } from '@theia/core/lib/common';\nimport { IJSONSchema } from '@theia/core/lib/common/json-schema';\nimport URI from '@theia/core/lib/common/uri';\nimport { DebugService } from '../common/debug-service';\nimport { debugPreferencesSchema } from './debug-preferences';\nimport { inputsSchema } from '@theia/variable-resolver/lib/browser/variable-input-schema';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { defaultCompound } from '../common/debug-compound';\n\n@injectable()\nexport class DebugSchemaUpdater implements JsonSchemaContribution {\n\n    protected readonly uri = new URI(launchSchemaId);\n\n    @inject(InMemoryResources) protected readonly inmemoryResources: InMemoryResources;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(DebugService) protected readonly debug: DebugService;\n\n    @postConstruct()\n    protected init(): void {\n        this.inmemoryResources.add(this.uri, '');\n    }\n\n    registerSchemas(context: JsonSchemaRegisterContext): void {\n        context.registerSchema({\n            fileMatch: ['launch.json'],\n            url: this.uri.toString()\n        });\n        this.workspaceService.updateSchema('launch', { $ref: this.uri.toString() });\n    }\n\n    async update(): Promise<void> {\n        const types = await this.debug.debugTypes();\n        const schema = { ...deepClone(launchSchema) };\n        const items = (<IJSONSchema>schema!.properties!['configurations'].items);\n\n        const attributePromises = types.map(type => this.debug.getSchemaAttributes(type));\n        for (const attributes of await Promise.all(attributePromises)) {\n            for (const attribute of attributes) {\n                const properties: typeof attribute['properties'] = {};\n                for (const key of ['debugViewLocation', 'openDebug', 'internalConsoleOptions']) {\n                    properties[key] = debugPreferencesSchema.properties[`debug.${key}`];\n                }\n                attribute.properties = Object.assign(properties, attribute.properties);\n                items.oneOf!.push(attribute);\n            }\n        }\n        items.defaultSnippets!.push(...await this.debug.getConfigurationSnippets());\n\n        const contents = JSON.stringify(schema);\n        this.inmemoryResources.update(this.uri, contents);\n    }\n}\n\nexport const launchSchemaId = 'vscode://schemas/launch';\nconst launchSchema: IJSONSchema = {\n    $id: launchSchemaId,\n    type: 'object',\n    title: nls.localizeByDefault('Launch'),\n    required: [],\n    default: { version: '0.2.0', configurations: [], compounds: [] },\n    properties: {\n        version: {\n            type: 'string',\n            description: nls.localizeByDefault('Version of this file format.'),\n            default: '0.2.0'\n        },\n        configurations: {\n            type: 'array',\n            description: nls.localizeByDefault('List of configurations. Add new configurations or edit existing ones by using IntelliSense.'),\n            items: {\n                defaultSnippets: [],\n                'type': 'object',\n                oneOf: []\n            }\n        },\n        compounds: {\n            type: 'array',\n            description: nls.localizeByDefault('List of compounds. Each compound references multiple configurations which will get launched together.'),\n            items: {\n                type: 'object',\n                required: ['name', 'configurations'],\n                properties: {\n                    name: {\n                        type: 'string',\n                        description: nls.localizeByDefault('Name of compound. Appears in the launch configuration drop down menu.')\n                    },\n                    configurations: {\n                        type: 'array',\n                        default: [],\n                        items: {\n                            oneOf: [{\n                                type: 'string',\n                                description: nls.localizeByDefault('Please use unique configuration names.')\n                            }, {\n                                type: 'object',\n                                required: ['name'],\n                                properties: {\n                                    name: {\n                                        enum: [],\n                                        description: nls.localizeByDefault('Name of compound. Appears in the launch configuration drop down menu.')\n                                    },\n                                    folder: {\n                                        enum: [],\n                                        description: nls.localizeByDefault('Name of folder in which the compound is located.')\n                                    }\n                                }\n                            }]\n                        },\n                        description: nls.localizeByDefault('Names of configurations that will be started as part of this compound.')\n                    },\n                    stopAll: {\n                        type: 'boolean',\n                        default: false,\n                        description: nls.localizeByDefault('Controls whether manually terminating one session will stop all of the compound sessions.')\n                    },\n                    preLaunchTask: {\n                        type: 'string',\n                        default: '',\n                        description: nls.localizeByDefault('Task to run before any of the compound configurations start.')\n                    }\n                },\n                default: defaultCompound\n            },\n            default: [defaultCompound]\n        },\n        inputs: inputsSchema.definitions!.inputs\n    },\n    allowComments: true,\n    allowTrailingCommas: true,\n};\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as React from '@theia/core/shared/react';\nimport { createRoot, Root } from '@theia/core/shared/react-dom/client';\nimport { DebugProtocol } from '@vscode/debugprotocol';\nimport { injectable, postConstruct, inject } from '@theia/core/shared/inversify';\nimport { Disposable, DisposableCollection, nls } from '@theia/core';\nimport URI from '@theia/core/lib/common/uri';\nimport { MonacoEditorProvider } from '@theia/monaco/lib/browser/monaco-editor-provider';\nimport { MonacoEditorZoneWidget } from '@theia/monaco/lib/browser/monaco-editor-zone-widget';\nimport { MonacoEditor } from '@theia/monaco/lib/browser/monaco-editor';\nimport { DebugEditor } from './debug-editor';\nimport { DebugSourceBreakpoint } from '../model/debug-source-breakpoint';\nimport { Dimension } from '@theia/editor/lib/browser';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { LanguageSelector } from '@theia/monaco-editor-core/esm/vs/editor/common/languageSelector';\nimport { provideSuggestionItems, CompletionOptions } from '@theia/monaco-editor-core/esm/vs/editor/contrib/suggest/browser/suggest';\nimport { IDecorationOptions } from '@theia/monaco-editor-core/esm/vs/editor/common/editorCommon';\nimport { StandaloneCodeEditor } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneCodeEditor';\nimport { CompletionItemKind, CompletionContext } from '@theia/monaco-editor-core/esm/vs/editor/common/languages';\nimport { ILanguageFeaturesService } from '@theia/monaco-editor-core/esm/vs/editor/common/services/languageFeatures';\nimport { StandaloneServices } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneServices';\nimport { TextModel } from '@theia/monaco-editor-core/esm/vs/editor/common/model/textModel';\nimport { SelectComponent, SelectOption } from '@theia/core/lib/browser/widgets/select-component';\n\nexport type ShowDebugBreakpointOptions = DebugSourceBreakpoint | {\n    position: monaco.Position,\n    context: DebugBreakpointWidget.Context\n} | {\n    breakpoint: DebugSourceBreakpoint,\n    context: DebugBreakpointWidget.Context\n};\n\n@injectable()\nexport class DebugBreakpointWidget implements Disposable {\n\n    @inject(DebugEditor)\n    readonly editor: DebugEditor;\n\n    @inject(MonacoEditorProvider)\n    protected readonly editorProvider: MonacoEditorProvider;\n\n    protected selectNode: HTMLDivElement;\n    protected selectNodeRoot: Root;\n\n    protected zone: MonacoEditorZoneWidget;\n\n    protected readonly toDispose = new DisposableCollection();\n\n    protected context: DebugBreakpointWidget.Context = 'condition';\n    protected _values: {\n        [context in DebugBreakpointWidget.Context]?: string\n    } = {};\n    get values(): {\n        [context in DebugBreakpointWidget.Context]?: string\n    } | undefined {\n        if (!this._input) {\n            return undefined;\n        }\n        return {\n            ...this._values,\n            [this.context]: this._input.getControl().getValue()\n        };\n    }\n\n    protected _input: MonacoEditor | undefined;\n    get input(): MonacoEditor | undefined {\n        return this._input;\n    }\n    // eslint-disable-next-line no-null/no-null\n    set inputSize(dimension: Dimension | null) {\n        if (this._input) {\n            if (dimension) {\n                this._input.setSize(dimension);\n            } else {\n                this._input.resizeToFit();\n            }\n        }\n    }\n\n    private readonly selectComponentRef = React.createRef<SelectComponent>();\n\n    @postConstruct()\n    protected init(): void {\n        this.doInit();\n    }\n\n    protected async doInit(): Promise<void> {\n        this.toDispose.push(this.zone = new MonacoEditorZoneWidget(this.editor.getControl()));\n        this.zone.containerNode.classList.add('theia-debug-breakpoint-widget');\n\n        const selectNode = this.selectNode = document.createElement('div');\n        selectNode.classList.add('theia-debug-breakpoint-select');\n        this.zone.containerNode.appendChild(selectNode);\n        this.selectNodeRoot = createRoot(this.selectNode);\n        this.toDispose.push(Disposable.create(() => this.selectNodeRoot.unmount()));\n\n        const inputNode = document.createElement('div');\n        inputNode.classList.add('theia-debug-breakpoint-input');\n        this.zone.containerNode.appendChild(inputNode);\n\n        const input = this._input = await this.createInput(inputNode);\n        if (this.toDispose.disposed) {\n            input.dispose();\n            return;\n        }\n        this.toDispose.push(input);\n        this.toDispose.push((monaco.languages.registerCompletionItemProvider as (languageId: LanguageSelector, provider: monaco.languages.CompletionItemProvider) => Disposable)\n            ({ scheme: input.uri.scheme }, {\n                provideCompletionItems: async (model, position, context, token): Promise<monaco.languages.CompletionList> => {\n                    const suggestions: monaco.languages.CompletionItem[] = [];\n                    if ((this.context === 'condition' || this.context === 'logMessage')\n                        && input.uri.toString() === model.uri.toString()) {\n                        const editor = this.editor.getControl();\n                        const completions = await provideSuggestionItems(\n                            StandaloneServices.get(ILanguageFeaturesService).completionProvider,\n                            editor.getModel()! as unknown as TextModel,\n                            new monaco.Position(editor.getPosition()!.lineNumber, 1),\n                            new CompletionOptions(undefined, new Set<CompletionItemKind>().add(CompletionItemKind.Snippet)),\n                            context as unknown as CompletionContext, token);\n                        let overwriteBefore = 0;\n                        if (this.context === 'condition') {\n                            overwriteBefore = position.column - 1;\n                        } else {\n                            // Inside the curly brackets, need to count how many useful characters are behind the position so they would all be taken into account\n                            const value = editor.getModel()!.getValue();\n                            while ((position.column - 2 - overwriteBefore >= 0)\n                                && value[position.column - 2 - overwriteBefore] !== '{' && value[position.column - 2 - overwriteBefore] !== ' ') {\n                                overwriteBefore++;\n                            }\n                        }\n                        for (const { completion } of completions.items) {\n                            completion.range = monaco.Range.fromPositions(position.delta(0, -overwriteBefore), position);\n                            suggestions.push(completion as unknown as monaco.languages.CompletionItem);\n                        }\n                    }\n                    return { suggestions };\n                }\n            }));\n        this.toDispose.push(this.zone.onDidLayoutChange(dimension => this.layout(dimension)));\n        this.toDispose.push(input.getControl().onDidChangeModelContent(() => {\n            const heightInLines = input.getControl().getModel()!.getLineCount() + 1;\n            this.zone.layout(heightInLines);\n            this.updatePlaceholder();\n        }));\n        this._input.getControl().createContextKey<boolean>('breakpointWidgetFocus', true);\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    get position(): monaco.Position | undefined {\n        const options = this.zone.options;\n        return options && new monaco.Position(options.afterLineNumber, options.afterColumn || -1);\n    }\n\n    show(options: ShowDebugBreakpointOptions): void {\n        if (!this._input) {\n            return;\n        }\n        const breakpoint = options instanceof DebugSourceBreakpoint ? options : 'breakpoint' in options ? options.breakpoint : undefined;\n        this._values = breakpoint ? {\n            condition: breakpoint.condition,\n            hitCondition: breakpoint.hitCondition,\n            logMessage: breakpoint.logMessage\n        } : {};\n        if (options instanceof DebugSourceBreakpoint) {\n            if (options.logMessage) {\n                this.context = 'logMessage';\n            } else if (options.hitCondition && !options.condition) {\n                this.context = 'hitCondition';\n            } else {\n                this.context = 'condition';\n            }\n        } else {\n            this.context = options.context;\n        }\n        this.render();\n        const position = 'position' in options ? options.position : undefined;\n        const afterLineNumber = breakpoint ? breakpoint.line : position!.lineNumber;\n        const afterColumn = breakpoint ? breakpoint.column : position!.column;\n        const editor = this._input.getControl();\n        const heightInLines = editor.getModel()!.getLineCount() + 1;\n        this.zone.show({ afterLineNumber, afterColumn, heightInLines, frameWidth: 1 });\n        editor.setPosition(editor.getModel()!.getPositionAt(editor.getModel()!.getValueLength()));\n        this._input.focus();\n        this.editor.getControl().createContextKey<boolean>('isBreakpointWidgetVisible', true);\n    }\n\n    hide(): void {\n        this.zone.hide();\n        this.editor.getControl().createContextKey<boolean>('isBreakpointWidgetVisible', false);\n        this.editor.focus();\n    }\n\n    protected layout(dimension: monaco.editor.IDimension): void {\n        if (this._input) {\n            this._input.getControl().layout(dimension);\n        }\n    }\n\n    protected createInput(node: HTMLElement): Promise<MonacoEditor> {\n        return this.editorProvider.createInline(new URI().withScheme('breakpointinput').withPath(this.editor.getControl().getId()), node, {\n            autoSizing: false\n        });\n    }\n\n    protected render(): void {\n        if (this._input) {\n            this._input.getControl().setValue(this._values[this.context] || '');\n        }\n        const selectComponent = this.selectComponentRef.current;\n        if (selectComponent && selectComponent.value !== this.context) {\n            selectComponent.value = this.context;\n        }\n        this.selectNodeRoot.render(<SelectComponent\n            defaultValue={this.context} onChange={this.updateInput}\n            options={[\n                { value: 'condition', label: nls.localizeByDefault('Expression') },\n                { value: 'hitCondition', label: nls.localizeByDefault('Hit Count') },\n                { value: 'logMessage', label: nls.localizeByDefault('Log Message') },\n            ]}\n            ref={this.selectComponentRef}\n        />);\n    }\n\n    protected readonly updateInput = (option: SelectOption) => {\n        if (this._input) {\n            this._values[this.context] = this._input.getControl().getValue();\n        }\n        this.context = option.value as DebugBreakpointWidget.Context;\n        this.render();\n        if (this._input) {\n            this._input.focus();\n        }\n    };\n\n    static PLACEHOLDER_DECORATION = 'placeholderDecoration';\n    protected updatePlaceholder(): void {\n        if (!this._input) {\n            return;\n        }\n        const value = this._input.getControl().getValue();\n        const decorations: IDecorationOptions[] = !!value ? [] : [{\n            range: {\n                startLineNumber: 0,\n                endLineNumber: 0,\n                startColumn: 0,\n                endColumn: 1\n            },\n            renderOptions: {\n                after: {\n                    contentText: this.placeholder,\n                    opacity: '0.4'\n                }\n            }\n        }];\n        (this._input.getControl() as unknown as StandaloneCodeEditor)\n            .setDecorationsByType('Debug breakpoint placeholder', DebugBreakpointWidget.PLACEHOLDER_DECORATION, decorations);\n    }\n    protected get placeholder(): string {\n        const acceptString = 'Enter';\n        const closeString = 'Escape';\n        if (this.context === 'logMessage') {\n            return nls.localizeByDefault(\n                \"Message to log when breakpoint is hit. Expressions within {} are interpolated. '{0}' to accept, '{1}' to cancel.\", acceptString, closeString\n            );\n        }\n        if (this.context === 'hitCondition') {\n            return nls.localizeByDefault(\"Break when hit count condition is met. '{0}' to accept, '{1}' to cancel.\", acceptString, closeString);\n        }\n        return nls.localizeByDefault(\"Break when expression evaluates to true. '{0}' to accept, '{1}' to cancel.\", acceptString, closeString);\n    }\n\n}\nexport namespace DebugBreakpointWidget {\n    export type Context = keyof Pick<DebugProtocol.SourceBreakpoint, 'condition' | 'hitCondition' | 'logMessage'>;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport debounce = require('p-debounce');\nimport { injectable, inject, postConstruct, interfaces, Container } from '@theia/core/shared/inversify';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { IConfigurationService } from '@theia/monaco-editor-core/esm/vs/platform/configuration/common/configuration';\nimport { StandaloneCodeEditor } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneCodeEditor';\nimport { IDecorationOptions } from '@theia/monaco-editor-core/esm/vs/editor/common/editorCommon';\nimport { IEditorHoverOptions } from '@theia/monaco-editor-core/esm/vs/editor/common/config/editorOptions';\nimport URI from '@theia/core/lib/common/uri';\nimport { Disposable, DisposableCollection, MenuPath, isOSX } from '@theia/core';\nimport { ContextMenuRenderer } from '@theia/core/lib/browser';\nimport { MonacoConfigurationService } from '@theia/monaco/lib/browser/monaco-frontend-module';\nimport { BreakpointManager, SourceBreakpointsChangeEvent } from '../breakpoint/breakpoint-manager';\nimport { DebugSourceBreakpoint } from '../model/debug-source-breakpoint';\nimport { DebugSessionManager } from '../debug-session-manager';\nimport { SourceBreakpoint } from '../breakpoint/breakpoint-marker';\nimport { DebugEditor } from './debug-editor';\nimport { DebugHoverWidget, createDebugHoverWidgetContainer } from './debug-hover-widget';\nimport { DebugBreakpointWidget } from './debug-breakpoint-widget';\nimport { DebugExceptionWidget } from './debug-exception-widget';\nimport { DebugProtocol } from '@vscode/debugprotocol';\nimport { DebugInlineValueDecorator, INLINE_VALUE_DECORATION_KEY } from './debug-inline-value-decorator';\n\nexport const DebugEditorModelFactory = Symbol('DebugEditorModelFactory');\nexport type DebugEditorModelFactory = (editor: DebugEditor) => DebugEditorModel;\n\n@injectable()\nexport class DebugEditorModel implements Disposable {\n\n    static createContainer(parent: interfaces.Container, editor: DebugEditor): Container {\n        const child = createDebugHoverWidgetContainer(parent, editor);\n        child.bind(DebugEditorModel).toSelf();\n        child.bind(DebugBreakpointWidget).toSelf();\n        child.bind(DebugExceptionWidget).toSelf();\n        return child;\n    }\n    static createModel(parent: interfaces.Container, editor: DebugEditor): DebugEditorModel {\n        return DebugEditorModel.createContainer(parent, editor).get(DebugEditorModel);\n    }\n\n    static CONTEXT_MENU: MenuPath = ['debug-editor-context-menu'];\n\n    protected readonly toDispose = new DisposableCollection();\n    protected readonly toDisposeOnUpdate = new DisposableCollection();\n\n    protected uri: URI;\n\n    protected breakpointDecorations: string[] = [];\n    protected breakpointRanges = new Map<string, [monaco.Range, SourceBreakpoint]>();\n\n    protected currentBreakpointDecorations: string[] = [];\n\n    protected editorDecorations: string[] = [];\n    protected topFrameRange: monaco.Range | undefined;\n\n    protected updatingDecorations = false;\n\n    @inject(DebugHoverWidget)\n    readonly hover: DebugHoverWidget;\n\n    @inject(DebugEditor)\n    readonly editor: DebugEditor;\n\n    @inject(BreakpointManager)\n    readonly breakpoints: BreakpointManager;\n\n    @inject(DebugSessionManager)\n    readonly sessions: DebugSessionManager;\n\n    @inject(ContextMenuRenderer)\n    readonly contextMenu: ContextMenuRenderer;\n\n    @inject(DebugBreakpointWidget)\n    readonly breakpointWidget: DebugBreakpointWidget;\n\n    @inject(DebugExceptionWidget)\n    readonly exceptionWidget: DebugExceptionWidget;\n\n    @inject(DebugInlineValueDecorator)\n    readonly inlineValueDecorator: DebugInlineValueDecorator;\n\n    @inject(MonacoConfigurationService)\n    readonly configurationService: IConfigurationService;\n\n    @inject(DebugSessionManager)\n    protected readonly sessionManager: DebugSessionManager;\n\n    @postConstruct()\n    protected init(): void {\n        this.uri = new URI(this.editor.getControl().getModel()!.uri.toString());\n        this.toDispose.pushAll([\n            this.hover,\n            this.breakpointWidget,\n            this.exceptionWidget,\n            this.editor.getControl().onMouseDown(event => this.handleMouseDown(event)),\n            this.editor.getControl().onMouseMove(event => this.handleMouseMove(event)),\n            this.editor.getControl().onMouseLeave(event => this.handleMouseLeave(event)),\n            this.editor.getControl().onKeyDown(() => this.hover.hide({ immediate: false })),\n            this.editor.getControl().onDidChangeModelContent(() => this.update()),\n            this.editor.getControl().getModel()!.onDidChangeDecorations(() => this.updateBreakpoints()),\n            this.editor.onDidResize(e => this.breakpointWidget.inputSize = e),\n            this.sessions.onDidChange(() => this.update()),\n            this.toDisposeOnUpdate,\n            this.sessionManager.onDidChangeBreakpoints(({ session, uri }) => {\n                if ((!session || session === this.sessionManager.currentSession) && uri.isEqual(this.uri)) {\n                    this.render();\n                }\n            }),\n            this.breakpoints.onDidChangeBreakpoints(event => this.closeBreakpointIfAffected(event)),\n        ]);\n        this.update();\n        this.render();\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    protected readonly update = debounce(async () => {\n        if (this.toDispose.disposed) {\n            return;\n        }\n        this.toDisposeOnUpdate.dispose();\n        this.toggleExceptionWidget();\n        await this.updateEditorDecorations();\n        this.updateEditorHover();\n    }, 100);\n\n    /**\n     * To disable the default editor-contribution hover from Code when\n     * the editor has the `currentFrame`. Otherwise, both `textdocument/hover`\n     * and the debug hovers are visible at the same time when hovering over a symbol.\n     */\n    protected async updateEditorHover(): Promise<void> {\n        if (this.sessions.isCurrentEditorFrame(this.uri)) {\n            const codeEditor = this.editor.getControl();\n            codeEditor.updateOptions({ hover: { enabled: false } });\n            this.toDisposeOnUpdate.push(Disposable.create(() => {\n                const model = codeEditor.getModel()!;\n                const overrides = {\n                    resource: model.uri,\n                    overrideIdentifier: model.getLanguageId(),\n                };\n                const { enabled, delay, sticky } = this.configurationService.getValue<IEditorHoverOptions>('editor.hover', overrides);\n                codeEditor.updateOptions({\n                    hover: {\n                        enabled,\n                        delay,\n                        sticky\n                    }\n                });\n            }));\n        }\n    }\n\n    protected async updateEditorDecorations(): Promise<void> {\n        const [newFrameDecorations, inlineValueDecorations] = await Promise.all([\n            this.createFrameDecorations(),\n            this.createInlineValueDecorations()\n        ]);\n        const codeEditor = this.editor.getControl() as unknown as StandaloneCodeEditor;\n        codeEditor.removeDecorations([INLINE_VALUE_DECORATION_KEY]);\n        codeEditor.setDecorationsByType('Inline debug decorations', INLINE_VALUE_DECORATION_KEY, inlineValueDecorations);\n        this.editorDecorations = this.deltaDecorations(this.editorDecorations, newFrameDecorations);\n    }\n\n    protected async createInlineValueDecorations(): Promise<IDecorationOptions[]> {\n        if (!this.sessions.isCurrentEditorFrame(this.uri)) {\n            return [];\n        }\n        const { currentFrame } = this.sessions;\n        return this.inlineValueDecorator.calculateDecorations(this, currentFrame);\n    }\n\n    protected createFrameDecorations(): monaco.editor.IModelDeltaDecoration[] {\n        const { currentFrame, topFrame } = this.sessions;\n        if (!currentFrame) {\n            return [];\n        }\n\n        if (!this.sessions.isCurrentEditorFrame(this.uri)) {\n            return [];\n        }\n\n        const decorations: monaco.editor.IModelDeltaDecoration[] = [];\n        const columnUntilEOLRange = new monaco.Range(currentFrame.raw.line, currentFrame.raw.column, currentFrame.raw.line, 1 << 30);\n        const range = new monaco.Range(currentFrame.raw.line, currentFrame.raw.column, currentFrame.raw.line, currentFrame.raw.column + 1);\n\n        if (topFrame === currentFrame) {\n            decorations.push({\n                options: DebugEditorModel.TOP_STACK_FRAME_MARGIN,\n                range\n            });\n            decorations.push({\n                options: DebugEditorModel.TOP_STACK_FRAME_DECORATION,\n                range: columnUntilEOLRange\n            });\n            const { topFrameRange } = this;\n            if (topFrameRange && topFrameRange.startLineNumber === currentFrame.raw.line && topFrameRange.startColumn !== currentFrame.raw.column) {\n                decorations.push({\n                    options: DebugEditorModel.TOP_STACK_FRAME_INLINE_DECORATION,\n                    range: columnUntilEOLRange\n                });\n            }\n            this.topFrameRange = columnUntilEOLRange;\n        } else {\n            decorations.push({\n                options: DebugEditorModel.FOCUSED_STACK_FRAME_MARGIN,\n                range\n            });\n            decorations.push({\n                options: DebugEditorModel.FOCUSED_STACK_FRAME_DECORATION,\n                range: columnUntilEOLRange\n            });\n        }\n        return decorations;\n    }\n\n    protected async toggleExceptionWidget(): Promise<void> {\n        const { currentFrame } = this.sessions;\n        if (!currentFrame) {\n            return;\n        }\n        if (!this.sessions.isCurrentEditorFrame(this.uri)) {\n            this.exceptionWidget.hide();\n            return;\n        }\n        const info = await currentFrame.thread.getExceptionInfo();\n        if (!info) {\n            this.exceptionWidget.hide();\n            return;\n        }\n        this.exceptionWidget.show({\n            info,\n            lineNumber: currentFrame.raw.line,\n            column: currentFrame.raw.column\n        });\n    }\n\n    render(): void {\n        this.renderBreakpoints();\n        this.renderCurrentBreakpoints();\n    }\n    protected renderBreakpoints(): void {\n        const breakpoints = this.breakpoints.getBreakpoints(this.uri);\n        const decorations = this.createBreakpointDecorations(breakpoints);\n        this.breakpointDecorations = this.deltaDecorations(this.breakpointDecorations, decorations);\n        this.updateBreakpointRanges(breakpoints);\n    }\n    protected createBreakpointDecorations(breakpoints: SourceBreakpoint[]): monaco.editor.IModelDeltaDecoration[] {\n        return breakpoints.map(breakpoint => this.createBreakpointDecoration(breakpoint));\n    }\n    protected createBreakpointDecoration(breakpoint: SourceBreakpoint): monaco.editor.IModelDeltaDecoration {\n        const lineNumber = breakpoint.raw.line;\n        const column = breakpoint.raw.column;\n        const range = typeof column === 'number' ? new monaco.Range(lineNumber, column, lineNumber, column + 1) : new monaco.Range(lineNumber, 1, lineNumber, 2);\n        return {\n            range,\n            options: {\n                stickiness: DebugEditorModel.STICKINESS\n            }\n        };\n    }\n\n    protected updateBreakpointRanges(breakpoints: SourceBreakpoint[]): void {\n        this.breakpointRanges.clear();\n        for (let i = 0; i < this.breakpointDecorations.length; i++) {\n            const decoration = this.breakpointDecorations[i];\n            const breakpoint = breakpoints[i];\n            const range = this.editor.getControl().getModel()!.getDecorationRange(decoration)!;\n            this.breakpointRanges.set(decoration, [range, breakpoint]);\n        }\n    }\n\n    protected renderCurrentBreakpoints(): void {\n        const decorations = this.createCurrentBreakpointDecorations();\n        this.currentBreakpointDecorations = this.deltaDecorations(this.currentBreakpointDecorations, decorations);\n    }\n    protected createCurrentBreakpointDecorations(): monaco.editor.IModelDeltaDecoration[] {\n        const breakpoints = this.sessions.getBreakpoints(this.uri);\n        return breakpoints.map(breakpoint => this.createCurrentBreakpointDecoration(breakpoint));\n    }\n    protected createCurrentBreakpointDecoration(breakpoint: DebugSourceBreakpoint): monaco.editor.IModelDeltaDecoration {\n        const lineNumber = breakpoint.line;\n        const column = breakpoint.column;\n        const range = typeof column === 'number' ? new monaco.Range(lineNumber, column, lineNumber, column + 1) : new monaco.Range(lineNumber, 1, lineNumber, 1);\n        const { className, message } = breakpoint.getDecoration();\n        const renderInline = typeof column === 'number' && (column > this.editor.getControl().getModel()!.getLineFirstNonWhitespaceColumn(lineNumber));\n        return {\n            range,\n            options: {\n                glyphMarginClassName: className,\n                glyphMarginHoverMessage: message.map(value => ({ value })),\n                stickiness: DebugEditorModel.STICKINESS,\n                beforeContentClassName: renderInline ? `theia-debug-breakpoint-column codicon ${className}` : undefined\n            }\n        };\n    }\n\n    protected updateBreakpoints(): void {\n        if (this.areBreakpointsAffected()) {\n            const breakpoints = this.createBreakpoints();\n            this.breakpoints.setBreakpoints(this.uri, breakpoints);\n        }\n    }\n    protected areBreakpointsAffected(): boolean {\n        if (this.updatingDecorations || !this.editor.getControl().getModel()) {\n            return false;\n        }\n        for (const decoration of this.breakpointDecorations) {\n            const range = this.editor.getControl().getModel()!.getDecorationRange(decoration);\n            const oldRange = this.breakpointRanges.get(decoration)![0];\n            if (!range || !range.equalsRange(oldRange)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    protected createBreakpoints(): SourceBreakpoint[] {\n        const { uri } = this;\n        const lines = new Set<number>();\n        const breakpoints: SourceBreakpoint[] = [];\n        for (const decoration of this.breakpointDecorations) {\n            const range = this.editor.getControl().getModel()!.getDecorationRange(decoration);\n            if (range && !lines.has(range.startLineNumber)) {\n                const line = range.startLineNumber;\n                const column = range.startColumn;\n                const oldBreakpoint = this.breakpointRanges.get(decoration)?.[1];\n                const isLineBreakpoint = oldBreakpoint?.raw.line !== undefined && oldBreakpoint?.raw.column === undefined;\n                const change = isLineBreakpoint ? { line } : { line, column };\n                const breakpoint = SourceBreakpoint.create(uri, change, oldBreakpoint);\n                breakpoints.push(breakpoint);\n                lines.add(line);\n            }\n        }\n        return breakpoints;\n    }\n\n    get position(): monaco.Position {\n        return this.editor.getControl().getPosition()!;\n    }\n    getBreakpoint(position: monaco.Position = this.position): DebugSourceBreakpoint | undefined {\n        return this.getInlineBreakpoint(position) || this.getLineBreakpoints(position)[0];\n    }\n\n    getInlineBreakpoint(position: monaco.Position = this.position): DebugSourceBreakpoint | undefined {\n        return this.sessions.getInlineBreakpoint(this.uri, position.lineNumber, position.column);\n    }\n\n    protected getLineBreakpoints(position: monaco.Position = this.position): DebugSourceBreakpoint[] {\n        return this.sessions.getLineBreakpoints(this.uri, position.lineNumber);\n    }\n\n    protected addBreakpoint(raw: DebugProtocol.SourceBreakpoint): void {\n        this.breakpoints.addBreakpoint(SourceBreakpoint.create(this.uri, raw));\n    }\n\n    toggleBreakpoint(position: monaco.Position = this.position): void {\n        const { lineNumber } = position;\n        const breakpoints = this.getLineBreakpoints(position);\n        if (breakpoints.length) {\n            for (const breakpoint of breakpoints) {\n                breakpoint.remove();\n            }\n        } else {\n            this.addBreakpoint({ line: lineNumber });\n        }\n    }\n\n    addInlineBreakpoint(): void {\n        const { position } = this;\n        const { lineNumber, column } = position;\n        const breakpoint = this.getInlineBreakpoint(position);\n        if (breakpoint) {\n            return;\n        }\n        this.addBreakpoint({ line: lineNumber, column });\n    }\n\n    acceptBreakpoint(): void {\n        const { position, values } = this.breakpointWidget;\n        if (position && values) {\n            const breakpoint = position.column > 0 ? this.getInlineBreakpoint(position) : this.getLineBreakpoints(position)[0];\n            if (breakpoint) {\n                breakpoint.updateOrigins(values);\n            } else {\n                const { lineNumber } = position;\n                const column = position.column > 0 ? position.column : undefined;\n                this.addBreakpoint({ line: lineNumber, column, ...values });\n            }\n            this.breakpointWidget.hide();\n        }\n    }\n\n    protected handleMouseDown(event: monaco.editor.IEditorMouseEvent): void {\n        if (event.target && event.target.type === monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN) {\n            if (!event.event.rightButton) {\n                this.toggleBreakpoint(event.target.position!);\n            }\n        }\n        this.hintBreakpoint(event);\n    }\n    protected handleMouseMove(event: monaco.editor.IEditorMouseEvent): void {\n        this.showHover(event);\n        this.hintBreakpoint(event);\n    }\n    protected handleMouseLeave(event: monaco.editor.IPartialEditorMouseEvent): void {\n        this.hideHover(event);\n        this.deltaHintDecorations([]);\n    }\n\n    protected hintDecorations: string[] = [];\n    protected hintBreakpoint(event: monaco.editor.IEditorMouseEvent): void {\n        const hintDecorations = this.createHintDecorations(event);\n        this.deltaHintDecorations(hintDecorations);\n    }\n    protected deltaHintDecorations(hintDecorations: monaco.editor.IModelDeltaDecoration[]): void {\n        this.hintDecorations = this.deltaDecorations(this.hintDecorations, hintDecorations);\n    }\n    protected createHintDecorations(event: monaco.editor.IEditorMouseEvent): monaco.editor.IModelDeltaDecoration[] {\n        if (event.target && event.target.type === monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN && event.target.position) {\n            const lineNumber = event.target.position.lineNumber;\n            if (this.getLineBreakpoints(event.target.position).length) {\n                return [];\n            }\n            return [{\n                range: new monaco.Range(lineNumber, 1, lineNumber, 1),\n                options: DebugEditorModel.BREAKPOINT_HINT_DECORATION\n            }];\n        }\n        return [];\n    }\n\n    protected closeBreakpointIfAffected({ uri, removed }: SourceBreakpointsChangeEvent): void {\n        if (!uri.isEqual(this.uri)) {\n            return;\n        }\n        const position = this.breakpointWidget.position;\n        if (!position) {\n            return;\n        }\n        for (const breakpoint of removed) {\n            if (breakpoint.raw.line === position.lineNumber) {\n                this.breakpointWidget.hide();\n                break;\n            }\n        }\n    }\n\n    protected showHover(mouseEvent: monaco.editor.IEditorMouseEvent): void {\n        const targetType = mouseEvent.target.type;\n        const stopKey = isOSX ? 'metaKey' : 'ctrlKey';\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (targetType === monaco.editor.MouseTargetType.CONTENT_WIDGET && mouseEvent.target.detail === this.hover.getId() && !(<any>mouseEvent.event)[stopKey]) {\n            // mouse moved on top of debug hover widget\n            return;\n        }\n        if (targetType === monaco.editor.MouseTargetType.CONTENT_TEXT) {\n            this.hover.show({\n                selection: mouseEvent.target.range!,\n                immediate: false\n            });\n        } else {\n            this.hover.hide({ immediate: false });\n        }\n    }\n    protected hideHover({ event }: monaco.editor.IPartialEditorMouseEvent): void {\n        const rect = this.hover.getDomNode().getBoundingClientRect();\n        if (event.posx < rect.left || event.posx > rect.right || event.posy < rect.top || event.posy > rect.bottom) {\n            this.hover.hide({ immediate: false });\n        }\n    }\n\n    protected deltaDecorations(oldDecorations: string[], newDecorations: monaco.editor.IModelDeltaDecoration[]): string[] {\n        this.updatingDecorations = true;\n        try {\n            return this.editor.getControl().deltaDecorations(oldDecorations, newDecorations);\n        } finally {\n            this.updatingDecorations = false;\n        }\n    }\n\n    static STICKINESS = monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges;\n\n    static BREAKPOINT_HINT_DECORATION: monaco.editor.IModelDecorationOptions = {\n        glyphMarginClassName: 'codicon-debug-hint',\n        stickiness: DebugEditorModel.STICKINESS\n    };\n\n    static TOP_STACK_FRAME_MARGIN: monaco.editor.IModelDecorationOptions = {\n        glyphMarginClassName: 'codicon-debug-stackframe',\n        stickiness: DebugEditorModel.STICKINESS\n    };\n    static FOCUSED_STACK_FRAME_MARGIN: monaco.editor.IModelDecorationOptions = {\n        glyphMarginClassName: 'codicon-debug-stackframe-focused',\n        stickiness: DebugEditorModel.STICKINESS\n    };\n    static TOP_STACK_FRAME_DECORATION: monaco.editor.IModelDecorationOptions = {\n        isWholeLine: true,\n        className: 'theia-debug-top-stack-frame-line',\n        stickiness: DebugEditorModel.STICKINESS\n    };\n    static TOP_STACK_FRAME_INLINE_DECORATION: monaco.editor.IModelDecorationOptions = {\n        beforeContentClassName: 'theia-debug-top-stack-frame-column'\n    };\n    static FOCUSED_STACK_FRAME_DECORATION: monaco.editor.IModelDecorationOptions = {\n        isWholeLine: true,\n        className: 'theia-debug-focused-stack-frame-line',\n        stickiness: DebugEditorModel.STICKINESS\n    };\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { EditorManager, EditorWidget } from '@theia/editor/lib/browser';\nimport { ContextMenuRenderer } from '@theia/core/lib/browser';\nimport { MonacoEditor } from '@theia/monaco/lib/browser/monaco-editor';\nimport { DebugSessionManager } from '../debug-session-manager';\nimport { DebugEditorModel, DebugEditorModelFactory } from './debug-editor-model';\nimport { BreakpointManager, SourceBreakpointsChangeEvent } from '../breakpoint/breakpoint-manager';\nimport { DebugSourceBreakpoint } from '../model/debug-source-breakpoint';\nimport { DebugBreakpointWidget } from './debug-breakpoint-widget';\n\n@injectable()\nexport class DebugEditorService {\n\n    @inject(EditorManager)\n    protected readonly editors: EditorManager;\n\n    @inject(BreakpointManager)\n    protected readonly breakpoints: BreakpointManager;\n\n    @inject(DebugSessionManager)\n    protected readonly sessionManager: DebugSessionManager;\n\n    @inject(ContextMenuRenderer)\n    protected readonly contextMenu: ContextMenuRenderer;\n\n    @inject(DebugEditorModelFactory)\n    protected readonly factory: DebugEditorModelFactory;\n\n    protected readonly models = new Map<string, DebugEditorModel>();\n\n    @postConstruct()\n    protected init(): void {\n        this.editors.all.forEach(widget => this.push(widget));\n        this.editors.onCreated(widget => this.push(widget));\n    }\n\n    protected push(widget: EditorWidget): void {\n        const { editor } = widget;\n        if (!(editor instanceof MonacoEditor)) {\n            return;\n        }\n        const uri = editor.getControl().getModel()!.uri.toString();\n        const debugModel = this.factory(editor);\n        this.models.set(uri, debugModel);\n        editor.getControl().onDidDispose(() => {\n            debugModel.dispose();\n            this.models.delete(uri);\n        });\n    }\n\n    get model(): DebugEditorModel | undefined {\n        const { currentEditor } = this.editors;\n        const uri = currentEditor && currentEditor.getResourceUri();\n        return uri && this.models.get(uri.toString());\n    }\n\n    getLogpoint(position: monaco.Position): DebugSourceBreakpoint | undefined {\n        const logpoint = this.anyBreakpoint(position);\n        return logpoint && logpoint.logMessage ? logpoint : undefined;\n    }\n    getLogpointEnabled(position: monaco.Position): boolean | undefined {\n        const logpoint = this.getLogpoint(position);\n        return logpoint && logpoint.enabled;\n    }\n\n    getBreakpoint(position: monaco.Position): DebugSourceBreakpoint | undefined {\n        const breakpoint = this.anyBreakpoint(position);\n        return breakpoint && breakpoint.logMessage ? undefined : breakpoint;\n    }\n    getBreakpointEnabled(position: monaco.Position): boolean | undefined {\n        const breakpoint = this.getBreakpoint(position);\n        return breakpoint && breakpoint.enabled;\n    }\n\n    anyBreakpoint(position?: monaco.Position): DebugSourceBreakpoint | undefined {\n        return this.model && this.model.getBreakpoint(position);\n    }\n\n    getInlineBreakpoint(position?: monaco.Position): DebugSourceBreakpoint | undefined {\n        return this.model && this.model.getInlineBreakpoint(position);\n    }\n\n    toggleBreakpoint(position?: monaco.Position): void {\n        const { model } = this;\n        if (model) {\n            model.toggleBreakpoint(position);\n        }\n    }\n    setBreakpointEnabled(position: monaco.Position, enabled: boolean): void {\n        const breakpoint = this.anyBreakpoint(position);\n        if (breakpoint) {\n            breakpoint.setEnabled(enabled);\n        }\n    }\n\n    addInlineBreakpoint(): void {\n        const { model } = this;\n        if (model) {\n            model.addInlineBreakpoint();\n        }\n    }\n\n    showHover(): void {\n        const { model } = this;\n        if (model) {\n            const selection = model.editor.getControl().getSelection()!;\n            model.hover.show({ selection, focus: true });\n        }\n    }\n    canShowHover(): boolean {\n        const { model } = this;\n        if (model) {\n            const selection = model.editor.getControl().getSelection()!;\n            return !!model.editor.getControl().getModel()!.getWordAtPosition(selection.getStartPosition());\n        }\n        return false;\n    }\n\n    addBreakpoint(context: DebugBreakpointWidget.Context, position?: monaco.Position): void {\n        const { model } = this;\n        if (model) {\n            position = position || model.position;\n            const breakpoint = model.getBreakpoint(position);\n            if (breakpoint) {\n                model.breakpointWidget.show({ breakpoint, context });\n            } else {\n                model.breakpointWidget.show({\n                    position,\n                    context\n                });\n            }\n        }\n    }\n    async editBreakpoint(breakpointOrPosition?: DebugSourceBreakpoint | monaco.Position): Promise<void> {\n        if (breakpointOrPosition instanceof monaco.Position) {\n            breakpointOrPosition = this.anyBreakpoint(breakpointOrPosition);\n        }\n\n        if (breakpointOrPosition) {\n            await breakpointOrPosition.open();\n            const model = this.models.get(breakpointOrPosition.uri.toString());\n            if (model) {\n                model.breakpointWidget.show(breakpointOrPosition);\n            }\n        }\n    }\n    closeBreakpoint(): void {\n        const { model } = this;\n        if (model) {\n            model.breakpointWidget.hide();\n        }\n    }\n    acceptBreakpoint(): void {\n        const { model } = this;\n        if (model) {\n            model.acceptBreakpoint();\n        }\n    }\n    protected closeBreakpointIfAffected({ uri, removed }: SourceBreakpointsChangeEvent): void {\n        const model = this.models.get(uri.toString());\n        if (!model) {\n            return;\n        }\n        const position = model.breakpointWidget.position;\n        if (!position) {\n            return;\n        }\n        for (const breakpoint of removed) {\n            if (breakpoint.raw.line === position.lineNumber) {\n                model.breakpointWidget.hide();\n            }\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { MonacoEditor } from '@theia/monaco/lib/browser/monaco-editor';\n\nexport const DebugEditor = Symbol('DebugEditor');\nexport type DebugEditor = MonacoEditor;\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as React from '@theia/core/shared/react';\nimport { createRoot, Root } from '@theia/core/shared/react-dom/client';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { MonacoEditorZoneWidget } from '@theia/monaco/lib/browser/monaco-editor-zone-widget';\nimport { DebugEditor } from './debug-editor';\nimport { DebugExceptionInfo } from '../model/debug-thread';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { codicon } from '@theia/core/lib/browser/widgets';\n\nexport interface ShowDebugExceptionParams {\n    info: DebugExceptionInfo\n    lineNumber: number\n    column: number\n}\n\nexport class DebugExceptionMonacoEditorZoneWidget extends MonacoEditorZoneWidget {\n\n    protected override computeContainerHeight(zoneHeight: number): {\n        height: number,\n        frameWidth: number\n    } {\n        // reset height to match it to the content\n        this.containerNode.style.height = 'initial';\n        const height = this.containerNode.offsetHeight;\n        const result = super.computeContainerHeight(zoneHeight);\n        result.height = height;\n        return result;\n    }\n\n}\n\n@injectable()\nexport class DebugExceptionWidget implements Disposable {\n\n    @inject(DebugEditor)\n    readonly editor: DebugEditor;\n\n    protected zone: MonacoEditorZoneWidget;\n    protected containerNodeRoot: Root;\n\n    protected readonly toDispose = new DisposableCollection();\n\n    @postConstruct()\n    protected init(): void {\n        this.doInit();\n    }\n\n    protected async doInit(): Promise<void> {\n        this.toDispose.push(this.zone = new DebugExceptionMonacoEditorZoneWidget(this.editor.getControl()));\n        this.zone.containerNode.classList.add('theia-debug-exception-widget');\n        this.containerNodeRoot = createRoot(this.zone.containerNode);\n        this.toDispose.push(Disposable.create(() => this.containerNodeRoot.unmount()));\n        this.toDispose.push(this.editor.getControl().onDidLayoutChange(() => this.layout()));\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    show({ info, lineNumber, column }: ShowDebugExceptionParams): void {\n        this.render(info, () => {\n            const fontInfo = this.editor.getControl().getOption(monaco.editor.EditorOption.fontInfo);\n            this.zone.containerNode.style.fontSize = `${fontInfo.fontSize}px`;\n            this.zone.containerNode.style.lineHeight = `${fontInfo.lineHeight}px`;\n\n            if (lineNumber !== undefined && column !== undefined) {\n                const afterLineNumber = lineNumber;\n                const afterColumn = column;\n                this.zone.show({ showFrame: true, afterLineNumber, afterColumn, heightInLines: 0, frameWidth: 1 });\n            }\n\n            this.layout();\n        });\n    }\n\n    hide(): void {\n        this.zone.hide();\n    }\n\n    protected render(info: DebugExceptionInfo, cb: () => void): void {\n        const stackTrace = info.details && info.details.stackTrace;\n        const exceptionTitle = info.id ?\n            nls.localizeByDefault('Exception has occurred: {0}', info.id) :\n            nls.localizeByDefault('Exception has occurred.');\n        this.containerNodeRoot.render(<React.Fragment>\n            <div className='title' ref={cb}>\n                {exceptionTitle}\n                <span id=\"exception-close\" className={codicon('close', true)} onClick={() => this.hide()} title={nls.localizeByDefault('Close')}></span>\n            </div>\n            {info.description && <div className='description'>{info.description}</div>}\n            {stackTrace && <div className='stack-trace'>{stackTrace}</div>}\n        </React.Fragment>);\n    }\n\n    protected layout(): void {\n        // reset height to match it to the content\n        this.zone.containerNode.style.height = 'initial';\n\n        const lineHeight = this.editor.getControl().getOption(monaco.editor.EditorOption.lineHeight);\n        const heightInLines = Math.ceil(this.zone.containerNode.offsetHeight / lineHeight);\n        this.zone.layout(heightInLines);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation and others. All rights reserved.\n *  Licensed under the MIT License. See https://github.com/Microsoft/vscode/blob/master/LICENSE.txt for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport * as monaco from '@theia/monaco-editor-core';\n\n/**\n * TODO: introduce a new request to LSP to look up an expression range: https://github.com/Microsoft/language-server-protocol/issues/462\n */\n@injectable()\nexport class DebugExpressionProvider {\n    get(model: monaco.editor.IModel, selection: monaco.IRange): string {\n        const lineContent = model.getLineContent(selection.startLineNumber);\n        const { start, end } = this.getExactExpressionStartAndEnd(lineContent, selection.startColumn, selection.endColumn);\n        return lineContent.substring(start - 1, end);\n    }\n    protected getExactExpressionStartAndEnd(lineContent: string, looseStart: number, looseEnd: number): { start: number, end: number } {\n        let matchingExpression: string | undefined = undefined;\n        let startOffset = 0;\n\n        // Some example supported expressions: myVar.prop, a.b.c.d, myVar?.prop, myVar->prop, MyClass::StaticProp, *myVar\n        // Match any character except a set of characters which often break interesting sub-expressions\n        const expression = /([^()\\[\\]{}<>\\s+\\-/%~#^;=|,`!]|\\->)+/g;\n        // eslint-disable-next-line no-null/no-null\n        let result: RegExpExecArray | null = null;\n\n        // First find the full expression under the cursor\n        while (result = expression.exec(lineContent)) {\n            const start = result.index + 1;\n            const end = start + result[0].length;\n\n            if (start <= looseStart && end >= looseEnd) {\n                matchingExpression = result[0];\n                startOffset = start;\n                break;\n            }\n        }\n\n        // If there are non-word characters after the cursor, we want to truncate the expression then.\n        // For example in expression 'a.b.c.d', if the focus was under 'b', 'a.b' would be evaluated.\n        if (matchingExpression) {\n            const subExpression: RegExp = /\\w+/g;\n            // eslint-disable-next-line no-null/no-null\n            let subExpressionResult: RegExpExecArray | null = null;\n            while (subExpressionResult = subExpression.exec(matchingExpression)) {\n                const subEnd = subExpressionResult.index + 1 + startOffset + subExpressionResult[0].length;\n                if (subEnd >= looseEnd) {\n                    break;\n                }\n            }\n\n            if (subExpressionResult) {\n                matchingExpression = matchingExpression.substring(0, subExpression.lastIndex);\n            }\n        }\n\n        return matchingExpression ?\n            { start: startOffset, end: startOffset + matchingExpression.length - 1 } :\n            { start: 0, end: 0 };\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as React from '@theia/core/shared/react';\nimport { TreeSource, TreeElement } from '@theia/core/lib/browser/source-tree';\nimport { ExpressionContainer, ExpressionItem, DebugVariable } from '../console/debug-console-items';\nimport { DebugSessionManager } from '../debug-session-manager';\nimport { injectable, inject } from '@theia/core/shared/inversify';\n\n@injectable()\nexport class DebugHoverSource extends TreeSource {\n\n    @inject(DebugSessionManager)\n    protected readonly sessions: DebugSessionManager;\n\n    protected _expression: ExpressionItem | DebugVariable | undefined;\n    get expression(): ExpressionItem | DebugVariable | undefined {\n        return this._expression;\n    }\n\n    protected elements: TreeElement[] = [];\n    getElements(): IterableIterator<TreeElement> {\n        return this.elements[Symbol.iterator]();\n    }\n\n    protected renderTitle(element: ExpressionItem | DebugVariable): React.ReactNode {\n        return <div className='theia-debug-hover-title' title={element.value}>{element.value}</div>;\n    }\n\n    reset(): void {\n        this._expression = undefined;\n        this.elements = [];\n        this.fireDidChange();\n    }\n\n    async evaluate(expression: string): Promise<ExpressionItem | DebugVariable | undefined> {\n        const evaluated = await this.doEvaluate(expression);\n        const elements = evaluated && await evaluated.getElements();\n        this._expression = evaluated;\n        this.elements = elements ? [...elements] : [];\n        this.fireDidChange();\n        return evaluated;\n    }\n    protected async doEvaluate(expression: string): Promise<ExpressionItem | DebugVariable | undefined> {\n        const { currentSession } = this.sessions;\n        if (!currentSession) {\n            return undefined;\n        }\n        if (currentSession.capabilities.supportsEvaluateForHovers) {\n            const item = new ExpressionItem(expression, () => currentSession);\n            await item.evaluate('hover');\n            return item.available && item || undefined;\n        }\n        return this.findVariable(expression.split('.').map(word => word.trim()).filter(word => !!word));\n    }\n    protected async findVariable(namesToFind: string[]): Promise<DebugVariable | undefined> {\n        const { currentFrame } = this.sessions;\n        if (!currentFrame) {\n            return undefined;\n        }\n        let variable: DebugVariable | undefined;\n        const scopes = await currentFrame.getScopes();\n        for (const scope of scopes) {\n            const found = await this.doFindVariable(scope, namesToFind);\n            if (!variable) {\n                variable = found;\n            } else if (found && found.value !== variable.value) {\n                // only show if all expressions found have the same value\n                return undefined;\n            }\n        }\n        return variable;\n    }\n    protected async doFindVariable(owner: ExpressionContainer, namesToFind: string[]): Promise<DebugVariable | undefined> {\n        const elements = await owner.getElements();\n        const variables: DebugVariable[] = [];\n        for (const element of elements) {\n            if (element instanceof DebugVariable && element.name === namesToFind[0]) {\n                variables.push(element);\n            }\n        }\n        if (variables.length !== 1) {\n            return undefined;\n        }\n        if (namesToFind.length === 1) {\n            return variables[0];\n        } else {\n            return this.doFindVariable(variables[0], namesToFind.slice(1));\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport debounce = require('@theia/core/shared/lodash.debounce');\n\nimport { Widget } from '@theia/core/shared/@phosphor/widgets';\nimport { Message } from '@theia/core/shared/@phosphor/messaging';\nimport { injectable, postConstruct, inject, Container, interfaces } from '@theia/core/shared/inversify';\nimport { Key } from '@theia/core/lib/browser';\nimport { SourceTreeWidget } from '@theia/core/lib/browser/source-tree';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { DebugSessionManager } from '../debug-session-manager';\nimport { DebugEditor } from './debug-editor';\nimport { DebugExpressionProvider } from './debug-expression-provider';\nimport { DebugHoverSource } from './debug-hover-source';\nimport { DebugVariable } from '../console/debug-console-items';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { StandaloneServices } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneServices';\nimport { ILanguageFeaturesService } from '@theia/monaco-editor-core/esm/vs/editor/common/services/languageFeatures';\nimport { CancellationTokenSource } from '@theia/monaco-editor-core/esm/vs/base/common/cancellation';\nimport { Position } from '@theia/monaco-editor-core/esm/vs/editor/common/core/position';\nimport { ArrayUtils } from '@theia/core';\n\nexport interface ShowDebugHoverOptions {\n    selection: monaco.Range\n    /** default: false */\n    focus?: boolean\n    /** default: true */\n    immediate?: boolean\n}\n\nexport interface HideDebugHoverOptions {\n    /** default: true */\n    immediate?: boolean\n}\n\nexport function createDebugHoverWidgetContainer(parent: interfaces.Container, editor: DebugEditor): Container {\n    const child = SourceTreeWidget.createContainer(parent, {\n        virtualized: false\n    });\n    child.bind(DebugEditor).toConstantValue(editor);\n    child.bind(DebugHoverSource).toSelf();\n    child.unbind(SourceTreeWidget);\n    child.bind(DebugExpressionProvider).toSelf();\n    child.bind(DebugHoverWidget).toSelf();\n    return child;\n}\n\n@injectable()\nexport class DebugHoverWidget extends SourceTreeWidget implements monaco.editor.IContentWidget {\n\n    @inject(DebugEditor)\n    protected readonly editor: DebugEditor;\n\n    @inject(DebugSessionManager)\n    protected readonly sessions: DebugSessionManager;\n\n    @inject(DebugHoverSource)\n    protected readonly hoverSource: DebugHoverSource;\n\n    @inject(DebugExpressionProvider)\n    protected readonly expressionProvider: DebugExpressionProvider;\n\n    allowEditorOverflow = true;\n\n    static ID = 'debug.editor.hover';\n    getId(): string {\n        return DebugHoverWidget.ID;\n    }\n\n    protected readonly domNode = document.createElement('div');\n    protected readonly titleNode = document.createElement('div');\n    protected readonly contentNode = document.createElement('div');\n    getDomNode(): HTMLElement {\n        return this.domNode;\n    }\n\n    @postConstruct()\n    protected override init(): void {\n        super.init();\n        this.domNode.className = 'theia-debug-hover';\n        this.titleNode.className = 'theia-debug-hover-title';\n        this.domNode.appendChild(this.titleNode);\n        this.contentNode.className = 'theia-debug-hover-content';\n        this.domNode.appendChild(this.contentNode);\n\n        // for stopping scroll events from contentNode going to the editor\n        this.contentNode.addEventListener('wheel', e => e.stopPropagation());\n\n        this.editor.getControl().addContentWidget(this);\n        this.source = this.hoverSource;\n        this.toDispose.pushAll([\n            this.hoverSource,\n            Disposable.create(() => this.editor.getControl().removeContentWidget(this)),\n            Disposable.create(() => this.hide()),\n            this.sessions.onDidChange(() => {\n                if (!this.isEditorFrame()) {\n                    this.hide();\n                }\n            })\n        ]);\n    }\n\n    override dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    override show(options?: ShowDebugHoverOptions): void {\n        this.schedule(() => this.doShow(options), options && options.immediate);\n    }\n\n    override hide(options?: HideDebugHoverOptions): void {\n        this.schedule(() => this.doHide(), options && options.immediate);\n    }\n\n    protected readonly doSchedule = debounce((fn: () => void) => fn(), 300);\n    protected schedule(fn: () => void, immediate: boolean = true): void {\n        if (immediate) {\n            this.doSchedule.cancel();\n            fn();\n        } else {\n            this.doSchedule(fn);\n        }\n    }\n\n    protected options: ShowDebugHoverOptions | undefined;\n    protected doHide(): void {\n        if (!this.isVisible) {\n            return;\n        }\n        if (this.domNode.contains(document.activeElement)) {\n            this.editor.getControl().focus();\n        }\n        if (this.isAttached) {\n            Widget.detach(this);\n        }\n        this.hoverSource.reset();\n        super.hide();\n        this.options = undefined;\n        this.editor.getControl().layoutContentWidget(this);\n    }\n\n    protected async doShow(options: ShowDebugHoverOptions | undefined = this.options): Promise<void> {\n        const cancellationSource = new CancellationTokenSource();\n\n        if (!this.isEditorFrame()) {\n            this.hide();\n            return;\n        }\n        if (!options) {\n            this.hide();\n            return;\n        }\n        if (this.options && this.options.selection.equalsRange(options.selection)) {\n            return;\n        }\n        if (!this.isAttached) {\n            Widget.attach(this, this.contentNode);\n        }\n\n        this.options = options;\n        let matchingExpression: string | undefined;\n\n        const pluginExpressionProvider = StandaloneServices.get(ILanguageFeaturesService).evaluatableExpressionProvider;\n        const textEditorModel = this.editor.document.textEditorModel;\n\n        if (pluginExpressionProvider && pluginExpressionProvider.has(textEditorModel)) {\n            const registeredProviders = pluginExpressionProvider.ordered(textEditorModel);\n            const position = new Position(this.options!.selection.startLineNumber, this.options!.selection.startColumn);\n\n            const promises = registeredProviders.map(support =>\n                Promise.resolve(support.provideEvaluatableExpression(textEditorModel, position, cancellationSource.token))\n            );\n\n            const results = await Promise.all(promises).then(ArrayUtils.coalesce);\n            if (results.length > 0) {\n                matchingExpression = results[0].expression;\n                const range = results[0].range;\n\n                if (!matchingExpression) {\n                    const lineContent = textEditorModel.getLineContent(position.lineNumber);\n                    matchingExpression = lineContent.substring(range.startColumn - 1, range.endColumn - 1);\n                }\n            }\n        } else { // use fallback if no provider was registered\n            matchingExpression = this.expressionProvider.get(this.editor.getControl().getModel()!, options.selection);\n            if (matchingExpression) {\n                const expressionLineContent = this.editor\n                    .getControl()\n                    .getModel()!\n                    .getLineContent(this.options.selection.startLineNumber);\n                const startColumn =\n                    expressionLineContent.indexOf(\n                        matchingExpression,\n                        this.options.selection.startColumn - matchingExpression.length\n                    ) + 1;\n                const endColumn = startColumn + matchingExpression.length;\n                this.options.selection = new monaco.Range(\n                    this.options.selection.startLineNumber,\n                    startColumn,\n                    this.options.selection.startLineNumber,\n                    endColumn\n                );\n            }\n        }\n\n        if (!matchingExpression) {\n            this.hide();\n            return;\n        }\n        const toFocus = new DisposableCollection();\n        if (this.options.focus === true) {\n            toFocus.push(this.model.onNodeRefreshed(() => {\n                toFocus.dispose();\n                this.activate();\n            }));\n        }\n        const expression = await this.hoverSource.evaluate(matchingExpression);\n        if (!expression) {\n            toFocus.dispose();\n            this.hide();\n            return;\n        }\n\n        this.contentNode.hidden = false;\n        ['number', 'boolean', 'string'].forEach(token => this.titleNode.classList.remove(token));\n        this.domNode.classList.remove('complex-value');\n        if (expression.hasElements) {\n            this.domNode.classList.add('complex-value');\n        } else {\n            this.contentNode.hidden = true;\n            if (expression.type === 'number' || expression.type === 'boolean' || expression.type === 'string') {\n                this.titleNode.classList.add(expression.type);\n            } else if (!isNaN(+expression.value)) {\n                this.titleNode.classList.add('number');\n            } else if (DebugVariable.booleanRegex.test(expression.value)) {\n                this.titleNode.classList.add('boolean');\n            } else if (DebugVariable.stringRegex.test(expression.value)) {\n                this.titleNode.classList.add('string');\n            }\n        }\n\n        super.show();\n        await new Promise<void>(resolve => {\n            setTimeout(() => window.requestAnimationFrame(() => {\n                this.editor.getControl().layoutContentWidget(this);\n                resolve();\n            }), 0);\n        });\n    }\n\n    protected isEditorFrame(): boolean {\n        return this.sessions.isCurrentEditorFrame(this.editor.getControl().getModel()!.uri);\n    }\n\n    getPosition(): monaco.editor.IContentWidgetPosition {\n        if (!this.isVisible) {\n            return undefined!;\n        }\n        const position = this.options && this.options.selection.getStartPosition();\n        return position\n            ? {\n                position: new monaco.Position(position.lineNumber, position.column),\n                preference: [\n                    monaco.editor.ContentWidgetPositionPreference.ABOVE,\n                    monaco.editor.ContentWidgetPositionPreference.BELOW,\n                ],\n            }\n            : undefined!;\n    }\n\n    protected override onUpdateRequest(msg: Message): void {\n        super.onUpdateRequest(msg);\n        const { expression } = this.hoverSource;\n        const value = expression && expression.value || '';\n        this.titleNode.textContent = value;\n        this.titleNode.title = value;\n    }\n\n    protected override onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        this.addKeyListener(this.domNode, Key.ESCAPE, () => this.hide());\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// Based on https://github.com/theia-ide/vscode/blob/standalone/0.19.x/src/vs/workbench/contrib/debug/browser/debugEditorContribution.ts\n\nimport { FrontendApplicationContribution } from '@theia/core/lib/browser/frontend-application-contribution';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { CancellationTokenSource } from '@theia/monaco-editor-core/esm/vs/base/common/cancellation';\nimport { DEFAULT_WORD_REGEXP } from '@theia/monaco-editor-core/esm/vs/editor/common/core/wordHelper';\nimport { IDecorationOptions } from '@theia/monaco-editor-core/esm/vs/editor/common/editorCommon';\nimport { StandardTokenType } from '@theia/monaco-editor-core/esm/vs/editor/common/encodedTokenAttributes';\nimport { InlineValueContext } from '@theia/monaco-editor-core/esm/vs/editor/common/languages';\nimport { ITextModel } from '@theia/monaco-editor-core/esm/vs/editor/common/model';\nimport { ILanguageFeaturesService } from '@theia/monaco-editor-core/esm/vs/editor/common/services/languageFeatures';\nimport { StandaloneServices } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneServices';\nimport { MonacoEditorService } from '@theia/monaco/lib/browser/monaco-editor-service';\nimport { DebugVariable, ExpressionContainer, ExpressionItem } from '../console/debug-console-items';\nimport { DebugPreferences } from '../debug-preferences';\nimport { DebugStackFrame } from '../model/debug-stack-frame';\nimport { DebugEditorModel } from './debug-editor-model';\n\n// https://github.com/theia-ide/vscode/blob/standalone/0.19.x/src/vs/workbench/contrib/debug/browser/debugEditorContribution.ts#L40-L43\nexport const INLINE_VALUE_DECORATION_KEY = 'inlinevaluedecoration';\nconst MAX_NUM_INLINE_VALUES = 100; // JS Global scope can have 700+ entries. We want to limit ourselves for perf reasons\nconst MAX_INLINE_DECORATOR_LENGTH = 150; // Max string length of each inline decorator when debugging. If exceeded ... is added\nconst MAX_TOKENIZATION_LINE_LEN = 500; // If line is too long, then inline values for the line are skipped\n\n/**\n * MAX SMI (SMall Integer) as defined in v8.\n * one bit is lost for boxing/unboxing flag.\n * one bit is lost for sign flag.\n * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n */\n// https://github.com/theia-ide/vscode/blob/standalone/0.19.x/src/vs/base/common/uint.ts#L7-L13\nconst MAX_SAFE_SMALL_INTEGER = 1 << 30;\n\nclass InlineSegment {\n    constructor(public column: number, public text: string) {\n    }\n}\n\n@injectable()\nexport class DebugInlineValueDecorator implements FrontendApplicationContribution {\n\n    @inject(MonacoEditorService)\n    protected readonly editorService: MonacoEditorService;\n\n    @inject(DebugPreferences)\n    protected readonly preferences: DebugPreferences;\n\n    protected enabled = false;\n    protected wordToLineNumbersMap: Map<string, monaco.Position[]> | undefined = new Map();\n\n    onStart(): void {\n        this.editorService.registerDecorationType('Inline debug decorations', INLINE_VALUE_DECORATION_KEY, {});\n        this.enabled = !!this.preferences['debug.inlineValues'];\n        this.preferences.onPreferenceChanged(({ preferenceName, newValue }) => {\n            if (preferenceName === 'debug.inlineValues' && !!newValue !== this.enabled) {\n                this.enabled = !!newValue;\n            }\n        });\n    }\n\n    async calculateDecorations(debugEditorModel: DebugEditorModel, stackFrame: DebugStackFrame | undefined): Promise<IDecorationOptions[]> {\n        this.wordToLineNumbersMap = undefined;\n        const model = debugEditorModel.editor.getControl().getModel() || undefined;\n        return this.updateInlineValueDecorations(debugEditorModel, model, stackFrame);\n    }\n\n    // https://github.com/theia-ide/vscode/blob/standalone/0.19.x/src/vs/workbench/contrib/debug/browser/debugEditorContribution.ts#L382-L408\n    protected async updateInlineValueDecorations(\n        debugEditorModel: DebugEditorModel,\n        model: monaco.editor.ITextModel | undefined,\n        stackFrame: DebugStackFrame | undefined): Promise<IDecorationOptions[]> {\n\n        if (!this.enabled || !model || !stackFrame || !stackFrame.source || model.uri.toString() !== stackFrame.source.uri.toString()) {\n            return [];\n        }\n\n        // XXX: Here is a difference between the VS Code's `IStackFrame` and the `DebugProtocol.StackFrame`.\n        // In DAP, `source` is optional, hence `range` is optional too.\n        const { range: stackFrameRange } = stackFrame;\n        if (!stackFrameRange) {\n            return [];\n        }\n\n        const scopes = await stackFrame.getMostSpecificScopes(stackFrameRange);\n        // Get all top level children in the scope chain\n        const decorationsPerScope = await Promise.all(scopes.map(async scope => {\n            const children = Array.from(await scope.getElements());\n            let range = new monaco.Range(0, 0, stackFrameRange.startLineNumber, stackFrameRange.startColumn);\n            if (scope.range) {\n                range = range.setStartPosition(scope.range.startLineNumber, scope.range.startColumn);\n            }\n\n            return this.createInlineValueDecorationsInsideRange(children, range, model, debugEditorModel, stackFrame);\n        }));\n\n        return decorationsPerScope.reduce((previous, current) => previous.concat(current), []);\n    }\n\n    // https://github.com/theia-ide/vscode/blob/standalone/0.19.x/src/vs/workbench/contrib/debug/browser/debugEditorContribution.ts#L410-L452\n    private async createInlineValueDecorationsInsideRange(\n        expressions: ReadonlyArray<ExpressionContainer>,\n        range: monaco.Range,\n        model: monaco.editor.ITextModel,\n        debugEditorModel: DebugEditorModel,\n        stackFrame: DebugStackFrame): Promise<IDecorationOptions[]> {\n\n        const decorations: IDecorationOptions[] = [];\n\n        const inlineValuesProvider = StandaloneServices.get(ILanguageFeaturesService).inlineValuesProvider;\n        const textEditorModel = debugEditorModel.editor.document.textEditorModel;\n\n        if (inlineValuesProvider && inlineValuesProvider.has(textEditorModel)) {\n\n            const findVariable = async (variableName: string, caseSensitiveLookup: boolean): Promise<DebugVariable | undefined> => {\n                const scopes = await stackFrame.getMostSpecificScopes(stackFrame.range!);\n                const key = caseSensitiveLookup ? variableName : variableName.toLowerCase();\n                for (const scope of scopes) {\n                    const expressionContainers = await scope.getElements();\n                    let container = expressionContainers.next();\n                    while (!container.done) {\n                        const debugVariable = container.value;\n                        if (debugVariable && debugVariable instanceof DebugVariable) {\n                            if (caseSensitiveLookup) {\n                                if (debugVariable.name === key) {\n                                    return debugVariable;\n                                }\n                            } else {\n                                if (debugVariable.name.toLowerCase() === key) {\n                                    return debugVariable;\n                                }\n                            }\n                        }\n                        container = expressionContainers.next();\n                    }\n                }\n                return undefined;\n            };\n\n            const context: InlineValueContext = {\n                frameId: stackFrame.raw.id,\n                stoppedLocation: range\n            };\n\n            const cancellationToken = new CancellationTokenSource().token;\n            const registeredProviders = inlineValuesProvider.ordered(textEditorModel).reverse();\n            const visibleRanges = debugEditorModel.editor.getControl().getVisibleRanges();\n\n            const lineDecorations = new Map<number, InlineSegment[]>();\n\n            for (const provider of registeredProviders) {\n                for (const visibleRange of visibleRanges) {\n                    const result = await provider.provideInlineValues(textEditorModel, visibleRange, context, cancellationToken);\n                    if (result) {\n                        for (const inlineValue of result) {\n                            let text: string | undefined = undefined;\n                            switch (inlineValue.type) {\n                                case 'text':\n                                    text = inlineValue.text;\n                                    break;\n                                case 'variable': {\n                                    let varName = inlineValue.variableName;\n                                    if (!varName) {\n                                        const lineContent = model.getLineContent(inlineValue.range.startLineNumber);\n                                        varName = lineContent.substring(inlineValue.range.startColumn - 1, inlineValue.range.endColumn - 1);\n                                    }\n                                    const variable = await findVariable(varName, inlineValue.caseSensitiveLookup);\n                                    if (variable) {\n                                        text = this.formatInlineValue(varName, variable.value);\n                                    }\n                                    break;\n                                }\n                                case 'expression': {\n                                    let expr = inlineValue.expression;\n                                    if (!expr) {\n                                        const lineContent = model.getLineContent(inlineValue.range.startLineNumber);\n                                        expr = lineContent.substring(inlineValue.range.startColumn - 1, inlineValue.range.endColumn - 1);\n                                    }\n                                    if (expr) {\n                                        const expression = new ExpressionItem(expr, () => stackFrame.thread.session);\n                                        await expression.evaluate('watch');\n                                        if (expression.available) {\n                                            text = this.formatInlineValue(expr, expression.value);\n                                        }\n                                    }\n                                    break;\n                                }\n                            }\n\n                            if (text) {\n                                const line = inlineValue.range.startLineNumber;\n                                let lineSegments = lineDecorations.get(line);\n                                if (!lineSegments) {\n                                    lineSegments = [];\n                                    lineDecorations.set(line, lineSegments);\n                                }\n                                if (!lineSegments.some(segment => segment.text === text)) {\n                                    lineSegments.push(new InlineSegment(inlineValue.range.startColumn, text));\n                                }\n                            }\n                        }\n                    }\n                }\n            };\n\n            // sort line segments and concatenate them into a decoration\n            const separator = ', ';\n            lineDecorations.forEach((segments, line) => {\n                if (segments.length > 0) {\n                    segments = segments.sort((a, b) => a.column - b.column);\n                    const text = segments.map(s => s.text).join(separator);\n                    decorations.push(this.createInlineValueDecoration(line, text));\n                }\n            });\n\n        } else { // use fallback if no provider was registered\n            const lineToNamesMap: Map<number, string[]> = new Map<number, string[]>();\n            const nameValueMap = new Map<string, string>();\n            for (const expr of expressions) {\n                if (expr instanceof DebugVariable) { // XXX: VS Code uses `IExpression` that has `name` and `value`.\n                    nameValueMap.set(expr.name, expr.value);\n                }\n                // Limit the size of map. Too large can have a perf impact\n                if (nameValueMap.size >= MAX_NUM_INLINE_VALUES) {\n                    break;\n                }\n            }\n\n            const wordToPositionsMap = this.getWordToPositionsMap(model);\n\n            // Compute unique set of names on each line\n            nameValueMap.forEach((_, name) => {\n                const positions = wordToPositionsMap.get(name);\n                if (positions) {\n                    for (const position of positions) {\n                        if (range.containsPosition(position)) {\n                            if (!lineToNamesMap.has(position.lineNumber)) {\n                                lineToNamesMap.set(position.lineNumber, []);\n                            }\n\n                            if (lineToNamesMap.get(position.lineNumber)!.indexOf(name) === -1) {\n                                lineToNamesMap.get(position.lineNumber)!.push(name);\n                            }\n                        }\n                    }\n                }\n            });\n\n            // Compute decorators for each line\n            lineToNamesMap.forEach((names, line) => {\n                const contentText = names.sort((first, second) => {\n                    const content = model.getLineContent(line);\n                    return content.indexOf(first) - content.indexOf(second);\n                }).map(name => `${name} = ${nameValueMap.get(name)}`).join(', ');\n                decorations.push(this.createInlineValueDecoration(line, contentText));\n            });\n        }\n\n        return decorations;\n    }\n\n    protected formatInlineValue(...args: string[]): string {\n        const valuePattern = '{0} = {1}';\n        const formatRegExp = /{(\\d+)}/g;\n        if (args.length === 0) {\n            return valuePattern;\n        }\n        return valuePattern.replace(formatRegExp, (match, group) => {\n            const idx = parseInt(group, 10);\n            return isNaN(idx) || idx < 0 || idx >= args.length ?\n                match :\n                args[idx];\n        });\n    }\n\n    // https://github.com/theia-ide/vscode/blob/standalone/0.19.x/src/vs/workbench/contrib/debug/browser/debugEditorContribution.ts#L454-L485\n    private createInlineValueDecoration(lineNumber: number, contentText: string): IDecorationOptions {\n        // If decoratorText is too long, trim and add ellipses. This could happen for minified files with everything on a single line\n        if (contentText.length > MAX_INLINE_DECORATOR_LENGTH) {\n            contentText = contentText.substring(0, MAX_INLINE_DECORATOR_LENGTH) + '...';\n        }\n\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                endLineNumber: lineNumber,\n                startColumn: MAX_SAFE_SMALL_INTEGER,\n                endColumn: MAX_SAFE_SMALL_INTEGER\n            },\n            renderOptions: {\n                after: {\n                    contentText,\n                    backgroundColor: 'rgba(255, 200, 0, 0.2)',\n                    margin: '10px'\n                },\n                dark: {\n                    after: {\n                        color: 'rgba(255, 255, 255, 0.5)',\n                    }\n                },\n                light: {\n                    after: {\n                        color: 'rgba(0, 0, 0, 0.5)',\n                    }\n                }\n            }\n        };\n    }\n\n    // https://github.com/theia-ide/vscode/blob/standalone/0.19.x/src/vs/workbench/contrib/debug/browser/debugEditorContribution.ts#L487-L531\n    private getWordToPositionsMap(model: monaco.editor.ITextModel | ITextModel): Map<string, monaco.Position[]> {\n        model = model as ITextModel;\n        if (!this.wordToLineNumbersMap) {\n            this.wordToLineNumbersMap = new Map<string, monaco.Position[]>();\n            if (!model) {\n                return this.wordToLineNumbersMap;\n            }\n\n            // For every word in every line, map its ranges for fast lookup\n            for (let lineNumber = 1, len = model.getLineCount(); lineNumber <= len; ++lineNumber) {\n                const lineContent = model.getLineContent(lineNumber);\n\n                // If line is too long then skip the line\n                if (lineContent.length > MAX_TOKENIZATION_LINE_LEN) {\n                    continue;\n                }\n\n                model.tokenization.forceTokenization(lineNumber);\n                const lineTokens = model.tokenization.getLineTokens(lineNumber);\n                for (let tokenIndex = 0, tokenCount = lineTokens.getCount(); tokenIndex < tokenCount; tokenIndex++) {\n                    const tokenStartOffset = lineTokens.getStartOffset(tokenIndex);\n                    const tokenEndOffset = lineTokens.getEndOffset(tokenIndex);\n                    const tokenType = lineTokens.getStandardTokenType(tokenIndex);\n                    const tokenStr = lineContent.substring(tokenStartOffset, tokenEndOffset);\n\n                    // Token is a word and not a comment\n                    if (tokenType === StandardTokenType.Other) {\n                        DEFAULT_WORD_REGEXP.lastIndex = 0; // We assume tokens will usually map 1:1 to words if they match\n                        const wordMatch = DEFAULT_WORD_REGEXP.exec(tokenStr);\n\n                        if (wordMatch) {\n                            const word = wordMatch[0];\n                            if (!this.wordToLineNumbersMap.has(word)) {\n                                this.wordToLineNumbersMap.set(word, []);\n                            }\n\n                            this.wordToLineNumbersMap.get(word)!.push(new monaco.Position(lineNumber, tokenStartOffset));\n                        }\n                    }\n                }\n            }\n        }\n\n        return this.wordToLineNumbersMap;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { TreeSource, TreeElement } from '@theia/core/lib/browser/source-tree';\nimport { DebugViewModel } from './debug-view-model';\nimport { BreakpointManager } from '../breakpoint/breakpoint-manager';\nimport { DebugExceptionBreakpoint } from './debug-exception-breakpoint';\n\n@injectable()\nexport class DebugBreakpointsSource extends TreeSource {\n\n    @inject(DebugViewModel)\n    protected readonly model: DebugViewModel;\n\n    @inject(BreakpointManager)\n    protected readonly breakpoints: BreakpointManager;\n\n    @postConstruct()\n    protected init(): void {\n        this.fireDidChange();\n        this.toDispose.push(this.model.onDidChangeBreakpoints(() => this.fireDidChange()));\n    }\n\n    *getElements(): IterableIterator<TreeElement> {\n        for (const exceptionBreakpoint of this.breakpoints.getExceptionBreakpoints()) {\n            yield new DebugExceptionBreakpoint(exceptionBreakpoint, this.breakpoints);\n        }\n        for (const functionBreakpoint of this.model.functionBreakpoints) {\n            yield functionBreakpoint;\n        }\n        for (const instructionBreakpoint of this.model.instructionBreakpoints) {\n            yield instructionBreakpoint;\n        }\n        for (const breakpoint of this.model.breakpoints) {\n            yield breakpoint;\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct, interfaces, Container } from '@theia/core/shared/inversify';\nimport { MenuPath } from '@theia/core/lib/common';\nimport { TreeNode, NodeProps } from '@theia/core/lib/browser';\nimport { SourceTreeWidget } from '@theia/core/lib/browser/source-tree';\nimport { DebugBreakpointsSource } from './debug-breakpoints-source';\nimport { BreakpointManager } from '../breakpoint/breakpoint-manager';\nimport { DebugViewModel } from './debug-view-model';\nimport { nls } from '@theia/core/lib/common/nls';\n\n@injectable()\nexport class DebugBreakpointsWidget extends SourceTreeWidget {\n\n    static CONTEXT_MENU: MenuPath = ['debug-breakpoints-context-menu'];\n    static EDIT_MENU = [...DebugBreakpointsWidget.CONTEXT_MENU, 'a_edit'];\n    static REMOVE_MENU = [...DebugBreakpointsWidget.CONTEXT_MENU, 'b_remove'];\n    static ENABLE_MENU = [...DebugBreakpointsWidget.CONTEXT_MENU, 'c_enable'];\n    static FACTORY_ID = 'debug:breakpoints';\n    static override createContainer(parent: interfaces.Container): Container {\n        const child = SourceTreeWidget.createContainer(parent, {\n            contextMenuPath: DebugBreakpointsWidget.CONTEXT_MENU,\n            virtualized: false,\n            scrollIfActive: true\n        });\n        child.bind(DebugBreakpointsSource).toSelf();\n        child.unbind(SourceTreeWidget);\n        child.bind(DebugBreakpointsWidget).toSelf();\n        return child;\n    }\n    static createWidget(parent: interfaces.Container): DebugBreakpointsWidget {\n        return DebugBreakpointsWidget.createContainer(parent).get(DebugBreakpointsWidget);\n    }\n\n    @inject(DebugViewModel)\n    protected readonly viewModel: DebugViewModel;\n\n    @inject(BreakpointManager)\n    protected readonly breakpoints: BreakpointManager;\n\n    @inject(DebugBreakpointsSource)\n    protected readonly breakpointsSource: DebugBreakpointsSource;\n\n    @postConstruct()\n    protected override init(): void {\n        super.init();\n        this.id = DebugBreakpointsWidget.FACTORY_ID + ':' + this.viewModel.id;\n        this.title.label = nls.localizeByDefault('Breakpoints');\n        this.toDispose.push(this.breakpointsSource);\n        this.source = this.breakpointsSource;\n    }\n\n    protected override getDefaultNodeStyle(node: TreeNode, props: NodeProps): React.CSSProperties | undefined {\n        return undefined;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport URI from '@theia/core/lib/common/uri';\nimport * as React from '@theia/core/shared/react';\nimport { DebugConfigurationManager } from '../debug-configuration-manager';\nimport { DebugSessionOptions } from '../debug-session-options';\nimport { SelectComponent, SelectOption } from '@theia/core/lib/browser/widgets/select-component';\nimport { QuickInputService } from '@theia/core/lib/browser';\nimport { nls } from '@theia/core/lib/common/nls';\n\ninterface DynamicPickItem { label: string, configurationType: string, request: string, providerType: string, workspaceFolderUri?: string }\n\nexport interface DebugConfigurationSelectProps {\n    manager: DebugConfigurationManager,\n    quickInputService: QuickInputService,\n    isMultiRoot: boolean\n}\n\nexport interface DebugProviderSelectState {\n    providerTypes: string[],\n    currentValue: string | undefined\n}\n\nexport class DebugConfigurationSelect extends React.Component<DebugConfigurationSelectProps, DebugProviderSelectState> {\n    protected static readonly SEPARATOR = '──────────';\n    protected static readonly PICK = '__PICK__';\n    protected static readonly NO_CONFIGURATION = '__NO_CONF__';\n    protected static readonly ADD_CONFIGURATION = '__ADD_CONF__';\n    protected static readonly CONFIG_MARKER = '__CONFIG__';\n\n    private readonly selectRef = React.createRef<SelectComponent>();\n    private manager: DebugConfigurationManager;\n    private quickInputService: QuickInputService;\n\n    constructor(props: DebugConfigurationSelectProps) {\n        super(props);\n        this.manager = props.manager;\n        this.quickInputService = props.quickInputService;\n        this.state = {\n            providerTypes: [],\n            currentValue: undefined\n        };\n        this.manager.onDidChangeConfigurationProviders(() => {\n            this.refreshDebugConfigurations();\n        });\n    }\n\n    override componentDidUpdate(): void {\n        // synchronize the currentValue with the selectComponent value\n        if (this.selectRef.current?.value !== this.currentValue) {\n            this.refreshDebugConfigurations();\n        }\n    }\n\n    override componentDidMount(): void {\n        this.refreshDebugConfigurations();\n    }\n\n    override render(): React.ReactNode {\n        return <SelectComponent\n            options={this.renderOptions()}\n            defaultValue={this.state.currentValue}\n            onChange={option => this.setCurrentConfiguration(option)}\n            onFocus={() => this.refreshDebugConfigurations()}\n            onBlur={() => this.refreshDebugConfigurations()}\n            ref={this.selectRef}\n        />;\n    }\n\n    protected get currentValue(): string {\n        const { current } = this.manager;\n        const matchingOption = this.getCurrentOption(current);\n        return matchingOption ? matchingOption.value! : current ? JSON.stringify(current) : DebugConfigurationSelect.NO_CONFIGURATION;\n    }\n\n    protected getCurrentOption(current: DebugSessionOptions | undefined): SelectOption | undefined {\n        if (!current || !this.selectRef.current) {\n            return;\n        }\n        const matchingOption = this.selectRef.current!.options.find(option =>\n            option.userData === DebugConfigurationSelect.CONFIG_MARKER\n            && this.matchesOption(JSON.parse(option.value!), current)\n        );\n        return matchingOption;\n    }\n\n    protected matchesOption(sessionOption: DebugSessionOptions, current: DebugSessionOptions): boolean {\n        const matchesNameAndWorkspace = sessionOption.name === current.name && sessionOption.workspaceFolderUri === current.workspaceFolderUri;\n        return DebugSessionOptions.isConfiguration(sessionOption) && DebugSessionOptions.isConfiguration(current)\n            ? matchesNameAndWorkspace && sessionOption.providerType === current.providerType\n            : matchesNameAndWorkspace;\n    }\n\n    protected readonly setCurrentConfiguration = (option: SelectOption) => {\n        const value = option.value;\n        if (!value) {\n            return false;\n        } else if (value === DebugConfigurationSelect.ADD_CONFIGURATION) {\n            setTimeout(() => this.manager.addConfiguration());\n        } else if (value.startsWith(DebugConfigurationSelect.PICK)) {\n            const providerType = this.parsePickValue(value);\n            this.selectDynamicConfigFromQuickPick(providerType);\n        } else {\n            const data = JSON.parse(value) as DebugSessionOptions;\n            this.manager.current = data;\n            this.refreshDebugConfigurations();\n        }\n    };\n\n    protected toPickValue(providerType: string): string {\n        return DebugConfigurationSelect.PICK + providerType;\n    }\n\n    protected parsePickValue(value: string): string {\n        return value.slice(DebugConfigurationSelect.PICK.length);\n    }\n\n    protected async resolveDynamicConfigurationPicks(providerType: string): Promise<DynamicPickItem[]> {\n        const configurationsOfProviderType =\n            (await this.manager.provideDynamicDebugConfigurations())[providerType];\n\n        if (!configurationsOfProviderType) {\n            return [];\n        }\n\n        return configurationsOfProviderType.map(options => ({\n            label: options.configuration.name,\n            configurationType: options.configuration.type,\n            request: options.configuration.request,\n            providerType: options.providerType,\n            description: this.toBaseName(options.workspaceFolderUri),\n            workspaceFolderUri: options.workspaceFolderUri\n        }));\n    }\n\n    protected async selectDynamicConfigFromQuickPick(providerType: string): Promise<void> {\n        const picks: DynamicPickItem[] = await this.resolveDynamicConfigurationPicks(providerType);\n\n        if (picks.length === 0) {\n            return;\n        }\n\n        const selected: DynamicPickItem | undefined = await this.quickInputService.showQuickPick(\n            picks,\n            {\n                placeholder: nls.localizeByDefault('Select Launch Configuration')\n            }\n        );\n\n        if (!selected) {\n            return;\n        }\n\n        const selectedConfiguration = {\n            name: selected.label,\n            type: selected.configurationType,\n            request: selected.request\n        };\n        this.manager.current = this.manager.find(selectedConfiguration, selected.workspaceFolderUri, selected.providerType);\n        this.refreshDebugConfigurations();\n    }\n\n    protected refreshDebugConfigurations = async () => {\n        const configsOptionsPerType = await this.manager.provideDynamicDebugConfigurations();\n        const providerTypes = [];\n        for (const [type, configurationsOptions] of Object.entries(configsOptionsPerType)) {\n            if (configurationsOptions.length > 0) {\n                providerTypes.push(type);\n            }\n        }\n\n        const value = this.currentValue;\n        this.selectRef.current!.value = value;\n        this.setState({ providerTypes, currentValue: value });\n    };\n\n    protected renderOptions(): SelectOption[] {\n        const options: SelectOption[] = [];\n\n        // Add non dynamic debug configurations\n        for (const config of this.manager.all) {\n            const value = JSON.stringify(config);\n            options.push({\n                value,\n                label: this.toName(config, this.props.isMultiRoot),\n                userData: DebugConfigurationSelect.CONFIG_MARKER\n            });\n        }\n\n        // Add recently used dynamic debug configurations\n        const { recentDynamicOptions } = this.manager;\n        if (recentDynamicOptions.length > 0) {\n            if (options.length > 0) {\n                options.push({\n                    separator: true\n                });\n            }\n            for (const dynamicOption of recentDynamicOptions) {\n                const value = JSON.stringify(dynamicOption);\n                options.push({\n                    value,\n                    label: this.toName(dynamicOption, this.props.isMultiRoot) + ' (' + dynamicOption.providerType + ')',\n                    userData: DebugConfigurationSelect.CONFIG_MARKER\n                });\n            }\n        }\n\n        // Placing a 'No Configuration' entry enables proper functioning of the 'onChange' event, by\n        // having an entry to switch from (E.g. a case where only one dynamic configuration type is available)\n        if (options.length === 0) {\n            const value = DebugConfigurationSelect.NO_CONFIGURATION;\n            options.push({\n                value,\n                label: nls.localizeByDefault('No Configurations')\n            });\n        }\n\n        // Add dynamic configuration types for quick pick selection\n        const types = this.state.providerTypes;\n        if (types.length > 0) {\n            options.push({\n                separator: true\n            });\n            for (const type of types) {\n                const value = this.toPickValue(type);\n                options.push({\n                    value,\n                    label: type + '...'\n                });\n            }\n        }\n\n        options.push({\n            separator: true\n        });\n        options.push({\n            value: DebugConfigurationSelect.ADD_CONFIGURATION,\n            label: nls.localizeByDefault('Add Configuration...')\n        });\n\n        return options;\n    }\n\n    protected toName(options: DebugSessionOptions, multiRoot: boolean): string {\n        const name = options.configuration?.name ?? options.name;\n        if (!options.workspaceFolderUri || !multiRoot) {\n            return name;\n        }\n        return `${name} (${this.toBaseName(options.workspaceFolderUri)})`;\n    }\n\n    protected toBaseName(uri: string | undefined): string {\n        return uri ? new URI(uri).path.base : '';\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ReactWidget, QuickInputService } from '@theia/core/lib/browser';\nimport { CommandRegistry, Disposable, DisposableCollection, MessageService } from '@theia/core/lib/common';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport * as React from '@theia/core/shared/react';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { DebugConsoleContribution } from '../console/debug-console-contribution';\nimport { DebugConfigurationManager } from '../debug-configuration-manager';\nimport { DebugCommands } from '../debug-frontend-application-contribution';\nimport { DebugSessionManager } from '../debug-session-manager';\nimport { DebugAction } from './debug-action';\nimport { DebugConfigurationSelect } from './debug-configuration-select';\nimport { DebugViewModel } from './debug-view-model';\nimport { nls } from '@theia/core/lib/common/nls';\n\n@injectable()\nexport class DebugConfigurationWidget extends ReactWidget {\n\n    @inject(CommandRegistry)\n    protected readonly commandRegistry: CommandRegistry;\n\n    @inject(DebugViewModel)\n    protected readonly viewModel: DebugViewModel;\n\n    @inject(DebugConfigurationManager)\n    protected readonly manager: DebugConfigurationManager;\n\n    @inject(DebugSessionManager)\n    protected readonly sessionManager: DebugSessionManager;\n\n    @inject(DebugConsoleContribution)\n    protected readonly debugConsole: DebugConsoleContribution;\n\n    @inject(QuickInputService)\n    protected readonly quickInputService: QuickInputService;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    @inject(MessageService)\n    protected readonly messageService: MessageService;\n\n    protected readonly onRender = new DisposableCollection();\n\n    @postConstruct()\n    protected init(): void {\n        this.addClass('debug-toolbar');\n        this.toDispose.push(this.manager.onDidChange(() => this.update()));\n        this.toDispose.push(this.workspaceService.onWorkspaceChanged(() => this.update()));\n        this.toDispose.push(this.workspaceService.onWorkspaceLocationChanged(() => this.update()));\n        this.scrollOptions = undefined;\n        this.update();\n    }\n\n    focus(): void {\n        if (!this.doFocus()) {\n            this.onRender.push(Disposable.create(() => this.doFocus()));\n            this.update();\n        }\n    }\n    protected doFocus(): boolean {\n        if (!this.stepRef) {\n            return false;\n        }\n        this.stepRef.focus();\n        return true;\n    }\n\n    protected stepRef: DebugAction | undefined;\n    protected setStepRef = (stepRef: DebugAction | null) => {\n        this.stepRef = stepRef || undefined;\n        this.onRender.dispose();\n    };\n\n    render(): React.ReactNode {\n        return <React.Fragment>\n            <DebugAction run={this.start} label={nls.localizeByDefault('Start Debugging')} iconClass='debug-start' ref={this.setStepRef} />\n            <DebugConfigurationSelect\n                manager={this.manager}\n                quickInputService={this.quickInputService}\n                isMultiRoot={this.workspaceService.isMultiRootWorkspaceOpened}\n            />\n            <DebugAction run={this.openConfiguration} label={nls.localizeByDefault('Open {0}', '\"launch.json\"')}\n                iconClass='settings-gear' />\n            <DebugAction run={this.openConsole} label={nls.localizeByDefault('Debug Console')} iconClass='terminal' />\n        </React.Fragment>;\n    }\n\n    protected readonly start = async () => {\n        let configuration;\n        try {\n            configuration = await this.manager.getSelectedConfiguration();\n        } catch (e) {\n            this.messageService.error(e.message);\n            return;\n        }\n\n        this.commandRegistry.executeCommand(DebugCommands.START.id, configuration);\n    };\n\n    protected readonly openConfiguration = () => this.manager.openConfiguration();\n    protected readonly openConsole = () => this.debugConsole.openView({\n        activate: true\n    });\n\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as React from '@theia/core/shared/react';\nimport { TreeElement } from '@theia/core/lib/browser/source-tree';\nimport { BreakpointManager } from '../breakpoint/breakpoint-manager';\nimport { ExceptionBreakpoint } from '../breakpoint/breakpoint-marker';\nimport { SingleTextInputDialog } from '@theia/core/lib/browser/dialogs';\nimport { TREE_NODE_INFO_CLASS } from '@theia/core/lib/browser';\nimport { nls } from '@theia/core';\n\nexport class DebugExceptionBreakpoint implements TreeElement {\n\n    readonly id: string;\n\n    constructor(\n        readonly data: ExceptionBreakpoint,\n        readonly breakpoints: BreakpointManager\n    ) {\n        this.id = data.raw.filter + ':' + data.raw.label;\n    }\n\n    render(): React.ReactNode {\n        return <div title={this.data.raw.description || this.data.raw.label} className='theia-source-breakpoint'>\n            <span className='theia-debug-breakpoint-icon' />\n            <input type='checkbox' checked={this.data.enabled} onChange={this.toggle} />\n            <span className='line-info'>\n                <span className='name'>{this.data.raw.label} </span>\n                {this.data.condition &&\n                    <span title={nls.localizeByDefault('Expression condition: {0}', this.data.condition)}\n                        className={'path ' + TREE_NODE_INFO_CLASS}>{this.data.condition} </span>}\n            </span>\n        </div>;\n    }\n\n    protected toggle = () => this.breakpoints.toggleExceptionBreakpoint(this.data.raw.filter);\n\n    async editCondition(): Promise<void> {\n        const inputDialog = new SingleTextInputDialog({\n            title: this.data.raw.label,\n            placeholder: this.data.raw.conditionDescription,\n            initialValue: this.data.condition\n        });\n        let condition = await inputDialog.open();\n        if (condition === undefined) {\n            return;\n        }\n        if (condition === '') {\n            condition = undefined;\n        }\n        if (condition !== this.data.condition) {\n            this.breakpoints.updateExceptionBreakpoint(this.data.raw.filter, { condition });\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct, interfaces, Container } from '@theia/core/shared/inversify';\nimport {\n    Message, ApplicationShell, Widget, BaseWidget, PanelLayout, StatefulWidget, ViewContainer, codicon, ViewContainerTitleOptions, WidgetManager\n} from '@theia/core/lib/browser';\nimport { DebugThreadsWidget } from './debug-threads-widget';\nimport { DebugStackFramesWidget } from './debug-stack-frames-widget';\nimport { DebugBreakpointsWidget } from './debug-breakpoints-widget';\nimport { DebugVariablesWidget } from './debug-variables-widget';\nimport { DebugToolBar } from './debug-toolbar-widget';\nimport { DebugViewModel } from './debug-view-model';\nimport { DebugWatchWidget } from './debug-watch-widget';\nimport { FrontendApplicationStateService } from '@theia/core/lib/browser/frontend-application-state';\n\nexport const DEBUG_VIEW_CONTAINER_TITLE_OPTIONS: ViewContainerTitleOptions = {\n    label: 'debug',\n    iconClass: codicon('debug-alt'),\n    closeable: true\n};\n\n@injectable()\nexport class DebugSessionWidget extends BaseWidget implements StatefulWidget, ApplicationShell.TrackableWidgetProvider {\n\n    static createContainer(parent: interfaces.Container): Container {\n        const child = new Container({ defaultScope: 'Singleton' });\n        child.parent = parent;\n        child.bind(DebugViewModel).toSelf();\n        child.bind(DebugToolBar).toSelf();\n        child.bind(DebugSessionWidget).toSelf();\n        return child;\n    }\n\n    static createWidget(parent: interfaces.Container): DebugSessionWidget {\n        return DebugSessionWidget.createContainer(parent).get(DebugSessionWidget);\n    }\n\n    static subwidgets = [DebugThreadsWidget, DebugStackFramesWidget, DebugVariablesWidget, DebugWatchWidget, DebugBreakpointsWidget];\n\n    protected viewContainer: ViewContainer;\n\n    @inject(ViewContainer.Factory)\n    protected readonly viewContainerFactory: ViewContainer.Factory;\n\n    @inject(DebugViewModel)\n    readonly model: DebugViewModel;\n\n    @inject(DebugToolBar)\n    protected readonly toolbar: DebugToolBar;\n\n    @inject(WidgetManager) protected readonly widgetManager: WidgetManager;\n    @inject(FrontendApplicationStateService) protected readonly stateService: FrontendApplicationStateService;\n\n    @postConstruct()\n    protected init(): void {\n        this.id = 'debug:session:' + this.model.id;\n        this.title.label = this.model.label;\n        this.title.caption = this.model.label;\n        this.title.closable = true;\n        this.title.iconClass = codicon('debug-alt');\n        this.addClass('theia-session-container');\n\n        this.viewContainer = this.viewContainerFactory({\n            id: 'debug:view-container:' + this.model.id\n        });\n        this.viewContainer.setTitleOptions(DEBUG_VIEW_CONTAINER_TITLE_OPTIONS);\n        this.stateService.reachedState('initialized_layout').then(() => {\n            for (const subwidget of DebugSessionWidget.subwidgets) {\n                const widgetPromises = [];\n                const existingWidget = this.widgetManager.tryGetPendingWidget(subwidget.FACTORY_ID);\n                // No other view container instantiated this widget during startup.\n                if (!existingWidget) {\n                    widgetPromises.push(this.widgetManager.getOrCreateWidget(subwidget.FACTORY_ID));\n                }\n                Promise.all(widgetPromises).then(widgets => widgets.forEach(widget => this.viewContainer.addWidget(widget)));\n            }\n        });\n\n        this.toDispose.pushAll([\n            this.toolbar,\n            this.viewContainer\n        ]);\n\n        const layout = this.layout = new PanelLayout();\n        layout.addWidget(this.toolbar);\n        layout.addWidget(this.viewContainer);\n    }\n\n    protected override onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.toolbar.focus();\n    }\n\n    protected override onAfterShow(msg: Message): void {\n        super.onAfterShow(msg);\n        this.getTrackableWidgets().forEach(w => w.update());\n    }\n\n    getTrackableWidgets(): Widget[] {\n        return [this.viewContainer];\n    }\n\n    storeState(): object {\n        return this.viewContainer.storeState();\n    }\n\n    restoreState(oldState: ViewContainer.State): void {\n        this.viewContainer.restoreState(oldState);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { TreeSource } from '@theia/core/lib/browser/source-tree';\nimport { DebugViewModel } from './debug-view-model';\nimport { DebugWatchExpression } from './debug-watch-expression';\nimport debounce = require('p-debounce');\n\n@injectable()\nexport class DebugWatchSource extends TreeSource {\n\n    @inject(DebugViewModel)\n    protected readonly model: DebugViewModel;\n\n    @postConstruct()\n    protected init(): void {\n        this.refresh();\n        this.toDispose.push(this.model.onDidChangeWatchExpressions(() => this.refresh()));\n    }\n\n    protected readonly refresh = debounce(() => this.fireDidChange(), 100);\n\n    async getElements(): Promise<IterableIterator<DebugWatchExpression>> {\n        return this.model.watchExpressions[Symbol.iterator]();\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct, interfaces, Container } from '@theia/core/shared/inversify';\nimport { MenuPath } from '@theia/core/lib/common';\nimport { SourceTreeWidget } from '@theia/core/lib/browser/source-tree';\nimport { DebugWatchSource } from './debug-watch-source';\nimport { DebugViewModel } from './debug-view-model';\nimport { nls } from '@theia/core/lib/common/nls';\n\n@injectable()\nexport class DebugWatchWidget extends SourceTreeWidget {\n\n    static CONTEXT_MENU: MenuPath = ['debug-watch-context-menu'];\n    static EDIT_MENU = [...DebugWatchWidget.CONTEXT_MENU, 'a_edit'];\n    static REMOVE_MENU = [...DebugWatchWidget.CONTEXT_MENU, 'b_remove'];\n    static FACTORY_ID = 'debug:watch';\n    static override createContainer(parent: interfaces.Container): Container {\n        const child = SourceTreeWidget.createContainer(parent, {\n            contextMenuPath: DebugWatchWidget.CONTEXT_MENU,\n            virtualized: false,\n            scrollIfActive: true\n        });\n        child.bind(DebugWatchSource).toSelf();\n        child.unbind(SourceTreeWidget);\n        child.bind(DebugWatchWidget).toSelf();\n        return child;\n    }\n    static createWidget(parent: interfaces.Container): DebugWatchWidget {\n        return DebugWatchWidget.createContainer(parent).get(DebugWatchWidget);\n    }\n\n    @inject(DebugViewModel)\n    readonly viewModel: DebugViewModel;\n\n    @inject(DebugWatchSource)\n    protected readonly variables: DebugWatchSource;\n\n    @postConstruct()\n    protected override init(): void {\n        super.init();\n        this.id = DebugWatchWidget.FACTORY_ID + ':' + this.viewModel.id;\n        this.title.label = nls.localizeByDefault('Watch');\n        this.toDispose.push(this.variables);\n        this.source = this.variables;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, postConstruct, inject, interfaces, Container } from '@theia/core/shared/inversify';\nimport {\n    BaseWidget, PanelLayout, Message, ApplicationShell, Widget, StatefulWidget, ViewContainer, codicon\n} from '@theia/core/lib/browser';\nimport { DebugSessionWidget } from './debug-session-widget';\nimport { DebugConfigurationWidget } from './debug-configuration-widget';\nimport { DebugViewModel } from './debug-view-model';\nimport { DebugSessionManager } from '../debug-session-manager';\nimport { ProgressBarFactory } from '@theia/core/lib/browser/progress-bar-factory';\nimport { nls } from '@theia/core/lib/common/nls';\n\n@injectable()\nexport class DebugWidget extends BaseWidget implements StatefulWidget, ApplicationShell.TrackableWidgetProvider {\n\n    static createContainer(parent: interfaces.Container): Container {\n        const child = DebugSessionWidget.createContainer(parent);\n        child.bind(DebugConfigurationWidget).toSelf();\n        child.bind(DebugWidget).toSelf();\n        return child;\n    }\n\n    static createWidget(parent: interfaces.Container): DebugWidget {\n        return DebugWidget.createContainer(parent).get(DebugWidget);\n    }\n\n    static ID = 'debug';\n    static LABEL = nls.localizeByDefault('Debug');\n\n    @inject(DebugViewModel)\n    readonly model: DebugViewModel;\n\n    @inject(DebugSessionManager)\n    readonly sessionManager: DebugSessionManager;\n\n    @inject(DebugConfigurationWidget)\n    protected readonly toolbar: DebugConfigurationWidget;\n\n    @inject(DebugSessionWidget)\n    protected readonly sessionWidget: DebugSessionWidget;\n\n    @inject(ProgressBarFactory)\n    protected readonly progressBarFactory: ProgressBarFactory;\n\n    @postConstruct()\n    protected init(): void {\n        this.id = DebugWidget.ID;\n        this.title.label = DebugWidget.LABEL;\n        this.title.caption = DebugWidget.LABEL;\n        this.title.closable = true;\n        this.title.iconClass = codicon('debug-alt');\n        this.addClass('theia-debug-container');\n        this.toDispose.pushAll([\n            this.toolbar,\n            this.sessionWidget,\n        ]);\n\n        const layout = this.layout = new PanelLayout();\n        layout.addWidget(this.toolbar);\n        layout.addWidget(this.sessionWidget);\n\n        this.toDispose.push(this.progressBarFactory({ container: this.node, insertMode: 'prepend', locationId: 'debug' }));\n    }\n\n    protected override onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.toolbar.focus();\n    }\n\n    getTrackableWidgets(): Widget[] {\n        return [this.sessionWidget];\n    }\n\n    storeState(): object {\n        return this.sessionWidget.storeState();\n    }\n\n    restoreState(oldState: ViewContainer.State): void {\n        this.sessionWidget.restoreState(oldState);\n    }\n\n}\n","\"use strict\";\n\n// This file was originally written by @drudru (https://github.com/drudru/ansi_up), MIT, 2011\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ANSI_COLORS = [[{ color: \"0, 0, 0\", \"class\": \"ansi-black\" }, { color: \"187, 0, 0\", \"class\": \"ansi-red\" }, { color: \"0, 187, 0\", \"class\": \"ansi-green\" }, { color: \"187, 187, 0\", \"class\": \"ansi-yellow\" }, { color: \"0, 0, 187\", \"class\": \"ansi-blue\" }, { color: \"187, 0, 187\", \"class\": \"ansi-magenta\" }, { color: \"0, 187, 187\", \"class\": \"ansi-cyan\" }, { color: \"255,255,255\", \"class\": \"ansi-white\" }], [{ color: \"85, 85, 85\", \"class\": \"ansi-bright-black\" }, { color: \"255, 85, 85\", \"class\": \"ansi-bright-red\" }, { color: \"0, 255, 0\", \"class\": \"ansi-bright-green\" }, { color: \"255, 255, 85\", \"class\": \"ansi-bright-yellow\" }, { color: \"85, 85, 255\", \"class\": \"ansi-bright-blue\" }, { color: \"255, 85, 255\", \"class\": \"ansi-bright-magenta\" }, { color: \"85, 255, 255\", \"class\": \"ansi-bright-cyan\" }, { color: \"255, 255, 255\", \"class\": \"ansi-bright-white\" }]];\n\nvar Anser = function () {\n    _createClass(Anser, null, [{\n        key: \"escapeForHtml\",\n\n\n        /**\n         * Anser.escapeForHtml\n         * Escape the input HTML.\n         *\n         * This does the minimum escaping of text to make it compliant with HTML.\n         * In particular, the '&','<', and '>' characters are escaped. This should\n         * be run prior to `ansiToHtml`.\n         *\n         * @name Anser.escapeForHtml\n         * @function\n         * @param {String} txt The input text (containing the ANSI snippets).\n         * @returns {String} The escaped html.\n         */\n        value: function escapeForHtml(txt) {\n            return new Anser().escapeForHtml(txt);\n        }\n\n        /**\n         * Anser.linkify\n         * Adds the links in the HTML.\n         *\n         * This replaces any links in the text with anchor tags that display the\n         * link. The links should have at least one whitespace character\n         * surrounding it. Also, you should apply this after you have run\n         * `ansiToHtml` on the text.\n         *\n         * @name Anser.linkify\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The HTML containing the <a> tags (unescaped).\n         */\n\n    }, {\n        key: \"linkify\",\n        value: function linkify(txt) {\n            return new Anser().linkify(txt);\n        }\n\n        /**\n         * Anser.ansiToHtml\n         * This replaces ANSI terminal escape codes with SPAN tags that wrap the\n         * content.\n         *\n         * This function only interprets ANSI SGR (Select Graphic Rendition) codes\n         * that can be represented in HTML.\n         * For example, cursor movement codes are ignored and hidden from output.\n         * The default style uses colors that are very close to the prescribed\n         * standard. The standard assumes that the text will have a black\n         * background. These colors are set as inline styles on the SPAN tags.\n         *\n         * Another option is to set `use_classes: true` in the options argument.\n         * This will instead set classes on the spans so the colors can be set via\n         * CSS. The class names used are of the format `ansi-*-fg/bg` and\n         * `ansi-bright-*-fg/bg` where `*` is the color name,\n         * i.e black/red/green/yellow/blue/magenta/cyan/white.\n         *\n         * @name Anser.ansiToHtml\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed to the ansiToHTML method.\n         * @returns {String} The HTML output.\n         */\n\n    }, {\n        key: \"ansiToHtml\",\n        value: function ansiToHtml(txt, options) {\n            return new Anser().ansiToHtml(txt, options);\n        }\n\n        /**\n         * Anser.ansiToJson\n         * Converts ANSI input into JSON output.\n         *\n         * @name Anser.ansiToJson\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed to the ansiToHTML method.\n         * @returns {String} The HTML output.\n         */\n\n    }, {\n        key: \"ansiToJson\",\n        value: function ansiToJson(txt, options) {\n            return new Anser().ansiToJson(txt, options);\n        }\n\n        /**\n         * Anser.ansiToText\n         * Converts ANSI input into text output.\n         *\n         * @name Anser.ansiToText\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The text output.\n         */\n\n    }, {\n        key: \"ansiToText\",\n        value: function ansiToText(txt) {\n            return new Anser().ansiToText(txt);\n        }\n\n        /**\n         * Anser\n         * The `Anser` class.\n         *\n         * @name Anser\n         * @function\n         * @returns {Anser}\n         */\n\n    }]);\n\n    function Anser() {\n        _classCallCheck(this, Anser);\n\n        this.fg = this.bg = this.fg_truecolor = this.bg_truecolor = null;\n        this.bright = 0;\n        this.decorations = [];\n    }\n\n    /**\n     * setupPalette\n     * Sets up the palette.\n     *\n     * @name setupPalette\n     * @function\n     */\n\n\n    _createClass(Anser, [{\n        key: \"setupPalette\",\n        value: function setupPalette() {\n            this.PALETTE_COLORS = [];\n\n            // Index 0..15 : System color\n            for (var i = 0; i < 2; ++i) {\n                for (var j = 0; j < 8; ++j) {\n                    this.PALETTE_COLORS.push(ANSI_COLORS[i][j].color);\n                }\n            }\n\n            // Index 16..231 : RGB 6x6x6\n            // https://gist.github.com/jasonm23/2868981#file-xterm-256color-yaml\n            var levels = [0, 95, 135, 175, 215, 255];\n            var format = function format(r, g, b) {\n                return levels[r] + \", \" + levels[g] + \", \" + levels[b];\n            };\n            var r = void 0,\n                g = void 0,\n                b = void 0;\n            for (var _r = 0; _r < 6; ++_r) {\n                for (var _g = 0; _g < 6; ++_g) {\n                    for (var _b = 0; _b < 6; ++_b) {\n                        this.PALETTE_COLORS.push(format(_r, _g, _b));\n                    }\n                }\n            }\n\n            // Index 232..255 : Grayscale\n            var level = 8;\n            for (var _i = 0; _i < 24; ++_i, level += 10) {\n                this.PALETTE_COLORS.push(format(level, level, level));\n            }\n        }\n\n        /**\n         * escapeForHtml\n         * Escapes the input text.\n         *\n         * @name escapeForHtml\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The escpaed HTML output.\n         */\n\n    }, {\n        key: \"escapeForHtml\",\n        value: function escapeForHtml(txt) {\n            return txt.replace(/[&<>\\\"]/gm, function (str) {\n                return str == \"&\" ? \"&amp;\" : str == '\"' ? \"&quot;\" : str == \"<\" ? \"&lt;\" : str == \">\" ? \"&gt;\" : \"\";\n            });\n        }\n\n        /**\n         * linkify\n         * Adds HTML link elements.\n         *\n         * @name linkify\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The HTML output containing link elements.\n         */\n\n    }, {\n        key: \"linkify\",\n        value: function linkify(txt) {\n            return txt.replace(/(https?:\\/\\/[^\\s]+)/gm, function (str) {\n                return \"<a href=\\\"\" + str + \"\\\">\" + str + \"</a>\";\n            });\n        }\n\n        /**\n         * ansiToHtml\n         * Converts ANSI input into HTML output.\n         *\n         * @name ansiToHtml\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed ot the `process` method.\n         * @returns {String} The HTML output.\n         */\n\n    }, {\n        key: \"ansiToHtml\",\n        value: function ansiToHtml(txt, options) {\n            return this.process(txt, options, true);\n        }\n\n        /**\n         * ansiToJson\n         * Converts ANSI input into HTML output.\n         *\n         * @name ansiToJson\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed ot the `process` method.\n         * @returns {String} The JSON output.\n         */\n\n    }, {\n        key: \"ansiToJson\",\n        value: function ansiToJson(txt, options) {\n            options = options || {};\n            options.json = true;\n            options.clearLine = false;\n            return this.process(txt, options, true);\n        }\n\n        /**\n         * ansiToText\n         * Converts ANSI input into HTML output.\n         *\n         * @name ansiToText\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The text output.\n         */\n\n    }, {\n        key: \"ansiToText\",\n        value: function ansiToText(txt) {\n            return this.process(txt, {}, false);\n        }\n\n        /**\n         * process\n         * Processes the input.\n         *\n         * @name process\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options An object passed to `processChunk` method, extended with:\n         *\n         *  - `json` (Boolean): If `true`, the result will be an object.\n         *  - `use_classes` (Boolean): If `true`, HTML classes will be appended to the HTML output.\n         *\n         * @param {Boolean} markup\n         */\n\n    }, {\n        key: \"process\",\n        value: function process(txt, options, markup) {\n            var _this = this;\n\n            var self = this;\n            var raw_text_chunks = txt.split(/\\033\\[/);\n            var first_chunk = raw_text_chunks.shift(); // the first chunk is not the result of the split\n\n            if (options === undefined || options === null) {\n                options = {};\n            }\n            options.clearLine = /\\r/.test(txt); // check for Carriage Return\n            var color_chunks = raw_text_chunks.map(function (chunk) {\n                return _this.processChunk(chunk, options, markup);\n            });\n\n            if (options && options.json) {\n                var first = self.processChunkJson(\"\");\n                first.content = first_chunk;\n                first.clearLine = options.clearLine;\n                color_chunks.unshift(first);\n                if (options.remove_empty) {\n                    color_chunks = color_chunks.filter(function (c) {\n                        return !c.isEmpty();\n                    });\n                }\n                return color_chunks;\n            } else {\n                color_chunks.unshift(first_chunk);\n            }\n\n            return color_chunks.join(\"\");\n        }\n\n        /**\n         * processChunkJson\n         * Processes the current chunk into json output.\n         *\n         * @name processChunkJson\n         * @function\n         * @param {String} text The input text.\n         * @param {Object} options An object containing the following fields:\n         *\n         *  - `json` (Boolean): If `true`, the result will be an object.\n         *  - `use_classes` (Boolean): If `true`, HTML classes will be appended to the HTML output.\n         *\n         * @param {Boolean} markup If false, the colors will not be parsed.\n         * @return {Object} The result object:\n         *\n         *  - `content` (String): The text.\n         *  - `fg` (String|null): The foreground color.\n         *  - `bg` (String|null): The background color.\n         *  - `fg_truecolor` (String|null): The foreground true color (if 16m color is enabled).\n         *  - `bg_truecolor` (String|null): The background true color (if 16m color is enabled).\n         *  - `clearLine` (Boolean): `true` if a carriageReturn \\r was fount at end of line.\n         *  - `was_processed` (Bolean): `true` if the colors were processed, `false` otherwise.\n         *  - `isEmpty` (Function): A function returning `true` if the content is empty, or `false` otherwise.\n         *\n         */\n\n    }, {\n        key: \"processChunkJson\",\n        value: function processChunkJson(text, options, markup) {\n\n            // Are we using classes or styles?\n            options = typeof options == \"undefined\" ? {} : options;\n            var use_classes = options.use_classes = typeof options.use_classes != \"undefined\" && options.use_classes;\n            var key = options.key = use_classes ? \"class\" : \"color\";\n\n            var result = {\n                content: text,\n                fg: null,\n                bg: null,\n                fg_truecolor: null,\n                bg_truecolor: null,\n                isInverted: false,\n                clearLine: options.clearLine,\n                decoration: null,\n                decorations: [],\n                was_processed: false,\n                isEmpty: function isEmpty() {\n                    return !result.content;\n                }\n            };\n\n            // Each \"chunk\" is the text after the CSI (ESC + \"[\") and before the next CSI/EOF.\n            //\n            // This regex matches four groups within a chunk.\n            //\n            // The first and third groups match code type.\n            // We supported only SGR command. It has empty first group and \"m\" in third.\n            //\n            // The second group matches all of the number+semicolon command sequences\n            // before the \"m\" (or other trailing) character.\n            // These are the graphics or SGR commands.\n            //\n            // The last group is the text (including newlines) that is colored by\n            // the other group\"s commands.\n            var matches = text.match(/^([!\\x3c-\\x3f]*)([\\d;]*)([\\x20-\\x2c]*[\\x40-\\x7e])([\\s\\S]*)/m);\n\n            if (!matches) return result;\n\n            var orig_txt = result.content = matches[4];\n            var nums = matches[2].split(\";\");\n\n            // We currently support only \"SGR\" (Select Graphic Rendition)\n            // Simply ignore if not a SGR command.\n            if (matches[1] !== \"\" || matches[3] !== \"m\") {\n                return result;\n            }\n\n            if (!markup) {\n                return result;\n            }\n\n            var self = this;\n\n            while (nums.length > 0) {\n                var num_str = nums.shift();\n                var num = parseInt(num_str);\n\n                if (isNaN(num) || num === 0) {\n                    self.fg = self.bg = null;\n                    self.decorations = [];\n                } else if (num === 1) {\n                    self.decorations.push(\"bold\");\n                } else if (num === 2) {\n                    self.decorations.push(\"dim\");\n                    // Enable code 2 to get string\n                } else if (num === 3) {\n                    self.decorations.push(\"italic\");\n                } else if (num === 4) {\n                    self.decorations.push(\"underline\");\n                } else if (num === 5) {\n                    self.decorations.push(\"blink\");\n                } else if (num === 7) {\n                    self.decorations.push(\"reverse\");\n                } else if (num === 8) {\n                    self.decorations.push(\"hidden\");\n                    // Enable code 9 to get strikethrough\n                } else if (num === 9) {\n                    self.decorations.push(\"strikethrough\");\n                    /**\n                     * Add several widely used style codes\n                     * @see https://en.wikipedia.org/wiki/ANSI_escape_code#SGR_(Select_Graphic_Rendition)_parameters\n                     */\n                } else if (num === 21) {\n                    self.removeDecoration(\"bold\");\n                } else if (num === 22) {\n                    self.removeDecoration(\"bold\");\n                    self.removeDecoration(\"dim\");\n                } else if (num === 23) {\n                    self.removeDecoration(\"italic\");\n                } else if (num === 24) {\n                    self.removeDecoration(\"underline\");\n                } else if (num === 25) {\n                    self.removeDecoration(\"blink\");\n                } else if (num === 27) {\n                    self.removeDecoration(\"reverse\");\n                } else if (num === 28) {\n                    self.removeDecoration(\"hidden\");\n                } else if (num === 29) {\n                    self.removeDecoration(\"strikethrough\");\n                } else if (num === 39) {\n                    self.fg = null;\n                } else if (num === 49) {\n                    self.bg = null;\n                    // Foreground color\n                } else if (num >= 30 && num < 38) {\n                    self.fg = ANSI_COLORS[0][num % 10][key];\n                    // Foreground bright color\n                } else if (num >= 90 && num < 98) {\n                    self.fg = ANSI_COLORS[1][num % 10][key];\n                    // Background color\n                } else if (num >= 40 && num < 48) {\n                    self.bg = ANSI_COLORS[0][num % 10][key];\n                    // Background bright color\n                } else if (num >= 100 && num < 108) {\n                    self.bg = ANSI_COLORS[1][num % 10][key];\n                } else if (num === 38 || num === 48) {\n                    // extend color (38=fg, 48=bg)\n                    var is_foreground = num === 38;\n                    if (nums.length >= 1) {\n                        var mode = nums.shift();\n                        if (mode === \"5\" && nums.length >= 1) {\n                            // palette color\n                            var palette_index = parseInt(nums.shift());\n                            if (palette_index >= 0 && palette_index <= 255) {\n                                if (!use_classes) {\n                                    if (!this.PALETTE_COLORS) {\n                                        self.setupPalette();\n                                    }\n                                    if (is_foreground) {\n                                        self.fg = this.PALETTE_COLORS[palette_index];\n                                    } else {\n                                        self.bg = this.PALETTE_COLORS[palette_index];\n                                    }\n                                } else {\n                                    var klass = palette_index >= 16 ? \"ansi-palette-\" + palette_index : ANSI_COLORS[palette_index > 7 ? 1 : 0][palette_index % 8][\"class\"];\n                                    if (is_foreground) {\n                                        self.fg = klass;\n                                    } else {\n                                        self.bg = klass;\n                                    }\n                                }\n                            }\n                        } else if (mode === \"2\" && nums.length >= 3) {\n                            // true color\n                            var r = parseInt(nums.shift());\n                            var g = parseInt(nums.shift());\n                            var b = parseInt(nums.shift());\n                            if (r >= 0 && r <= 255 && g >= 0 && g <= 255 && b >= 0 && b <= 255) {\n                                var color = r + \", \" + g + \", \" + b;\n                                if (!use_classes) {\n                                    if (is_foreground) {\n                                        self.fg = color;\n                                    } else {\n                                        self.bg = color;\n                                    }\n                                } else {\n                                    if (is_foreground) {\n                                        self.fg = \"ansi-truecolor\";\n                                        self.fg_truecolor = color;\n                                    } else {\n                                        self.bg = \"ansi-truecolor\";\n                                        self.bg_truecolor = color;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (self.fg === null && self.bg === null && self.decorations.length === 0) {\n                return result;\n            } else {\n                var styles = [];\n                var classes = [];\n                var data = {};\n\n                result.fg = self.fg;\n                result.bg = self.bg;\n                result.fg_truecolor = self.fg_truecolor;\n                result.bg_truecolor = self.bg_truecolor;\n                result.decorations = self.decorations;\n                result.decoration = self.decorations.slice(-1).pop() || null;\n                result.was_processed = true;\n\n                return result;\n            }\n        }\n\n        /**\n         * processChunk\n         * Processes the current chunk of text.\n         *\n         * @name processChunk\n         * @function\n         * @param {String} text The input text.\n         * @param {Object} options An object containing the following fields:\n         *\n         *  - `json` (Boolean): If `true`, the result will be an object.\n         *  - `use_classes` (Boolean): If `true`, HTML classes will be appended to the HTML output.\n         *\n         * @param {Boolean} markup If false, the colors will not be parsed.\n         * @return {Object|String} The result (object if `json` is wanted back or string otherwise).\n         */\n\n    }, {\n        key: \"processChunk\",\n        value: function processChunk(text, options, markup) {\n            var _this2 = this;\n\n            options = options || {};\n            var jsonChunk = this.processChunkJson(text, options, markup);\n            var use_classes = options.use_classes;\n\n            // \"reverse\" decoration reverses foreground and background colors\n            jsonChunk.decorations = jsonChunk.decorations.filter(function (decoration) {\n                if (decoration === \"reverse\") {\n                    // when reversing, missing colors are defaulted to black (bg) and white (fg)\n                    if (!jsonChunk.fg) {\n                        jsonChunk.fg = ANSI_COLORS[0][7][use_classes ? \"class\" : \"color\"];\n                    }\n                    if (!jsonChunk.bg) {\n                        jsonChunk.bg = ANSI_COLORS[0][0][use_classes ? \"class\" : \"color\"];\n                    }\n                    var tmpFg = jsonChunk.fg;\n                    jsonChunk.fg = jsonChunk.bg;\n                    jsonChunk.bg = tmpFg;\n                    var tmpFgTrue = jsonChunk.fg_truecolor;\n                    jsonChunk.fg_truecolor = jsonChunk.bg_truecolor;\n                    jsonChunk.bg_truecolor = tmpFgTrue;\n                    jsonChunk.isInverted = true;\n                    return false;\n                }\n                return true;\n            });\n\n            if (options.json) {\n                return jsonChunk;\n            }\n            if (jsonChunk.isEmpty()) {\n                return \"\";\n            }\n            if (!jsonChunk.was_processed) {\n                return jsonChunk.content;\n            }\n\n            var colors = [];\n            var decorations = [];\n            var textDecorations = [];\n            var data = {};\n\n            var render_data = function render_data(data) {\n                var fragments = [];\n                var key = void 0;\n                for (key in data) {\n                    if (data.hasOwnProperty(key)) {\n                        fragments.push(\"data-\" + key + \"=\\\"\" + _this2.escapeForHtml(data[key]) + \"\\\"\");\n                    }\n                }\n                return fragments.length > 0 ? \" \" + fragments.join(\" \") : \"\";\n            };\n\n            if (jsonChunk.isInverted) {\n                data[\"ansi-is-inverted\"] = \"true\";\n            }\n\n            if (jsonChunk.fg) {\n                if (use_classes) {\n                    colors.push(jsonChunk.fg + \"-fg\");\n                    if (jsonChunk.fg_truecolor !== null) {\n                        data[\"ansi-truecolor-fg\"] = jsonChunk.fg_truecolor;\n                        jsonChunk.fg_truecolor = null;\n                    }\n                } else {\n                    colors.push(\"color:rgb(\" + jsonChunk.fg + \")\");\n                }\n            }\n\n            if (jsonChunk.bg) {\n                if (use_classes) {\n                    colors.push(jsonChunk.bg + \"-bg\");\n                    if (jsonChunk.bg_truecolor !== null) {\n                        data[\"ansi-truecolor-bg\"] = jsonChunk.bg_truecolor;\n                        jsonChunk.bg_truecolor = null;\n                    }\n                } else {\n                    colors.push(\"background-color:rgb(\" + jsonChunk.bg + \")\");\n                }\n            }\n\n            jsonChunk.decorations.forEach(function (decoration) {\n                // use classes\n                if (use_classes) {\n                    decorations.push(\"ansi-\" + decoration);\n                    return;\n                }\n                // use styles\n                if (decoration === \"bold\") {\n                    decorations.push(\"font-weight:bold\");\n                } else if (decoration === \"dim\") {\n                    decorations.push(\"opacity:0.5\");\n                } else if (decoration === \"italic\") {\n                    decorations.push(\"font-style:italic\");\n                } else if (decoration === \"hidden\") {\n                    decorations.push(\"visibility:hidden\");\n                } else if (decoration === \"strikethrough\") {\n                    textDecorations.push(\"line-through\");\n                } else {\n                    // underline and blink are treated here\n                    textDecorations.push(decoration);\n                }\n            });\n\n            if (textDecorations.length) {\n                decorations.push(\"text-decoration:\" + textDecorations.join(\" \"));\n            }\n\n            if (use_classes) {\n                return \"<span class=\\\"\" + colors.concat(decorations).join(\" \") + \"\\\"\" + render_data(data) + \">\" + jsonChunk.content + \"</span>\";\n            } else {\n                return \"<span style=\\\"\" + colors.concat(decorations).join(\";\") + \"\\\"\" + render_data(data) + \">\" + jsonChunk.content + \"</span>\";\n            }\n        }\n    }, {\n        key: \"removeDecoration\",\n        value: function removeDecoration(decoration) {\n            var index = this.decorations.indexOf(decoration);\n\n            if (index >= 0) {\n                this.decorations.splice(index, 1);\n            }\n        }\n    }]);\n\n    return Anser;\n}();\n\nmodule.exports = Anser;"],"names":[],"sourceRoot":""}