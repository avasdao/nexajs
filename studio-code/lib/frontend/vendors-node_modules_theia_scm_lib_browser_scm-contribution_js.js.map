{"version":3,"file":"vendors-node_modules_theia_scm_lib_browser_scm-contribution_js.js","mappings":"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","sources":["webpack:///./node_modules/@theia/scm/src/browser/style/scm-amend-component.css?./node_modules/css-loader/dist/cjs.js","webpack:///./node_modules/@theia/scm/src/browser/decorations/scm-decorations-service.ts?","webpack:///./node_modules/@theia/scm/src/browser/dirty-diff/content-lines.ts?","webpack:///./node_modules/@theia/scm/src/browser/dirty-diff/diff-computer.ts?","webpack:///./node_modules/@theia/scm/src/browser/dirty-diff/dirty-diff-decorator.ts?","webpack:///./node_modules/@theia/scm/src/browser/scm-amend-component.tsx?","webpack:///./node_modules/@theia/scm/src/browser/scm-amend-widget.tsx?","webpack:///./node_modules/@theia/scm/src/browser/scm-commit-widget.tsx?","webpack:///./node_modules/@theia/scm/src/browser/scm-contribution.ts?","webpack:///./node_modules/@theia/scm/src/browser/scm-no-repository-widget.tsx?","webpack:///./node_modules/@theia/scm/src/browser/scm-preferences.ts?","webpack:///./node_modules/@theia/scm/src/browser/scm-quick-open-service.ts?","webpack:///./node_modules/@theia/scm/src/browser/scm-widget.tsx?","webpack:///./node_modules/src/convert/xml.js?","webpack:///./node_modules/@theia/scm/src/browser/style/scm-amend-component.css?"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.theia-scm-commit-container {\n  display: flex;\n  flex-direction: column;\n  border-top: 1px solid var(--theia-sideBarSectionHeader-border);\n  width: 100%;\n  padding-top: 6px;\n}\n\n.theia-scm-amend-outer-container {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  overflow: auto;\n}\n\n.theia-scm-commit-and-button {\n  display: flex;\n  white-space: nowrap;\n  overflow: hidden;\n  width: 100%;\n}\n\n.theia-scm-commit-avatar-and-text {\n  display: flex;\n  white-space: nowrap;\n  overflow: hidden;\n  width: 100%;\n  padding-top: 2px;\n}\n\n.theia-scm-commit-avatar-and-text img {\n  width: 27px;\n}\n\n.theia-scm-commit-details {\n  display: flex;\n  flex-direction: column;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 100%;\n}\n\n.theia-scm-commit-message-avatar {\n  margin-right: 5px;\n}\n\n.theia-scm-commit-message-summary {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.theia-scm-commit-message-time {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: var(--theia-descriptionForeground);\n  font-size: smaller;\n}\n\n.theia-scm-flex-container-center {\n  display: flex;\n  align-items: center;\n}\n\n.theia-scm-scrolling-container {\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  border-top: 0;\n  border-bottom: 0;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@theia/scm/src/browser/style/scm-amend-component.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,aAAa;EACb,sBAAsB;EACtB,8DAA8D;EAC9D,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,WAAW;EACX,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,gBAAgB;EAChB,WAAW;AACb;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,gBAAgB;EAChB,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,gBAAgB;EAChB,uBAAuB;EACvB,WAAW;AACb;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,mBAAmB;EACnB,gBAAgB;EAChB,uBAAuB;AACzB;;AAEA;EACE,mBAAmB;EACnB,gBAAgB;EAChB,uBAAuB;EACvB,yCAAyC;EACzC,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,gBAAgB;;EAEhB,aAAa;EACb,gBAAgB;EAChB,cAAc;EACd,iBAAiB;EACjB,aAAa;EACb,gBAAgB;AAClB\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2018 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-scm-commit-container {\\n  display: flex;\\n  flex-direction: column;\\n  border-top: 1px solid var(--theia-sideBarSectionHeader-border);\\n  width: 100%;\\n  padding-top: 6px;\\n}\\n\\n.theia-scm-amend-outer-container {\\n  display: flex;\\n  flex-direction: column;\\n  width: 100%;\\n  overflow: auto;\\n}\\n\\n.theia-scm-commit-and-button {\\n  display: flex;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  width: 100%;\\n}\\n\\n.theia-scm-commit-avatar-and-text {\\n  display: flex;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  width: 100%;\\n  padding-top: 2px;\\n}\\n\\n.theia-scm-commit-avatar-and-text img {\\n  width: 27px;\\n}\\n\\n.theia-scm-commit-details {\\n  display: flex;\\n  flex-direction: column;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  width: 100%;\\n}\\n\\n.theia-scm-commit-message-avatar {\\n  margin-right: 5px;\\n}\\n\\n.theia-scm-commit-message-summary {\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.theia-scm-commit-message-time {\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  color: var(--theia-descriptionForeground);\\n  font-size: smaller;\\n}\\n\\n.theia-scm-flex-container-center {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.theia-scm-scrolling-container {\\n  position: relative;\\n  width: 100%;\\n  overflow: hidden;\\n\\n  margin-top: 0;\\n  margin-bottom: 0;\\n  padding-top: 0;\\n  padding-bottom: 0;\\n  border-top: 0;\\n  border-bottom: 0;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { ResourceProvider } from '@theia/core';\nimport { DirtyDiffDecorator } from '../dirty-diff/dirty-diff-decorator';\nimport { DiffComputer } from '../dirty-diff/diff-computer';\nimport { ContentLines } from '../dirty-diff/content-lines';\nimport { EditorManager, TextEditor } from '@theia/editor/lib/browser';\nimport { ScmService } from '../scm-service';\n\n@injectable()\nexport class ScmDecorationsService {\n    private readonly diffComputer: DiffComputer;\n    private dirtyState: boolean = true;\n\n    constructor(@inject(DirtyDiffDecorator) protected readonly decorator: DirtyDiffDecorator,\n        @inject(ScmService) protected readonly scmService: ScmService,\n        @inject(EditorManager) protected readonly editorManager: EditorManager,\n        @inject(ResourceProvider) protected readonly resourceProvider: ResourceProvider) {\n        this.diffComputer = new DiffComputer();\n        this.editorManager.onCreated(async editor => this.applyEditorDecorations(editor.editor));\n        this.scmService.onDidAddRepository(repository => repository.provider.onDidChange(() => {\n            const editor = this.editorManager.currentEditor;\n            if (editor) {\n                if (this.dirtyState) {\n                    this.applyEditorDecorations(editor.editor);\n                    this.dirtyState = false;\n                } else {\n                    /** onDidChange event might be called several times one after another, so need to prevent repeated events. */\n                    setTimeout(() => {\n                        this.dirtyState = true;\n                    }, 500);\n                }\n            }\n        }));\n        this.scmService.onDidChangeSelectedRepository(() => {\n            const editor = this.editorManager.currentEditor;\n            if (editor) {\n                this.applyEditorDecorations(editor.editor);\n            }\n        });\n    }\n\n    async applyEditorDecorations(editor: TextEditor): Promise<void> {\n        const currentRepo = this.scmService.selectedRepository;\n        if (currentRepo) {\n            try {\n                const uri = editor.uri.withScheme(currentRepo.provider.id).withQuery(`{\"ref\":\"\", \"path\":\"${editor.uri.path.toString()}\"}`);\n                const previousResource = await this.resourceProvider(uri);\n                const previousContent = await previousResource.readContents();\n                const previousLines = ContentLines.fromString(previousContent);\n                const currentResource = await this.resourceProvider(editor.uri);\n                const currentContent = await currentResource.readContents();\n                const currentLines = ContentLines.fromString(currentContent);\n                const { added, removed, modified } = this.diffComputer.computeDirtyDiff(ContentLines.arrayLike(previousLines), ContentLines.arrayLike(currentLines));\n                this.decorator.applyDecorations({ editor: editor, added, removed, modified });\n                currentResource.dispose();\n                previousResource.dispose();\n            } catch (e) {\n                // Scm resource may not be found, do nothing.\n            }\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport interface ContentLines extends ArrayLike<string> {\n    readonly length: number,\n    getLineContent: (line: number) => string,\n}\n\nexport interface ContentLinesArrayLike extends ContentLines, ArrayLike<string> {\n    [Symbol.iterator]: () => IterableIterator<string>,\n    readonly [n: number]: string;\n}\n\nexport namespace ContentLines {\n    const NL = '\\n'.charCodeAt(0);\n    const CR = '\\r'.charCodeAt(0);\n\n    export function fromString(content: string): ContentLines {\n        const computeLineStarts: (s: string) => number[] = s => {\n            const result: number[] = [0];\n            for (let i = 0; i < s.length; i++) {\n                const chr = s.charCodeAt(i);\n                if (chr === CR) {\n                    if (i + 1 < s.length && s.charCodeAt(i + 1) === NL) {\n                        result[result.length] = i + 2;\n                        i++;\n                    } else {\n                        result[result.length] = i + 1;\n                    }\n                } else if (chr === NL) {\n                    result[result.length] = i + 1;\n                }\n            }\n            return result;\n        };\n        const lineStarts = computeLineStarts(content);\n\n        return {\n            length: lineStarts.length,\n            getLineContent: line => {\n                if (line >= lineStarts.length) {\n                    throw new Error('line index out of bounds');\n                }\n                const start = lineStarts[line];\n                let end = (line === lineStarts.length - 1) ? undefined : lineStarts[line + 1] - 1;\n                if (!!end && content.charCodeAt(end - 1) === CR) {\n                    end--; // ignore CR at the end\n                }\n                const lineContent = content.substring(start, end);\n                return lineContent;\n            }\n        };\n    }\n\n    export function arrayLike(lines: ContentLines): ContentLinesArrayLike {\n        return new Proxy(lines as ContentLines, getProxyHandler()) as ContentLinesArrayLike;\n    }\n\n    function getProxyHandler(): ProxyHandler<ContentLinesArrayLike> {\n        return {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            get(target: ContentLines, p: PropertyKey): any {\n                switch (p) {\n                    case 'prototype':\n                        return undefined;\n                    case 'length':\n                        return target.length;\n                    case 'slice':\n                        return (start?: number, end?: number) => {\n                            if (start !== undefined) {\n                                return [start, (end !== undefined ? end - 1 : target.length - 1)];\n                            }\n                            return [0, target.length - 1];\n                        };\n                    case Symbol.iterator:\n                        return function* (): IterableIterator<string> {\n                            for (let i = 0; i < target.length; i++) {\n                                yield target.getLineContent(i);\n                            }\n                        };\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                const index = Number.parseInt(p as any);\n                if (Number.isInteger(index)) {\n                    if (index >= 0 && index < target.length) {\n                        const value = target.getLineContent(index);\n                        if (value === undefined) {\n                            console.log(target);\n                        }\n                        return value;\n                    } else {\n                        return undefined;\n                    }\n                }\n                throw new Error(`get ${String(p)} not implemented`);\n            }\n        };\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as jsdiff from 'diff';\nimport { ContentLinesArrayLike } from './content-lines';\n\nexport class DiffComputer {\n\n    computeDiff(previous: ContentLinesArrayLike, current: ContentLinesArrayLike): DiffResult[] {\n        const diffResult = diffArrays(previous, current);\n        return diffResult;\n    }\n\n    computeDirtyDiff(previous: ContentLinesArrayLike, current: ContentLinesArrayLike): DirtyDiff {\n        const added: LineRange[] = [];\n        const removed: number[] = [];\n        const modified: LineRange[] = [];\n        const changes = this.computeDiff(previous, current);\n        let lastLine = -1;\n        for (let i = 0; i < changes.length; i++) {\n            const change = changes[i];\n            const next = changes[i + 1];\n            if (change.added) {\n                // case: addition\n                const start = lastLine + 1;\n                const end = lastLine + change.count!;\n                added.push(<LineRange>{ start, end });\n                lastLine = end;\n            } else if (change.removed && next && next.added) {\n                const isFirstChange = i === 0;\n                const isLastChange = i === changes.length - 2;\n                const isNextEmptyLine = next.value.length > 0 && current[next.value[0]].length === 0;\n                const isPrevEmptyLine = change.value.length > 0 && previous[change.value[0]].length === 0;\n\n                if (isFirstChange && isNextEmptyLine) {\n                    // special case: removing at the beginning\n                    removed.push(0);\n                } else if (isFirstChange && isPrevEmptyLine) {\n                    // special case: adding at the beginning\n                    const start = 0;\n                    const end = next.count! - 1;\n                    added.push(<LineRange>{ start, end });\n                    lastLine = end;\n                } else if (isLastChange && isNextEmptyLine) {\n                    removed.push(lastLine + 1 /* = empty line */);\n                } else {\n                    // default case is a modification\n                    const start = lastLine + 1;\n                    const end = lastLine + next.count!;\n                    modified.push(<LineRange>{ start, end });\n                    lastLine = end;\n                }\n                i++; // consume next eagerly\n            } else if (change.removed && !(next && next.added)) {\n                removed.push(Math.max(0, lastLine));\n            } else {\n                lastLine += change.count!;\n            }\n        }\n        return <DirtyDiff>{ added, removed, modified };\n    }\n\n}\n\nclass ArrayDiff extends jsdiff.Diff {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    override tokenize(value: any): any {\n        return value;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    override join(value: any): any {\n        return value;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    override removeEmpty(value: any): any {\n        return value;\n    }\n}\n\nconst arrayDiff = new ArrayDiff();\n\n/**\n * Computes diff without copying data.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction diffArrays(oldArr: ContentLinesArrayLike, newArr: ContentLinesArrayLike): DiffResult[] {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return arrayDiff.diff(oldArr as any, newArr as any) as any;\n}\n\nexport interface DiffResult {\n    value: [number, number];\n    count?: number;\n    added?: boolean;\n    removed?: boolean;\n}\n\nexport interface DirtyDiff {\n    /**\n     * Lines added by comparison to previous revision.\n     */\n    readonly added: LineRange[];\n    /**\n     * Lines, after which lines were removed by comparison to previous revision.\n     */\n    readonly removed: number[];\n    /**\n     * Lines modified by comparison to previous revision.\n     */\n    readonly modified: LineRange[];\n}\n\nexport interface LineRange {\n    start: number;\n    end: number;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport {\n    Range,\n    Position,\n    EditorDecoration,\n    EditorDecorationOptions,\n    OverviewRulerLane,\n    EditorDecorator,\n    TextEditor,\n    MinimapPosition\n} from '@theia/editor/lib/browser';\nimport { DirtyDiff, LineRange } from './diff-computer';\n\nexport enum DirtyDiffDecorationType {\n    AddedLine = 'dirty-diff-added-line',\n    RemovedLine = 'dirty-diff-removed-line',\n    ModifiedLine = 'dirty-diff-modified-line',\n}\n\nconst AddedLineDecoration = <EditorDecorationOptions>{\n    linesDecorationsClassName: 'dirty-diff-glyph dirty-diff-added-line',\n    overviewRuler: {\n        color: {\n            id: 'editorOverviewRuler.addedForeground'\n        },\n        position: OverviewRulerLane.Left,\n    },\n    minimap: {\n        color: {\n            id: 'minimapGutter.addedBackground'\n        },\n        position: MinimapPosition.Gutter\n    },\n    isWholeLine: true\n};\n\nconst RemovedLineDecoration = <EditorDecorationOptions>{\n    linesDecorationsClassName: 'dirty-diff-glyph dirty-diff-removed-line',\n    overviewRuler: {\n        color: {\n            id: 'editorOverviewRuler.deletedForeground'\n        },\n        position: OverviewRulerLane.Left,\n    },\n    minimap: {\n        color: {\n            id: 'minimapGutter.deletedBackground'\n        },\n        position: MinimapPosition.Gutter\n    },\n    isWholeLine: false\n};\n\nconst ModifiedLineDecoration = <EditorDecorationOptions>{\n    linesDecorationsClassName: 'dirty-diff-glyph dirty-diff-modified-line',\n    overviewRuler: {\n        color: {\n            id: 'editorOverviewRuler.modifiedForeground'\n        },\n        position: OverviewRulerLane.Left,\n    },\n    minimap: {\n        color: {\n            id: 'minimapGutter.modifiedBackground'\n        },\n        position: MinimapPosition.Gutter\n    },\n    isWholeLine: true\n};\n\nexport interface DirtyDiffUpdate extends DirtyDiff {\n    readonly editor: TextEditor;\n}\n\n@injectable()\nexport class DirtyDiffDecorator extends EditorDecorator {\n\n    applyDecorations(update: DirtyDiffUpdate): void {\n        const modifications = update.modified.map(range => this.toDeltaDecoration(range, ModifiedLineDecoration));\n        const additions = update.added.map(range => this.toDeltaDecoration(range, AddedLineDecoration));\n        const removals = update.removed.map(line => this.toDeltaDecoration(line, RemovedLineDecoration));\n        const decorations = [...modifications, ...additions, ...removals];\n        this.setDecorations(update.editor, decorations);\n    }\n\n    protected toDeltaDecoration(from: LineRange | number, options: EditorDecorationOptions): EditorDecoration {\n        const [start, end] = (typeof from === 'number') ? [from, from] : [from.start, from.end];\n        const range = Range.create(Position.create(start, 0), Position.create(end, 0));\n        return { range, options };\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Arm and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport '../../src/browser/style/scm-amend-component.css';\n\nimport * as React from '@theia/core/shared/react';\nimport { ScmAvatarService } from './scm-avatar-service';\nimport { codicon, StorageService } from '@theia/core/lib/browser';\nimport { Disposable, DisposableCollection } from '@theia/core';\n\nimport { ScmRepository } from './scm-repository';\nimport { ScmAmendSupport, ScmCommit } from './scm-provider';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport interface ScmAmendComponentProps {\n    style: React.CSSProperties | undefined,\n    repository: ScmRepository,\n    scmAmendSupport: ScmAmendSupport,\n    setCommitMessage: (message: string) => void,\n    avatarService: ScmAvatarService,\n    storageService: StorageService,\n}\n\ninterface ScmAmendComponentState {\n    /**\n     * This is used for transitioning.  When setting up a transition, we first set to render\n     * the elements in their starting positions.  This includes creating the elements to be\n     * transitioned in, even though those controls will not be visible when state is 'start'.\n     * On the next frame after 'start', we render elements with their final positions and with\n     * the transition properties.\n     */\n    transition: {\n        state: 'none'\n    } | {\n        state: 'start' | 'transitioning',\n        direction: 'up' | 'down',\n        previousLastCommit: { commit: ScmCommit, avatar: string }\n    };\n\n    amendingCommits: { commit: ScmCommit, avatar: string }[];\n    lastCommit: { commit: ScmCommit, avatar: string } | undefined;\n}\n\nconst TRANSITION_TIME_MS = 300;\nconst REPOSITORY_STORAGE_KEY = 'scmRepository';\n\nexport class ScmAmendComponent extends React.Component<ScmAmendComponentProps, ScmAmendComponentState> {\n\n    /**\n     * a hint on how to animate an update, set by certain user action handlers\n     * and used when updating the view based on a repository change\n     */\n    protected transitionHint: 'none' | 'amend' | 'unamend' = 'none';\n\n    protected lastCommitHeight: number = 0;\n    lastCommitScrollRef = (instance: HTMLDivElement) => {\n        if (instance && this.lastCommitHeight === 0) {\n            this.lastCommitHeight = instance.getBoundingClientRect().height;\n        }\n    };\n\n    constructor(props: ScmAmendComponentProps) {\n        super(props);\n\n        this.state = {\n            transition: { state: 'none' },\n            amendingCommits: [],\n            lastCommit: undefined\n        };\n\n        const setState = this.setState.bind(this);\n        this.setState = newState => {\n            if (!this.toDisposeOnUnmount.disposed) {\n                setState(newState);\n            }\n        };\n    }\n\n    protected readonly toDisposeOnUnmount = new DisposableCollection();\n\n    override async componentDidMount(): Promise<void> {\n        this.toDisposeOnUnmount.push(Disposable.create(() => { /* mark as mounted */ }));\n\n        const lastCommit = await this.getLastCommit();\n        this.setState({ amendingCommits: await this.buildAmendingList(lastCommit ? lastCommit.commit : undefined), lastCommit });\n\n        if (this.toDisposeOnUnmount.disposed) {\n            return;\n        }\n        this.toDisposeOnUnmount.push(\n            this.props.repository.provider.onDidChange(() => this.fetchStatusAndSetState())\n        );\n    }\n\n    override componentWillUnmount(): void {\n        this.toDisposeOnUnmount.dispose();\n    }\n\n    async fetchStatusAndSetState(): Promise<void> {\n        const storageKey = this.getStorageKey();\n\n        const nextCommit = await this.getLastCommit();\n        if (nextCommit && this.state.lastCommit && nextCommit.commit.id === this.state.lastCommit.commit.id) {\n            // No change here\n        } else if (nextCommit === undefined && this.state.lastCommit === undefined) {\n            // No change here\n        } else if (this.transitionHint === 'none') {\n            // If the 'last' commit changes, but we are not expecting an 'amend'\n            // or 'unamend' to occur, then we clear out the list of amended commits.\n            // This is because an unexpected change has happened to the repository,\n            // perhaps the user committed, merged, or something.  The amended commits\n            // will no longer be valid.\n\n            // Note that there may or may not have been a previous lastCommit (if the\n            // repository was previously empty with no initial commit then lastCommit\n            // will be undefined).  Either way we clear the amending commits.\n            await this.clearAmendingCommits();\n\n            // There is a change to the last commit, but no transition hint so\n            // the view just updates without transition.\n            this.setState({ amendingCommits: [], lastCommit: nextCommit });\n        } else {\n            const amendingCommits = this.state.amendingCommits.concat([]); // copy the array\n\n            const direction: 'up' | 'down' = this.transitionHint === 'amend' ? 'up' : 'down';\n            switch (this.transitionHint) {\n                case 'amend':\n                    if (this.state.lastCommit) {\n                        amendingCommits.push(this.state.lastCommit);\n\n                        const serializedState = JSON.stringify({\n                            amendingHeadCommitSha: amendingCommits[0].commit.id,\n                            latestCommitSha: nextCommit ? nextCommit.commit.id : undefined\n                        });\n                        this.props.storageService.setData<string | undefined>(storageKey, serializedState);\n                    }\n                    break;\n                case 'unamend':\n                    amendingCommits.pop();\n                    if (amendingCommits.length === 0) {\n                        this.props.storageService.setData<string | undefined>(storageKey, undefined);\n                    } else {\n                        const serializedState = JSON.stringify({\n                            amendingHeadCommitSha: amendingCommits[0].commit.id,\n                            latestCommitSha: nextCommit ? nextCommit.commit.id : undefined\n                        });\n                        this.props.storageService.setData<string | undefined>(storageKey, serializedState);\n                    }\n                    break;\n            }\n\n            if (this.state.lastCommit && nextCommit) {\n                const transitionData = { direction, previousLastCommit: this.state.lastCommit };\n                this.setState({ lastCommit: nextCommit, amendingCommits, transition: { ...transitionData, state: 'start' } });\n                this.onNextFrame(() => {\n                    this.setState({ transition: { ...transitionData, state: 'transitioning' } });\n                });\n\n                setTimeout(\n                    () => {\n                        this.setState({ transition: { state: 'none' } });\n                    },\n                    TRANSITION_TIME_MS);\n            } else {\n                // No previous last commit so no transition\n                this.setState({ transition: { state: 'none' }, amendingCommits, lastCommit: nextCommit });\n            }\n        }\n\n        this.transitionHint = 'none';\n    }\n\n    private async clearAmendingCommits(): Promise<void> {\n        const storageKey = this.getStorageKey();\n        await this.props.storageService.setData<string | undefined>(storageKey, undefined);\n    }\n\n    private async buildAmendingList(lastCommit: ScmCommit | undefined): Promise<{ commit: ScmCommit, avatar: string }[]> {\n        const storageKey = this.getStorageKey();\n        const storedState = await this.props.storageService.getData<string | undefined>(storageKey, undefined);\n\n        // Restore list of commits from saved amending head commit up through parents until the\n        // current commit.  (If we don't reach the current commit, the repository has been changed in such\n        // a way then unamending commits can no longer be done).\n        if (storedState) {\n            const { amendingHeadCommitSha, latestCommitSha } = JSON.parse(storedState);\n            if (!this.commitsAreEqual(lastCommit, latestCommitSha)) {\n                // The head commit in the repository has changed.  It is not the same commit that was the\n                // head commit after the last 'amend'.\n                return [];\n            }\n            const commits = await this.props.scmAmendSupport.getInitialAmendingCommits(amendingHeadCommitSha, lastCommit ? lastCommit.id : undefined);\n\n            const amendingCommitPromises = commits.map(async commit => {\n                const avatar = await this.props.avatarService.getAvatar(commit.authorEmail);\n                return { commit, avatar };\n            });\n            return Promise.all(amendingCommitPromises);\n        } else {\n            return [];\n        }\n    }\n\n    private getStorageKey(): string {\n        return REPOSITORY_STORAGE_KEY + ':' + this.props.repository.provider.rootUri;\n    }\n\n    /**\n     * Commits are equal if the ids are equal or if both are undefined.\n     * (If a commit is undefined, it represents the initial empty state of a repository,\n     * before the initial commit).\n     */\n    private commitsAreEqual(lastCommit: ScmCommit | undefined, savedLastCommitId: string | undefined): boolean {\n        return lastCommit\n            ? lastCommit.id === savedLastCommitId\n            : savedLastCommitId === undefined;\n    }\n\n    /**\n     * This function will update the 'model' (lastCommit, amendingCommits) only\n     * when the repository sees the last commit change.\n     * 'render' can be called at any time, so be sure we don't update any 'model'\n     * fields until we actually start the transition.\n     */\n    protected amend = async (): Promise<void> => {\n        if (this.state.transition.state !== 'none' && this.transitionHint !== 'none') {\n            return;\n        }\n\n        this.transitionHint = 'amend';\n        await this.resetAndSetMessage('HEAD~', 'HEAD');\n    };\n\n    protected unamend = async (): Promise<void> => {\n        if (this.state.transition.state !== 'none' && this.transitionHint !== 'none') {\n            return;\n        }\n\n        const commitToRestore = (this.state.amendingCommits.length >= 1)\n            ? this.state.amendingCommits[this.state.amendingCommits.length - 1]\n            : undefined;\n        const oldestAmendCommit = (this.state.amendingCommits.length >= 2)\n            ? this.state.amendingCommits[this.state.amendingCommits.length - 2]\n            : undefined;\n\n        if (commitToRestore) {\n            const commitToUseForMessage = oldestAmendCommit\n                ? oldestAmendCommit.commit.id\n                : undefined;\n            this.transitionHint = 'unamend';\n            await this.resetAndSetMessage(commitToRestore.commit.id, commitToUseForMessage);\n        }\n    };\n\n    private async resetAndSetMessage(commitToRestore: string, commitToUseForMessage: string | undefined): Promise<void> {\n        const message = commitToUseForMessage\n            ? await this.props.scmAmendSupport.getMessage(commitToUseForMessage)\n            : '';\n        await this.props.scmAmendSupport.reset(commitToRestore);\n        this.props.setCommitMessage(message);\n    }\n\n    override render(): JSX.Element {\n        const neverShrink = this.state.amendingCommits.length <= 3;\n\n        const style: React.CSSProperties = neverShrink\n            ? {\n                ...this.props.style,\n                flexShrink: 0,\n            }\n            : {\n                ...this.props.style,\n                flexShrink: 1,\n                minHeight: 240   // height with three commits\n            };\n\n        return (\n            <div className={ScmAmendComponent.Styles.COMMIT_CONTAINER + ' no-select'} style={style}>\n                {\n                    this.state.amendingCommits.length > 0 || (this.state.lastCommit && this.state.transition.state !== 'none' && this.state.transition.direction === 'down')\n                        ? this.renderAmendingCommits()\n                        : ''\n                }\n                {\n                    this.state.lastCommit ?\n                        <div>\n                            <div id='lastCommit' className='theia-scm-amend'>\n                                <div className='theia-header scm-theia-header'>\n                                    {nls.localize('theia/scm/amendHeadCommit', 'HEAD Commit')}\n                                </div>\n                                {this.renderLastCommit()}\n                            </div>\n                        </div>\n                        : ''\n                }\n            </div>\n        );\n    }\n\n    protected async getLastCommit(): Promise<{ commit: ScmCommit, avatar: string } | undefined> {\n        const commit = await this.props.scmAmendSupport.getLastCommit();\n        if (commit) {\n            const avatar = await this.props.avatarService.getAvatar(commit.authorEmail);\n            return { commit, avatar };\n        }\n        return undefined;\n    }\n\n    protected renderAmendingCommits(): React.ReactNode {\n        const neverShrink = this.state.amendingCommits.length <= 3;\n\n        const style: React.CSSProperties = neverShrink\n            ? {\n                flexShrink: 0,\n            }\n            : {\n                flexShrink: 1,\n                // parent minHeight controls height, we just need any value smaller than\n                // what the height would be when the parent is at its minHeight\n                minHeight: 0\n            };\n\n        return <div id='amendedCommits' className='theia-scm-amend-outer-container' style={style}>\n            <div className='theia-header scm-theia-header'>\n                <div className='noWrapInfo'>Commits being Amended</div>\n                {this.renderAmendCommitListButtons()}\n                {this.renderCommitCount(this.state.amendingCommits.length)}\n            </div>\n            <div style={this.styleAmendedCommits()}>\n                {this.state.amendingCommits.map((commitData, index, array) =>\n                    this.renderCommitBeingAmended(commitData, index === array.length - 1)\n                )}\n                {\n                    this.state.lastCommit && this.state.transition.state !== 'none' && this.state.transition.direction === 'down'\n                        ? this.renderCommitBeingAmended(this.state.lastCommit, false)\n                        : ''\n                }\n            </div>\n        </div>;\n    }\n\n    protected renderAmendCommitListButtons(): React.ReactNode {\n        return <div className='theia-scm-inline-actions-container'>\n            <div className='theia-scm-inline-actions'>\n                <div className='theia-scm-inline-action'>\n                    <a className={codicon('dash')} title='Unamend All Commits' onClick={this.unamendAll} />\n                </div>\n                <div className='theia-scm-inline-action' >\n                    <a className={codicon('close')} title='Clear Amending Commits' onClick={this.clearAmending} />\n                </div>\n            </div>\n        </div>;\n    }\n\n    protected renderLastCommit(): React.ReactNode {\n        if (!this.state.lastCommit) {\n            return '';\n        }\n\n        const canAmend: boolean = true;\n        return <div className={ScmAmendComponent.Styles.COMMIT_AND_BUTTON} style={{ flexGrow: 0, flexShrink: 0 }} key={this.state.lastCommit.commit.id}>\n            {this.renderLastCommitNoButton(this.state.lastCommit)}\n            {\n                canAmend\n                    ? <div className={ScmAmendComponent.Styles.FLEX_CENTER}>\n                        <button className='theia-button' title={nls.localize('theia/scm/amendLastCommit', 'Amend last commit')} onClick={this.amend}>\n                            {nls.localize('theia/scm/amend', 'Amend')}\n                        </button>\n                    </div>\n                    : ''\n            }\n        </div>;\n    }\n\n    protected renderLastCommitNoButton(lastCommit: { commit: ScmCommit, avatar: string }): React.ReactNode {\n        switch (this.state.transition.state) {\n            case 'none':\n                return <div ref={this.lastCommitScrollRef} className='theia-scm-scrolling-container'>\n                    {this.renderCommitAvatarAndDetail(lastCommit)}\n                </div>;\n\n            case 'start':\n            case 'transitioning':\n                switch (this.state.transition.direction) {\n                    case 'up':\n                        return <div style={this.styleLastCommitMovingUp(this.state.transition.state)}>\n                            {this.renderCommitAvatarAndDetail(this.state.transition.previousLastCommit)}\n                            {this.renderCommitAvatarAndDetail(lastCommit)}\n                        </div>;\n                    case 'down':\n                        return <div style={this.styleLastCommitMovingDown(this.state.transition.state)}>\n                            {this.renderCommitAvatarAndDetail(lastCommit)}\n                            {this.renderCommitAvatarAndDetail(this.state.transition.previousLastCommit)}\n                        </div>;\n                }\n        }\n    }\n\n    /**\n     * See https://stackoverflow.com/questions/26556436/react-after-render-code\n     *\n     * @param callback\n     */\n    protected onNextFrame(callback: FrameRequestCallback): void {\n        setTimeout(\n            () => window.requestAnimationFrame(callback),\n            0);\n    }\n\n    protected renderCommitAvatarAndDetail(commitData: { commit: ScmCommit, avatar: string }): React.ReactNode {\n        const { commit, avatar } = commitData;\n        return <div className={ScmAmendComponent.Styles.COMMIT_AVATAR_AND_TEXT} key={commit.id}>\n            <div className={ScmAmendComponent.Styles.COMMIT_MESSAGE_AVATAR}>\n                <img src={avatar} />\n            </div>\n            <div className={ScmAmendComponent.Styles.COMMIT_DETAILS}>\n                <div className={ScmAmendComponent.Styles.COMMIT_MESSAGE_SUMMARY}>{commit.summary}</div>\n                <div className={ScmAmendComponent.Styles.LAST_COMMIT_MESSAGE_TIME}>{`${commit.authorDateRelative} by ${commit.authorName}`}</div>\n            </div>\n        </div>;\n    }\n\n    protected renderCommitCount(commits: number): React.ReactNode {\n        return <div className='notification-count-container scm-change-count'>\n            <span className='notification-count'>{commits}</span>\n        </div>;\n    }\n\n    protected renderCommitBeingAmended(commitData: { commit: ScmCommit, avatar: string }, isOldestAmendCommit: boolean): JSX.Element {\n        if (isOldestAmendCommit && this.state.transition.state !== 'none' && this.state.transition.direction === 'up') {\n            return <div className={ScmAmendComponent.Styles.COMMIT_AVATAR_AND_TEXT} style={{ flexGrow: 0, flexShrink: 0 }} key={commitData.commit.id}>\n                <div className='fixed-height-commit-container'>\n                    {this.renderCommitAvatarAndDetail(commitData)}\n                </div>\n            </div>;\n        } else {\n            return <div className={ScmAmendComponent.Styles.COMMIT_AVATAR_AND_TEXT} style={{ flexGrow: 0, flexShrink: 0 }} key={commitData.commit.id}>\n                {this.renderCommitAvatarAndDetail(commitData)}\n                {\n                    isOldestAmendCommit\n                        ? <div className={ScmAmendComponent.Styles.FLEX_CENTER}>\n                            <button className='theia-button' title={nls.localize('theia/scm/unamendCommit', 'Unamend commit')} onClick={this.unamend}>\n                                {nls.localize('theia/scm/unamend', 'Unamend')}\n                            </button>\n                        </div>\n                        : ''\n                }\n            </div>;\n        }\n    }\n\n    /*\n     * The style for the <div> containing the list of commits being amended.\n     * This div is scrollable.\n     */\n    protected styleAmendedCommits(): React.CSSProperties {\n        const base = {\n            display: 'flex',\n            whitespace: 'nowrap',\n            width: '100%',\n            minHeight: 0,\n            flexShrink: 1,\n            paddingTop: '2px',\n        };\n\n        switch (this.state.transition.state) {\n            case 'none':\n                return {\n                    ...base,\n                    flexDirection: 'column',\n                    overflowY: 'auto',\n                    marginBottom: '0',\n                };\n            case 'start':\n            case 'transitioning':\n                let startingMargin: number = 0;\n                let endingMargin: number = 0;\n                switch (this.state.transition.direction) {\n                    case 'down':\n                        startingMargin = 0;\n                        endingMargin = -32;\n                        break;\n                    case 'up':\n                        startingMargin = -32;\n                        endingMargin = 0;\n                        break;\n                }\n\n                switch (this.state.transition.state) {\n                    case 'start':\n                        return {\n                            ...base,\n                            flexDirection: 'column',\n                            overflowY: 'hidden',\n                            marginBottom: `${startingMargin}px`,\n                        };\n                    case 'transitioning':\n                        return {\n                            ...base,\n                            flexDirection: 'column',\n                            overflowY: 'hidden',\n                            marginBottom: `${endingMargin}px`,\n                            transitionProperty: 'margin-bottom',\n                            transitionDuration: `${TRANSITION_TIME_MS}ms`,\n                            transitionTimingFunction: 'linear'\n                        };\n                }\n        }\n    }\n\n    protected styleLastCommitMovingUp(transitionState: 'start' | 'transitioning'): React.CSSProperties {\n        return this.styleLastCommit(transitionState, 0, -28);\n    }\n\n    protected styleLastCommitMovingDown(transitionState: 'start' | 'transitioning'): React.CSSProperties {\n        return this.styleLastCommit(transitionState, -28, 0);\n    }\n\n    protected styleLastCommit(transitionState: 'start' | 'transitioning', startingMarginTop: number, startingMarginBottom: number): React.CSSProperties {\n        const base = {\n            display: 'flex',\n            width: '100%',\n            overflow: 'hidden',\n            paddingTop: 0,\n            paddingBottom: 0,\n            borderTop: 0,\n            borderBottom: 0,\n            height: this.lastCommitHeight * 2\n        };\n\n        // We end with top and bottom margins switched\n        const endingMarginTop = startingMarginBottom;\n        const endingMarginBottom = startingMarginTop;\n\n        switch (transitionState) {\n            case 'start':\n                return {\n                    ...base,\n                    position: 'relative',\n                    flexDirection: 'column',\n                    marginTop: startingMarginTop,\n                    marginBottom: startingMarginBottom,\n                };\n            case 'transitioning':\n                return {\n                    ...base,\n                    position: 'relative',\n                    flexDirection: 'column',\n                    marginTop: endingMarginTop,\n                    marginBottom: endingMarginBottom,\n                    transitionProperty: 'margin-top margin-bottom',\n                    transitionDuration: `${TRANSITION_TIME_MS}ms`,\n                    transitionTimingFunction: 'linear'\n                };\n        }\n    }\n\n    readonly unamendAll = () => this.doUnamendAll();\n    protected async doUnamendAll(): Promise<void> {\n        while (this.state.amendingCommits.length > 0) {\n            this.unamend();\n            await new Promise(resolve => setTimeout(resolve, TRANSITION_TIME_MS));\n        }\n    }\n\n    readonly clearAmending = () => this.doClearAmending();\n    protected async doClearAmending(): Promise<void> {\n        await this.clearAmendingCommits();\n        this.setState({ amendingCommits: [] });\n    }\n}\n\nexport namespace ScmAmendComponent {\n\n    export namespace Styles {\n        export const COMMIT_CONTAINER = 'theia-scm-commit-container';\n        export const COMMIT_AND_BUTTON = 'theia-scm-commit-and-button';\n        export const COMMIT_AVATAR_AND_TEXT = 'theia-scm-commit-avatar-and-text';\n        export const COMMIT_DETAILS = 'theia-scm-commit-details';\n        export const COMMIT_MESSAGE_AVATAR = 'theia-scm-commit-message-avatar';\n        export const COMMIT_MESSAGE_SUMMARY = 'theia-scm-commit-message-summary';\n        export const LAST_COMMIT_MESSAGE_TIME = 'theia-scm-commit-message-time';\n\n        export const FLEX_CENTER = 'theia-scm-flex-container-center';\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Arm and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { SelectionService } from '@theia/core/lib/common';\nimport * as React from '@theia/core/shared/react';\nimport {\n    ContextMenuRenderer, ReactWidget, LabelProvider, KeybindingRegistry, StorageService\n} from '@theia/core/lib/browser';\nimport { ScmService } from './scm-service';\nimport { ScmAvatarService } from './scm-avatar-service';\nimport { ScmAmendComponent } from './scm-amend-component';\n\n@injectable()\nexport class ScmAmendWidget extends ReactWidget {\n\n    static ID = 'scm-amend-widget';\n\n    @inject(ScmService) protected readonly scmService: ScmService;\n    @inject(ScmAvatarService) protected readonly avatarService: ScmAvatarService;\n    @inject(StorageService) protected readonly storageService: StorageService;\n    @inject(SelectionService) protected readonly selectionService: SelectionService;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(KeybindingRegistry) protected readonly keybindings: KeybindingRegistry;\n\n    protected shouldScrollToRow = true;\n\n    constructor(\n        @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer,\n    ) {\n        super();\n        this.scrollOptions = {\n            suppressScrollX: true,\n            minScrollbarLength: 35\n        };\n        this.id = ScmAmendWidget.ID;\n    }\n\n    protected render(): React.ReactNode {\n        const repository = this.scmService.selectedRepository;\n        if (repository && repository.provider.amendSupport) {\n            return React.createElement(\n                ScmAmendComponent,\n                {\n                    key: `amend:${repository.provider.rootUri}`,\n                    style: { flexGrow: 0 },\n                    repository: repository,\n                    scmAmendSupport: repository.provider.amendSupport,\n                    setCommitMessage: this.setInputValue,\n                    avatarService: this.avatarService,\n                    storageService: this.storageService,\n                }\n            );\n        }\n    }\n\n    protected setInputValue = (event: React.FormEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLTextAreaElement> | string) => {\n        const repository = this.scmService.selectedRepository;\n        if (repository) {\n            repository.input.value = typeof event === 'string' ? event : event.currentTarget.value;\n        }\n    };\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { DisposableCollection } from '@theia/core';\nimport { Message } from '@theia/core/shared/@phosphor/messaging';\nimport * as React from '@theia/core/shared/react';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport { ScmInput, ScmInputIssueType } from './scm-input';\nimport {\n    ContextMenuRenderer, ReactWidget, KeybindingRegistry, StatefulWidget\n} from '@theia/core/lib/browser';\nimport { ScmService } from './scm-service';\n\n@injectable()\nexport class ScmCommitWidget extends ReactWidget implements StatefulWidget {\n\n    static ID = 'scm-commit-widget';\n\n    @inject(ScmService) protected readonly scmService: ScmService;\n    @inject(KeybindingRegistry) protected readonly keybindings: KeybindingRegistry;\n\n    protected readonly toDisposeOnRepositoryChange = new DisposableCollection();\n\n    protected shouldScrollToRow = true;\n\n    /**\n     * Don't modify DOM use React! only exposed for `focusInput`\n     * Use `this.scmService.selectedRepository?.input.value` as a single source of truth!\n     */\n    protected readonly inputRef = React.createRef<HTMLTextAreaElement>();\n\n    constructor(\n        @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer,\n    ) {\n        super();\n        this.scrollOptions = {\n            suppressScrollX: true,\n            minScrollbarLength: 35\n        };\n        this.addClass('theia-scm-commit');\n        this.id = ScmCommitWidget.ID;\n    }\n\n    protected override onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        this.refreshOnRepositoryChange();\n        this.toDisposeOnDetach.push(this.scmService.onDidChangeSelectedRepository(() => {\n            this.refreshOnRepositoryChange();\n            this.update();\n        }));\n    }\n\n    protected refreshOnRepositoryChange(): void {\n        this.toDisposeOnRepositoryChange.dispose();\n        const repository = this.scmService.selectedRepository;\n        if (repository) {\n            this.toDisposeOnRepositoryChange.push(repository.provider.onDidChange(async () => {\n                this.update();\n            }));\n            this.toDisposeOnRepositoryChange.push(repository.provider.onDidChangeCommitTemplate(e => {\n                this.setInputValue(e);\n            }));\n        }\n    }\n\n    protected override onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.focus();\n    }\n\n    public focus(): void {\n        (this.inputRef.current || this.node).focus();\n    }\n\n    protected render(): React.ReactNode {\n        const repository = this.scmService.selectedRepository;\n        if (repository) {\n            return React.createElement('div', this.createContainerAttributes(), this.renderInput(repository.input));\n        }\n    }\n\n    /**\n     * Create the container attributes for the widget.\n     */\n    protected createContainerAttributes(): React.HTMLAttributes<HTMLElement> {\n        return {\n            style: { flexGrow: 0 }\n        };\n    }\n\n    protected renderInput(input: ScmInput): React.ReactNode {\n        let validationStatus = 'idle';\n        if (input.issue) {\n            switch (input.issue.type) {\n                case ScmInputIssueType.Error:\n                    validationStatus = 'error';\n                    break;\n                case ScmInputIssueType.Information:\n                    validationStatus = 'info';\n                    break;\n                case ScmInputIssueType.Warning:\n                    validationStatus = 'warning';\n                    break;\n            }\n        }\n        const validationMessage = input.issue ? input.issue.message : '';\n        const format = (value: string, ...args: string[]): string => {\n            if (args.length !== 0) {\n                return value.replace(/{(\\d+)}/g, (found, n) => {\n                    const i = parseInt(n);\n                    return isNaN(i) || i < 0 || i >= args.length ? found : args[i];\n                });\n            }\n            return value;\n        };\n\n        const keybinding = this.keybindings.acceleratorFor(this.keybindings.getKeybindingsForCommand('scm.acceptInput')[0]).join('+');\n        const message = format(input.placeholder || '', keybinding);\n        const textArea = input.visible &&\n            <TextareaAutosize\n                className={`${ScmCommitWidget.Styles.INPUT_MESSAGE} theia-input theia-scm-input-message-${validationStatus}`}\n                id={ScmCommitWidget.Styles.INPUT_MESSAGE}\n                placeholder={message}\n                spellCheck={false}\n                autoFocus={true}\n                value={input.value}\n                disabled={!input.enabled}\n                onChange={this.setInputValue}\n                ref={this.inputRef}\n                rows={1}\n                maxRows={6} /* from VS Code */>\n            </TextareaAutosize>;\n        return <div className={ScmCommitWidget.Styles.INPUT_MESSAGE_CONTAINER}>\n            {textArea}\n            <div\n                className={\n                    `${ScmCommitWidget.Styles.VALIDATION_MESSAGE} ${ScmCommitWidget.Styles.NO_SELECT}\n                    theia-scm-validation-message-${validationStatus} theia-scm-input-message-${validationStatus}`\n                }\n                style={{\n                    display: !!input.issue ? 'block' : 'none'\n                }}>{validationMessage}</div>\n        </div>;\n    }\n\n    protected setInputValue = (event: React.FormEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLTextAreaElement> | string) => {\n        const repository = this.scmService.selectedRepository;\n        if (repository) {\n            repository.input.value = typeof event === 'string' ? event : event.currentTarget.value;\n        }\n    };\n\n    /**\n     * Store the tree state.\n     */\n    storeState(): ScmCommitWidget.State {\n        const message = this.scmService.selectedRepository?.input.value;\n        return { message };\n    }\n\n    /**\n     * Restore the state.\n     * @param oldState the old state object.\n     */\n    restoreState(oldState: ScmCommitWidget.State): void {\n        const value = oldState.message;\n        if (!value) {\n            return;\n        }\n        let repository = this.scmService.selectedRepository;\n        if (repository) {\n            repository.input.value = value;\n        } else {\n            const listener = this.scmService.onDidChangeSelectedRepository(() => {\n                repository = this.scmService.selectedRepository;\n                if (repository) {\n                    listener.dispose();\n                    if (!repository.input.value) {\n                        repository.input.value = value;\n                    }\n                }\n            });\n            this.toDispose.push(listener);\n        }\n    }\n\n}\n\nexport namespace ScmCommitWidget {\n\n    export namespace Styles {\n        export const INPUT_MESSAGE_CONTAINER = 'theia-scm-input-message-container';\n        export const INPUT_MESSAGE = 'theia-scm-input-message';\n        export const VALIDATION_MESSAGE = 'theia-scm-input-validation-message';\n        export const NO_SELECT = 'no-select';\n    }\n\n    export interface State {\n        message?: string\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { Emitter } from '@theia/core/lib/common/event';\nimport {\n    AbstractViewContribution,\n    FrontendApplicationContribution, LabelProvider,\n    StatusBar,\n    StatusBarAlignment,\n    StatusBarEntry,\n    KeybindingRegistry,\n    ViewContainerTitleOptions,\n    codicon,\n    StylingParticipant,\n    ColorTheme,\n    CssStyleCollector\n} from '@theia/core/lib/browser';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry, TabBarToolbarItem } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { CommandRegistry, Command, Disposable, DisposableCollection, CommandService } from '@theia/core/lib/common';\nimport { ContextKeyService, ContextKey } from '@theia/core/lib/browser/context-key-service';\nimport { ScmService } from './scm-service';\nimport { ScmWidget } from '../browser/scm-widget';\nimport URI from '@theia/core/lib/common/uri';\nimport { ScmQuickOpenService } from './scm-quick-open-service';\nimport { ColorContribution } from '@theia/core/lib/browser/color-application-contribution';\nimport { ColorRegistry } from '@theia/core/lib/browser/color-registry';\nimport { Color } from '@theia/core/lib/common/color';\nimport { ScmCommand } from './scm-provider';\nimport { ScmDecorationsService } from '../browser/decorations/scm-decorations-service';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { isHighContrast } from '@theia/core/lib/common/theme';\n\nexport const SCM_WIDGET_FACTORY_ID = ScmWidget.ID;\nexport const SCM_VIEW_CONTAINER_ID = 'scm-view-container';\nexport const SCM_VIEW_CONTAINER_TITLE_OPTIONS: ViewContainerTitleOptions = {\n    label: nls.localizeByDefault('Source Control'),\n    iconClass: codicon('source-control'),\n    closeable: true\n};\n\nexport namespace SCM_COMMANDS {\n    export const CHANGE_REPOSITORY = {\n        id: 'scm.change.repository',\n        category: nls.localizeByDefault('Source Control'),\n        originalCategory: 'Source Control',\n        label: nls.localize('theia/scm/changeRepository', 'Change Repository...'),\n        originalLabel: 'Change Repository...'\n    };\n    export const ACCEPT_INPUT = {\n        id: 'scm.acceptInput'\n    };\n    export const TREE_VIEW_MODE = {\n        id: 'scm.viewmode.tree',\n        tooltip: nls.localizeByDefault('View as Tree'),\n        iconClass: codicon('list-tree'),\n        originalLabel: 'View as Tree',\n        label: nls.localizeByDefault('View as Tree')\n    };\n    export const LIST_VIEW_MODE = {\n        id: 'scm.viewmode.list',\n        tooltip: nls.localizeByDefault('View as List'),\n        iconClass: codicon('list-flat'),\n        originalLabel: 'View as List',\n        label: nls.localizeByDefault('View as List')\n    };\n    export const COLLAPSE_ALL = {\n        id: 'scm.collapseAll',\n        category: nls.localizeByDefault('Source Control'),\n        originalCategory: 'Source Control',\n        tooltip: nls.localizeByDefault('Collapse All'),\n        iconClass: codicon('collapse-all'),\n        label: nls.localizeByDefault('Collapse All'),\n        originalLabel: 'Collapse All'\n    };\n}\n\nexport namespace ScmColors {\n    export const editorGutterModifiedBackground = 'editorGutter.modifiedBackground';\n    export const editorGutterAddedBackground = 'editorGutter.addedBackground';\n    export const editorGutterDeletedBackground = 'editorGutter.deletedBackground';\n}\n\n@injectable()\nexport class ScmContribution extends AbstractViewContribution<ScmWidget> implements\n    FrontendApplicationContribution,\n    TabBarToolbarContribution,\n    ColorContribution,\n    StylingParticipant {\n\n    @inject(StatusBar) protected readonly statusBar: StatusBar;\n    @inject(ScmService) protected readonly scmService: ScmService;\n    @inject(ScmQuickOpenService) protected readonly scmQuickOpenService: ScmQuickOpenService;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(CommandService) protected readonly commands: CommandService;\n    @inject(CommandRegistry) protected readonly commandRegistry: CommandRegistry;\n    @inject(ContextKeyService) protected readonly contextKeys: ContextKeyService;\n    @inject(ScmDecorationsService) protected readonly scmDecorationsService: ScmDecorationsService;\n\n    protected scmFocus: ContextKey<boolean>;\n\n    constructor() {\n        super({\n            viewContainerId: SCM_VIEW_CONTAINER_ID,\n            widgetId: SCM_WIDGET_FACTORY_ID,\n            widgetName: SCM_VIEW_CONTAINER_TITLE_OPTIONS.label,\n            defaultWidgetOptions: {\n                area: 'left',\n                rank: 300\n            },\n            toggleCommandId: 'scmView:toggle',\n            toggleKeybinding: 'ctrlcmd+shift+g'\n        });\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.scmFocus = this.contextKeys.createKey('scmFocus', false);\n    }\n\n    async initializeLayout(): Promise<void> {\n        await this.openView();\n    }\n\n    onStart(): void {\n        this.updateStatusBar();\n        this.scmService.onDidAddRepository(() => this.updateStatusBar());\n        this.scmService.onDidRemoveRepository(() => this.updateStatusBar());\n        this.scmService.onDidChangeSelectedRepository(() => this.updateStatusBar());\n        this.scmService.onDidChangeStatusBarCommands(() => this.updateStatusBar());\n        this.labelProvider.onDidChange(() => this.updateStatusBar());\n\n        this.updateContextKeys();\n        this.shell.onDidChangeCurrentWidget(() => this.updateContextKeys());\n    }\n\n    protected updateContextKeys(): void {\n        this.scmFocus.set(this.shell.currentWidget instanceof ScmWidget);\n    }\n\n    override registerCommands(commandRegistry: CommandRegistry): void {\n        super.registerCommands(commandRegistry);\n        commandRegistry.registerCommand(SCM_COMMANDS.CHANGE_REPOSITORY, {\n            execute: () => this.scmQuickOpenService.changeRepository(),\n            isEnabled: () => this.scmService.repositories.length > 1\n        });\n        commandRegistry.registerCommand(SCM_COMMANDS.ACCEPT_INPUT, {\n            execute: () => this.acceptInput(),\n            isEnabled: () => !!this.scmFocus.get() && !!this.acceptInputCommand()\n        });\n    }\n\n    registerToolbarItems(registry: TabBarToolbarRegistry): void {\n        const viewModeEmitter = new Emitter<void>();\n        const registerToggleViewItem = (command: Command, mode: 'tree' | 'list') => {\n            const id = command.id;\n            const item: TabBarToolbarItem = {\n                id,\n                command: id,\n                tooltip: command.label,\n                onDidChange: viewModeEmitter.event\n            };\n            this.commandRegistry.registerCommand({ id, iconClass: command && command.iconClass }, {\n                execute: widget => {\n                    if (widget instanceof ScmWidget) {\n                        widget.viewMode = mode;\n                        viewModeEmitter.fire();\n                    }\n                },\n                isVisible: widget => {\n                    if (widget instanceof ScmWidget) {\n                        return !!this.scmService.selectedRepository\n                            && widget.viewMode !== mode;\n                    }\n                    return false;\n                },\n            });\n            registry.registerItem(item);\n        };\n        registerToggleViewItem(SCM_COMMANDS.TREE_VIEW_MODE, 'tree');\n        registerToggleViewItem(SCM_COMMANDS.LIST_VIEW_MODE, 'list');\n\n        this.commandRegistry.registerCommand(SCM_COMMANDS.COLLAPSE_ALL, {\n            execute: widget => {\n                if (widget instanceof ScmWidget && widget.viewMode === 'tree') {\n                    widget.collapseScmTree();\n                }\n            },\n            isVisible: widget => {\n                if (widget instanceof ScmWidget) {\n                    return !!this.scmService.selectedRepository && widget.viewMode === 'tree';\n                }\n                return false;\n            }\n        });\n\n        registry.registerItem({\n            ...SCM_COMMANDS.COLLAPSE_ALL,\n            command: SCM_COMMANDS.COLLAPSE_ALL.id\n        });\n    }\n\n    override registerKeybindings(keybindings: KeybindingRegistry): void {\n        super.registerKeybindings(keybindings);\n        keybindings.registerKeybinding({\n            command: SCM_COMMANDS.ACCEPT_INPUT.id,\n            keybinding: 'ctrlcmd+enter',\n            when: 'scmFocus'\n        });\n    }\n\n    protected async acceptInput(): Promise<void> {\n        const command = this.acceptInputCommand();\n        if (command && command.command) {\n            await this.commands.executeCommand(command.command, ...command.arguments ? command.arguments : []);\n        }\n    }\n    protected acceptInputCommand(): ScmCommand | undefined {\n        const repository = this.scmService.selectedRepository;\n        if (!repository) {\n            return undefined;\n        }\n        return repository.provider.acceptInputCommand;\n    }\n\n    protected readonly statusBarDisposable = new DisposableCollection();\n    protected updateStatusBar(): void {\n        this.statusBarDisposable.dispose();\n        const repository = this.scmService.selectedRepository;\n        if (!repository) {\n            return;\n        }\n        const name = this.labelProvider.getName(new URI(repository.provider.rootUri));\n        if (this.scmService.repositories.length > 1) {\n            this.setStatusBarEntry(SCM_COMMANDS.CHANGE_REPOSITORY.id, {\n                text: `$(database) ${name}`,\n                tooltip: name.toString(),\n                command: SCM_COMMANDS.CHANGE_REPOSITORY.id,\n                alignment: StatusBarAlignment.LEFT,\n                priority: 100\n            });\n        }\n        const label = repository.provider.rootUri ? `${name} (${repository.provider.label})` : repository.provider.label;\n        this.scmService.statusBarCommands.forEach((value, index) => this.setStatusBarEntry(`scm.status.${index}`, {\n            text: value.title,\n            tooltip: label + (value.tooltip ? ` - ${value.tooltip}` : ''),\n            command: value.command,\n            arguments: value.arguments,\n            alignment: StatusBarAlignment.LEFT,\n            priority: 100\n        }));\n    }\n    protected setStatusBarEntry(id: string, entry: StatusBarEntry): void {\n        this.statusBar.setElement(id, entry);\n        this.statusBarDisposable.push(Disposable.create(() => this.statusBar.removeElement(id)));\n    }\n\n    /**\n     * It should be aligned with https://github.com/microsoft/vscode/blob/0dfa355b3ad185a6289ba28a99c141ab9e72d2be/src/vs/workbench/contrib/scm/browser/dirtydiffDecorator.ts#L808\n     */\n    registerColors(colors: ColorRegistry): void {\n        colors.register(\n            {\n                id: ScmColors.editorGutterModifiedBackground, defaults: {\n                    dark: '#1B81A8',\n                    light: '#2090D3',\n                    hcDark: '#1B81A8',\n                    hcLight: '#2090D3'\n                }, description: 'Editor gutter background color for lines that are modified.'\n            },\n            {\n                id: ScmColors.editorGutterAddedBackground, defaults: {\n                    dark: '#487E02',\n                    light: '#48985D',\n                    hcDark: '#487E02',\n                    hcLight: '#48985D'\n                }, description: 'Editor gutter background color for lines that are added.'\n            },\n            {\n                id: ScmColors.editorGutterDeletedBackground, defaults: {\n                    dark: 'editorError.foreground',\n                    light: 'editorError.foreground',\n                    hcDark: 'editorError.foreground',\n                    hcLight: 'editorError.foreground'\n                }, description: 'Editor gutter background color for lines that are deleted.'\n            },\n            {\n                id: 'minimapGutter.modifiedBackground', defaults: {\n                    dark: 'editorGutter.modifiedBackground',\n                    light: 'editorGutter.modifiedBackground',\n                    hcDark: 'editorGutter.modifiedBackground',\n                    hcLight: 'editorGutter.modifiedBackground'\n                }, description: 'Minimap gutter background color for lines that are modified.'\n            },\n            {\n                id: 'minimapGutter.addedBackground', defaults: {\n                    dark: 'editorGutter.addedBackground',\n                    light: 'editorGutter.addedBackground',\n                    hcDark: 'editorGutter.modifiedBackground',\n                    hcLight: 'editorGutter.modifiedBackground'\n                }, description: 'Minimap gutter background color for lines that are added.'\n            },\n            {\n                id: 'minimapGutter.deletedBackground', defaults: {\n                    dark: 'editorGutter.deletedBackground',\n                    light: 'editorGutter.deletedBackground',\n                    hcDark: 'editorGutter.deletedBackground',\n                    hcLight: 'editorGutter.deletedBackground'\n                }, description: 'Minimap gutter background color for lines that are deleted.'\n            },\n            {\n                id: 'editorOverviewRuler.modifiedForeground', defaults: {\n                    dark: Color.transparent(ScmColors.editorGutterModifiedBackground, 0.6),\n                    light: Color.transparent(ScmColors.editorGutterModifiedBackground, 0.6),\n                    hcDark: Color.transparent(ScmColors.editorGutterModifiedBackground, 0.6),\n                    hcLight: Color.transparent(ScmColors.editorGutterModifiedBackground, 0.6)\n                }, description: 'Overview ruler marker color for modified content.'\n            },\n            {\n                id: 'editorOverviewRuler.addedForeground', defaults: {\n                    dark: Color.transparent(ScmColors.editorGutterAddedBackground, 0.6),\n                    light: Color.transparent(ScmColors.editorGutterAddedBackground, 0.6),\n                    hcDark: Color.transparent(ScmColors.editorGutterAddedBackground, 0.6),\n                    hcLight: Color.transparent(ScmColors.editorGutterAddedBackground, 0.6)\n                }, description: 'Overview ruler marker color for added content.'\n            },\n            {\n                id: 'editorOverviewRuler.deletedForeground', defaults: {\n                    dark: Color.transparent(ScmColors.editorGutterDeletedBackground, 0.6),\n                    light: Color.transparent(ScmColors.editorGutterDeletedBackground, 0.6),\n                    hcDark: Color.transparent(ScmColors.editorGutterDeletedBackground, 0.6),\n                    hcLight: Color.transparent(ScmColors.editorGutterDeletedBackground, 0.6)\n                }, description: 'Overview ruler marker color for deleted content.'\n            }\n        );\n    }\n\n    registerThemeStyle(theme: ColorTheme, collector: CssStyleCollector): void {\n        const contrastBorder = theme.getColor('contrastBorder');\n        if (contrastBorder && isHighContrast(theme.type)) {\n            collector.addRule(`\n                .theia-scm-input-message-container textarea {\n                    outline: var(--theia-border-width) solid ${contrastBorder};\n                    outline-offset: -1px;\n                }\n            `);\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Arm and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport * as React from '@theia/core/shared/react';\nimport { ReactWidget } from '@theia/core/lib/browser';\nimport { AlertMessage } from '@theia/core/lib/browser/widgets/alert-message';\nimport { nls } from '@theia/core/lib/common/nls';\n\n@injectable()\nexport class ScmNoRepositoryWidget extends ReactWidget {\n\n    static ID = 'scm-no-repository-widget';\n\n    constructor() {\n        super();\n        this.addClass('theia-scm-no-repository');\n        this.id = ScmNoRepositoryWidget.ID;\n    }\n\n    protected render(): React.ReactNode {\n        return <AlertMessage\n            type='WARNING'\n            header={nls.localize('theia/scm/noRepositoryFound', 'No repository found')}\n        />;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport {\n    createPreferenceProxy,\n    PreferenceProxy,\n    PreferenceService,\n    PreferenceSchema,\n    PreferenceContribution\n} from '@theia/core/lib/browser/preferences';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport const scmPreferenceSchema: PreferenceSchema = {\n    type: 'object',\n    properties: {\n        'scm.defaultViewMode': {\n            type: 'string',\n            enum: ['tree', 'list'],\n            enumDescriptions: [\n                nls.localizeByDefault('Show the repository changes as a tree.'),\n                nls.localizeByDefault('Show the repository changes as a list.')\n            ],\n            description: nls.localizeByDefault('Controls the default Source Control repository view mode.'),\n            default: 'list'\n        }\n    }\n};\n\nexport interface ScmConfiguration {\n    'scm.defaultViewMode': 'tree' | 'list'\n}\n\nexport const ScmPreferenceContribution = Symbol('ScmPreferenceContribution');\nexport const ScmPreferences = Symbol('ScmPreferences');\nexport type ScmPreferences = PreferenceProxy<ScmConfiguration>;\n\nexport function createScmPreferences(preferences: PreferenceService, schema: PreferenceSchema = scmPreferenceSchema): ScmPreferences {\n    return createPreferenceProxy(preferences, schema);\n}\n\nexport function bindScmPreferences(bind: interfaces.Bind): void {\n    bind(ScmPreferences).toDynamicValue((ctx: interfaces.Context) => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        const contribution = ctx.container.get<PreferenceContribution>(ScmPreferenceContribution);\n        return createScmPreferences(preferences, contribution.schema);\n    }).inSingletonScope();\n    bind(ScmPreferenceContribution).toConstantValue({ schema: scmPreferenceSchema });\n    bind(PreferenceContribution).toService(ScmPreferenceContribution);\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, optional } from '@theia/core/shared/inversify';\nimport { MessageService } from '@theia/core/lib/common/message-service';\nimport URI from '@theia/core/lib/common/uri';\nimport { ScmService } from './scm-service';\nimport { LabelProvider } from '@theia/core/lib/browser/label-provider';\nimport { QuickInputService } from '@theia/core/lib/browser';\n\n@injectable()\nexport class ScmQuickOpenService {\n\n    @inject(QuickInputService) @optional() protected readonly quickInputService: QuickInputService;\n    @inject(MessageService) protected readonly messageService: MessageService;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(ScmService) protected readonly scmService: ScmService;\n\n    async changeRepository(): Promise<void> {\n        const repositories = this.scmService.repositories;\n        if (repositories.length > 1) {\n            const items = await Promise.all(repositories.map(async repository => {\n                const uri = new URI(repository.provider.rootUri);\n                return {\n                    label: this.labelProvider.getName(uri),\n                    description: this.labelProvider.getLongName(uri),\n                    execute: () => {\n                        this.scmService.selectedRepository = repository;\n                    }\n                };\n            }));\n            this.quickInputService?.showQuickPick(items, { placeholder: 'Select repository to work with:' });\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable no-null/no-null, @typescript-eslint/no-explicit-any */\n\nimport { Message } from '@theia/core/shared/@phosphor/messaging';\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport {\n    BaseWidget, Widget, StatefulWidget, Panel, PanelLayout, MessageLoop, CompositeTreeNode, SelectableTreeNode, ApplicationShell, NavigatableWidget,\n} from '@theia/core/lib/browser';\nimport { ScmCommitWidget } from './scm-commit-widget';\nimport { ScmAmendWidget } from './scm-amend-widget';\nimport { ScmNoRepositoryWidget } from './scm-no-repository-widget';\nimport { ScmService } from './scm-service';\nimport { ScmTreeWidget } from './scm-tree-widget';\nimport { ScmPreferences } from './scm-preferences';\nimport { nls } from '@theia/core/lib/common/nls';\n\n@injectable()\nexport class ScmWidget extends BaseWidget implements StatefulWidget {\n\n    protected panel: Panel;\n\n    static ID = 'scm-view';\n\n    @inject(ApplicationShell) protected readonly shell: ApplicationShell;\n    @inject(ScmService) protected readonly scmService: ScmService;\n    @inject(ScmCommitWidget) protected readonly commitWidget: ScmCommitWidget;\n    @inject(ScmTreeWidget) readonly resourceWidget: ScmTreeWidget;\n    @inject(ScmAmendWidget) protected readonly amendWidget: ScmAmendWidget;\n    @inject(ScmNoRepositoryWidget) readonly noRepositoryWidget: ScmNoRepositoryWidget;\n    @inject(ScmPreferences) protected readonly scmPreferences: ScmPreferences;\n\n    set viewMode(mode: 'tree' | 'list') {\n        this.resourceWidget.viewMode = mode;\n    }\n    get viewMode(): 'tree' | 'list' {\n        return this.resourceWidget.viewMode;\n    }\n\n    constructor() {\n        super();\n        this.node.tabIndex = 0;\n        this.id = ScmWidget.ID;\n        this.addClass('theia-scm');\n        this.addClass('theia-scm-main-container');\n    }\n\n    @postConstruct()\n    protected init(): void {\n        const layout = new PanelLayout();\n        this.layout = layout;\n        this.panel = new Panel({\n            layout: new PanelLayout({\n            })\n        });\n        this.panel.node.tabIndex = -1;\n        this.panel.node.setAttribute('class', 'theia-scm-panel');\n        layout.addWidget(this.panel);\n\n        this.containerLayout.addWidget(this.commitWidget);\n        this.containerLayout.addWidget(this.resourceWidget);\n        this.containerLayout.addWidget(this.amendWidget);\n        this.containerLayout.addWidget(this.noRepositoryWidget);\n\n        this.refresh();\n        this.toDispose.push(this.scmService.onDidChangeSelectedRepository(() => this.refresh()));\n        this.updateViewMode(this.scmPreferences.get('scm.defaultViewMode'));\n        this.toDispose.push(this.scmPreferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'scm.defaultViewMode') {\n                this.updateViewMode(e.newValue);\n            }\n        }));\n        this.toDispose.push(this.shell.onDidChangeCurrentWidget(({ newValue }) => {\n            const uri = NavigatableWidget.getUri(newValue || undefined);\n            if (uri) {\n                this.resourceWidget.selectNodeByUri(uri);\n            }\n        }));\n\n    }\n\n    get containerLayout(): PanelLayout {\n        return this.panel.layout as PanelLayout;\n    }\n\n    /**\n     * Updates the view mode based on the preference value.\n     * @param preference the view mode preference.\n     */\n    protected updateViewMode(preference: 'tree' | 'list'): void {\n        this.viewMode = preference;\n    }\n\n    protected readonly toDisposeOnRefresh = new DisposableCollection();\n    protected refresh(): void {\n        this.toDisposeOnRefresh.dispose();\n        this.toDispose.push(this.toDisposeOnRefresh);\n        const repository = this.scmService.selectedRepository;\n        this.title.label = repository ? repository.provider.label : nls.localize('theia/scm/noRepositoryFound', 'No repository found');\n        this.title.caption = this.title.label;\n        this.update();\n        if (repository) {\n            this.toDisposeOnRefresh.push(repository.onDidChange(() => this.update()));\n            // render synchronously to avoid cursor jumping\n            // see https://stackoverflow.com/questions/28922275/in-reactjs-why-does-setstate-behave-differently-when-called-synchronously/28922465#28922465\n            this.toDisposeOnRefresh.push(repository.input.onDidChange(() => this.updateImmediately()));\n            this.toDisposeOnRefresh.push(repository.input.onDidFocus(() => this.focusInput()));\n\n            this.commitWidget.show();\n            this.resourceWidget.show();\n            this.amendWidget.show();\n            this.noRepositoryWidget.hide();\n        } else {\n            this.commitWidget.hide();\n            this.resourceWidget.hide();\n            this.amendWidget.hide();\n            this.noRepositoryWidget.show();\n        }\n    }\n\n    protected updateImmediately(): void {\n        this.onUpdateRequest(Widget.Msg.UpdateRequest);\n    }\n\n    protected override onUpdateRequest(msg: Message): void {\n        MessageLoop.sendMessage(this.commitWidget, msg);\n        MessageLoop.sendMessage(this.resourceWidget, msg);\n        MessageLoop.sendMessage(this.amendWidget, msg);\n        MessageLoop.sendMessage(this.noRepositoryWidget, msg);\n        super.onUpdateRequest(msg);\n    }\n\n    protected override onAfterAttach(msg: Message): void {\n        this.node.appendChild(this.commitWidget.node);\n        this.node.appendChild(this.resourceWidget.node);\n        this.node.appendChild(this.amendWidget.node);\n        this.node.appendChild(this.noRepositoryWidget.node);\n\n        super.onAfterAttach(msg);\n        this.update();\n    }\n\n    protected override onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.refresh();\n        if (this.commitWidget.isVisible) {\n            this.commitWidget.focus();\n        } else {\n            this.node.focus();\n        }\n    }\n\n    protected focusInput(): void {\n        this.commitWidget.focus();\n    }\n\n    storeState(): any {\n        const state: object = {\n            commitState: this.commitWidget.storeState(),\n            changesTreeState: this.resourceWidget.storeState(),\n        };\n        return state;\n    }\n\n    restoreState(oldState: any): void {\n        const { commitState, changesTreeState } = oldState;\n        this.commitWidget.restoreState(commitState);\n        this.resourceWidget.restoreState(changesTreeState);\n    }\n\n    collapseScmTree(): void {\n        const { model } = this.resourceWidget;\n        const root = model.root;\n        if (CompositeTreeNode.is(root)) {\n            root.children.map(group => {\n                if (CompositeTreeNode.is(group)) {\n                    group.children.map(folderNode => {\n                        if (CompositeTreeNode.is(folderNode)) {\n                            model.collapseAll(folderNode);\n                        }\n                        if (SelectableTreeNode.isSelected(folderNode)) {\n                            model.toggleNode(folderNode);\n                        }\n                    });\n                }\n            });\n        }\n    }\n}\n","export function convertChangesToXML(changes) {\n  let ret = [];\n  for (let i = 0; i < changes.length; i++) {\n    let change = changes[i];\n    if (change.added) {\n      ret.push('<ins>');\n    } else if (change.removed) {\n      ret.push('<del>');\n    }\n\n    ret.push(escapeHTML(change.value));\n\n    if (change.added) {\n      ret.push('</ins>');\n    } else if (change.removed) {\n      ret.push('</del>');\n    }\n  }\n  return ret.join('');\n}\n\nfunction escapeHTML(s) {\n  let n = s;\n  n = n.replace(/&/g, '&amp;');\n  n = n.replace(/</g, '&lt;');\n  n = n.replace(/>/g, '&gt;');\n  n = n.replace(/\"/g, '&quot;');\n\n  return n;\n}\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/dist/cjs.js!./scm-amend-component.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":["convertChangesToXML","changes","ret","i","length","change","added","push","removed","escapeHTML","value","join","s","n","replace"],"sourceRoot":""}