{"version":3,"file":"vendors-node_modules_theia_core_lib_common_markdown-rendering_index_js-node_modules_theia_tes-f3e309.js","mappings":"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","sources":["webpack:///./node_modules/@theia/core/src/common/markdown-rendering/index.ts?","webpack:///./node_modules/@theia/test/src/common/collections.ts?","webpack:///./node_modules/@theia/test/src/common/tree-delta.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './markdown-string';\nexport * from './icon-utilities';\n","// *****************************************************************************\n// Copyright (C) 2022 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Event } from '@theia/core';\nimport { CollectionDelta, TreeDeltaBuilder } from './tree-delta';\nimport { Emitter } from '@theia/core/shared/vscode-languageserver-protocol';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function observableProperty(observationFunction: string): (target: any, property: string) => any {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (target: any, property: string): any => {\n        Reflect.defineProperty(target, property, {\n            // @ts-ignore\n            get(): unknown { return this['_' + property]; },\n            set(v: unknown): void {\n                // @ts-ignore\n                this[observationFunction](property, v);\n                // @ts-ignore\n                this['_' + property] = v;\n            }\n        });\n    };\n}\n\nexport class ChangeBatcher {\n    private handle: NodeJS.Timeout | undefined;\n    private startTime: number | undefined;\n    constructor(private emitBatch: () => void, readonly timeoutMs: number) {\n    }\n\n    changeOccurred(): void {\n        if (!this.startTime) {\n            this.startTime = Date.now();\n            this.handle = setTimeout(() => {\n                this.flush();\n            }, this.timeoutMs);\n        } else {\n            if (Date.now() - this.startTime > this.timeoutMs) {\n                this.flush();\n            }\n        }\n    }\n    flush(): void {\n        if (this.handle) {\n            clearTimeout(this.handle);\n            this.handle = undefined;\n        }\n        this.startTime = undefined;\n        this.emitBatch();\n    }\n}\n\nexport class SimpleObservableCollection<V> {\n    private _values: V[] = [];\n\n    constructor(private equals: (left: V, right: V) => boolean = (left, right) => left === right) {\n    }\n\n    add(value: V): boolean {\n        if (!this._values.find(v => this.equals(v, value))) {\n            this._values.push(value);\n            this.onChangeEmitter.fire({ added: [value] });\n            return true;\n        }\n        return false;\n    }\n\n    remove(value: V): boolean {\n        const index = this._values.findIndex(v => this.equals(v, value));\n        if (index >= 0) {\n            this._values.splice(index, 1);\n            this.onChangeEmitter.fire({ removed: [value] });\n            return true;\n        }\n        return false;\n    }\n\n    private onChangeEmitter = new Emitter<CollectionDelta<V, V>>();\n    onChanged: Event<CollectionDelta<V, V>> = this.onChangeEmitter.event;\n    get values(): readonly V[] {\n        return this._values;\n    }\n\n    clear(): void {\n        const copy = this._values;\n        this._values = [];\n        this.onChangeEmitter.fire({ removed: copy });\n    }\n}\n\nabstract class AbstractIndexedCollection<K, T> {\n    private keys: Map<K, T> = new Map();\n    private _values: T[] | undefined;\n\n    abstract add(item: T): T | undefined;\n\n    get values(): readonly T[] {\n        if (!this._values) {\n            this._values = [...this.keys.values()];\n        }\n        return this._values;\n    }\n\n    get size(): number {\n        return this.keys.size;\n    }\n\n    has(key: K): boolean {\n        return this.keys.has(key);\n    }\n\n    get(key: K): T | undefined {\n        return this.keys.get(key);\n    }\n\n    protected doAdd(key: K, value: T): T | undefined {\n        const previous = this.keys.get(key);\n        if (previous !== undefined) {\n            return previous;\n        } else {\n            this.keys.set(key, value);\n            this._values = undefined;\n            return undefined;\n        }\n    }\n\n    remove(key: K): T | undefined {\n        const previous = this.keys.get(key);\n        if (previous !== undefined) {\n            this.keys.delete(key);\n            this._values = undefined;\n            return previous;\n        }\n        return undefined;\n    }\n}\n\nexport class TreeCollection<K, T, P> extends AbstractIndexedCollection<K, T> implements Iterable<[K, T]> {\n\n    constructor(protected readonly owner: T | P,\n        protected readonly pathOf: (v: T) => K[],\n        protected readonly deltaBuilder: (v: T | undefined) => TreeDeltaBuilder<K, T> | undefined) {\n        super();\n    }\n\n    add(item: T): T | undefined {\n        const path = this.pathOf(item);\n        const previous = this.doAdd(path[path.length - 1], item);\n        const deltaBuilder = this.deltaBuilder(item);\n        if (deltaBuilder) {\n            if (previous) {\n                deltaBuilder.reportChanged(path, item);\n            } else {\n                deltaBuilder.reportAdded(path, item);\n            }\n        }\n        return previous;\n    }\n\n    override remove(key: K): T | undefined {\n        const toRemove = this.get(key);\n        if (toRemove) {\n            const deltaBuilder = this.deltaBuilder(toRemove);\n            const path = this.pathOf(toRemove);\n            super.remove(key);\n            if (deltaBuilder) {\n                deltaBuilder.reportRemoved(path);\n            }\n        }\n        return toRemove;\n    }\n\n    entries(): Iterator<[K, T], unknown, undefined> {\n        return this[Symbol.iterator]();\n    }\n\n    [Symbol.iterator](): Iterator<[K, T], unknown, undefined> {\n        const iter = this.values.entries();\n        const that = this;\n        return {\n            next(..._args): IteratorResult<[K, T]> {\n                const res = iter.next();\n                if (res.done) {\n                    return { done: true, value: res.value };\n                } else {\n                    const path = that.pathOf(res.value[1]);\n                    const result: [K, T] = [path[path.length - 1], res.value[1]];\n                    return {\n                        done: false,\n                        value: result\n                    };\n                }\n            }\n        };\n\n    }\n}\nexport function groupBy<K, T>(items: Iterable<T>, keyOf: (item: T) => K): Map<K, T[]> {\n    const result = new Map<K, T[]>();\n    for (const item of items) {\n        const key = keyOf(item);\n        let values = result.get(key);\n        if (!values) {\n            values = [];\n            result.set(key, values);\n        }\n        values.push(item);\n    }\n    return result;\n}\n","// *****************************************************************************\n// Copyright (C) 2022 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Emitter, Event } from '@theia/core';\nimport { ChangeBatcher } from './collections';\n\nexport interface CollectionDelta<K, T> {\n    added?: T[];\n    removed?: K[];\n}\n\nexport enum DeltaKind {\n    NONE, ADDED, REMOVED, CHANGED\n}\n\nexport interface TreeDelta<K, T> {\n    path: K[];\n    type: DeltaKind;\n    value?: Partial<T>;\n    childDeltas?: TreeDelta<K, T>[];\n}\n\nexport interface TreeDeltaBuilder<K, T> {\n    reportAdded(path: K[], added: T): void;\n    reportRemoved(path: K[]): void;\n    reportChanged(path: K[], change: Partial<T>): void;\n}\n\nexport class MappingTreeDeltaBuilder<K, T, V> implements TreeDeltaBuilder<K, V> {\n    constructor(private readonly wrapped: TreeDeltaBuilder<K, T>, private readonly map: (value: V) => T, private readonly mapPartial: (value: Partial<V>) => Partial<T>) { }\n    reportAdded(path: K[], added: V): void {\n        this.wrapped.reportAdded(path, this.map(added));\n    }\n    reportRemoved(path: K[]): void {\n        this.wrapped.reportRemoved(path);\n    }\n    reportChanged(path: K[], change: Partial<V>): void {\n        this.wrapped.reportChanged(path, this.mapPartial(change));\n    }\n}\n\nexport class TreeDeltaBuilderImpl<K, T> {\n    protected _currentDelta: TreeDelta<K, T>[] = [];\n\n    get currentDelta(): TreeDelta<K, T>[] {\n        return this._currentDelta;\n    }\n\n    reportAdded(path: K[], added: T): void {\n        this.findNode(path, (parentCollection, nodeIndex, residual) => {\n            if (residual.length === 0) {\n                // we matched an exact node\n                const child = parentCollection[nodeIndex];\n                if (child.type === DeltaKind.REMOVED) {\n                    child.type = DeltaKind.CHANGED;\n                } else if (child.type === DeltaKind.NONE) {\n                    child.type = DeltaKind.ADDED;\n                }\n                child.value = added;\n            } else {\n                this.insert(parentCollection, nodeIndex, {\n                    path: residual,\n                    type: DeltaKind.ADDED,\n                    value: added,\n                });\n            }\n        });\n    }\n\n    reportRemoved(path: K[]): void {\n        this.findNode(path, (parentCollection, nodeIndex, residual) => {\n            if (residual.length === 0) {\n                // we matched an exact node\n                const child = parentCollection[nodeIndex];\n                if (child.type === DeltaKind.CHANGED) {\n                    child.type = DeltaKind.REMOVED;\n                    delete child.value;\n                } else if (child.type === DeltaKind.ADDED) {\n                    parentCollection.splice(nodeIndex, 1);\n                } else if (child.type === DeltaKind.NONE) {\n                    child.type = DeltaKind.REMOVED;\n                }\n            } else {\n                this.insert(parentCollection, nodeIndex, {\n                    path: residual,\n                    type: DeltaKind.REMOVED,\n                });\n            }\n        });\n\n    }\n\n    reportChanged(path: K[], change: Partial<T>): void {\n        this.findNode(path, (parentCollection, nodeIndex, residual) => {\n            if (residual.length === 0) {\n                // we matched an exact node\n                const child = parentCollection[nodeIndex];\n                if (child.type === DeltaKind.NONE) {\n                    child.type = DeltaKind.CHANGED;\n                    child.value = change;\n                } else if (child.type === DeltaKind.CHANGED) {\n                    Object.assign(child.value!, change);\n                }\n            } else {\n                this.insert(parentCollection, nodeIndex, {\n                    path: residual,\n                    type: DeltaKind.CHANGED,\n                    value: change,\n                });\n            }\n        });\n\n    }\n\n    private insert(parentCollection: TreeDelta<K, T>[], nodeIndex: number, delta: TreeDelta<K, T>): void {\n        if (nodeIndex < 0) {\n            parentCollection.push(delta);\n        } else {\n            const child = parentCollection[nodeIndex];\n            const prefixLength = computePrefixLength(delta.path, child.path);\n\n            if (prefixLength === delta.path.length) {\n                child.path = child.path.slice(prefixLength);\n                delta.childDeltas = [child];\n                parentCollection[nodeIndex] = delta;\n            } else {\n                const newNode: TreeDelta<K, T> = {\n                    path: child.path.slice(0, prefixLength),\n                    type: DeltaKind.NONE,\n                    childDeltas: []\n                };\n                parentCollection[nodeIndex] = newNode;\n                delta.path = delta.path.slice(prefixLength);\n                newNode.childDeltas!.push(delta);\n                child.path = child.path.slice(prefixLength);\n                newNode.childDeltas!.push(child);\n                if (newNode.path.length === 0) {\n                    console.log('newNode');\n                }\n            }\n            if (delta.path.length === 0) {\n                console.log('delta');\n            }\n\n            if (child.path.length === 0) {\n                console.log('child');\n            }\n        }\n    }\n\n    private findNode(path: K[], handler: (parentCollection: TreeDelta<K, T>[], nodeIndex: number, residualPath: K[]) => void): void {\n        doFindNode(this._currentDelta, path, handler);\n    }\n}\n\nfunction doFindNode<K, T>(rootCollection: TreeDelta<K, T>[], path: K[],\n    handler: (parentCollection: TreeDelta<K, T>[], nodeIndex: number, residualPath: K[]) => void): void {\n    // handler parameters:\n    // parent collection: the collection the node index refers to, if valid\n    // nodeIndex: the index of the node that has a common path prefix with the path of the path we're searching\n    // residual path: the path that has not been consumed looking for the path: if empty, we found the exact node\n\n    let commonPrefixLength = 0;\n    const childIndex = rootCollection.findIndex(delta => {\n        commonPrefixLength = computePrefixLength(delta.path, path);\n        return commonPrefixLength > 0;\n    });\n    if (childIndex >= 0) {\n        // we know which child to insert into\n        const child = rootCollection[childIndex];\n\n        if (commonPrefixLength === child.path.length) {\n            // we matched a child\n            if (commonPrefixLength === path.length) {\n                // it's an exact match: we already have a node for the given path\n                handler(rootCollection, childIndex, []);\n                return;\n            }\n            // we know the node is below the child\n            if (child.type === DeltaKind.REMOVED || child.type === DeltaKind.ADDED) {\n                // there will be no children deltas beneath added/remove nodes\n                return;\n            }\n            if (!child.childDeltas) {\n                child.childDeltas = [];\n            }\n            doFindNode(child.childDeltas, path.slice(child.path.length), handler);\n        } else {\n            handler(rootCollection, childIndex, path);\n        }\n    } else {\n        // we have no node to insert into\n        handler(rootCollection, -1, path);\n    }\n}\n\nfunction computePrefixLength<K>(left: K[], right: K[]): number {\n    let i = 0;\n    while (i < left.length && i < right.length && left[i] === right[i]) {\n        i++;\n    }\n\n    return i;\n}\n\nexport class AccumulatingTreeDeltaEmitter<K, T> extends TreeDeltaBuilderImpl<K, T> {\n    private batcher: ChangeBatcher;\n    private onDidFlushEmitter: Emitter<TreeDelta<K, T>[]> = new Emitter();\n    onDidFlush: Event<TreeDelta<K, T>[]> = this.onDidFlushEmitter.event;\n\n    constructor(timeoutMillis: number) {\n        super();\n        this.batcher = new ChangeBatcher(() => this.doEmitDelta(), timeoutMillis);\n    }\n\n    flush(): void {\n        this.batcher.flush();\n    }\n\n    doEmitDelta(): void {\n        const batch = this._currentDelta;\n        this._currentDelta = [];\n        this.onDidFlushEmitter.fire(batch);\n    }\n\n    override reportAdded(path: K[], added: T): void {\n        super.reportAdded(path, added);\n        // console.debug(`reported added, now: ${JSON.stringify(path, undefined, 3)}`);\n        // logging levels don't work in plugin host: https://github.com/eclipse-theia/theia/issues/12234\n        this.batcher.changeOccurred();\n    }\n\n    override reportChanged(path: K[], change: Partial<T>): void {\n        super.reportChanged(path, change);\n        // console.debug(`reported changed, now: ${JSON.stringify(path, undefined, 3)}`);\n        // logging levels don't work in plugin host: https://github.com/eclipse-theia/theia/issues/12234\n        this.batcher.changeOccurred();\n    }\n\n    override reportRemoved(path: K[]): void {\n        super.reportRemoved(path);\n        // console.debug(`reported removed, now: ${JSON.stringify(path, undefined, 3)}`);\n        // logging levels don't work in plugin host: https://github.com/eclipse-theia/theia/issues/12234\n        this.batcher.changeOccurred();\n    }\n}\n"],"names":[],"sourceRoot":""}