{"version":3,"file":"vendors-node_modules_theia_notebook_lib_browser_contributions_notebook-actions-contribution_j-ff4791.js","mappings":";;;;;;;;;;AAAA,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAEhF,gIAA6F;AAE7F,2NAA2G;AAE3G,yOAAmH;AACnH,8OAAqH;AACrH,wGAA6G;AAG7G,6IAAoD;AACpD,qJAAmE;AAEnE,MAAa,kBAAmB,SAAQ,oCAAoB;IAkBxD,YACa,GAAQ,EACR,QAA2B,EAC3B,IAAiB,EAC1B,QAA8B,EAC9B,OAA+B,EAC/B,QAAiC;QAEjC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAPP,QAAG,GAAH,GAAG,CAAK;QACR,aAAQ,GAAR,QAAQ,CAAmB;QAC3B,SAAI,GAAJ,IAAI,CAAa;QAlBX,cAAS,GAAG,IAAI,2BAAoB,EAAE,CAAC;QAEvC,mCAA8B,GAAG,IAAI,cAAO,EAAY,CAAC;QACzD,8BAAyB,GAAG,IAAI,cAAO,EAAS,CAAC;QACjD,0BAAqB,GAAG,IAAI,cAAO,EAAW,CAAC;QAC/C,oCAA+B,GAAG,IAAI,cAAO,EAA2B,CAAC;QACnF,6BAAwB,GAAG,IAAI,CAAC,+BAA+B,CAAC,KAAK,CAAC;QAC5D,uBAAkB,GAAG,IAAI,cAAO,EAAoB,CAAC;QACrD,6BAAwB,GAAG,IAAI,cAAO,EAAU,CAAC;QAC3D,sBAAiB,GAAG,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC;QAC9C,2BAAsB,GAAG,IAAI,cAAO,EAAQ,CAAC;QACvD,sBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC;QAC5C,oBAAe,GAAG,IAAI,cAAO,EAAoB,CAAC;QAC5D,gBAAW,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;QAW9C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YACnB,IAAI,CAAC,8BAA8B;YACnC,IAAI,CAAC,yBAAyB;YAC9B,IAAI,CAAC,qBAAqB;YAC1B,IAAI,CAAC,+BAA+B;YACpC,IAAI,CAAC,kBAAkB;YACvB,IAAI,CAAC,wBAAwB;YAC7B,IAAI,CAAC,sBAAsB;SAC9B,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;IACnD,CAAC;IAED,UAAU;QACN,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAES,MAAM,CAAC,OAA+B,EAAE,QAAiC;QAC/E,MAAM,eAAe,GAAG;YACpB,GAAG,OAAO;YACV,SAAS,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;YAC5B,oBAAoB,EAAE,IAAI;YAC1B,eAAe,EAAE,IAAI;YACrB,SAAS,EAAE;gBACP,UAAU,EAAE,KAAK;gBACjB,iBAAiB,EAAE,KAAK;gBACxB,mBAAmB,EAAE,KAAK;gBAC1B,qBAAqB,EAAE,EAAE;gBACzB,uBAAuB,EAAE,EAAE;gBAC3B,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,SAAS;aACxB;SACJ,CAAC;QACF,MAAM,YAAY,GAAG,IAAI,CAAC,4BAA4B,CAAC,QAAQ,CAAC,CAAC;QACjE,OAAO,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,cAAc,CAAC,mCAAgB,EAAE,IAAI,CAAC,IAAI,EAAE;YAC1E,GAAG,eAAe;YAClB,SAAS,EAAE;gBACP,KAAK,EAAE,CAAC;gBACR,MAAM,EAAE,CAAC;aACZ;SACJ,EAAE,EAEF,CAAC,CAAC;IACP,CAAC;IAES,WAAW,CAAC,UAA4B;QAC9C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC,CAAC,EAAE,CACxD,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,WAAW,CAAC,CAC1C,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,wBAAwB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAC/E,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QACvE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,uBAAuB,CAAC,CAAC,CAAC,EAAE;YACvD,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,cAAc,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;QACjJ,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;YAC3C,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC;YAC9C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;gBACzB,MAAM,EAAE;oBACJ,GAAI,CAAC,CAAC,MAAiC;oBACvC,OAAO,EAAE,OAAO,IAAI,SAAS;oBAC7B,WAAW,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,SAAS;oBAC3E,KAAK,EAAE,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,SAAS;oBACpD,QAAQ,EAAE,QAAQ,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,CAAC,IAAI,SAAS;oBAC5F,MAAM,EAAE,SAAS;iBACpB;gBACD,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,YAAY;aAC9B,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE;YACjD,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,WAAW,CAAC,UAAkB;QAC1B,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;IAC9E,CAAC;IAES,mBAAmB,CAAC,UAAkB;QAC5C,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACnD,CAAC;IAES,4BAA4B,CAAC,QAAiC;QACpE,MAAM,YAAY,GAAG,uCAAkB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACvD,IAAI,QAAQ,EAAE;YACV,MAAM,gBAAgB,GAAG,IAAI,qCAAiB,CAAC,GAAG,QAAQ,CAAC,CAAC;YAC5D,OAAO,YAAY,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;SACrD;QACD,OAAO,YAAY,CAAC;IACxB,CAAC;IAES,qBAAqB,CAAC,MAAyC;QACrE,OAAO;YACH,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;YACrC,WAAW,EAAE,MAAM,CAAC,WAAW;YAC/B,IAAI,EAAE,MAAM,CAAC,IAAI;SACpB,CAAC;IACN,CAAC;IAED,OAAO;QACH,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,WAAW;QACP,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,2CAA2C;QAC3C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAED,OAAO,CAAC,SAAoB;QACxB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACvB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACzC,CAAC;IAES,UAAU;QAChB,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAES,MAAM,CAAC,SAAqB;QAClC,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAChE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;SAClC;IACL,CAAC;IAES,iBAAiB,CAAC,QAAqB,EAAE,SAA+C;QAC9F,IAAI,SAAS,IAAI,SAAS,CAAC,KAAK,IAAI,CAAC,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;YAC5D,OAAO,SAAS,CAAC;SACpB;QACD,MAAM,SAAS,GAAG,qBAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAEjD,MAAM,KAAK,GAAG,CAAC,CAAC,SAAS,IAAI,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;YAC/C,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;YACpC,SAAS,CAAC,KAAK,CAAC;QAEpB,MAAM,MAAM,GAAG,CAAC,CAAC,SAAS,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACjD,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;YACrC,SAAS,CAAC,MAAM,CAAC;QAErB,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;IAC7B,CAAC;IAES,QAAQ,CAAC,QAAqB,EAAE,SAAgC;QACtE,OAAO,QAAQ,CAAC,WAAW,GAAG,SAAS,CAAC,aAAa,CAAC;IAC1D,CAAC;IAES,SAAS,CAAC,QAAqB,EAAE,SAAgC;QACvE,OAAO,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC;IAC1C,CAAC;IAED,OAAO;QACH,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;CAEJ;AArLD,gDAqLC;;;;;;;;;;;;ACjND,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,wGAA4I;AAC5I,oIAAkE;AAClE,wHAAoF;AAEpF,4JAA8D;AAC9D,+GAAsD;AACtD,kNAAwH;AACxH,0LAAiF;AACjF,8JAAiE;AAEjE,IAAiB,gBAAgB,CAiChC;AAjCD,WAAiB,gBAAgB;IAChB,qCAAoB,GAAG,cAAO,CAAC,yBAAyB,CAAC;QAClE,EAAE,EAAE,uBAAuB;QAC3B,SAAS,EAAE,qBAAO,EAAC,KAAK,CAAC;KAC5B,CAAC,CAAC;IAEU,8CAA6B,GAAG,cAAO,CAAC,yBAAyB,CAAC;QAC3E,EAAE,EAAE,gCAAgC;QACpC,SAAS,EAAE,qBAAO,EAAC,KAAK,CAAC;KAC5B,CAAC,CAAC;IAEU,0CAAyB,GAAG,cAAO,CAAC,yBAAyB,CAAC;QACvE,EAAE,EAAE,4BAA4B;QAChC,SAAS,EAAE,qBAAO,EAAC,KAAK,CAAC;KAC5B,CAAC,CAAC;IAEU,sCAAqB,GAAG,cAAO,CAAC,yBAAyB,CAAC;QACnE,EAAE,EAAE,uBAAuB;QAC3B,QAAQ,EAAE,UAAU;QACpB,SAAS,EAAE,qBAAO,EAAC,oBAAoB,CAAC;KAC3C,CAAC,CAAC;IAEU,yCAAwB,GAAG,cAAO,CAAC,yBAAyB,CAAC;QACtE,EAAE,EAAE,kBAAkB;QACtB,QAAQ,EAAE,UAAU;QACpB,SAAS,EAAE,qBAAO,EAAC,SAAS,CAAC;KAChC,CAAC,CAAC;IAEU,0CAAyB,GAAG,cAAO,CAAC,yBAAyB,CAAC;QACvE,EAAE,EAAE,4BAA4B;QAChC,QAAQ,EAAE,UAAU;QACpB,SAAS,EAAE,qBAAO,EAAC,WAAW,CAAC;KAClC,CAAC,CAAC;AACP,CAAC,EAjCgB,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAiChC;AAGD,IAAa,2BAA2B,GAAxC,MAAa,2BAA2B;IAcpC,gBAAgB,CAAC,QAAyB;QACtC,QAAQ,CAAC,eAAe,CAAC,gBAAgB,CAAC,oBAAoB,EAAE;YAC5D,OAAO,EAAE,CAAC,aAA4B,EAAE,QAAkB,EAAE,KAAc,EAAE,EAAE;;gBAC1E,MAAM,WAAW,GAAG,KAAK,aAAL,KAAK,cAAL,KAAK,GAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxH,IAAI,aAAa,CAAC;gBAClB,IAAI,QAAQ,KAAK,iBAAQ,CAAC,IAAI,EAAE;oBAC5B,aAAa,GAAG,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,iBAAQ,CAAC,IAAI,CAAC,CAAC;iBACrF;gBAED,aAAa,CAAC,UAAU,CAAC,CAAC;wBACtB,QAAQ,iBAAsB;wBAC9B,KAAK,EAAE,WAAW;wBAClB,KAAK,EAAE,CAAC;wBACR,KAAK,EAAE,CAAC;gCACJ,QAAQ;gCACR,QAAQ,EAAE,mBAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,QAAQ,mCAAI,UAAU;gCAC/C,MAAM,EAAE,EAAE;gCACV,OAAO,EAAE,EAAE;gCACX,QAAQ,EAAE,EAAE;6BACf,CAAC;qBACL,CAAC,EAAE,IAAI,CAAC,CAAC;YACd,CAAC;SACJ,CAAC,CAAC;QAEH,QAAQ,CAAC,eAAe,CAAC,gBAAgB,CAAC,6BAA6B,EAAE;YACrE,OAAO,EAAE,CAAC,aAA4B,EAAE,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,EAAE,EAAE,aAAa,EAAE,iBAAQ,CAAC,MAAM,CAAC;SAC/I,CAAC,CAAC;QAEH,QAAQ,CAAC,eAAe,CAAC,gBAAgB,CAAC,yBAAyB,EAAE;YACjE,OAAO,EAAE,CAAC,aAA4B,EAAE,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,EAAE,EAAE,aAAa,EAAE,iBAAQ,CAAC,IAAI,CAAC;SAC7I,CAAC,CAAC;QAEH,QAAQ,CAAC,eAAe,CAAC,gBAAgB,CAAC,qBAAqB,EAAE;YAC7D,OAAO,EAAE,CAAC,aAA4B,EAAE,EAAE,CAAC,IAAI,CAAC,8BAA8B,CAAC,aAAa,CAAC,aAAa,CAAC;SAC9G,CAAC,CAAC;QAEH,QAAQ,CAAC,eAAe,CAAC,gBAAgB,CAAC,wBAAwB,EAAE;YAChE,OAAO,EAAE,CAAC,aAA4B,EAAE,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,aAAa,EAAE,aAAa,CAAC,KAAK,CAAC;SACpI,CAAC,CAAC;QAEH,QAAQ,CAAC,eAAe,CAAC,gBAAgB,CAAC,yBAAyB,EAAE;YACjE,OAAO,EAAE,CAAC,aAA4B,EAAE,EAAE,CACtC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC,CAAC;SAC1I,CAAC,CAAC;QAEH,QAAQ,CAAC,eAAe,CAAC,wBAAc,CAAC,IAAI,CAAC,EAAE,EAAE;YAC7C,SAAS,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,YAAY,6CAAoB;YACxE,OAAO,EAAE,GAAG,EAAE,CAAE,IAAI,CAAC,KAAK,CAAC,YAAqC,CAAC,IAAI,EAAE;SAC1E,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,wBAAc,CAAC,IAAI,CAAC,EAAE,EAAE;YAC7C,SAAS,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,YAAY,6CAAoB;YACxE,OAAO,EAAE,GAAG,EAAE,CAAE,IAAI,CAAC,KAAK,CAAC,YAAqC,CAAC,IAAI,EAAE;SAC1E,CAAC,CAAC;IACP,CAAC;IAED,aAAa,CAAC,KAAwB;QAClC,kDAAkD;QAClD,KAAK,CAAC,0BAA0B,CAAC,aAAa,CAAC,qBAAqB,EAAE,uBAAuB,CAAC,CAAC;QAC/F,0BAA0B;QAC1B,KAAK,CAAC,eAAe,CAAC,aAAa,CAAC,oCAAoC,EAAE,mBAAmB,EAAE,EAAE,IAAI,eAA4B,EAAE,CAAC,CAAC;QACrI,KAAK,CAAC,kBAAkB,CAAC,aAAa,CAAC,oCAAoC,EAAE;YACzE,SAAS,EAAE,gBAAgB,CAAC,yBAAyB,CAAC,EAAE;YACxD,KAAK,EAAE,UAAG,CAAC,iBAAiB,CAAC,MAAM,CAAC;YACpC,IAAI,EAAE,qBAAO,EAAC,KAAK,CAAC;SACvB,CAAC,CAAC;QACH,KAAK,CAAC,kBAAkB,CAAC,aAAa,CAAC,oCAAoC,EAAE;YACzE,SAAS,EAAE,gBAAgB,CAAC,6BAA6B,CAAC,EAAE;YAC5D,KAAK,EAAE,UAAG,CAAC,iBAAiB,CAAC,UAAU,CAAC;YACxC,IAAI,EAAE,qBAAO,EAAC,KAAK,CAAC;SACvB,CAAC,CAAC;QAEH,0BAA0B;QAC1B,KAAK,CAAC,eAAe,CAAC,aAAa,CAAC,qCAAqC,EAAE,gBAAgB,EAAE,EAAE,IAAI,eAA4B,EAAE,CAAC,CAAC;QACnI,KAAK,CAAC,kBAAkB,CAAC,aAAa,CAAC,qCAAqC,EAAE;YAC1E,SAAS,EAAE,gBAAgB,CAAC,wBAAwB,CAAC,EAAE;YACvD,KAAK,EAAE,UAAG,CAAC,iBAAiB,CAAC,SAAS,CAAC;YACvC,IAAI,EAAE,qBAAO,EAAC,SAAS,CAAC;YACxB,KAAK,EAAE,IAAI;SACd,CAAC,CAAC;QACH,KAAK,CAAC,kBAAkB,CAAC,aAAa,CAAC,qCAAqC,EAAE;YAC1E,SAAS,EAAE,gBAAgB,CAAC,yBAAyB,CAAC,EAAE;YACxD,KAAK,EAAE,UAAG,CAAC,iBAAiB,CAAC,mBAAmB,CAAC;YACjD,IAAI,EAAE,qBAAO,EAAC,WAAW,CAAC;YAC1B,KAAK,EAAE,IAAI;SACd,CAAC,CAAC;QACH,cAAc;IAClB,CAAC;CAEJ;AAnGG;IADC,sBAAM,EAAC,kCAAe,CAAC;8BACG,kCAAe;oEAAC;AAG3C;IADC,sBAAM,EAAC,mEAA8B,CAAC;8BACG,4DAAuB;mFAAC;AAGlE;IADC,sBAAM,EAAC,qDAAwB,CAAC;8BACG,qDAAwB;6EAAC;AAG7D;IADC,sBAAM,EAAC,0BAAgB,CAAC;8BACR,0BAAgB;0DAAC;AAZzB,2BAA2B;IADvC,0BAAU,GAAE;GACA,2BAA2B,CAsGvC;AAtGY,kEAA2B;AAwGxC,IAAiB,aAAa,CAI7B;AAJD,WAAiB,aAAa;IACb,mCAAqB,GAAG,kBAAkB,CAAC;IAC3C,kDAAoC,GAAG,CAAC,mCAAqB,EAAE,gBAAgB,CAAC,CAAC;IACjF,mDAAqC,GAAG,CAAC,mCAAqB,EAAE,sBAAsB,CAAC,CAAC;AACzG,CAAC,EAJgB,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAI7B;;;;;;;;;;;;AC1KD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;;AAEhF,wGAA4I;AAC5I,wHAAkD;AAClD,oIAAiF;AAGjF,wKAA6I;AAC7I,sKAAgF;AAChF,0LAAiF;AAIjF,IAAiB,oBAAoB,CAyCpC;AAzCD,WAAiB,oBAAoB;IACjC,oFAAoF;IACvE,iCAAY,GAAG,cAAO,CAAC,yBAAyB,CAAC;QAC1D,EAAE,EAAE,oBAAoB;QACxB,SAAS,EAAE,qBAAO,EAAC,MAAM,CAAC;KAC7B,CAAC,CAAC;IACH,oFAAoF;IACvE,sCAAiB,GAAG,cAAO,CAAC,yBAAyB,CAAC;QAC/D,EAAE,EAAE,yBAAyB;QAC7B,SAAS,EAAE,qBAAO,EAAC,OAAO,CAAC;KAC9B,CAAC,CAAC;IACH,wEAAwE;IAC3D,mCAAc,GAAG,cAAO,CAAC,yBAAyB,CAAC;QAC5D,EAAE,EAAE,sBAAsB;QAC1B,SAAS,EAAE,qBAAO,EAAC,OAAO,CAAC;KAC9B,CAAC,CAAC;IACH,wEAAwE;IAC3D,uCAAkB,GAAG,cAAO,CAAC,yBAAyB,CAAC;QAChE,EAAE,EAAE,0BAA0B;QAC9B,SAAS,EAAE,qBAAO,EAAC,gBAAgB,CAAC;KACvC,CAAC,CAAC;IACH,wEAAwE;IAC3D,gDAA2B,GAAG,cAAO,CAAC,yBAAyB,CAAC;QACzE,EAAE,EAAE,4BAA4B;QAChC,SAAS,EAAE,qBAAO,EAAC,MAAM,CAAC;KAC7B,CAAC,CAAC;IACH,wEAAwE;IAC3D,gDAA2B,GAAG,cAAO,CAAC,yBAAyB,CAAC;QACzE,EAAE,EAAE,mCAAmC;QACvC,SAAS,EAAE,qBAAO,EAAC,MAAM,CAAC;KAC7B,CAAC,CAAC;IACH,oFAAoF;IACvE,0CAAqB,GAAG,cAAO,CAAC,yBAAyB,CAAC;QACnE,EAAE,EAAE,6BAA6B;QACjC,KAAK,EAAE,oBAAoB;KAC9B,CAAC,CAAC;IACH,iIAAiI;IACpH,uDAAkC,GAAG,cAAO,CAAC,yBAAyB,CAAC;QAChF,EAAE,EAAE,mCAAmC;QACvC,KAAK,EAAE,qBAAqB;KAC/B,CAAC,CAAC;AACP,CAAC,EAzCgB,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAyCpC;AAGD,IAAa,8BAA8B,sCAA3C,MAAa,8BAA8B;IAS7B,IAAI;QACV,2CAAmB,CAAC,uBAAuB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACxE,CAAC;IAED,aAAa,CAAC,KAAwB;QAClC,KAAK,CAAC,kBAAkB,CAAC,gCAA8B,CAAC,WAAW,EAAE;YACjE,SAAS,EAAE,oBAAoB,CAAC,YAAY,CAAC,EAAE;YAC/C,IAAI,EAAE,oBAAoB,CAAC,YAAY,CAAC,SAAS;YACjD,IAAI,EAAE,GAAG,0CAAkB,sBAAsB,wDAAgC,EAAE;YACnF,KAAK,EAAE,UAAG,CAAC,iBAAiB,CAAC,WAAW,CAAC;YACzC,KAAK,EAAE,IAAI;SACd,CAAC,CAAC;QACH,KAAK,CAAC,kBAAkB,CAAC,gCAA8B,CAAC,WAAW,EAAE;YACjE,SAAS,EAAE,oBAAoB,CAAC,iBAAiB,CAAC,EAAE;YACpD,IAAI,EAAE,oBAAoB,CAAC,iBAAiB,CAAC,SAAS;YACtD,IAAI,EAAE,GAAG,0CAAkB,qBAAqB,wDAAgC,EAAE;YAClF,KAAK,EAAE,UAAG,CAAC,iBAAiB,CAAC,mBAAmB,CAAC;YACjD,KAAK,EAAE,IAAI;SACd,CAAC,CAAC;QACH,KAAK,CAAC,kBAAkB,CAAC,gCAA8B,CAAC,WAAW,EAAE;YACjE,SAAS,EAAE,oBAAoB,CAAC,2BAA2B,CAAC,EAAE;YAC9D,IAAI,EAAE,oBAAoB,CAAC,2BAA2B,CAAC,SAAS;YAChE,IAAI,EAAE,GAAG,0CAAkB,YAAY;YACvC,KAAK,EAAE,UAAG,CAAC,iBAAiB,CAAC,cAAc,CAAC;YAC5C,KAAK,EAAE,IAAI;SACd,CAAC,CAAC;QAEH,KAAK,CAAC,kBAAkB,CAAC,gCAA8B,CAAC,WAAW,EAAE;YACjE,SAAS,EAAE,oBAAoB,CAAC,kBAAkB,CAAC,EAAE;YACrD,IAAI,EAAE,oBAAoB,CAAC,kBAAkB,CAAC,SAAS;YACvD,KAAK,EAAE,UAAG,CAAC,iBAAiB,CAAC,YAAY,CAAC;YAC1C,KAAK,EAAE,IAAI;SACd,CAAC,CAAC;QACH,KAAK,CAAC,kBAAkB,CAAC,gCAA8B,CAAC,WAAW,EAAE;YACjE,SAAS,EAAE,oBAAoB,CAAC,cAAc,CAAC,EAAE;YACjD,IAAI,EAAE,oBAAoB,CAAC,cAAc,CAAC,SAAS;YACnD,KAAK,EAAE,UAAG,CAAC,iBAAiB,CAAC,aAAa,CAAC;YAC3C,KAAK,EAAE,KAAK;SACf,CAAC,CAAC;QAEH,KAAK,CAAC,eAAe,CACjB,gCAA8B,CAAC,sBAAsB,EACrD,UAAG,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAC7B;YACI,IAAI,EAAE,qBAAO,EAAC,UAAU,CAAC;YACzB,IAAI,iBAA8B;YAClC,KAAK,EAAE,IAAI;SACd,CACJ,CAAC;QAEF,KAAK,CAAC,0BAA0B,CAAC,gCAA8B,CAAC,4BAA4B,EAAE,EAAE,EAAE,EAAE,IAAI,cAA2B,EAAE,CAAC,CAAC;QACvI,0GAA0G;QAC1G,KAAK,CAAC,OAAO,CAAC,gCAA8B,CAAC,sBAAsB,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,gCAA8B,CAAC,4BAA4B,CAAC,CAAC,CAAC;QAE7J,yBAAyB;QACzB,KAAK,CAAC,kBAAkB,CAAC,gCAA8B,CAAC,sBAAsB,EAAE;YAC5E,SAAS,EAAE,oBAAoB,CAAC,2BAA2B,CAAC,EAAE;YAC9D,IAAI,EAAE,oBAAoB,CAAC,2BAA2B,CAAC,SAAS;YAChE,KAAK,EAAE,UAAG,CAAC,iBAAiB,CAAC,cAAc,CAAC;YAC5C,IAAI,EAAE,IAAI,+CAAuB,EAAE;SACtC,CAAC,CAAC;QACH,KAAK,CAAC,kBAAkB,CAAC,gCAA8B,CAAC,sBAAsB,EAAE;YAC5E,SAAS,EAAE,oBAAoB,CAAC,2BAA2B,CAAC,EAAE;YAC9D,IAAI,EAAE,oBAAoB,CAAC,2BAA2B,CAAC,SAAS;YAChE,KAAK,EAAE,UAAG,CAAC,iBAAiB,CAAC,qBAAqB,CAAC;YACnD,IAAI,EAAE,+CAAuB;SAChC,CAAC,CAAC;QAEH,wCAAwC;QACxC,KAAK,CAAC,0BAA0B,CAAC,gCAA8B,CAAC,+BAA+B,EAC3F,UAAG,CAAC,iBAAiB,CAAC,SAAS,CAAC,EAChC,EAAE,IAAI,cAA2B,EAAE,IAAI,EAAE,qBAAO,EAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QACxE,KAAK,CAAC,OAAO,CAAC,gCAA8B,CAAC,sBAAsB,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,gCAA8B,CAAC,+BAA+B,CAAC,CAAC,CAAC;QAEhK,gCAAgC;QAChC,KAAK,CAAC,eAAe,CACjB,gCAA8B,CAAC,8BAA8B,EAC7D,UAAG,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAC7B;YACI,IAAI,EAAE,qBAAO,EAAC,UAAU,CAAC;YACzB,IAAI,iBAA8B;SACrC,CAAC,CAAC;QACP,KAAK,CAAC,kBAAkB,CAAC,gCAA8B,CAAC,8BAA8B,EAAE;YACpF,SAAS,EAAE,oBAAoB,CAAC,qBAAqB,CAAC,EAAE;YACxD,KAAK,EAAE,UAAG,CAAC,iBAAiB,CAAC,oBAAoB,CAAC;SACrD,CAAC,CAAC;QACH,KAAK,CAAC,kBAAkB,CAAC,gCAA8B,CAAC,8BAA8B,EAAE;YACpF,SAAS,EAAE,oBAAoB,CAAC,kCAAkC,CAAC,EAAE;YACrE,KAAK,EAAE,UAAG,CAAC,iBAAiB,CAAC,qBAAqB,CAAC;SACtD,CAAC,CAAC;IAEP,CAAC;IAED,gBAAgB,CAAC,QAAyB;QACtC,QAAQ,CAAC,eAAe,CAAC,oBAAoB,CAAC,YAAY,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE,IAAuB,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QAC7H,QAAQ,CAAC,eAAe,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE,IAAuB,EAAE,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;QACtI,QAAQ,CAAC,eAAe,CAAC,oBAAoB,CAAC,cAAc,EAAE;YAC1D,OAAO,EAAE,CAAC,aAA4B,EAAE,IAAuB,EAAE,EAAE,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;oBAC1F,QAAQ,iBAAsB;oBAC9B,KAAK,EAAE,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;oBACxC,KAAK,EAAE,CAAC;oBACR,KAAK,EAAE,EAAE;iBACZ,CAAC,EAAE,IAAI,CAAC;SACZ,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,CAAC;QAElE,QAAQ,CAAC,eAAe,CAAC,oBAAoB,CAAC,2BAA2B,EAAE;YACvE,OAAO,EAAE,CAAC,aAA4B,EAAE,IAAuB,EAAE,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC;SAChJ,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,oBAAoB,CAAC,2BAA2B,EAAE;YACvE,OAAO,EAAE,CAAC,aAA4B,EAAE,IAAuB,EAAE,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC;SAC/I,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,oBAAoB,CAAC,qBAAqB,EAAE;YACjE,OAAO,EAAE,CAAC,CAAC,EAAE,IAAuB,EAAE,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC;SAC1I,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,oBAAoB,CAAC,kCAAkC,EAAE;YAC9E,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,MAA+B,EAAE,EAAE,CAAC,MAAM,CAAC,+BAA+B,EAAE;SAChG,CAAC,CAAC;IACP,CAAC;CACJ;AA7HG;IADC,sBAAM,EAAC,uCAAiB,CAAC;;yEACqB;AAG/C;IADC,sBAAM,EAAC,qDAAwB,CAAC;8BACG,qDAAwB;gFAAC;AAG7D;IADC,6BAAa,GAAE;;;;0DAGf;AAXQ,8BAA8B;IAD1C,0BAAU,GAAE;GACA,8BAA8B,CAgI1C;AAhIY,wEAA8B;AAkI3C,WAAiB,8BAA8B;IAC9B,0CAAW,GAAG,CAAC,4BAA4B,CAAC,CAAC;IAC7C,qDAAsB,GAAG,CAAC,GAAG,0CAAW,EAAE,MAAM,CAAC,CAAC;IAClD,2DAA4B,GAAG,qBAAqB,CAAC;IACrD,8DAA+B,GAAG,uBAAuB,CAAC;IAC1D,qDAAsB,GAAG,CAAC,wBAAwB,CAAC,CAAC;IACpD,kDAAmB,GAAG,CAAC,+BAA+B,CAAC,CAAC;IACxD,6DAA8B,GAAG,CAAC,GAAG,kDAAmB,EAAE,MAAM,CAAC,CAAC;AAEnF,CAAC,EATgB,8BAA8B,GAA9B,sCAA8B,KAA9B,sCAA8B,QAS9C;AA3IY,wEAA8B;;;;;;;;;;;;ACvE3C,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;AAChF;;;gGAGgG;;;AAMhG;;GAEG;AACU,2BAAmB,GAAG,uBAAuB,CAAC;AAC9C,uDAA+C,GAAG,2BAA2B,CAAC;AAC9E,+BAAuB,GAAG,uBAAuB,CAAC;AAClD,kCAA0B,GAAG,yBAAyB,CAAC;AACvD,+BAAuB,GAAG,uBAAuB,CAAC;AAClD,gCAAwB,GAAG,kBAAkB,CAAC;AAC9C,iCAAyB,GAAG,wBAAwB,CAAC;AACrD,+CAAuC,GAAG,qCAAqC,CAAC;AAChF,yCAAiC,GAAG,0BAA0B,CAAC;AAC/D,sCAA8B,GAAG,6BAA6B,CAAC;AAC/D,uCAA+B,GAAG,8BAA8B,CAAC;AACjE,iCAAyB,GAAG,wBAAwB,CAAC;AACrD,0BAAkB,GAAG,cAAc,CAAC;AACpC,0BAAkB,GAAG,kBAAkB,CAAC;AACxC,8BAAsB,GAAG,sBAAsB,CAAC;AAChD,6BAAqB,GAAG,qBAAqB,CAAC;AAC9C,oCAA4B,GAAG,2BAA2B,CAAC;AAC3D,wCAAgC,GAAG,8BAA8B,CAAC;AAClE,kCAA0B,GAAG,yBAAyB,CAAC;AACvD,qCAA6B,GAAG,4BAA4B,CAAC;AAC7D,+BAAuB,GAAG,uBAAuB,CAAC;AAClD,iCAAyB,GAAG,wBAAwB,CAAC;AACrD,qCAA6B,GAAG,8BAA8B,CAAC;AAC/D,sCAA8B,GAAG,+BAA+B,CAAC;AACjE,8BAAsB,GAAG,sBAAsB,CAAC;AAChD,uBAAe,GAAG,gBAAgB,CAAC;AACnC,6BAAqB,GAAG,qBAAqB,CAAC;AAC9C,oCAA4B,GAAG,2BAA2B,CAAC;AAC3D,gCAAwB,GAAG,wBAAwB,CAAC;AACpD,qCAA6B,GAAG,6BAA6B,CAAC;AAC9D,yCAAiC,GAAG,gCAAgC,CAAC;AACrE,4BAAoB,GAAG,oBAAoB,CAAC;AAEzD,IAAiB,mBAAmB,CA6CnC;AA7CD,WAAiB,mBAAmB;IAChC,SAAgB,uBAAuB,CAAC,OAA0B;QAC9D,OAAO,CAAC,SAAS,CAAC,2BAAmB,EAAE,KAAK,CAAC,CAAC;QAC9C,OAAO,CAAC,SAAS,CAAC,uDAA+C,EAAE,KAAK,CAAC,CAAC;QAE1E,iBAAiB;QACjB,sGAAsG;QACtG,0HAA0H;QAE1H,cAAc;QACd,OAAO,CAAC,SAAS,CAAC,+BAAuB,EAAE,KAAK,CAAC,CAAC;QAClD,OAAO,CAAC,SAAS,CAAC,kCAA0B,EAAE,KAAK,CAAC,CAAC;QACrD,OAAO,CAAC,SAAS,CAAC,+BAAuB,EAAE,KAAK,CAAC,CAAC;QAClD,OAAO,CAAC,SAAS,CAAC,gCAAwB,EAAE,IAAI,CAAC,CAAC;QAClD,OAAO,CAAC,SAAS,CAAC,iCAAyB,EAAE,KAAK,CAAC,CAAC;QACpD,OAAO,CAAC,SAAS,CAAC,+CAAuC,EAAE,KAAK,CAAC,CAAC;QAClE,OAAO,CAAC,SAAS,CAAC,yCAAiC,EAAE,KAAK,CAAC,CAAC;QAC5D,OAAO,CAAC,SAAS,CAAC,sCAA8B,EAAE,MAAM,CAAC,CAAC;QAC1D,OAAO,CAAC,SAAS,CAAC,uCAA+B,EAAE,KAAK,CAAC,CAAC;QAC1D,OAAO,CAAC,SAAS,CAAC,iCAAyB,EAAE,KAAK,CAAC,CAAC;QAEpD,YAAY;QACZ,OAAO,CAAC,SAAS,CAAC,0BAAkB,EAAE,SAAS,CAAC,CAAC;QACjD,OAAO,CAAC,SAAS,CAAC,0BAAkB,EAAE,SAAS,CAAC,CAAC;QACjD,OAAO,CAAC,SAAS,CAAC,8BAAsB,EAAE,KAAK,CAAC,CAAC;QACjD,OAAO,CAAC,SAAS,CAAC,6BAAqB,EAAE,KAAK,CAAC,CAAC;QAChD,OAAO,CAAC,SAAS,CAAC,oCAA4B,EAAE,KAAK,CAAC,CAAC;QACvD,OAAO,CAAC,SAAS,CAAC,wCAAgC,EAAE,KAAK,CAAC,CAAC;QAC3D,OAAO,CAAC,SAAS,CAAC,kCAA0B,EAAE,SAAS,CAAC,CAAC;QACzD,OAAO,CAAC,SAAS,CAAC,qCAA6B,EAAE,SAAS,CAAC,CAAC;QAC5D,OAAO,CAAC,SAAS,CAAC,+BAAuB,EAAE,KAAK,CAAC,CAAC;QAClD,OAAO,CAAC,SAAS,CAAC,iCAAyB,EAAE,KAAK,CAAC,CAAC;QACpD,OAAO,CAAC,SAAS,CAAC,qCAA6B,EAAE,KAAK,CAAC,CAAC;QACxD,OAAO,CAAC,SAAS,CAAC,sCAA8B,EAAE,KAAK,CAAC,CAAC;QACzD,OAAO,CAAC,SAAS,CAAC,8BAAsB,EAAE,EAAE,CAAC,CAAC;QAE9C,UAAU;QACV,OAAO,CAAC,SAAS,CAAC,uBAAe,EAAE,SAAS,CAAC,CAAC;QAC9C,OAAO,CAAC,SAAS,CAAC,6BAAqB,EAAE,CAAC,CAAC,CAAC;QAC5C,OAAO,CAAC,SAAS,CAAC,oCAA4B,EAAE,CAAC,CAAC,CAAC;QACnD,OAAO,CAAC,SAAS,CAAC,gCAAwB,EAAE,KAAK,CAAC,CAAC;QACnD,OAAO,CAAC,SAAS,CAAC,qCAA6B,EAAE,KAAK,CAAC,CAAC;QACxD,OAAO,CAAC,SAAS,CAAC,yCAAiC,EAAE,KAAK,CAAC,CAAC;QAC5D,OAAO,CAAC,SAAS,CAAC,4BAAoB,EAAE,KAAK,CAAC,CAAC;IACnD,CAAC;IA3Ce,2CAAuB,0BA2CtC;AACL,CAAC,EA7CgB,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QA6CnC;;;;;;;;;;;;ACzGD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,sHAAkD;AAClD,wGAAsE;AACtE,wHAAgH;AAEhH,4GAAqC;AACrC,0KAAoG;AACpG,0KAA0E;AAC1E,sLAAkF;AAElF,4LAAkF;AAClF,oIAA6F;AAC7F,mMAA4E;AAC5E,qMAAuF;AACvF,oKAA2E;AAE9D,4CAAoC,GAAG,MAAM,CAAC,sCAAsC,CAAC,CAAC;AAEnG,SAAgB,mCAAmC,CAAC,MAA4B,EAAE,KAA0B;IACxG,MAAM,KAAK,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;IAEnC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IACvD,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,MAAM,EAAE,CAAC;IAE1C,OAAO,KAAK,CAAC;AACjB,CAAC;AAPD,kFAOC;AAED,MAAM,mBAAmB,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC;AAO7C,iCAAyB,GAAG,WAAW,CAAC;AAGrD,IAAa,oBAAoB,GAAjC,MAAa,oBAAqB,SAAQ,qBAAW;IAArD;;QAGa,aAAQ,GAAG,IAAI,4BAAkB,EAAE,CAAC;QAwB1B,4BAAuB,GAAG,IAAI,wCAAO,EAAQ,CAAC;QACxD,qBAAgB,GAAG,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC;QAE5C,cAAS,GAAG,IAAI,GAAG,EAA0B,CAAC;IA+ErE,CAAC;IA5EG,IAAI,YAAY;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;IACnC,CAAC;IAED,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAGS,IAAI;QACV,IAAI,CAAC,EAAE,GAAG,iCAAyB,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAChE,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;QAExB,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,MAAM,EAAE,CAAC;QAEd,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAElD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAC/D,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACzD,IAAI,CAAC,WAAW,EAAE,CAAC;IAEvB,CAAC;IAES,KAAK,CAAC,WAAW;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QAC5C,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACjC,2DAA2D;QAC3D,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAEkB,iBAAiB,CAAC,GAAY;QAC7C,KAAK,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IAED,cAAc;QACV,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;IAC1B,CAAC;IAED,eAAe,CAAC,WAAgB;QAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;IAC1B,CAAC;IAED,IAAI;;QACA,UAAI,CAAC,KAAK,0CAAE,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,IAAI;;QACA,UAAI,CAAC,KAAK,0CAAE,IAAI,EAAE,CAAC;IACvB,CAAC;IAES,MAAM;QACZ,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,OAAO;gBACF,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBACrD,oBAAC,8CAAoB,IAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAC3C,aAAa,EAAE,IAAI,CAAC,MAAM,EAC1B,eAAe,EAAE,IAAI,CAAC,kBAAkB,EACxC,eAAe,EAAE,IAAI,CAAC,eAAe,GAAI,CAC3C,CAAC;SACV;aAAM;YACH,OAAO,gCAAW,CAAC;SACtB;IACL,CAAC;IAEkB,aAAa,CAAC,GAAY;QACzC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAEkB,aAAa,CAAC,GAAY;QACzC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;IAC1D,CAAC;CACJ;AA5GmB,uBAAE,GAAG,UAAW;AAKhC;IADC,sBAAM,EAAC,0DAA0B,CAAC;8BACI,0DAA0B;gEAAC;AAGlE;IADC,sBAAM,EAAC,sBAAe,CAAC;8BACG,sBAAe;6DAAC;AAG3C;IADC,sBAAM,EAAC,wBAAiB,CAAC;8BACF,wBAAiB;0DAAC;AAG1C;IADC,sBAAM,EAAC,4DAA2B,CAAC;8BACH,4DAA2B;mEAAC;AAG7D;IADC,sBAAM,EAAC,mDAA2B,CAAC;8BACG,mDAA2B;yEAAC;AAGnE;IADC,sBAAM,EAAC,kDAAwB,CAAC;8BACL,kDAAwB;8DAAC;AAErD;IADC,sBAAM,EAAC,0DAA4B,CAAC;8BACL,0DAA4B;kEAAC;AAE7D;IADC,sBAAM,EAAC,mBAAmB,CAAC;;mDACkB;AAiB9C;IADC,6BAAa,GAAE;;;;gDAcf;AAvDQ,oBAAoB;IADhC,0BAAU,GAAE;GACA,oBAAoB,CA6GhC;AA7GY,oDAAoB;;;;;;;;;;;;ACpDjC,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;AAChF;;;gGAGgG;;;;;;;;;AAEhG,wGAA+C;AAC/C,oIAA0D;AAY1D,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAArC;QAEqB,uBAAkB,GAA2B,EAAE,CAAC;IA6BrE,CAAC;IA3BG,IAAI,iBAAiB;QACjB,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACnC,CAAC;IAED,wBAAwB,CAAC,IAAgC,EAAE,QAAgB;QACvE,IAAI,UAAU,CAAC;QACf,IAAI,OAAO,IAAI,CAAC,UAAU,KAAK,QAAQ,EAAE;YACrC,UAAU,GAAG;gBACT,GAAG,EAAE,IAAI,WAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,QAAQ,EAAE;aAC3D,CAAC;SACL;aAAM;YACH,UAAU,GAAG;gBACT,GAAG,EAAE,IAAI,WAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE;gBAC7D,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO;aACnC,CAAC;SACL;QAED,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;YACzB,GAAG,IAAI;YACP,SAAS,EAAE,IAAI,CAAC,SAAS,IAAI,EAAE;YAC/B,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,KAAK,QAAQ,IAAI,IAAI,CAAC,iBAAiB,KAAK,UAAU;YAC/F,UAAU;SACb,CAAC,CAAC;QACH,OAAO,iBAAU,CAAC,MAAM,CAAC,GAAG,EAAE;YAC1B,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9G,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AA/BY,wBAAwB;IADpC,0BAAU,GAAE;GACA,wBAAwB,CA+BpC;AA/BY,4DAAwB;;;;;;;;;;;;;;;;;;;;ACjCrC,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;AAChF,wGAAyC;AACzC,oIAA0D;AAI1D,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAAjC;QACqB,mBAAc,GAA6B,EAAE,CAAC;IAYnE,CAAC;IAVG,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,cAAc,CAAC;IAC/B,CAAC;IAED,oBAAoB,CAAC,IAA4B;QAC7C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,OAAO,iBAAU,CAAC,MAAM,CAAC,GAAG,EAAE;YAC1B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AAbY,oBAAoB;IADhC,0BAAU,GAAE;GACA,oBAAoB,CAahC;AAbY,oDAAoB;;;;;;;;;;;;ACpBjC,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAKnE,gCAAwB,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC;;;;;;;;;;;;ACnBvE,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF;;;gGAGgG;AAEhG,wGAAwE;AACxE,oIAAiF;AACjF,wHAA2D;AAC3D,8JAAiE;AAGjE,IAAa,2BAA2B,GAAxC,MAAa,2BAA2B;IAAxC;QAKqB,oBAAe,GAAG,IAAI,GAAG,EAAgC,CAAC;QAE1D,+BAA0B,GAAG,IAAI,cAAO,EAAwB,CAAC;QACjE,kCAA6B,GAAG,IAAI,cAAO,EAAwB,CAAC;QAC5E,2BAAsB,GAAG,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC;QAC/D,8BAAyB,GAAG,IAAI,CAAC,6BAA6B,CAAC,KAAK,CAAC;QAE7D,oCAA+B,GAAG,IAAI,cAAO,EAAoC,CAAC;QAC1F,6BAAwB,GAAG,IAAI,CAAC,+BAA+B,CAAC,KAAK,CAAC;QAE9D,cAAS,GAAG,IAAI,2BAAoB,EAAE,CAAC;QAExD,kBAAa,GAA0B,SAAS,CAAC;IAgDrD,CAAC;IA7Ca,IAAI;QACV,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,KAAK,CAAC,EAAE;YACtE,IAAI,KAAK,CAAC,QAAQ,YAAY,6CAAoB,IAAI,KAAK,CAAC,QAAQ,KAAK,IAAI,CAAC,aAAa,EAAE;gBACzF,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC;gBACpC,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACjE;iBAAM;gBACH,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACxD;QACL,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,OAAO;QACH,IAAI,CAAC,0BAA0B,CAAC,OAAO,EAAE,CAAC;QAC1C,IAAI,CAAC,6BAA6B,CAAC,OAAO,EAAE,CAAC;QAC7C,IAAI,CAAC,+BAA+B,CAAC,OAAO,EAAE,CAAC;QAC/C,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED,wBAAwB;IAExB,iBAAiB,CAAC,MAA4B;QAC1C,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;YACrC,OAAO,CAAC,IAAI,CAAC,gDAAgD,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;SAC9E;QACD,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACjD,CAAC;IAED,oBAAoB,CAAC,MAA4B;QAC7C,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;YACrC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACvC,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACnD;aAAM;YACH,OAAO,CAAC,IAAI,CAAC,8CAA8C,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;SAC5E;IACL,CAAC;IAED,iBAAiB,CAAC,QAAgB;QAC9B,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC9C,CAAC;IAED,mBAAmB;QACf,OAAO,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC;CAEJ;AA9DG;IADC,sBAAM,EAAC,0BAAgB,CAAC;8BACG,0BAAgB;qEAAC;AAiB7C;IADC,6BAAa,GAAE;;;;uDAUf;AA7BQ,2BAA2B;IADvC,0BAAU,GAAE;GACA,2BAA2B,CAiEvC;AAjEY,kEAA2B;;;;;;;;;;;;AC3BxC,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;AAChF;;;gGAGgG;;;;;;;;;;;;AAEhG,oIAAkE;AAClE,4MAA2G;AAC3G,+GAAoE;AAGpE,wKAAkF;AAClF,wGAAyD;AACzD,yMAA0H;AAC1H,gMAAiF;AACjF,+MAAkF;AAOlF,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAArC;QAiBqB,8BAAyB,GAAG,IAAI,GAAG,EAA4B,CAAC;IAqFrF,CAAC;IAnFG,KAAK,CAAC,oBAAoB,CAAC,QAAuB,EAAE,KAAkC;QAClF,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;aAC7B,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,iBAAQ,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YAClB,OAAO;SACV;QAED,yBAAyB;QACzB,MAAM,cAAc,GAAyC,EAAE,CAAC;QAChE,KAAK,MAAM,IAAI,IAAI,QAAQ,EAAE;YACzB,MAAM,OAAO,GAAG,IAAI,CAAC,6BAA6B,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC9E,IAAI,CAAC,OAAO,EAAE;gBACV,cAAc,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,6BAA6B,CAAC,wBAAwB,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aACvH;SACJ;QAED,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAElD,IAAI,CAAC,MAAM,EAAE;YACT,oCAAoC;YACpC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3D,OAAO;SACV;QAED,kDAAkD;QAClD,MAAM,mBAAmB,GAAoB,EAAE,CAAC;QAChD,KAAK,MAAM,CAAC,IAAI,EAAE,aAAa,CAAC,IAAI,cAAc,EAAE;YAChD,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACpD,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC9B;iBAAM;gBACH,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aAC3C;SACJ;QAED,oBAAoB;QACpB,IAAI,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;YAChC,MAAM,IAAI,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,CAAC;YAEzD,IAAI,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;YACrE,MAAM,MAAM,CAAC,2BAA2B,CAAC,QAAQ,CAAC,GAAG,EAAE,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACnG,yFAAyF;YACzF,MAAM,WAAW,GAAG,mBAAmB,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,KAAK,mCAA0B,CAAC,WAAW,CAAC,CAAC;YAC5G,IAAI,WAAW,CAAC,MAAM,EAAE;gBACpB,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;aAChD;SACJ;IACL,CAAC;IAED,4BAA4B,CAAC,WAAqC;QAC9D,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAChD,OAAO,iBAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;IACvF,CAAC;IAEO,KAAK,CAAC,wBAAwB,CAAC,UAA2B;QAC9D,KAAK,MAAM,WAAW,IAAI,IAAI,CAAC,yBAAyB,EAAE;YACtD,MAAM,WAAW,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;SACnD;QACD,OAAO;IACX,CAAC;IAED,KAAK,CAAC,yBAAyB,CAAC,QAAuB,EAAE,KAAuB;QAC5E,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnC,MAAM,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC,4BAA4B,CAAC,QAAQ,CAAC,CAAC;QACjF,IAAI,MAAM,EAAE;YACR,MAAM,MAAM,CAAC,2BAA2B,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;SACpE;IACL,CAAC;IAED,KAAK,CAAC,mBAAmB,CAAC,QAAuB,EAAE,KAAkC;QACjF,IAAI,CAAC,yBAAyB,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IACrF,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,QAAuB;QACvC,MAAM,eAAe,GAAG,IAAI,CAAC,4BAA4B,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAE/E,IAAI,eAAe,CAAC,QAAQ,EAAE;YAC1B,OAAO,eAAe,CAAC,QAAQ,CAAC;SACnC;QAED,MAAM,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,gDAAgB,CAAC,qBAAqB,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;QAC9F,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,4BAA4B,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAC5E,OAAO,QAAQ,CAAC;IACpB,CAAC;CACJ;AAnGG;IADC,sBAAM,EAAC,gEAA6B,CAAC;8BACG,gEAA6B;+EAAC;AAGvE;IADC,sBAAM,EAAC,+CAAqB,CAAC;8BACG,+CAAqB;uEAAC;AAGvD;IADC,sBAAM,EAAC,8DAA4B,CAAC;8BACG,8DAA4B;8EAAC;AAGrE;IADC,sBAAM,EAAC,qBAAc,CAAC;;gEACkB;AAGzC;IADC,sBAAM,EAAC,mEAA8B,CAAC;8BACG,uEAAkC;gFAAC;AAfpE,wBAAwB;IADpC,0BAAU,GAAE;GACA,wBAAwB,CAsGpC;AAtGY,4DAAwB;;;;;;;;;;;;ACpCrC,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;AAChF;;;gGAGgG;;;;;;;;;;;;AAEhG,wGAA6E;AAC7E,oIAAkE;AAClE,mJAAqD;AACrD,+GAGsB;AAEtB,gGAA0B;AAqB1B,IAAY,qBAGX;AAHD,WAAY,qBAAqB;IAC7B,iEAAI;IACJ,yEAAQ;AACZ,CAAC,EAHW,qBAAqB,GAArB,6BAAqB,KAArB,6BAAqB,QAGhC;AAcD,IAAa,6BAA6B,GAA1C,MAAa,6BAA6B;IAA1C;QAKc,cAAS,GAAyB,IAAI,2BAAoB,EAAE,CAAC;QAEpD,eAAU,GAAG,IAAI,GAAG,EAAsC,CAAC;QAE7D,gCAA2B,GAAG,IAAI,cAAO,EAAkC,CAAC;QAC7F,yBAAoB,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC;QAE7C,uCAAkC,GAAG,IAAI,cAAO,EAAiC,CAAC;QACnG,gCAA2B,GAAG,IAAI,CAAC,kCAAkC,CAAC,KAAK,CAAC;IA8DhF,CAAC;IA5DG,wBAAwB,CAAC,WAAgB,EAAE,UAAkB;;QACzD,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC;QAE1E,IAAI,CAAC,QAAQ,EAAE;YACX,MAAM,IAAI,KAAK,CAAC,uBAAuB,WAAW,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;SACpE;QAED,IAAI,SAAS,GAAG,UAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,0CAAE,GAAG,CAAC,UAAU,CAAC,CAAC;QAE7E,IAAI,CAAC,SAAS,EAAE;YACZ,SAAS,GAAG,IAAI,CAAC,2BAA2B,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;YACnE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,EAAE;gBAC9C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;aAC1D;YACD,UAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,0CAAE,GAAG,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;YACxE,SAAS,CAAC,UAAU,EAAE,CAAC;YACvB,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,8BAA8B,CAAC,WAAW,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC;SACjH;QAED,OAAO,SAAS,CAAC;IAErB,CAAC;IAEO,2BAA2B,CAAC,QAAuB,EAAE,UAAkB;QAC3E,MAAM,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC;QACjC,MAAM,SAAS,GAAG,IAAI,aAAa,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAC1D,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,8BAA8B,CAAC,WAAW,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACrK,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,UAAU,EAAE,SAAS,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC;QAEzJ,OAAO,SAAS,CAAC;IACrB,CAAC;IAEO,0BAA0B,CAAC,WAAgB,EAAE,UAAkB,EAAE,GAAkB,EAAE,cAAwB;;QACjH,MAAM,kBAAkB,GAAG,UAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,0CAAE,GAAG,CAAC,UAAU,CAAC,CAAC;QACxF,IAAI,CAAC,kBAAkB,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;SACpF;QAED,GAAG,CAAC,OAAO,EAAE,CAAC;QACd,UAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,0CAAE,MAAM,CAAC,UAAU,CAAC,CAAC;QAEhE,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,8BAA8B,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC;IACvG,CAAC;IAED,gBAAgB,CAAC,OAAY;;QACzB,MAAM,MAAM,GAAG,gBAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,CAAC,MAAM,EAAE;YACT,MAAM,IAAI,KAAK,CAAC,mBAAmB,OAAO,EAAE,CAAC,CAAC;SACjD;QAED,OAAO,UAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,0CAAE,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC/E,CAAC;IAED,OAAO;QACH,IAAI,CAAC,2BAA2B,CAAC,OAAO,EAAE,CAAC;QAC3C,IAAI,CAAC,kCAAkC,CAAC,OAAO,EAAE,CAAC;QAElD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,CAAC,kBAAkB,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IAChH,CAAC;CAEJ;AAxEG;IADC,sBAAM,EAAC,kCAAe,CAAC;8BACG,kCAAe;sEAAC;AAHlC,6BAA6B;IADzC,0BAAU,GAAE;GACA,6BAA6B,CA2EzC;AA3EY,sEAA6B;AA6E1C,MAAa,aAAa;IA4BtB,YACa,UAAkB,EACV,QAAuB;QAD/B,eAAU,GAAV,UAAU,CAAQ;QACV,aAAQ,GAAR,QAAQ,CAAe;QA7B3B,uBAAkB,GAAG,IAAI,cAAO,EAAQ,CAAC;QACjD,gBAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;QAEpC,yBAAoB,GAAG,IAAI,cAAO,EAAuB,CAAC;QAClE,kBAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;QAEzD,cAAS,GAAG,IAAI,2BAAoB,EAAE,CAAC;QAE/B,WAAM,GAA+B,mCAA0B,CAAC,WAAW,CAAC;QAS5E,cAAS,GAAG,KAAK,CAAC;QAKlB,cAAS,GAAG,KAAK,CAAC;QAStB,OAAO,CAAC,KAAK,CAAC,sBAAsB,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IAC7D,CAAC;IAvBD,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,IAAI,WAAW;QACX,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;IAC7B,CAAC;IAGD,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAGD,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IASD,UAAU;QACN,MAAM,gBAAgB,GAA4C;YAC9D,QAAQ,iCAAsC;YAC9C,MAAM,EAAE,IAAI,CAAC,UAAU;YACvB,gBAAgB,EAAE;gBACd,WAAW,EAAE,aAAE,GAAE;gBACjB,YAAY,EAAE,SAAS;gBACvB,UAAU,EAAE,SAAS;gBACrB,cAAc,EAAE,SAAS;gBACzB,cAAc,EAAE,SAAS;gBACzB,cAAc,EAAE,SAAS;aAC5B;SACJ,CAAC;QACF,IAAI,CAAC,iCAAiC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAC/D,CAAC;IAEO,UAAU;QACd,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,UAAU,EAAE,CAAC;IAChE,CAAC;IAED,OAAO;QACH,IAAI,CAAC,MAAM,GAAG,mCAA0B,CAAC,OAAO,CAAC;QACjD,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;IACnC,CAAC;IAED,MAAM,CAAC,OAA4B;QAC/B,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,gCAAuB,CAAC,cAAc,CAAC,EAAE;YAC1E,IAAI,CAAC,MAAM,GAAG,mCAA0B,CAAC,SAAS,CAAC;SACtD;QAED,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,gCAAuB,CAAC,cAAc,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE;YAC3G,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACzB;QAED,MAAM,kBAAkB,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,gCAAuB,CAAC,cAAc,IAAI,OAAO,CAAC,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC;QACtJ,IAAI,kBAAkB,EAAE;YACpB,IAAI,CAAC,SAAS,GAAI,kBAA+C,CAAC,QAAS,CAAC;SAC/E;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9E,IAAI,CAAC,SAAS,EAAE;YACZ,OAAO,CAAC,KAAK,CAAC,wDAAwD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;SAC7H;aAAM;YACH,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAC3E,IAAI,CAAC,iCAAiC,CAAC,KAAK,CAAC,CAAC;SACjD;QAED,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,gCAAuB,CAAC,cAAc,CAAC,EAAE;YAC1E,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;SAClC;IAEL,CAAC;IAED,QAAQ,CAAC,cAAqC;QAC1C,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9E,IAAI,CAAC,SAAS,EAAE;YACZ,OAAO,CAAC,KAAK,CAAC,4DAA4D,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;SACjI;aAAM;YACH,MAAM,IAAI,GAAsB;gBAC5B,QAAQ,iCAAsC;gBAC9C,MAAM,EAAE,IAAI,CAAC,UAAU;gBACvB,gBAAgB,EAAE;oBACd,cAAc,EAAE,cAAc,CAAC,cAAc;oBAC7C,2CAA2C;oBAC3C,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,gBAAgB,CAAC,YAAY;oBAC7E,2CAA2C;oBAC3C,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,UAAU;iBAChE;aACJ,CAAC;YACF,IAAI,CAAC,iCAAiC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;SAClD;QAED,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;IAElE,CAAC;IAED,OAAO;QACH,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;QAClC,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC;QACpC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAEO,iCAAiC,CAAC,KAA0B;QAChE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAC3C,CAAC;CACJ;AAxHD,sCAwHC;AAED,MAAa,8BAA8B;IAEvC,YACa,QAAa,EACb,UAAkB,EAClB,OAAuB;QAFvB,aAAQ,GAAR,QAAQ,CAAK;QACb,eAAU,GAAV,UAAU,CAAQ;QAClB,YAAO,GAAP,OAAO,CAAgB;QAJ3B,SAAI,GAAG,qBAAqB,CAAC,IAAI,CAAC;IAKvC,CAAC;IAEL,WAAW,CAAC,IAAS;QACjB,MAAM,SAAS,GAAG,gBAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACtC,OAAO,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,CAAC,MAAM,CAAC;IAC5G,CAAC;IAED,eAAe,CAAC,QAAa;QACzB,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC5D,CAAC;CACJ;AAhBD,wEAgBC;AAED,SAAgB,YAAY,CAAC,MAAyB,EAAE,UAAkB;IACtE,IAAI,MAAM,CAAC,QAAQ,KAAK,gCAAuB,CAAC,MAAM,EAAE;QACpD,OAAO;YACH,QAAQ,gBAAqB;YAC7B,MAAM,EAAE,MAAM,CAAC,UAAU;YACzB,MAAM,EAAE,MAAM,CAAC,MAAM;YACrB,OAAO,EAAE,MAAM,CAAC,OAAO;SAC1B,CAAC;KACL;SAAM,IAAI,MAAM,CAAC,QAAQ,KAAK,gCAAuB,CAAC,WAAW,EAAE;QAChE,OAAO;YACH,QAAQ,qBAA0B;YAClC,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,MAAM,EAAE,MAAM,CAAC,MAAM;SACxB,CAAC;KACL;SAAM,IAAI,MAAM,CAAC,QAAQ,KAAK,gCAAuB,CAAC,cAAc,EAAE;QACnE,MAAM,mBAAmB,GAA0C,EAAE,CAAC;QACtE,IAAI,OAAO,MAAM,CAAC,cAAc,KAAK,WAAW,EAAE;YAC9C,mBAAmB,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;SAC9D;QACD,IAAI,OAAO,MAAM,CAAC,YAAY,KAAK,WAAW,EAAE;YAC5C,mBAAmB,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;SAC1D;QACD,OAAO;YACH,QAAQ,iCAAsC;YAC9C,MAAM,EAAE,UAAU;YAClB,gBAAgB,EAAE,mBAAmB;SACxC,CAAC;KACL;IAED,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;AAChD,CAAC;AA/BD,oCA+BC;;;;;;;;;;;;AC1TD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;AAChF;;;gGAGgG;;;;;;;;;;;;;AAEhG,oIAAiF;AACjF,wHAAyD;AACzD,wKAAyG;AAYzG,MAAM,sBAAsB,GAAG,CAAC,CAAC;AAGjC,IAAa,4BAA4B,oCAAzC,MAAa,4BAA4B;IAAzC;QAWY,yBAAoB,GAAgB,EAAE,CAAC;IA4DnD,CAAC;IAzDa,IAAI;QACV,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,UAAU,CAAC,QAA+B;QACtC,MAAM,mBAAmB,GAAG,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QACnF,MAAM,UAAU,GAAG,mBAAmB,CAAC,GAAG,CAAC;QAC3C,MAAM,cAAc,GAAG,mBAAmB,CAAC,QAAQ,CAAC;QACpD,kCAAkC;QAClC,MAAM,SAAS,GAAG,mBAAmB,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QAChG,MAAM,mBAAmB,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACtJ,MAAM,GAAG,GAAG,mBAAmB,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAqB,CAAC;QAElJ,OAAO;YACH,QAAQ,EAAE,cAAc,aAAd,cAAc,cAAd,cAAc,GAAI,SAAS;YACrC,GAAG;SACN,CAAC;IACN,CAAC;IAED,mBAAmB,CAAC,MAAsB;;QACtC,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QACjC,MAAM,aAAa,GAAG,UAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,mCAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAEzE,IAAI,aAAa,CAAC,MAAM,GAAG,sBAAsB,EAAE;YAC/C,aAAa,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;SAChD;QAED,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,GAAG,aAAa,CAAC;QACpD,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAEO,SAAS;QACb,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,KAAK,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAAE;YAClE,QAAQ,GAAG,QAAQ,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;SAC7D;QAED,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,8BAA4B,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAC5H,CAAC;IAEO,KAAK,CAAC,SAAS;QACnB,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,8BAA4B,CAAC,WAAW,CAAC,CAAC;QAC9F,IAAI,SAAS,EAAE;YACX,IAAI,CAAC,oBAAoB,GAAG,SAAwB,CAAC;SACxD;aAAM;YACH,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;SAClC;IACL,CAAC;IAED,KAAK;QACD,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,OAAO;IAEP,CAAC;CACJ;AA7DkB,wCAAW,GAAG,wBAAyB;AAPtD;IADC,sBAAM,EAAC,wBAAc,CAAC;;oEACkB;AAGzC;IADC,sBAAM,EAAC,+CAAqB,CAAC;8BACG,+CAAqB;2EAAC;AAQvD;IADC,6BAAa,GAAE;;;;wDAGf;AAhBQ,4BAA4B;IADxC,0BAAU,GAAE;GACA,4BAA4B,CAuExC;AAvEY,oEAA4B;;;;;;;;;;;;;;;;;;;;;;;ACpCzC,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;AAChF;;;gGAGgG;AAChG,wGAA8K;AAC9K,oIAAkE;AAClE,wKAA4H;AAG5H,wHAAiE;AACjE,gMAAiF;AACjF,6IAAgE;AAEnD,4BAAoB,GAAG,oBAAoB,CAAC;AAE5C,sCAA8B,GAAG,MAAM,CAAC,gCAAgC,CAAC,CAAC;AAGvF,SAAS,YAAY,CAAC,IAAmC;IACrD,OAAO,QAAQ,IAAI,IAAI,CAAC;AAC5B,CAAC;AAED,SAAS,oBAAoB,CAAC,IAAmC;IAC7D,OAAO,SAAS,IAAI,IAAI,CAAC;AAC7B,CAAC;AAED,SAAS,YAAY,CAAC,IAAmC;IACrD,OAAO,QAAQ,IAAI,IAAI,CAAC;AAC5B,CAAC;AAID,SAAS,2BAA2B,CAAC,IAAmB;IACpD,OAAO,SAAS,IAAI,IAAI,CAAC;AAC7B,CAAC;AAED,SAAS,cAAc,CAAC,IAAyC;IAC7D,OAAO,SAAS,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;AAC/C,CAAC;AAID,MAAM,6BAA6B,GAAG,GAAG,CAAC;AAQ1C,SAAS,iBAAiB,CAAC,MAAsB,EAAE,QAAoC;IACnF,MAAM,GAAG,GAAe;QACpB,MAAM;QACN,KAAK,EAAE,MAAM,CAAC,KAAK;QACnB,WAAW,EAAE,MAAM,CAAC,WAAW;QAC/B,MAAM,EAAE,MAAM,CAAC,MAAM;KACxB,CAAC;IACF,IAAI,MAAM,CAAC,EAAE,MAAK,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,EAAE,GAAE;QAC5B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;YAClB,GAAG,CAAC,WAAW,GAAG,UAAG,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC;SACjE;aAAM;YACH,GAAG,CAAC,WAAW,GAAG,UAAG,CAAC,iBAAiB,CAAC,0BAA0B,EAAE,GAAG,CAAC,WAAW,CAAC,CAAC;SACxF;KACJ;IACD,OAAO,GAAG,CAAC;AACf,CAAC;AAGD,IAAsB,kCAAkC,GAAxD,MAAsB,kCAAkC;IASpD,KAAK,CAAC,aAAa,CAAC,MAAqB,EAAE,QAAiB,EAAE,WAAqB;QAC/E,MAAM,QAAQ,GAAG,MAAM,CAAC;QACxB,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QACrD,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,WAAW,CAAC;QAEtC,IAAI,SAAqC,CAAC;QAC1C,IAAI,QAAQ,EAAE;YACV,KAAK,MAAM,SAAS,IAAI,GAAG,EAAE;gBACzB,IAAI,SAAS,CAAC,EAAE,KAAK,QAAQ,EAAE;oBAC3B,SAAS,GAAG,SAAS,CAAC;oBACtB,MAAM;iBACT;aACJ;YACD,IAAI,CAAC,SAAS,EAAE;gBACZ,OAAO,CAAC,IAAI,CAAC,yCAAyC,QAAQ,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC9F,OAAO,KAAK,CAAC;aAChB;SACJ;QAED,IAAI,SAAS,EAAE;YACX,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;YACvC,OAAO,IAAI,CAAC;SACf;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAuB,CAAC;QAChF,MAAM,cAAc,GAAG,IAAI,CAAC,6BAA6B,CAAC,WAAW,CAAC,CAAC;QAEvE,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,IAAI,cAAc,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE;YAClF,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC,CAAC,EAAE,cAAuC,CAAC,CAAC;SACnG;QAED,SAAS,CAAC,KAAK,GAAG,cAAc,CAAC;QACjC,SAAS,CAAC,aAAa,GAAG,KAAK,CAAC;QAChC,SAAS,CAAC,WAAW,GAAG,QAAQ;YAC5B,CAAC,CAAC,UAAG,CAAC,iBAAiB,CAAC,yBAAyB,EAAE,SAAS,CAAC,CAAC,4DAA4D;YAC1H,CAAC,CAAC,UAAG,CAAC,iBAAiB,CAAC,yBAAyB,EAAE,SAAS,CAAC,CAAC;QAElE,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;QAEzF,MAAM,2BAA2B,GAAG,IAAI,CAAC,qBAAqB,CAAC,+BAA+B,CAAC,GAAG,EAAE;YAChG,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;QAC7F,CAAC,CAAC,CAAC;QAEH,MAAM,yBAAyB,GAAG,QAAQ,CACtC,YAAK,CAAC,GAAG,CACL,IAAI,CAAC,qBAAqB,CAAC,wBAAwB,EACnD,IAAI,CAAC,qBAAqB,CAAC,cAAc,EACzC,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,EAC5C,IAAI,CAAC,qBAAqB,CAAC,2BAA2B,CACzD,EACD,6BAA6B,CAChC,CAAC,KAAK,IAAI,EAAE;YACT,4BAA4B;YAC5B,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC;YAEvB,MAAM,kBAAkB,GAAG,SAAS,CAAC,WAAW,CAAC;YACjD,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YACxD,MAAM,iBAAiB,GAAG,IAAI,CAAC,6BAA6B,CAAC,cAAc,CAAC,CAAC;YAC7E,SAAS,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAEpC,2BAA2B;YAC3B,MAAM,WAAW,GAA0B,EAAE,CAAC;YAC9C,KAAK,MAAM,IAAI,IAAI,kBAAkB,EAAE;gBACnC,IAAI,YAAY,CAAC,IAAI,CAAC,EAAE;oBACpB,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;oBAChC,MAAM,QAAQ,GAAG,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,QAAQ,CAA2B,CAAC;oBACvH,IAAI,QAAQ,EAAE;wBACV,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B;iBACJ;qBAAM,IAAI,YAAY,CAAC,IAAI,CAAC,EAAE;oBAC3B,MAAM,QAAQ,GAAG,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,KAAK,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAA2B,CAAC;oBAC7I,IAAI,QAAQ,EAAE;wBACV,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B;iBACJ;aACJ;YAED,SAAS,CAAC,KAAK,GAAG,iBAAiB,CAAC;YACpC,SAAS,CAAC,WAAW,GAAG,WAAW,CAAC;QACxC,CAAC,EAAE,IAAI,CAAC,CAAC;QAET,MAAM,IAAI,GAAG,MAAM,IAAI,OAAO,CAA8E,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5H,SAAS,CAAC,WAAW,CAAC,GAAG,EAAE;gBACvB,MAAM,IAAI,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;gBACxC,IAAI,IAAI,EAAE;oBACN,OAAO,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,KAA8B,EAAE,CAAC,CAAC;iBAChF;qBAAM;oBACH,OAAO,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC,KAA8B,EAAE,CAAC,CAAC;iBACrF;gBAED,SAAS,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC,CAAC,CAAC;YAEH,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE;gBACrB,2BAA2B,CAAC,OAAO,EAAE,CAAC;gBACtC,yBAAyB,aAAzB,yBAAyB,uBAAzB,yBAAyB,CAAE,OAAO,EAAE,CAAC;gBACrC,SAAS,CAAC,OAAO,EAAE,CAAC;gBACpB,OAAO,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC,KAA8B,EAAE,CAAC,CAAC;YACtF,CAAC,CAAC,CAAC;YACH,SAAS,CAAC,IAAI,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAClE;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAES,iBAAiB,CAAC,QAAuB;QAC/C,OAAO,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;IAClE,CAAC;IAIS,KAAK,CAAC,eAAe,CAAC,MAAqB,EAAE,IAAyB,EAAE,cAAqC;QACnH,IAAI,YAAY,CAAC,IAAI,CAAC,EAAE;YACpB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;YAC9B,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;YACrC,OAAO,IAAI,CAAC;SACf;QAED,IAAI,YAAY,CAAC,IAAI,CAAC,EAAE;YACpB,wDAAwD;YACxD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SACxC;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAES,YAAY,CAAC,QAAuB,EAAE,MAAsB;QAClE,IAAI,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACzE,CAAC;CACJ;AA3IG;IADC,sBAAM,EAAC,+CAAqB,CAAC;8BACY,+CAAqB;iFAAC;AAEhE;IADC,sBAAM,EAAC,wBAAiB,CAAC;;6EAC8B;AAExD;IADC,sBAAM,EAAC,qBAAc,CAAC;;0EAC2B;AAPhC,kCAAkC;IADvD,0BAAU,GAAE;GACS,kCAAkC,CA8IvD;AA9IqB,gFAAkC;AAgJxD,IAAa,uBAAuB,GAApC,MAAa,uBAAwB,SAAQ,kCAAkC;IAQjE,6BAA6B,CAAC,WAAsC;QAC1E,MAAM,cAAc,GAA0C,EAAE,CAAC;QAEjE,IAAI,WAAW,CAAC,QAAQ,EAAE;YACtB,MAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,QAAQ,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC;YACjF,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACnC;QAED,+FAA+F;QAC/F,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,WAAC,aAAM,CAAC,EAAE,MAAK,iBAAW,CAAC,QAAQ,0CAAE,EAAE,KAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,iBAAiB,CAAC,MAAM,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC;aAClI,OAAO,CAAC,MAAM,CAAC,EAAE;YACd,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QAEP,MAAM,aAAa,GAAG,cAAc,CAAC,MAAM,KAAK,CAAC,CAAC;QAElD,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3B,cAAc,CAAC,IAAI,CAAC;gBAChB,IAAI,EAAE,WAAW;aACpB,CAAC,CAAC;SACN;QAED,mCAAmC;QACnC,cAAc,CAAC,IAAI,CAAC;YAChB,EAAE,EAAE,eAAe;YACnB,KAAK,EAAE,UAAG,CAAC,iBAAiB,CAAC,0BAA0B,CAAC;YACxD,OAAO,EAAE,aAAa;SACzB,CAAC,CAAC;QAEH,OAAO,cAAc,CAAC;IAC1B,CAAC;IAEkB,YAAY,CAAC,QAAuB,EAAE,MAAsB;QAC3E,MAAM,WAAW,GAAG,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAC3E,IAAI,WAAW,CAAC,QAAQ,EAAE;YACtB,qCAAqC;YACrC,IAAI,CAAC,4BAA4B,CAAC,mBAAmB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;SAC/E;QACD,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,4BAA4B,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;IAClE,CAAC;IAEkB,iBAAiB,CAAC,QAAuB;QACxD,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,4BAA4B,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACjF,MAAM,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAC9E,OAAO;YACH,QAAQ,EAAE,QAAQ;YAClB,GAAG,EAAE,cAAc,CAAC,GAAG;YACvB,WAAW,EAAE,GAAG;YAChB,MAAM,EAAE,EAAE;SACb,CAAC;IACN,CAAC;IAEkB,KAAK,CAAC,eAAe,CAAC,MAAqB,EAAE,IAAyB,EAAE,KAA4B;QACnH,IAAI,IAAI,CAAC,EAAE,KAAK,eAAe,EAAE;YAC7B,OAAO,IAAI,CAAC,6BAA6B,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;SAC9F;QAED,OAAO,KAAK,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IACtD,CAAC;IAEO,KAAK,CAAC,6BAA6B,CAAC,MAAqB,EAAE,eAAwB;QACvF,MAAM,QAAQ,GAAkB,MAAM,CAAC;QACvC,MAAM,WAAW,GAAG,IAAI,2BAAoB,EAAE,CAAC;QAC/C,MAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAuB,CAAC;QAChF,MAAM,aAAa,GAAG,MAAM,IAAI,OAAO,CAAqD,OAAO,CAAC,EAAE;YAClG,6BAA6B;YAC7B,SAAS,CAAC,KAAK,GAAG,eAAe,CAAC,CAAC,CAAC,UAAG,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,UAAG,CAAC,iBAAiB,CAAC,uBAAuB,CAAC,CAAC;YAC5H,SAAS,CAAC,WAAW,GAAG,UAAG,CAAC,iBAAiB,CAAC,gCAAgC,CAAC,CAAC;YAChF,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;YACtB,2DAA2D;YAC3D,SAAS,CAAC,IAAI,EAAE,CAAC;YAEjB,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAE;gBACnD,IAAI,MAAM,KAAK,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE;oBAC9C,OAAO,CAAC,MAAM,CAAC,CAAC;iBACnB;YACL,CAAC,CAAC,CAAC,CAAC;YACJ,SAAS,CAAC,sBAAsB,CAAC,KAAK,EAAC,CAAC,EAAC,EAAE;gBAEvC,IAAI,2BAA2B,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,SAAS,EAAE;oBAC3E,MAAM,GAAG,GAAoB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,UAAG,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;oBAC/J,IAAI,GAAG,EAAE;wBACL,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;qBACvG;iBACJ;YACL,CAAC,CAAC,CAAC;YACH,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE;gBAC9C,OAAO,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC,CAAC;YACJ,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE;gBACtC,OAAO,CAAC,SAAS,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;gBACtD,SAAS,CAAC,KAAK,GAAG,cAAc,CAAC;gBACjC,IAAI,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC5B,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC;iBAC1B;YACL,CAAC,CAAC,CAAC;YAEH,QAAQ,CACJ,YAAK,CAAC,GAAG,CACL,IAAI,CAAC,qBAAqB,CAAC,wBAAwB,EACnD,IAAI,CAAC,qBAAqB,CAAC,cAAc,EACzC,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAC/C,EACD,6BAA6B,CAChC,CAAC,KAAK,IAAI,EAAE;gBACT,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;gBACtB,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;gBACjE,SAAS,CAAC,KAAK,GAAG,cAAc,CAAC;gBACjC,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC;YAC3B,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,SAAS,CAAC,IAAI,EAAE,CAAC;QACjB,WAAW,CAAC,OAAO,EAAE,CAAC;QAEtB,IAAI,aAAa,KAAK,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE;YACrD,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;SACtD;QAED,IAAI,aAAa,EAAE;YACf,MAAM,sBAAsB,GAAG,aAAoC,CAAC;YACpE,IAAI,2BAA2B,CAAC,sBAAsB,CAAC,EAAE;gBACrD,IAAI;oBACA,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,cAAc,CAAS,QAAQ,EAAE,sBAAsB,CAAC,OAAO,CAAC,CAAC;oBACrG,IAAI,gBAAgB,EAAE;wBAClB,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;wBACjD,MAAM,cAAc,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,sBAAsB,gBAAgB,EAAE,CAAC,CAAC;wBAClG,IAAI,cAAc,EAAE;4BAChB,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;4BAC5C,OAAO,IAAI,CAAC;yBACf;wBACD,OAAO,IAAI,CAAC;qBACf;yBAAM;wBACH,OAAO,IAAI,CAAC,6BAA6B,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;qBAC5D;iBACJ;gBAAC,OAAO,EAAE,EAAE;oBACT,OAAO,KAAK,CAAC;iBAChB;aACJ;iBAAM,IAAI,YAAY,CAAC,sBAAsB,CAAC,EAAE;gBAC7C,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,sBAAsB,CAAC,MAAM,CAAC,CAAC;gBAC3D,OAAO,IAAI,CAAC;aACf;iBAAM,IAAI,oBAAoB,CAAC,sBAAsB,CAAC,EAAE;gBACrD,MAAM,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,sBAAsB,CAAC,MAAM,EAAE,sBAAsB,CAAC,OAAO,CAAC,CAAC;gBACpG,OAAO,IAAI,CAAC;aACf;iBAAM,IAAI,YAAY,CAAC,sBAAsB,CAAC,EAAE;gBAC7C,wDAAwD;gBACxD,IAAI;oBACA,MAAM,sBAAsB,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBAC7D,OAAO,IAAI,CAAC;iBACf;gBAAC,OAAO,EAAE,EAAE;oBACT,OAAO,KAAK,CAAC;iBAChB;aACJ;YACD,gEAAgE;YAChE,sCAAsC;YACtC,yCAAyC;YACzC,0CAA0C;YAC1C,iCAAiC;YACjC,qCAAqC;YACrC,aAAa;YACb,SAAS;YACT,mBAAmB;YACnB,+DAA+D;YAC/D,sCAAsC;YACtC,yCAAyC;YACzC,0CAA0C;YAC1C,iCAAiC;YACjC,qCAAqC;YACrC,+CAA+C;YAC/C,SAAS;YACT,mBAAmB;YACnB,IAAI;SACP;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAEO,KAAK,CAAC,KAAa;QACvB,OAAO,2BAA2B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IAEO,KAAK,CAAC,sBAAsB,CAAC,MAAqB;QACtD,MAAM,QAAQ,GAAkB,MAAM,CAAC;QAEvC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,qBAAqB,CAAC,mCAAmC,CAAC,QAAQ,CAAC,CAAC;QAC/F,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAErD,MAAM,MAAM,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,KAAK,4BAAoB,CAAC,CAAC;QACzF,MAAM,cAAc,GAA0C,EAAE,CAAC;QAEjE,iCAAiC;QACjC,KAAK,MAAM,KAAK,IAAI,iBAAU,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YAC/F,MAAM,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YACpC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBAClB,cAAc,CAAC,IAAI,CAAC;oBAChB,KAAK,EAAE,MAAM;oBACb,OAAO,EAAE,KAAK;iBACjB,CAAC,CAAC;aACN;iBAAM;gBACH,cAAc,CAAC,IAAI,CAAC;oBAChB,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK;oBACrB,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;iBACnB,CAAC,CAAC;aACN;SACJ;QAED,MAAM,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAE9D,cAAc,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YAC7C,MAAM,OAAO,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;oBACpC,SAAS,EAAE,qBAAO,EAAC,MAAM,CAAC;oBAC1B,OAAO,EAAE,UAAG,CAAC,iBAAiB,CAAC,YAAY,CAAC;iBAC/C,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACR,OAAO;gBACH,EAAE,EAAE,OAAO,MAAM,CAAC,OAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,OAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,OAAQ,CAAC,EAAE;gBAC9E,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,WAAW,EAAE,MAAM,CAAC,WAAW;gBAC/B,OAAO,EAAE,MAAM,CAAC,OAAO;gBACvB,aAAa,EAAE,MAAM,CAAC,aAAa;gBACnC,OAAO;aACV,CAAC;QACN,CAAC,CAAC,CAAC,CAAC;QAEJ,OAAO,cAAc,CAAC;IAC1B,CAAC;IAEO,KAAK,CAAC,eAAe,CAAC,QAAuB,EAAE,MAAc,EAAE,OAAyB;QAC5F,MAAM,cAAc,GAAiC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,iBAAiB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC;QACjH,MAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAuB,CAAC;QAChF,SAAS,CAAC,KAAK,GAAG,cAAc,CAAC;QACjC,SAAS,CAAC,aAAa,GAAG,KAAK,CAAC;QAEhC,SAAS,CAAC,KAAK,GAAG,UAAG,CAAC,iBAAiB,CAAC,wBAAwB,EAAE,MAAM,CAAC,CAAC;QAE1E,SAAS,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE;YAC7B,IAAI,SAAS,CAAC,aAAa,IAAI,SAAS,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,YAAY,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC3G,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;aAClE;YAED,SAAS,CAAC,IAAI,EAAE,CAAC;YACjB,SAAS,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE;YACrB,SAAS,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,SAAS,CAAC,IAAI,EAAE,CAAC;IACrB,CAAC;IAEO,KAAK,CAAC,cAAc,CAAI,QAAuB,EAAE,OAAyB;QAC9E,MAAM,EAAE,GAAG,OAAO,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;QAE9D,OAAO,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC;IAEzE,CAAC;CACJ;AAzQG;IADC,sBAAM,EAAC,uBAAa,CAAC;;8DACiB;AAGvC;IADC,sBAAM,EAAC,8DAA4B,CAAC;8BACG,8DAA4B;6EAAC;AAN5D,uBAAuB;IADnC,0BAAU,GAAE;GACA,uBAAuB,CA4QnC;AA5QY,0DAAuB;;;;;;;;;;;;ACpOpC,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;AAChF;;;gGAGgG;;;;;;;;;;;;;AAEhG,wGAAuF;AACvF,oIAAiF;AACjF,wHAAyD;AAGzD,mJAAqD;AAsDrD,MAAM,UAAU;IAQZ,YAAY,MAAsB;QAC9B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,eAAe,EAAE,CAAC;IAC/C,CAAC;;AAVc,0BAAe,GAAG,CAAC,CAAC;AAwBvC,MAAa,aAAa;IAKtB,YACa,OAAgB,EAChB,KAA4B;QAD5B,YAAO,GAAP,OAAO,CAAS;QAChB,UAAK,GAAL,KAAK,CAAuB;QALtB,4BAAuB,GAAG,IAAI,cAAO,EAAQ,CAAC;QACxD,qBAAgB,GAAG,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC;IAK3D,CAAC;IAEL,KAAK,CAAC,GAAG,CAAC,cAA8B;QACpC,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,OAAO,IAAI,CAAC,SAAS,CAAC;SACzB;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QACjD,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;QACpC,MAAM,IAAI,CAAC,SAAS,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;IACxC,CAAC;IAEO,KAAK,CAAC,UAAU,CAAC,cAA8B;QACnD,IAAI;YACA,MAAM,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE;gBACjD,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG;aACtB,CAAC,CAAC;SAEN;QAAC,OAAO,KAAK,EAAE;YACZ,OAAO,CAAC,IAAI,CAAC,iCAAiC,KAAK,EAAE,CAAC,CAAC;SAC1D;IACL,CAAC;IAED,OAAO;QACH,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,CAAC;IAC3C,CAAC;CAEJ;AArCD,sCAqCC;AAED,MAAM,mCAAmC,GAAG,0BAA0B,CAAC;AAEvE,IAAa,qBAAqB,6BAAlC,MAAa,qBAAqB;IAAlC;QAQqB,YAAO,GAAG,IAAI,GAAG,EAAsB,CAAC;QAEjD,qBAAgB,GAA8B,EAAE,CAAC;QAExC,yBAAoB,GAAG,IAAI,GAAG,EAAoB,CAAC;QACnD,2CAAsC,GAAG,IAAI,cAAO,EAAU,CAAC;QACvE,oCAA+B,GAAG,IAAI,CAAC,sCAAsC,CAAC,KAAK,CAAC;QAE5E,oCAA+B,GAAG,IAAI,cAAO,EAAmC,CAAC;QACjF,gCAA2B,GAAG,IAAI,GAAG,EAAwC,CAAC;QACtF,6BAAwB,GAA2C,IAAI,CAAC,+BAA+B,CAAC,KAAK,CAAC;QAEtG,0BAAqB,GAAG,IAAI,cAAO,EAAkB,CAAC;QAC9D,mBAAc,GAA0B,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC;QAEjE,6BAAwB,GAAG,IAAI,cAAO,EAAkB,CAAC;QACjE,sBAAiB,GAA0B,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC;QAEvE,oDAA+C,GAAG,IAAI,cAAO,EAAqC,CAAC;QAC3G,8BAAyB,GAA6C,IAAI,CAAC,+CAA+C,CAAC,KAAK,CAAC;QAEzH,uCAAkC,GAAG,IAAI,cAAO,EAAQ,CAAC;QACjE,gCAA2B,GAAgB,IAAI,CAAC,kCAAkC,CAAC,KAAK,CAAC;IAmLtG,CAAC;IAhLG,IAAI;QACA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC,IAAI,CAAC,CAAC,KAA4C,EAAE,EAAE;YACnH,IAAI,KAAK,EAAE;gBACP,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;aACjC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,cAAc,CAAC,MAAsB;QACjC,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;YAC7B,MAAM,IAAI,KAAK,CAAC,gCAAgC,MAAM,CAAC,EAAE,kBAAkB,CAAC,CAAC;SAChF;QAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAExC,6DAA6D;QAC7D,6BAA6B;QAC7B,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,EAAE;YAC7D,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;SAC9C;QAED,OAAO,iBAAU,CAAC,MAAM,CAAC,GAAG,EAAE;YAC1B,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;gBAChC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC9C;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;;;;;OAQG;IACH,iBAAiB,CAAC,QAA+B;;QAC7C,MAAM,OAAO,GAA0E,EAAE,CAAC;QAC1F,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE;YACtC,MAAM,KAAK,GAAG,uBAAqB,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;YACjE,IAAI,KAAK,EAAE;gBACP,OAAO,CAAC,IAAI,CAAC;oBACT,KAAK;oBACL,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,gBAAgB,EAAE,CAAC,CAAC,+CAA+C;iBACtE,CAAC,CAAC;aACN;SACJ;QAED,OAAO;aACF,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,gBAAgB,GAAG,CAAC,CAAC,gBAAgB,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QAClI,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAE3C,eAAe;QACf,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC;QACjF,MAAM,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,UAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,0CAAE,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;QAC/E,MAAM,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,kCAAkC;QAClI,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1F,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,WAAW,EAAE,MAAM,EAAE,CAAC;IAElD,CAAC;IAED,uBAAuB,CAAC,MAAkC,EAAE,QAA+B;QACvF,MAAM,GAAG,GAAG,GAAG,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,GAAG,EAAE,CAAC;QACnD,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;QAC7C,IAAI,SAAS,MAAK,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,EAAE,GAAE;YAC1B,IAAI,MAAM,EAAE;gBACR,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC;aAC1C;iBAAM;gBACH,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;aACrC;YACD,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,mCAAmC,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACxF,IAAI,CAAC,+CAA+C,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,QAAQ,CAAC,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,EAAE,EAAE,CAAC,CAAC;SAC3H;IACL,CAAC;IAED,4BAA4B,CAAC,QAAuB;QAChD,MAAM,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAC9C,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,OAAO,IAAI,CAAC,QAAQ,CAAC;SACxB;QAED,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAC3D,CAAC;IAED,SAAS,CAAC,EAAU;;QAChB,OAAO,UAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,0CAAE,MAAM,CAAC;IACxC,CAAC;IAEO,MAAM,CAAC,KAAK,CAAC,MAAsB,EAAE,QAA+B;QACxE,IAAI,MAAM,CAAC,QAAQ,KAAK,QAAQ,CAAC,QAAQ,EAAE;YACvC,OAAO,EAAE,CAAC;SACb;aAAM,IAAI,MAAM,CAAC,QAAQ,KAAK,GAAG,EAAE;YAChC,OAAO,CAAC,CAAC;SACZ;aAAM;YACH,OAAO,CAAC,CAAC;SACZ;IACL,CAAC;IAEO,mBAAmB,CAAC,QAAuB,EAAE,cAA+B;QAEhF,MAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC;QACzE,IAAI,CAAC,EAAE,EAAE;YACL,uBAAuB;YACvB,OAAO;SACV;QACD,MAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC5C,IAAI,CAAC,cAAc,IAAI,CAAC,uBAAqB,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE;YAClF,4CAA4C;YAC5C,OAAO;SACV;QACD,IAAI,CAAC,cAAc,IAAI,cAAc,CAAC,MAAM,KAAK,cAAc,EAAE;YAC7D,IAAI,CAAC,+CAA+C,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,QAAQ,CAAC,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,cAAc,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;SACpJ;IACL,CAAC;IAED,mCAAmC,CAAC,YAAoB;;QACpD,MAAM,GAAG,GAAG,UAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,YAAY,CAAC,mCAAI,EAAE,CAAC;QAC9D,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACvB,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;QACjD,IAAI,CAAC,sCAAsC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/D,OAAO,iBAAU,CAAC,MAAM,CAAC,GAAG,EAAE;;YAC1B,MAAM,QAAQ,GAAG,UAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,YAAY,CAAC,mCAAI,EAAE,CAAC;YACnE,MAAM,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YACjD,IAAI,SAAS,IAAI,CAAC,EAAE;gBAChB,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;gBACtD,IAAI,CAAC,sCAAsC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAClE;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uBAAuB,CAAC,QAA+B;;QACnD,OAAO,UAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,mCAAI,EAAE,CAAC;IAClE,CAAC;IAED,kCAAkC,CAAC,QAAgB,EAAE,QAAoC;;QACrF,MAAM,SAAS,GAAG,UAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,QAAQ,CAAC,mCAAI,EAAE,CAAC;QACvE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzB,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC1D,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QAElE,MAAM,sBAAsB,GAAG,cAAQ,CAAC,wBAAwB,+CAAjC,QAAQ,EAA4B,GAAG,EAAE;YACpE,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;QAEH,OAAO,iBAAU,CAAC,MAAM,CAAC,GAAG,EAAE;;YAC1B,MAAM,eAAe,GAAG,UAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,QAAQ,CAAC,mCAAI,EAAE,CAAC;YAC7E,MAAM,aAAa,GAAG,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACxD,IAAI,aAAa,IAAI,CAAC,EAAE;gBACpB,eAAe,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;aACnE;YAED,sBAAsB,aAAtB,sBAAsB,uBAAtB,sBAAsB,CAAE,OAAO,EAAE,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,KAAK,CAAC,mCAAmC,CAAC,QAA+B;;QACrE,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;QACnC,MAAM,SAAS,GAAG,UAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,QAAQ,CAAC,mCAAI,EAAE,CAAC;QACvE,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,0BAA0B,EAAE,CAAC,CAAC;QAClF,MAAM,UAAU,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC/C,OAAO,UAAU,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAED,OAAO;QACH,IAAI,CAAC,sCAAsC,CAAC,OAAO,EAAE,CAAC;QACtD,IAAI,CAAC,+BAA+B,CAAC,OAAO,EAAE,CAAC;QAC/C,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,CAAC;QACrC,IAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE,CAAC;QACxC,IAAI,CAAC,+CAA+C,CAAC,OAAO,EAAE,CAAC;QAC/D,IAAI,CAAC,kCAAkC,CAAC,OAAO,EAAE,CAAC;IACtD,CAAC;CACJ;AA9MG;IADC,sBAAM,EAAC,kCAAe,CAAC;8BACG,kCAAe;8DAAC;AAG3C;IADC,sBAAM,EAAC,wBAAc,CAAC;;6DACkB;AA2BzC;IADC,6BAAa,GAAE;;;;iDAOf;AAvCQ,qBAAqB;IADjC,0BAAU,GAAE;GACA,qBAAqB,CAiNjC;AAjNY,sDAAqB;;;;;;;;;;;;AClJlC,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,wGAA2C;AAC3C,oIAAkE;AAElE,6JAAyE;AACzE,+GAAsD;AAEtD,mJAAqD;AACrD,8JAAiE;AAEjE,uHAAoD;AAMpD,IAAa,4BAA4B,GAAzC,MAAa,4BAA4B;IAAzC;QAWc,4BAAuB,GAAG,IAAI,cAAO,EAAiB,CAAC;QACxD,qBAAgB,GAAG,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC;QACrD,6BAAwB,GAAG,IAAI,cAAO,EAAiB,CAAC;QACzD,sBAAiB,GAAG,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC;IAoHrE,CAAC;IAlHG,KAAK,CAAC,OAAO,CAAC,QAAa,EAAE,QAAiB;;QAE1C,IAAI,CAAC,QAAQ,EAAE;YACX,MAAM,gBAAgB,GAAG,UAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,QAAQ,CAAC,0CAAE,QAAQ,CAAC;YACzF,IAAI,gBAAgB,EAAE;gBAClB,QAAQ,GAAG,gBAAgB,CAAC;aAC/B;iBAAM;gBACH,QAAQ,GAAG,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;aACrD;SACJ;QAED,IAAI,CAAC,QAAQ,EAAE;YACX,MAAM,IAAI,KAAK,CAAC,yBAAyB,QAAQ,GAAG,CAAC,CAAC;SACzD;QAED,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,2BAA2B,CAAC,QAAQ,EAAE,QAAS,CAAC,CAAC;QAEjF,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,YAAY,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAEvG,aAAa,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;QACrF,aAAa,CAAC,iBAAiB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QAE5G,OAAO,aAAa,CAAC;IACzB,CAAC;IAED,KAAK,CAAC,uBAAuB,CAAC,GAAqB,EAAE,QAAgB;;QACjE,IAAI,QAAa,CAAC;QAClB,qCAAqC;QACrC,GAAG,GAAG,GAAuB,CAAC;QAC9B,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE;YACvB,MAAM,gBAAgB,GAAG,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC;YACtG,IAAI,CAAC,gBAAgB,EAAE;gBACnB,MAAM,IAAI,KAAK,CAAC,qBAAqB,GAAG,QAAQ,CAAC,CAAC;aACrD;YAED,MAAM,MAAM,GAAG,UAAI,CAAC,qBAAqB,CAAC,sBAAgB,CAAC,QAAQ,mCAAI,EAAE,CAAC,mCAAI,EAAE,CAAC;YACjF,KAAK,IAAI,OAAO,GAAG,CAAC,GAAI,OAAO,EAAE,EAAE;gBAC/B,MAAM,SAAS,GAAG,IAAI,UAAG,EAAE;qBACtB,UAAU,CAAC,UAAU,CAAC;qBACtB,QAAQ,CAAC,qBAAqB,OAAO,GAAG,MAAM,EAAE,CAAC;qBACjD,SAAS,CAAC,QAAQ,CAAC,CAAC;gBACzB,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,SAAS,CAAC,EAAE;oBACzD,QAAQ,GAAG,SAAS,CAAC;oBACrB,MAAM;iBACT;aACJ;SACJ;aAAM,IAAI,GAAG,CAAC,gBAAgB,CAAC,MAAM,KAAK,UAAU,EAAE;YACnD,QAAQ,GAAG,GAAG,CAAC,gBAAgB,CAAC;SACnC;aAAM;YACH,MAAM,IAAI,KAAK,CAAC,6BAA6B,GAAG,GAAG,CAAC,gBAAgB,CAAC,QAAQ,EAAE,GAAG,qEAAqE,CAAC,CAAC;YACzJ,8CAA8C;YAC9C,0DAA0D;YAC1D,gCAAgC;SACnC;QAED,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAES,KAAK,CAAC,2BAA2B,CAAC,QAAa,EAAE,QAAgB;QACvE,IAAI,QAAQ,CAAC,MAAM,KAAK,UAAU,EAAE;YAEhC,OAAO;gBACH,KAAK,EAAE;oBACH;wBACI,QAAQ,EAAE,iBAAQ,CAAC,MAAM;wBACzB,QAAQ,EAAE,UAAU;wBACpB,OAAO,EAAE,EAAE;wBACX,MAAM,EAAE,EAAE;qBACb;iBACJ;gBACD,QAAQ,EAAE,EAAE;aACf,CAAC;SACL;aAAM;YACH,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAEvD,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YAClF,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAEtE,OAAO,QAAQ,CAAC;SACnB;IACL,CAAC;IAES,qBAAqB,CAAC,SAA0C;QACtE,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;YAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;YACjD,IAAI,MAAM,EAAE;gBACR,OAAO,MAAM,CAAC;aACjB;SACJ;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAES,kBAAkB,CAAC,QAA8B;QAEvD,MAAM,OAAO,GAAG,wBAAwB,CAAC;QAEzC,MAAM,SAAS,GAAG,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC;QAErF,IAAI,SAAS,EAAE;YACX,MAAM,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACxC,IAAI,OAAO,EAAE;gBACT,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;aACrB;SACJ;QAED,OAAO,SAAS,CAAC;IACrB,CAAC;IAES,uBAAuB,CAAC,QAAa;;QAC3C,OAAO,UAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,WACvD,iBAAI,CAAC,QAAQ,0CAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,eAAe,IAAI,gBAAK,EAAC,QAAQ,CAAC,eAAe,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IACvI,0CAAE,IAAI,CAAC;IACZ,CAAC;CAEJ;AA/HG;IADC,sBAAM,EAAC,0BAAW,CAAC;8BACG,0BAAW;iEAAC;AAGnC;IADC,sBAAM,EAAC,kCAAe,CAAC;8BACG,kCAAe;qEAAC;AAG3C;IADC,sBAAM,EAAC,6CAAoB,CAAC;8BACG,6CAAoB;0EAAC;AAT5C,4BAA4B;IADxC,0BAAU,GAAE;GACA,4BAA4B,CAkIxC;AAlIY,oEAA4B;;;;;;;;;;;;AC/BzC,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;AAChF;;;gGAGgG;;;;;;;;;AAEhG,wGAAsC;AACtC,oIAA0D;AAOzD,CAAC;AAgBF,IAAa,gCAAgC,GAA7C,MAAa,gCAAgC;IAA7C;QAEqB,uBAAkB,GAAG,IAAI,cAAO,EAAmB,CAAC;QAC5D,kBAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;QAEtC,gCAA2B,GAAG,IAAI,cAAO,EAAU,CAAC;QAC5D,2BAAsB,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC;QAExD,gBAAW,GAAG,IAAI,GAAG,EAA0D,CAAC;QAChF,oBAAe,GAAG,IAAI,GAAG,EAA4C,CAAC;IA2D3F,CAAC;IAzDG,cAAc,CAAC,QAA4B,EAAE,UAAkB,EAAE,OAAgB;;QAC7E,IAAI,QAAQ,KAAK,SAAS,EAAE;YACxB,MAAM,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,WAAC,cAAC,CAAC,cAAc,+CAAhB,CAAC,EAAkB,UAAU,EAAE,OAAO,CAAC,IAAC,CAAC;YACnG,OAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;SAC3E;QAED,OAAO,sBAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,0CAAE,cAAc,mDAAG,UAAU,EAAE,OAAO,CAAC,mCAAI,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC/G,CAAC;IAED,OAAO,CAAC,UAAkB;QACtB,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;YAClC,OAAO;SACV;QAED,MAAM,KAAK,GAAsB,EAAE,CAAC;QACpC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAExC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACrE,KAAK,MAAM,OAAO,IAAI,KAAK,EAAE;gBACzB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACzC;YACD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,SAAS,CAAC,QAAgB;QAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACpD,IAAI,QAAQ,EAAE;YACV,OAAO,QAAQ,CAAC;SACnB;QAED,MAAM,SAAS,GAAsB;YACjC,WAAW,EAAE,CAAC,UAAU,EAAE,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,UAAU,EAAE,OAAO,CAAC;YACrF,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC;SACvD,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC9C,OAAO,SAAS,CAAC;IACrB,CAAC;IAEO,WAAW,CAAC,QAAgB,EAAE,UAAkB,EAAE,OAAgB;QACtE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;YACnC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC5B;QAED,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACpD,MAAM,MAAM,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC;QACjD,IAAI,UAAU,KAAK,SAAS,EAAE;YAC1B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACxC;aAAM;YACH,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC3B;IACL,CAAC;IAED,OAAO;QACH,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;IACtC,CAAC;CACJ;AApEY,gCAAgC;IAD5C,0BAAU,GAAE;GACA,gCAAgC,CAoE5C;AApEY,4EAAgC;;;;;;;;;;;;AC5C7C,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,wGAA6E;AAC7E,oIAAkE;AAGlE,4JAAuG;AACvG,6JAAyE;AACzE,4LAA6F;AAC7F,2KAAwH;AACxH,+IAA+D;AAElD,wBAAgB,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC;AAc5D,IAAa,eAAe,GAA5B,MAAa,eAAe;IAA5B;QAcc,qCAAgC,GAAG,IAAI,cAAO,EAAU,CAAC;QAC1D,gCAA2B,GAAG,IAAI,CAAC,gCAAgC,CAAC,KAAK,CAAC;QAEhE,gBAAW,GAAG,IAAI,2BAAoB,EAAE,CAAC;QAEzC,sBAAiB,GAAG,IAAI,GAAG,EAAgC,CAAC;QAC5D,mBAAc,GAAG,IAAI,GAAG,EAAyB,CAAC;QAElD,yCAAoC,GAAG,IAAI,cAAO,EAAU,CAAC;QACvE,oCAA+B,GAAG,IAAI,CAAC,oCAAoC,CAAC,KAAK,CAAC;QAExE,6BAAwB,GAAG,IAAI,cAAO,EAAU,CAAC;QAC3D,wBAAmB,GAAG,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC;QAEhD,gCAA2B,GAAG,IAAI,cAAO,EAAU,CAAC;QAC9D,uBAAkB,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC;QAElD,kCAA6B,GAAG,IAAI,cAAO,EAAiB,CAAC;QACvE,6BAAwB,GAAG,IAAI,CAAC,6BAA6B,CAAC,KAAK,CAAC;QAC1D,qCAAgC,GAAG,IAAI,cAAO,EAAiB,CAAC;QAC1E,gCAA2B,GAAG,IAAI,CAAC,gCAAgC,CAAC,KAAK,CAAC;QAMhE,UAAK,GAAG,IAAI,uBAAQ,EAAE,CAAC;IA2F9C,CAAC;IA/FG,OAAO;QACH,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAC/B,CAAC;IAID;;OAEG;IACH,SAAS;QACL,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;IAED,0BAA0B,CAAC,QAAgB,EAAE,UAA8B;QACvE,IAAI,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YACtC,MAAM,IAAI,KAAK,CAAC,mCAAmC,QAAQ,kBAAkB,CAAC,CAAC;SAClF;QAED,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,YAAY,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,CAAC;QAC7E,IAAI,CAAC,oCAAoC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEzD,OAAO,iBAAU,CAAC,MAAM,CAAC,GAAG,EAAE;YAC1B,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACxC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,KAAK,CAAC,mBAAmB,CAAC,IAAkB,EAAE,QAAgB,EAAE,GAAQ;;QACpE,MAAM,UAAU,GAAG,UAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,QAAQ,CAAC,0CAAE,UAAU,CAAC;QACpE,IAAI,CAAC,UAAU,EAAE;YACb,MAAM,IAAI,KAAK,CAAC,6BAA6B,GAAG,QAAQ,CAAC,CAAC;SAC7D;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,CAAC;QAC7E,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;QAC/C,mEAAmE;QACnE,qEAAqE;QACrE,MAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;QAC9D,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/C,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,KAAK,CAAC,uBAAuB,CAAC,QAAgB;QAC1C,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAEzB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QAC5D,IAAI,CAAC,MAAM,EAAE;YACT,MAAM,IAAI,KAAK,CAAC,0CAA0C,QAAQ,GAAG,CAAC,CAAC;SAC1E;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;;OAIG;IACO,KAAK,CAAC,uBAAuB,CAAC,IAAY;QAChD,IAAI,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAClC,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SAC3C;QACD,MAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACpE,MAAM,QAAQ,GAAG,IAAI,uBAAQ,EAAoC,CAAC;QAClE,wBAAwB;QACxB,MAAM,eAAe,GAAG,KAAM,CAAC;QAC/B,MAAM,UAAU,GAAG,IAAI,CAAC,+BAA+B,CAAC,QAAQ,CAAC,EAAE;YAC/D,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACnB,YAAY,CAAC,OAAO,CAAC,CAAC;gBACtB,UAAU,CAAC,OAAO,EAAE,CAAC;gBACrB,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;aACtD;QACL,CAAC,CAAC,CAAC;QACH,MAAM,OAAO,GAAG,UAAU,CAAC,GAAG,EAAE;YAC5B,YAAY,CAAC,OAAO,CAAC,CAAC;YACtB,UAAU,CAAC,OAAO,EAAE,CAAC;YACrB,QAAQ,CAAC,MAAM,EAAE,CAAC;QACtB,CAAC,EAAE,eAAe,CAAC,CAAC;QACpB,OAAO,QAAQ,CAAC,OAAO,CAAC;IAC5B,CAAC;IAED,sBAAsB,CAAC,GAAQ;QAC3B,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;IACnD,CAAC;IAED,iBAAiB;QACb,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;IACxC,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,IAAY;QAC/B,OAAO,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,KAAK,EAAC,QAAQ,EAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IACvF,CAAC;IAED,qBAAqB;QACjB,OAAO,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,CAAC;IAC7C,CAAC;CACJ;AAhIG;IADC,sBAAM,EAAC,0BAAW,CAAC;8BACG,0BAAW;oDAAC;AAGnC;IADC,sBAAM,EAAC,kDAAsB,CAAC;8BACP,kDAAsB;qDAAC;AAG/C;IADC,sBAAM,EAAC,qCAAoB,CAAC;;6DACgD;AAG7E;IADC,sBAAM,EAAC,8CAAwB,CAAC;;iEACwD;AAZhF,eAAe;IAD3B,0BAAU,GAAE;GACA,eAAe,CAmI3B;AAnIY,0CAAe;;;;;;;;;;;;ACxC5B,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;AAChF;;;gGAGgG;;;;;;;;;;;;AAEhG,wGAAoF;AACpF,oIAA6F;AAE7F,4LAA6F;AAK7F,oLAAuE;AAE1D,gCAAwB,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC;AAGvE,SAAgB,gCAAgC,CAAC,MAA4B,EAAE,KAA6B,EACxG,0BAA6D;IAC7D,MAAM,KAAK,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;IAEnC,KAAK,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAC1D,kGAAkG;IAClG,KAAK,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC,EAAE,CAAC,0BAA0B,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACzF,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,MAAM,EAAE,CAAC;IAEvC,OAAO,KAAK,CAAC;AACjB,CAAC;AAVD,4EAUC;AAED,MAAM,0BAA0B,GAAG,MAAM,CAAC,4BAA4B,CAAC,CAAC;AAOxE,MAAM,sBAAsB,GAAG,MAAM,CAAC,oBAAoB,CAAC,CAAC;AAe5D,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAA9B;QAEuB,8BAAyB,GAAG,IAAI,cAAO,EAA6B,CAAC;QAC/E,uBAAkB,GAAqC,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC;QAElF,kCAA6B,GAAG,IAAI,cAAO,EAAc,CAAC;QACpE,2BAAsB,GAAsB,IAAI,CAAC,6BAA6B,CAAC,KAAK,CAAC;QAE3E,8BAAyB,GAAG,IAAI,cAAO,EAAmC,CAAC;QACrF,uBAAkB,GAA2C,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC;QAExF,+BAA0B,GAAG,IAAI,cAAO,EAAQ,CAAC;QAC3D,wBAAmB,GAAgB,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC;QAE/D,uCAAkC,GAAG,IAAI,cAAO,EAAoC,CAAC;QAC/F,gCAA2B,GAA4C,IAAI,CAAC,kCAAkC,CAAC,KAAK,CAAC;QAE3G,+BAA0B,GAAG,IAAI,cAAO,EAAU,CAAC;QAC7D,wBAAmB,GAAkB,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC;QAEjE,sCAAiC,GAAG,IAAI,cAAO,EAAW,CAAC;QACrE,+BAA0B,GAAG,IAAI,CAAC,iCAAiC,CAAC,KAAK,CAAC;QAsBzE,cAAS,GAAG,IAAI,2BAAoB,EAAE,CAAC;IAwKrD,CAAC;IApLG,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAID,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAQD,IAAI,gBAAgB;QAChB,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAClC,CAAC;IAED,IAAI,gBAAgB,CAAC,mBAAiD;QAClE,MAAM,qBAAqB,GAAG,IAAI,CAAC,iBAAiB,CAAC,cAAc,KAAK,mBAAmB,CAAC,cAAc,CAAC;QAC3G,mBAAmB,GAAG;YAClB,GAAG,mBAAmB;YACtB,GAAG,EAAE,sBAAsB,EAAE,6BAA6B,CAAC,IAAI,CAAC,iBAAiB,EAAE,mBAAmB,CAAC,EAAE;SAC5G,CAAC;QACF,IAAI,CAAC,iBAAiB,GAAG,mBAAmB,CAAC;QAC7C,IAAI,CAAC,kCAAkC,CAAC,IAAI,CAAC,EAAE,qBAAqB,EAAE,CAAC,CAAC;IAE5E,CAAC;IAMD,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;IACnE,CAAC;IAED,IAAI,MAAM;QACN,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC7B,CAAC;IACD,IAAI,MAAM,CAAC,MAAc;QACrB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;IAC/B,CAAC;IACD,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC/B,CAAC;IAED,IAAI,QAAQ,CAAC,WAAmB;QAC5B,IAAI,IAAI,CAAC,QAAQ,KAAK,WAAW,EAAE;YAC/B,OAAO;SACV;QAED,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,WAAW,CAAC;QAClC,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;SAC7C;QAED,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;QAC5B,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAClD,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACpD,CAAC;IAED,IAAI,GAAG;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;IAC1B,CAAC;IACD,IAAI,MAAM;QACN,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC7B,CAAC;IACD,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC/B,CAAC;IAGS,IAAI;;QACV,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,oDAAuB,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9E,IAAI,CAAC,SAAS,GAAG,UAAI,CAAC,KAAK,CAAC,QAAQ,mCAAI,EAAE,CAAC;QAC3C,IAAI,CAAC,iBAAiB,GAAG,UAAI,CAAC,KAAK,CAAC,gBAAgB,mCAAI,EAAE,CAAC;IAC/D,CAAC;IAED,UAAU,CAAC,IAAmB;QAC1B,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,0BAA0B,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACjE;IACL,CAAC;IAED,OAAO;QACH,IAAI,CAAC,yBAAyB,CAAC,OAAO,EAAE,CAAC;QACzC,IAAI,CAAC,6BAA6B,CAAC,OAAO,EAAE,CAAC;QAC7C,IAAI,CAAC,yBAAyB,CAAC,OAAO,EAAE,CAAC;QACzC,IAAI,CAAC,0BAA0B,CAAC,OAAO,EAAE,CAAC;QAC1C,IAAI,CAAC,kCAAkC,CAAC,OAAO,EAAE,CAAC;QAClD,IAAI,CAAC,0BAA0B,CAAC,OAAO,EAAE,CAAC;QAC1C,IAAI,CAAC,0BAA0B,CAAC,OAAO,EAAE,CAAC;QAC1C,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QACzB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED,WAAW;QACP,IAAI,CAAC,iCAAiC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,eAAe;QACX,IAAI,CAAC,iCAAiC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACvD,CAAC;IAED,yBAAyB,CAAC,MAAiC;QACvD,IAAI,MAAM,CAAC,WAAW,GAAG,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YACxD,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YACzE,SAAS;YACT,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;gBAChC,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBACrD,MAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAEvC,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;aAC7D;YAED,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,SAAS,EAAE,MAAM,CAAC,WAAW,GAAG,SAAS,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,oDAAuB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAChK,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,GAAG,SAAS,EAAE,WAAW,EAAE,MAAM,CAAC,WAAW,GAAG,SAAS,EAAE,UAAU,EAAE,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;SACzK;aAAM;YACH,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,oDAAuB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACvH,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC/C;IACL,CAAC;IAED,iBAAiB,CAAC,QAAgB,EAAE,aAAyB;QACzD,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC;QAEnE,IAAI,CAAC,MAAM,EAAE;YACT,OAAO,KAAK,CAAC;SAChB;QAED,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QAClC,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,iBAAiB,CAAC,QAAgB,EAAE,MAAe,EAAE,KAAuB;QACxE,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC;QAEnE,IAAI,CAAC,MAAM,EAAE;YACT,OAAO,KAAK,CAAC;SAChB;QAED,IAAI,MAAM,EAAE;YACR,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SAC5B;aAAM;YACH,MAAM,CAAC,WAAW,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;SACzF;QACD,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,OAAO;QACH,OAAO;YACH,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;YACrD,MAAM,EAAE,IAAI,CAAC,IAAI;YACjB,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa;YACvC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,QAAQ,EAAE,IAAI,CAAC,QAAQ;SAC1B,CAAC;IACN,CAAC;IAED,KAAK,CAAC,gBAAgB;QAClB,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,OAAO,IAAI,CAAC,SAAS,CAAC;SACzB;QAED,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvE,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC;QAC5B,OAAO,GAAG,CAAC,MAAM,CAAC;IACtB,CAAC;CACJ;AA3LG;IADC,sBAAM,EAAC,0BAA0B,CAAC;;qEAC6B;AAGhE;IADC,sBAAM,EAAC,sBAAsB,CAAC;;gDACkB;AAEjD;IADC,sBAAM,EAAC,kDAAsB,CAAC;8BACM,kDAAsB;2DAAC;AAiF5D;IADC,6BAAa,GAAE;;;;6CAKf;AAlHQ,iBAAiB;IAD7B,0BAAU,GAAE;GACA,iBAAiB,CAmN7B;AAnNY,8CAAiB;AAqN9B,SAAS,6BAA6B,CAAC,WAAyC,EAAE,WAAyC;IACvH,IAAI,WAAW,CAAC,YAAY,KAAK,WAAW,CAAC,YAAY,IAAI,OAAO,WAAW,CAAC,YAAY,KAAK,QAAQ,EAAE;QACvG,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,WAAW,CAAC,YAAY,CAAC;QACrD,OAAO,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KAC5C;SAAM;QACH,OAAO,WAAW,CAAC,sBAAsB,CAAC;KAC7C;AACL,CAAC;;;;;;;;;;;;AC/RD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAEhF,wGAAkD;AAClD,6HAA6D;AAC7D,+GAA4E;AAE5E,MAAa,uBAAuB;IAoBhC,YAAoB,SAAqB;QAArB,cAAS,GAAT,SAAS,CAAY;QAlBjC,yBAAoB,GAAG,IAAI,cAAO,EAAQ,CAAC;QAC1C,oBAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;QAEnD,2CAAsC,GAAG,IAAI,cAAO,EAAQ,CAAC;QAC5D,sCAAiC,GAAG,IAAI,CAAC,sCAAsC,CAAC,KAAK,CAAC;IAclD,CAAC;IAZ9C,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;IACnC,CAAC;IAED,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,IAAI,EAAE,CAAC;IACxC,CAAC;IAED,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;IACnC,CAAC;IAID,WAAW,CAAC,OAAmB;QAC3B,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;QACzB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;IACrC,CAAC;IAED,UAAU,CAAC,KAAuB;QAC9B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;IACrC,CAAC;IAED,OAAO;QACH,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC;QACpC,IAAI,CAAC,sCAAsC,CAAC,OAAO,EAAE,CAAC;IAC1D,CAAC;IAED,+BAA+B;QAC3B,IAAI,CAAC,sCAAsC,CAAC,IAAI,EAAE,CAAC;IACvD,CAAC;IAED,OAAO;QACH,OAAO;YACH,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SAC1B,CAAC;IACN,CAAC;IAEO,mBAAmB;QACvB,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,6BAAgB,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;YACpF,kEAAkE;YAClE,yDAAyD;YACzD,MAAM,WAAW,GAAG,IAAI,GAAG,EAA0B,CAAC;YACtD,MAAM,SAAS,GAAa,EAAE,CAAC;YAC/B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACxB,IAAI,KAAqB,CAAC;gBAC1B,IAAI,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;oBAC5B,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAE,CAAC;iBACvC;qBAAM;oBACH,KAAK,GAAG,EAAE,CAAC;oBACX,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;oBAClC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC7B;gBACD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;YACxB,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACrB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;oBACd,IAAI;oBACJ,IAAI,EAAE,qBAAY,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAE,CAAC;iBACpD,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;SACN;IACL,CAAC;CAEJ;AA9ED,0DA8EC;;;;;;;;;;;;AClGD,gFAAgF;AAChF,0CAA0C;AAC1C,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,wGAAuD;AAEvD,+GAMsB;AAEtB,6JAAyE;AACzE,+JAAoF;AACpF,4LAA6F;AAC7F,oIAA6F;AAE7F,oKAA8E;AAEjE,4BAAoB,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC;AAEnE,SAAgB,4BAA4B,CAAC,MAA4B,EAAE,KAAyB;IAChG,MAAM,KAAK,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;IAEnC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IACtD,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC;IAEnC,OAAO,KAAK,CAAC;AACjB,CAAC;AAPD,oEAOC;AAED,MAAM,kBAAkB,GAAG,MAAM,CAAC,oBAAoB,CAAC,CAAC;AASxD,IAAa,aAAa,GAA1B,MAAa,aAAa;IAA1B;QAEuB,0BAAqB,GAAG,IAAI,cAAO,EAAQ,CAAC;QACtD,mBAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC;QAExC,6BAAwB,GAAG,IAAI,cAAO,EAAQ,CAAC;QACzD,sBAAiB,GAAG,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC;QAE9C,gCAA2B,GAAG,IAAI,cAAO,EAAmC,CAAC;QACvF,yBAAoB,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC;QAEpD,8BAAyB,GAAG,IAAI,cAAO,EAAiC,CAAC;QACnF,uBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC;QAkBnE,eAAU,GAAW,CAAC,CAAC;QAMb,eAAU,GAAwB,EAAE,CAAC;QAY/C,aAAQ,GAA6B,EAAE,CAAC;IAwR5C,CAAC;IAhSG,IAAI,GAAG;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;IAC1B,CAAC;IAED,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC/B,CAAC;IAKD,UAAU;QACN,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC;YAC1E,GAAG,EAAE,gBAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC;YAC5C,MAAM,EAAE,KAAK;YACb,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,aAAa,EAAE,IAAI,CAAC,aAAa;SACpC,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAExC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE9B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE;YACxC,MAAM,QAAQ,GAAG,IAAI,UAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAC1C,IAAI,QAAQ,CAAC,MAAM,KAAK,gBAAO,CAAC,MAAM,EAAE;gBACpC,MAAM,OAAO,GAAG,gBAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBACxC,IAAI,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;oBAC/C,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,CAAC,CAAC;oBAC/D,IAAI,IAAI,EAAE;wBACN,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;qBAChC;iBACJ;aACJ;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IACxC,CAAC;IAED,OAAO;QACH,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,CAAC;QACrC,IAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE,CAAC;QACxC,IAAI,CAAC,2BAA2B,CAAC,OAAO,EAAE,CAAC;QAC3C,IAAI,CAAC,yBAAyB,CAAC,OAAO,EAAE,CAAC;QACzC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAC/C,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,OAAoB;QAC3B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;QAElC,MAAM,kBAAkB,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC;YAChE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAC7C,QAAQ,EAAE,IAAI,CAAC,QAAQ;SAC1B,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,kBAAkB,CAAC,CAAC;QAEzD,IAAI,CAAC,wBAAwB,CAAC,IAAI,EAAE,CAAC;IACzC,CAAC;IAED,cAAc;QACV,MAAM,KAAK,GAAG,IAAI,CAAC;QACnB,OAAO;YACH,IAAI;gBACA,OAAO,IAAI,CAAC,SAAS,CAAC;oBAClB,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;oBAC9C,QAAQ,EAAE,KAAK,CAAC,QAAQ;iBAC3B,CAAC,CAAC;YACP,CAAC;SACJ,CAAC;IACN,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,OAAgC;QACzC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;IACtC,CAAC;IAED,OAAO;QACH,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,gBAAgB,CAAC,IAAuB,EAAE,UAAmB;QACzD,IAAI,UAAU,EAAE;YACZ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;aAAM;YACH,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5D;QAED,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;QACjC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;QACxC,IAAI,IAAI,CAAC,KAAK,KAAK,aAAa,EAAE;YAC9B,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;SACrC;IACL,CAAC;IAED,IAAI;QACA,mFAAmF;QACnF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACxC,CAAC;IAED,IAAI;QACA,gBAAgB;QAChB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACxC,CAAC;IAED,eAAe,CAAC,IAAuB;QACnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC7B,CAAC;IAEO,sBAAsB,CAAC,KAA0B;QACrD,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACtB,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAAE;gBACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;YACtC,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAED,UAAU,CAAC,QAA6B,EAAE,eAAwB;QAC9D,MAAM,gBAAgB,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAClD,IAAI,SAAS,GAAW,CAAC,CAAC,CAAC;YAC3B,IAAI,OAAO,IAAI,IAAI,EAAE;gBACjB,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;aAC1B;iBAAM,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACzB,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACtD;iBAAM,IAAI,UAAU,IAAI,IAAI,EAAE;gBAC3B,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;aAC5G;YAED,OAAO;gBACH,IAAI;gBACJ,SAAS;gBACT,GAAG,EAAE,IAAI,CAAC,QAAQ,oBAAyB,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS;gBACjF,aAAa,EAAE,KAAK;aACvB,CAAC;QACN,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAE1B,KAAK,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,gBAAgB,EAAE;YAChD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrC;YACD,QAAQ,IAAI,CAAC,QAAQ,EAAE;gBACnB;oBACI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;oBACvE,MAAM;gBACV,mBAAwB,CAAC,CAAC;oBACtB,IAAI,IAAI,CAAC,MAAM,EAAE;wBACb,IAAI,CAAC,yBAAyB,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;qBAC5G;yBAAM;wBACH,8EAA8E;wBAC9E,sEAAsE;wBACtE,IAAI,CAAC,yBAAyB,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;qBAC5G;oBAED,MAAM;iBACT;gBACD;oBACI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;oBACjE,MAAM;gBACV;oBACI,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;oBAC5D,MAAM;gBACV;oBACI,IAAI,CAAC,iCAAiC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;oBACrF,MAAM;gBACV;oBACI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;oBAC/E,MAAM;gBACV;oBACI,MAAM;gBACV;oBACI,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC;oBAC3E,MAAM;aAEb;SACJ;IACL,CAAC;IAEO,YAAY,CAAC,KAAa,EAAE,WAAmB,EAAE,QAAoB,EAAE,eAAwB;QACnG,MAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;YACjC,OAAO,IAAI,CAAC,gBAAgB,CAAC;gBACzB,GAAG,EAAE,gBAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC;gBACvC,MAAM,EAAE,MAAM;gBACd,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;gBACvC,aAAa,EAAE,IAAI,CAAC,aAAa;aACpC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;QAEnC,MAAM,OAAO,GAAqD,CAAC,CAAC,KAAK,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;QAEhG,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,WAAW,EAAE,GAAG,KAAK,CAAC,CAAC;QAErE,KAAK,MAAM,IAAI,IAAI,YAAY,EAAE;YAC7B,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB;QAED,IAAI,eAAe,EAAE;YACjB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EACrC,KAAK,IAAI,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,QAAQ,CAAC,MAAM,EAAE,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC,EACtG,KAAK,IAAI,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;SAC3E;QAED,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,EAAE,IAAI,EAAE,gCAAuB,CAAC,WAAW,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;QAC5G,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,gCAAuB,CAAC,WAAW,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;IACjH,CAAC;IAEO,iCAAiC,CAAC,IAAuB,EAAE,gBAA6D;;QAC5H,MAAM,mBAAmB,GAAiC;YACtD,GAAG,IAAI,CAAC,gBAAgB;SAC3B,CAAC;QACF,IAAI,CAAqC,CAAC;QAC1C,wCAAwC;QACxC,KAAK,CAAC,IAAI,gBAAgB,EAAE;YACxB,mBAAmB,CAAC,CAAC,CAAC,GAAG,CAAC,sBAAgB,CAAC,CAAC,CAAC,mCAAI,SAAS,CAAU,CAAC;SACxE;QAED,IAAI,CAAC,gBAAgB,GAAG,mBAAmB,CAAC;QAC5C,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC;YAChC,SAAS,EAAE;gBACP,EAAE,IAAI,EAAE,gCAAuB,CAAC,0BAA0B,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,gBAAgB,EAAE,mBAAmB,EAAE;aACvI;SACJ,CAAC,CAAC;IACP,CAAC;IAEO,sBAAsB,CAAC,QAAkC,EAAE,eAAwB;QACvF,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;QAClC,IAAI,eAAe,EAAE;YACjB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EACrC,KAAK,IAAI,EAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,KAAK,CAAC,EAC3D,KAAK,IAAI,EAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAC3D,CAAC;SACL;QAED,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC;YAChC,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,gCAAuB,CAAC,sBAAsB,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC9F,WAAW,EAAE,IAAI;SACpB,CAAC,CAAC;IACP,CAAC;IAEO,kBAAkB,CAAC,IAAuB,EAAE,UAAkB,EAAE,eAAwB;QAC5F,IAAI,IAAI,CAAC,QAAQ,KAAK,UAAU,EAAE;YAC9B,OAAO;SACV;QAED,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;QAE3B,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC;YAChC,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,gCAAuB,CAAC,kBAAkB,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC;YACxH,WAAW,EAAE,IAAI;SACpB,CAAC,CAAC;IACP,CAAC;IAEO,eAAe,CAAC,SAAiB,EAAE,MAAc,EAAE,OAAe,EAAE,eAAwB;QAChG,IAAI,eAAe,EAAE;YACjB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EACrC,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EACxE,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAC3E,CAAC;SACL;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC;YAChC,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,gCAAuB,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;SACxG,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IAChB,CAAC;IAEO,oBAAoB,CAAC,MAAc;QACvC,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC;IAC1D,CAAC;CACJ;AAzTG;IADC,sBAAM,EAAC,0BAAW,CAAC;8BACY,0BAAW;kDAAC;AAG5C;IADC,sBAAM,EAAC,mCAAe,CAAC;8BACY,mCAAe;sDAAC;AAGpD;IADC,sBAAM,EAAC,kBAAkB,CAAC;;4CACS;AAGpC;IADC,sBAAM,EAAC,kDAAsB,CAAC;8BACP,kDAAsB;mDAAC;AAG/C;IADC,sBAAM,EAAC,8CAAwB,CAAC;;uDACoB;AAwBrD;IADC,6BAAa,GAAE;;;;+CAiCf;AAnFQ,aAAa;IADzB,0BAAU,GAAE;GACA,aAAa,CAwUzB;AAxUY,sCAAa;;;;;;;;;;;;ACrD1B,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAEhF,sHAAkD;AAGlD,6KAAoF;AAEpF,mLAAwF;AACxF,wGAAmD;AAQnD,MAAM,sBAAsB,GAAG;IAC3B,GAAG,6CAAoB,CAAC,aAAa;IACrC,SAAS,EAAE,CAAC,CAAC;IACb,SAAS,EAAE,CAAC,CAAC;IACb,SAAS,EAAE;QACP,GAAG,6CAAoB,CAAC,aAAa,CAAC,SAAS;QAC/C,uBAAuB,EAAE,KAAK;KACjC;CACJ,CAAC;AAEF,MAAa,UAAW,SAAQ,KAAK,CAAC,SAA8B;IAApE;;QAGc,cAAS,GAAG,IAAI,2BAAoB,EAAE,CAAC;QAyCvC,cAAS,GAAG,CAAC,SAAyB,EAAE,EAAE;YAChD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC/B,CAAC,CAAC;QAEQ,iBAAY,GAAG,GAAG,EAAE;;YAC1B,UAAI,CAAC,MAAM,0CAAE,OAAO,EAAE,CAAC;QAC3B,CAAC,CAAC;IAMN,CAAC;IAlDY,iBAAiB;QACtB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAEQ,oBAAoB;QACzB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAES,aAAa;QACnB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,2BAAoB,EAAE,CAAC;IAChD,CAAC;IAES,KAAK,CAAC,UAAU;QACtB,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3D,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;YAClC,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAClD,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,IAAI,yCAAkB,CAAC,GAAG,EACpC,WAAW,EACX,UAAU,EACV,cAAc,EACd,sBAAsB,CAAC,CAAC;YAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACjC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACvC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,sBAAsB,CAAC,GAAG,EAAE;gBACrE,UAAU,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAO,CAAC,UAAU,EAAE,CAAC,gBAAgB,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC;gBAClF,IAAI,CAAC,MAAO,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,MAAO,CAAC,UAAU,EAAE,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;YAC9F,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC,CAAC,EAAE;gBACzD,aAAa,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC3C,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;YACvC,CAAC,CAAC,CAAC,CAAC;SACP;IACL,CAAC;IAUQ,MAAM;QACX,OAAO,6BAAK,SAAS,EAAC,4BAA4B,EAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,GAAQ,CAAC;IACpJ,CAAC;CAEJ;AAxDD,gCAwDC;;;;;;;;;;;;;;AChGD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;AAChF,sHAAkD;AAClD,+GAAsD;AAItD,wHAAkD;AAClD,wGAAyE;AACzE,+MAAkF;AAClF,8NAAqG;AAkBrG,MAAa,oBAAqB,SAAQ,KAAK,CAAC,SAA+C;IAI3F,YAAY,KAAoB;QAC5B,KAAK,CAAC,KAAK,CAAC,CAAC;QAHP,cAAS,GAAG,IAAI,2BAAoB,EAAE,CAAC;QAI7C,IAAI,CAAC,KAAK,GAAG,EAAE,YAAY,EAAE,SAAS,EAAE,iBAAiB,EAAE,SAAS,EAAE,CAAC;QACvE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE;YAC7D,IAAI,CAAC,QAAQ,CAAC,EAAE,YAAY,EAAE,SAAS,EAAE,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAEQ,oBAAoB;QACzB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAEQ,MAAM;QACX,OAAO,4BAAI,SAAS,EAAC,0BAA0B;YAC1C,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK;iBAC1B,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CACjB,oBAAC,KAAK,CAAC,QAAQ,IAAC,GAAG,EAAE,OAAO,GAAG,IAAI,CAAC,MAAM;gBACtC,oBAAC,mBAAmB,IAAC,YAAY,EAAE,CAAC,IAAc,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,EACjF,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,EAClC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,GAAI;gBACvD,IAAI,CAAC,6BAA6B,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,oBAAC,iBAAiB,OAAG;gBACzE,4BAAI,SAAS,EAAE,qBAAqB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,KAAK,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EACvF,OAAO,EAAE,GAAG,EAAE;wBACV,IAAI,CAAC,QAAQ,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;wBACtC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;oBACnD,CAAC,EACD,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,KAAK,CAAC,EAC5C,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,EACzC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,EAClC,SAAS,EAAE,IAAI,EACf,GAAG,EAAE,CAAC,IAAmB,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;oBACnD,6BAAK,SAAS,EAAE,4BAA4B,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,KAAK,IAAI,CAAC,CAAC,CAAC,sCAAsC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAQ;oBACvI,6BAAK,SAAS,EAAC,6BAA6B,IACvC,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,KAAK,CAAC,CAClC;oBACL,IAAI,CAAC,KAAK,CAAC,YAAY,KAAK,IAAI;wBAC7B,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,iBAAiB,CAAC,mEAA8B,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,CAC3H;gBACJ,IAAI,CAAC,6BAA6B,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,oBAAC,iBAAiB,OAAG,CAC/D,CACpB;YAEL,oBAAC,mBAAmB,IAAC,YAAY,EAAE,CAAC,IAAc,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,EACjH,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EACtE,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAI,CAC/H,CAAC;IACV,CAAC;IAED,iBAAiB,CAAC,IAAuB,EAAE,KAAa;QACpD,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,CAAC,QAAQ,EAAE;YACX,MAAM,IAAI,KAAK,CAAC,mCAAmC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;SACvE;QACD,OAAO,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IAClE,CAAC;IAES,WAAW,CAAC,KAAqC,EAAE,KAAa;QACtE,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,0BAA0B,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC7E,CAAC;IAES,UAAU,CAAC,KAAqC,EAAE,IAAuB,EAAE,QAA2B;QAC5G,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,iBAAiB;QACjB,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,iBAAiB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAQ,aAAR,QAAQ,cAAR,QAAQ,GAAI,KAAK,CAAC,WAAW,CAAC,OAAO,GAAG,KAAK,CAAC,aAAa,CAAC,YAAY,GAAG,CAAC,EAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IAC7K,CAAC;IAES,MAAM,CAAC,KAAqC,EAAE,gBAAwB;;QAC5E,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC,CAAC;QAC/E,MAAM,aAAa,GAAG,KAAK,GAAG,gBAAgB,CAAC;QAC/C,IAAI,MAAM,GAAG,WAAI,CAAC,KAAK,CAAC,iBAAiB,0CAAE,QAAQ,MAAK,KAAK,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,gBAAgB,GAAG,CAAC,CAAC;QACxG,MAAM,GAAG,aAAa,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAC7C,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,gBAAgB,EAAE;YACnD,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;oBACjC,QAAQ,cAAmB;oBAC3B,MAAM,EAAE,CAAC;oBACT,KAAK;oBACL,MAAM;iBACT,CAAC,EAAE,IAAI,CAAC,CAAC;SACb;QACD,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,iBAAiB,EAAE,SAAS,EAAE,CAAC,CAAC;IACnE,CAAC;IAES,YAAY,CAAC,IAAc,EAAE,KAAa;QAChD,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,cAAc,CAAC,gDAAgB,CAAC,oBAAoB,CAAC,EAAE,EAC9E,IAAI,CAAC,KAAK,CAAC,aAAa,EACxB,IAAI,EACJ,KAAK,CACR,CAAC;IACN,CAAC;IAES,6BAA6B,CAAC,IAAuB,EAAE,QAA0B;QACvF,OAAO,IAAI,CAAC,KAAK,CAAC,iBAAiB,KAAK,SAAS;YAC7C,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,KAAK,IAAI;YAC1C,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,QAAQ,KAAK,QAAQ,CAAC;IAC3D,CAAC;CAEJ;AAtGD,oDAsGC;AAQD,SAAgB,mBAAmB,CAAC,EAAE,YAAY,EAAE,MAAM,EAAE,UAAU,EAA4B;IAC9F,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAEhD,OAAO,4BAAI,SAAS,EAAC,6BAA6B,EAAC,YAAY,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,IAC7J,KAAK,IAAI,6BAAK,SAAS,EAAC,iCAAiC;QACtD,gCAAQ,SAAS,EAAC,gCAAgC,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,YAAY,CAAC,iBAAQ,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,UAAG,CAAC,iBAAiB,CAAC,eAAe,CAAC;YACxI,6BAAK,SAAS,EAAE,qBAAO,EAAC,KAAK,CAAC,GAAG,sCAAsC,GAAI;YAC1E,UAAG,CAAC,iBAAiB,CAAC,MAAM,CAAC,CACzB;QACT,gCAAQ,SAAS,EAAC,gCAAgC,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,YAAY,CAAC,iBAAQ,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,UAAG,CAAC,iBAAiB,CAAC,mBAAmB,CAAC;YAC9I,6BAAK,SAAS,EAAE,qBAAO,EAAC,KAAK,CAAC,GAAG,sCAAsC,GAAI;YAC1E,UAAG,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAC7B,CACP,CACL,CAAC;AACV,CAAC;AAfD,kDAeC;AAED,SAAS,iBAAiB;IACtB,OAAO,6BAAK,SAAS,EAAC,oCAAoC,GAAG,CAAC;AAClE,CAAC;;;;;;;;;;;;AC1KD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,sHAAkD;AAClD,wGAAiG;AACjG,oIAAkE;AAClE,sKAAgF;AAChF,+JAAmF;AACnF,wHAA8D;AAa9D,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;IAcnC,iBAAiB,CAAC,QAAkB,EAAE,aAA4B,EAAE,IAAuB;QACvF,OAAO,oBAAC,2CAAmB,IAAC,YAAY,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,aAAa,EAAE,IAAI,CAAC,EAC5F,oBAAoB,EAAE,IAAI,CAAC,0BAA0B,CAAC,kBAAkB,GAAI,CAAC;IACrF,CAAC;IAED,aAAa,CAAC,QAAkB,EAAE,aAA4B,EAAE,IAAuB,EAAE,MAAgC;QACrH,OAAO,oBAAC,2CAAmB,IAAC,YAAY,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,aAAa,EAAE,IAAI,EAAE,MAAM,CAAC,EACpG,oBAAoB,EAAE,IAAI,CAAC,0BAA0B,CAAC,kBAAkB,GAAI,CAAC;IACrF,CAAC;IAEO,YAAY,CAAC,YAAsB,EAAE,aAA4B,EAAE,IAAuB,EAAE,MAAgC;;QAChI,MAAM,WAAW,GAA8B,EAAE,CAAC;QAElD,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,QAAQ,EAAE;YACrE,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,UAAI,CAAC,OAAO,mCAAI,SAAS,CAAC,EAAE;gBAC1F,IAAI,QAAQ,CAAC,IAAI,iBAA8B,EAAE;oBAC7C,WAAW,CAAC,IAAI,CAAC,GAAG,oBAAQ,CAAC,QAAQ,0CAAE,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC,mCAAI,EAAE,CAAC,CAAC;iBAC1H;qBAAM;oBACH,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,aAAa,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;iBACnF;aACJ;SACJ;QACD,OAAO,WAAW,CAAC;IACvB,CAAC;IAEO,iBAAiB,CAAC,QAAkB,EAAE,aAA4B,EAAE,IAAuB,EAAE,MAAgC;QACjI,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,oBAAiC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QAClH,OAAO;YACH,EAAE,EAAE,QAAQ,CAAC,EAAE;YACf,IAAI,EAAE,QAAQ,CAAC,IAAI;YACnB,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,OAAO,EAAE,QAAQ,CAAC,CAAC;gBACf,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAChC;oBACI,MAAM,EAAE,CAAC,CAAC,WAAW;oBACrB,QAAQ;oBACR,gBAAgB,EAAE,KAAK;oBACvB,IAAI,EAAE,CAAC,aAAa,EAAE,IAAI,EAAE,MAAM,CAAC;iBACtC,CAAC,CAAC,CAAC;gBACR,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAQ,EAAE,aAAa,EAAE,IAAI,EAAE,MAAM,CAAC;SAChG,CAAC;IACN,CAAC;CACJ;AArDG;IADC,sBAAM,EAAC,wBAAiB,CAAC;8BACF,wBAAiB;gEAAC;AAG1C;IADC,sBAAM,EAAC,uCAAiB,CAAC;;qEACqB;AAG/C;IADC,sBAAM,EAAC,6BAAmB,CAAC;8BACY,6BAAmB;uEAAC;AAG5D;IADC,sBAAM,EAAC,sBAAe,CAAC;8BACY,sBAAe;mEAAC;AAZ3C,0BAA0B;IADtC,0BAAU,GAAE;GACA,0BAA0B,CAwDtC;AAxDY,gEAA0B;;;;;;;;;;;;;;AClCvC,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;AAChF,sHAAkD;AAClD,wHAAsD;AAEtD,wGAA0D;AAW1D,MAAe,uBAAwB,SAAQ,KAAK,CAAC,SAA6D;IAI9G,YAAY,KAA+B;QACvC,KAAK,CAAC,KAAK,CAAC,CAAC;QAHP,cAAS,GAAG,IAAI,2BAAoB,EAAE,CAAC;QAI7C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE;YAC/C,IAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,KAAK,GAAG,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,EAAE,CAAC;IAC5D,CAAC;IAEQ,oBAAoB;QACzB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAES,UAAU,CAAC,IAA6B;QAC9C,OAAO,6BAAK,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,IAAI,IAAI,qBAAW,mCAAmC,GAAI,CAAC;IACtJ,CAAC;CAEJ;AAED,MAAa,mBAAoB,SAAQ,uBAAuB;IAEnD,MAAM;QACX,OAAO,6BAAK,SAAS,EAAC,6BAA6B,IAC9C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CACxD,CAAC;IACX,CAAC;CAEJ;AARD,kDAQC;AAED,MAAa,mBAAoB,SAAQ,uBAAuB;IAEnD,MAAM;QACX,OAAO,6BAAK,SAAS,EAAC,6BAA6B,IAC9C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CACxD,CAAC;IACX,CAAC;CACJ;AAPD,kDAOC;;;;;;;;;;;;ACpED,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,oIAAkE;AAClE,sHAAkD;AAClD,wJAA+E;AAC/E,yKAA+F;AAC/F,0KAAyE;AAGzE,4JAAoD;AAEpD,uLAA6E;AAC7E,8NAAqG;AACrG,4MAA2G;AAC3G,wHAAkD;AAClD,+GAA0D;AAC1D,wGAAmD;AAGnD,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAgBjC,MAAM,CAAC,aAA4B,EAAE,IAAuB,EAAE,MAAc;QACxE,OAAO;YACH,6BAAK,SAAS,EAAC,kCAAkC;gBAC7C,iCACK,IAAI,CAAC,0BAA0B,CAAC,aAAa,CAAC,mEAA8B,CAAC,sBAAsB,EAAE,aAAa,EAAE,IAAI,CAAC,CAGxH;gBACN,6BAAK,SAAS,EAAC,sCAAsC;oBACjD,oBAAC,iCAAU,IAAC,aAAa,EAAE,aAAa,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,CAAC,cAAc,GAAI;oBAC7F,oBAAC,sBAAsB,IAAC,IAAI,EAAE,IAAI,EAAE,qBAAqB,EAAE,IAAI,CAAC,qBAAqB,GAA2B,CAC9G,CACJ;YACN,6BAAK,SAAS,EAAC,kCAAkC;gBAC7C,oBAAC,uBAAuB,IAAC,IAAI,EAAE,IAAI,EAAE,oBAAoB,EAAE,IAAI,CAAC,wBAAwB,EACpF,aAAa,EAAE,GAAG,EAAE,CAChB,IAAI,CAAC,0BAA0B,CAAC,aAAa,CAAC,mEAA8B,CAAC,mBAAmB,EAAE,aAAa,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAI,CACjJ,CACH,CAAC;IACZ,CAAC;CACJ;AAlCG;IADC,sBAAM,EAAC,oCAAoB,CAAC;8BACM,oCAAoB;gEAAC;AAGxD;IADC,sBAAM,EAAC,qDAAwB,CAAC;8BACY,qDAAwB;0EAAC;AAGtE;IADC,sBAAM,EAAC,8CAAwB,CAAC;;0EACqC;AAGtE;IADC,sBAAM,EAAC,0DAA0B,CAAC;8BACY,0DAA0B;4EAAC;AAG1E;IADC,sBAAM,EAAC,gEAA6B,CAAC;8BACI,gEAA6B;uEAAC;AAd/D,wBAAwB;IADpC,0BAAU,GAAE;GACA,wBAAwB,CAoCpC;AApCY,4DAAwB;AA2CrC,MAAa,sBAAuB,SAAQ,KAAK,CAAC,SAA4E;IAI1H,YAAY,KAAkC;QAC1C,KAAK,CAAC,KAAK,CAAC,CAAC;QAHP,cAAS,GAAG,IAAI,2BAAoB,EAAE,CAAC;QAK7C,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAEhB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,KAAK,CAAC,EAAE;YACzE,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBACxC,IAAI,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;aACtD;QACL,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAEQ,oBAAoB;QACzB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAEQ,MAAM;QACX,OAAO,6BAAK,SAAS,EAAC,sBAAsB;YACxC,6BAAK,SAAS,EAAC,2BAA2B,IACrC,IAAI,CAAC,oBAAoB,EAAE,CAC1B;YACN,6BAAK,SAAS,EAAC,4BAA4B;gBACvC,kCAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAQ,CACrC,CACJ,CAAC;IACX,CAAC;IAEO,oBAAoB;;QACxB,MAAM,KAAK,GAAG,UAAI,CAAC,KAAK,CAAC,gBAAgB,0CAAE,KAAK,CAAC;QACjD,MAAM,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC;QAE5D,IAAI,WAAW,GAAuB,SAAS,CAAC;QAChD,IAAI,KAAK,GAAuB,SAAS,CAAC;QAC1C,IAAI,CAAC,KAAK,IAAI,cAAc,EAAE;YAC1B,WAAW,GAAG,qBAAO,EAAC,OAAO,CAAC,CAAC;YAC/B,KAAK,GAAG,OAAO,CAAC;SACnB;aAAM,IAAI,CAAC,KAAK,IAAI,cAAc,KAAK,KAAK,EAAE;YAC3C,WAAW,GAAG,qBAAO,EAAC,OAAO,CAAC,CAAC;YAC/B,KAAK,GAAG,KAAK,CAAC;SACjB;aAAM,IAAI,KAAK,KAAK,mCAA0B,CAAC,OAAO,IAAI,KAAK,KAAK,mCAA0B,CAAC,WAAW,EAAE;YACzG,WAAW,GAAG,qBAAO,EAAC,OAAO,CAAC,CAAC;SAClC;aAAM,IAAI,KAAK,KAAK,mCAA0B,CAAC,SAAS,EAAE;YACvD,WAAW,GAAG,GAAG,qBAAO,EAAC,MAAM,CAAC,uBAAuB,CAAC;SAC3D;QACD,OAAO,0CACF,WAAW;YACR;gBACI,8BAAM,SAAS,EAAE,GAAG,WAAW,4BAA4B,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,GAAS;gBACtF,6BAAK,SAAS,EAAC,2BAA2B,IAAE,IAAI,CAAC,gBAAgB,EAAE,CAAO,CAC3E,CACR,CAAC;IACR,CAAC;IAEO,gBAAgB;QACpB,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC;QACtE,IAAI,YAAY,IAAI,UAAU,EAAE;YAC5B,OAAO,GAAG,CAAC,CAAC,UAAU,GAAG,YAAY,CAAC,GAAG,IAAI,CAAC,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,qBAAqB,EAAE,CAAC,EAAE,qBAAqB,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;SACvI;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;CACJ;AAhED,wDAgEC;AAQD,MAAa,uBAAwB,SAAQ,KAAK,CAAC,SAAkC;IAIjF,YAAY,KAA8B;QACtC,KAAK,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IAEQ,KAAK,CAAC,iBAAiB;QAC5B,MAAM,EAAE,IAAI,EAAE,oBAAoB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAClD,IAAI,CAAC,kBAAkB,CAAC,KAAK,IAAI,EAAE;YAC/B,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjD,IAAI,CAAC,cAAc,GAAG,MAAM,oBAAoB,CAAC,IAAI,CAAC,CAAC;aAC1D;iBAAM,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBACzD,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;gBAC9B,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;aACnC;YACD,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACzB,IAAI,CAAC,cAAc,GAAG,MAAM,oBAAoB,CAAC,IAAI,CAAC,CAAC;YACvD,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;IACL,CAAC;IAEQ,kBAAkB;;QACvB,IAAI,CAAC,WAAI,CAAC,cAAc,0CAAE,UAAU,EAAE,GAAE;YACpC,UAAI,CAAC,cAAc,0CAAE,aAAa,EAAE,CAAC;SACxC;IACL,CAAC;IAEQ,MAAM;QACX,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC;YACxB;gBACK,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;gBAC1B,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAC9B,CAAC,CAAC;YACL,yCAAK,CAAC;IAEd,CAAC;CAEJ;AAzCD,0DAyCC;;;;;;;;;;;;;;;;;;;;;;;AC7LD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;AAChF,wGAA4H;AAC5H,sHAAkD;AAClD,wHAAkD;AAClD,+MAAiG;AAEjG,iLAA2E;AAC3E,oIAAkE;AAClE,sKAAgF;AAWhF,IAAa,2BAA2B,GAAxC,MAAa,2BAA2B;IAMpC,MAAM,CAAC,aAA4B;QAC/B,OAAO,oBAAC,mBAAmB,IAAC,aAAa,EAAE,aAAa,EACpD,YAAY,EAAE,IAAI,CAAC,YAAY,EAC/B,qBAAqB,EAAE,IAAI,CAAC,qBAAqB,EACjD,eAAe,EAAE,IAAI,CAAC,eAAe,EACrC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,GAC3C,CAAC;IACP,CAAC;CACJ;AAbkC;IAA9B,sBAAM,EAAC,+CAAqB,CAAC;8BAA2C,+CAAqB;0EAAC;AACtE;IAAxB,sBAAM,EAAC,sBAAe,CAAC;8BAAqC,sBAAe;oEAAC;AAClD;IAA1B,sBAAM,EAAC,wBAAiB,CAAC;8BAAkC,wBAAiB;iEAAC;AACnD;IAA1B,sBAAM,EAAC,uCAAiB,CAAC;;sEAAyD;AAJ1E,2BAA2B;IADvC,0BAAU,GAAE;GACA,2BAA2B,CAcvC;AAdY,kEAA2B;AAgBxC,MAAa,mBAAoB,SAAQ,KAAK,CAAC,SAAqE;IAIhH,YAAY,KAA+B;;QACvC,KAAK,CAAC,KAAK,CAAC,CAAC;QAHP,cAAS,GAAG,IAAI,2BAAoB,EAAE,CAAC;QAK7C,IAAI,CAAC,KAAK,GAAG,EAAE,mBAAmB,EAAE,WAAK,CAAC,qBAAqB,CAAC,4BAA4B,CAAC,KAAK,CAAC,aAAa,CAAC,0CAAE,KAAK,EAAE,CAAC;QAC3H,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,yBAAyB,CAAC,KAAK,CAAC,EAAE;;YAC9E,IAAI,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;gBACjD,IAAI,CAAC,QAAQ,CAAC,EAAE,mBAAmB,EAAE,WAAK,CAAC,qBAAqB,CAAC,SAAS,CAAC,WAAK,CAAC,SAAS,mCAAI,EAAE,CAAC,0CAAE,KAAK,EAAE,CAAC,CAAC;aAC/G;QACL,CAAC,CAAC,CAAC,CAAC;QACJ,oEAAoE;QACpE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,cAAc,CAAC,GAAG,EAAE;;YAChE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE;gBACjC,IAAI,CAAC,QAAQ,CAAC,EAAE,mBAAmB,EAAE,WAAK,CAAC,qBAAqB,CAAC,4BAA4B,CAAC,KAAK,CAAC,aAAa,CAAC,0CAAE,KAAK,EAAE,CAAC,CAAC;aAChI;QACL,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAEQ,oBAAoB;QACzB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAEQ,MAAM;;QACX,OAAO,6BAAK,SAAS,EAAC,6BAA6B;YAC9C,IAAI,CAAC,YAAY,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YAC3D,6BAAK,KAAK,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,GAAQ;YACnC,6BAAK,SAAS,EAAC,kCAAkC,EAC7C,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,cAAc,CAAC,gDAAgB,CAAC,qBAAqB,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;gBAC7H,8BAAM,SAAS,EAAE,qBAAO,EAAC,oBAAoB,CAAC,GAAI;gBAClD,8BAAM,SAAS,EAAC,wCAAwC,IACnD,UAAI,CAAC,KAAK,CAAC,mBAAmB,mCAAI,UAAG,CAAC,iBAAiB,CAAC,eAAe,CAAC,CACtE,CACL,CACJ,CAAC;IACX,CAAC;IAES,cAAc,CAAC,IAAc;;QACnC,IAAI,IAAI,CAAC,IAAI,kBAA+B,EAAE;YAC1C,MAAM,SAAS,GAAG,UAAI,CAAC,QAAQ,0CAAE,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YACnG,OAAO,oBAAC,KAAK,CAAC,QAAQ,IAAC,GAAG,EAAE,IAAI,CAAC,EAAE;gBAC9B,SAAS;gBACT,SAAS,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,8BAAM,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,YAAY,EAAE,SAAS,EAAC,kCAAkC,GAAQ,CAChH,CAAC;SACrB;aAAM,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACpE,OAAO,6BAAK,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,SAAS,EAAC,kCAAkC,EAClF,OAAO,EAAE,GAAG,EAAE;oBACV,IAAI,IAAI,CAAC,OAAO,EAAE;wBACd,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;qBACrF;gBACL,CAAC;gBACD,8BAAM,SAAS,EAAE,IAAI,CAAC,IAAI,GAAI;gBAC9B,8BAAM,SAAS,EAAC,uCAAuC,IAAE,IAAI,CAAC,KAAK,CAAQ,CACzE,CAAC;SACV;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAEO,YAAY;QAChB,MAAM,QAAQ,GAAG,6CAAa,CAAC,qBAAqB,CAAC;QACrD,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC;QAC9E,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;IACvF,CAAC;CACJ;AAjED,kDAiEC;;;;;;;;;;;;AClHD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,sHAAkD;AAClD,sMAAgG;AAChG,8LAA+F;AAI/F,4JAAoD;AACpD,oIAAkE;AAClE,wJAA+E;AAC/E,wGAAkC;AAGlC,IAAa,4BAA4B,GAAzC,MAAa,4BAA4B;IAOrC,MAAM,CAAC,aAA4B,EAAE,IAAuB;QACxD,OAAO,oBAAC,YAAY,IAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EAAE,cAAc,EAAE,IAAI,CAAC,cAAc,EAC7F,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,aAAa,GAAI,CAAC;IACrD,CAAC;CAEJ;AATG;IADC,sBAAM,EAAC,oCAAgB,CAAC;;sEAC2B;AAEpD;IADC,sBAAM,EAAC,oCAAoB,CAAC;8BACM,oCAAoB;oEAAC;AAL/C,4BAA4B;IADxC,0BAAU,GAAE;GACA,4BAA4B,CAYxC;AAZY,oEAA4B;AAsBzC,SAAS,YAAY,CAAC,EAAE,gBAAgB,EAAE,cAAc,EAAE,IAAI,EAAE,aAAa,EAAqB;IAC9F,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAEtD,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpF,OAAO,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IACpC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEf,IAAI,eAAe,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,oCAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC5I,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;QAC9B,eAAe,GAAG,4CAA4C,UAAG,CAAC,iBAAiB,CAAC,2DAA2D,CAAC,MAAM,CAAC;KAC1J;IAED,OAAO,QAAQ,CAAC,CAAC;QACb,oBAAC,iCAAU,IAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,aAAa,EAAE,cAAc,EAAE,cAAc,GAAI,CAAC,CAAC;QAC1F,6BAAK,SAAS,EAAC,iCAAiC,EAC5C,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE;YACvC,+GAA+G;YAC/G,qGAAqG;YACrG,gGAAgG;YAChG,uBAAuB,EAAE,EAAE,MAAM,EAAE,eAAe,EAAE,GACtD,CAAC;AACX,CAAC","sources":["webpack:///./node_modules/@theia/monaco/src/browser/simple-monaco-editor.ts?","webpack:///./node_modules/@theia/notebook/src/browser/contributions/notebook-actions-contribution.ts?","webpack:///./node_modules/@theia/notebook/src/browser/contributions/notebook-cell-actions-contribution.ts?","webpack:///./node_modules/@theia/notebook/src/browser/contributions/notebook-context-keys.ts?","webpack:///./node_modules/@theia/notebook/src/browser/notebook-editor-widget.tsx?","webpack:///./node_modules/@theia/notebook/src/browser/notebook-renderer-registry.ts?","webpack:///./node_modules/@theia/notebook/src/browser/notebook-type-registry.ts?","webpack:///./node_modules/@theia/notebook/src/browser/renderers/cell-output-webview.ts?","webpack:///./node_modules/@theia/notebook/src/browser/service/notebook-editor-widget-service.ts?","webpack:///./node_modules/@theia/notebook/src/browser/service/notebook-execution-service.ts?","webpack:///./node_modules/@theia/notebook/src/browser/service/notebook-execution-state-service.ts?","webpack:///./node_modules/@theia/notebook/src/browser/service/notebook-kernel-history-service.ts?","webpack:///./node_modules/@theia/notebook/src/browser/service/notebook-kernel-quick-pick-service.ts?","webpack:///./node_modules/@theia/notebook/src/browser/service/notebook-kernel-service.ts?","webpack:///./node_modules/@theia/notebook/src/browser/service/notebook-model-resolver-service.ts?","webpack:///./node_modules/@theia/notebook/src/browser/service/notebook-renderer-messaging-service.ts?","webpack:///./node_modules/@theia/notebook/src/browser/service/notebook-service.ts?","webpack:///./node_modules/@theia/notebook/src/browser/view-model/notebook-cell-model.ts?","webpack:///./node_modules/@theia/notebook/src/browser/view-model/notebook-cell-output-model.ts?","webpack:///./node_modules/@theia/notebook/src/browser/view-model/notebook-model.ts?","webpack:///./node_modules/@theia/notebook/src/browser/view/notebook-cell-editor.tsx?","webpack:///./node_modules/@theia/notebook/src/browser/view/notebook-cell-list-view.tsx?","webpack:///./node_modules/@theia/notebook/src/browser/view/notebook-cell-toolbar-factory.tsx?","webpack:///./node_modules/@theia/notebook/src/browser/view/notebook-cell-toolbar.tsx?","webpack:///./node_modules/@theia/notebook/src/browser/view/notebook-code-cell-view.tsx?","webpack:///./node_modules/@theia/notebook/src/browser/view/notebook-main-toolbar.tsx?","webpack:///./node_modules/@theia/notebook/src/browser/view/notebook-markdown-cell-view.tsx?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { EditorServiceOverrides, MonacoEditor, MonacoEditorServices } from './monaco-editor';\n\nimport { CodeEditorWidget } from '@theia/monaco-editor-core/esm/vs/editor/browser/widget/codeEditorWidget';\nimport { IInstantiationService } from '@theia/monaco-editor-core/esm/vs/platform/instantiation/common/instantiation';\nimport { StandaloneServices } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneServices';\nimport { ServiceCollection } from '@theia/monaco-editor-core/esm/vs/platform/instantiation/common/serviceCollection';\nimport { Disposable, DisposableCollection, Emitter, TextDocumentContentChangeDelta, URI } from '@theia/core';\nimport { MonacoEditorModel } from './monaco-editor-model';\nimport { Dimension, EditorMouseEvent, MouseTarget, Position, TextDocumentChangeEvent } from '@theia/editor/lib/browser';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { ElementExt } from '@theia/core/shared/@phosphor/domutils';\n\nexport class SimpleMonacoEditor extends MonacoEditorServices implements Disposable {\n\n    protected editor: CodeEditorWidget;\n    protected readonly toDispose = new DisposableCollection();\n\n    protected readonly onCursorPositionChangedEmitter = new Emitter<Position>();\n    protected readonly onSelectionChangedEmitter = new Emitter<Range>();\n    protected readonly onFocusChangedEmitter = new Emitter<boolean>();\n    protected readonly onDocumentContentChangedEmitter = new Emitter<TextDocumentChangeEvent>();\n    readonly onDocumentContentChanged = this.onDocumentContentChangedEmitter.event;\n    protected readonly onMouseDownEmitter = new Emitter<EditorMouseEvent>();\n    protected readonly onLanguageChangedEmitter = new Emitter<string>();\n    readonly onLanguageChanged = this.onLanguageChangedEmitter.event;\n    protected readonly onScrollChangedEmitter = new Emitter<void>();\n    readonly onEncodingChanged = this.document.onDidChangeEncoding;\n    protected readonly onResizeEmitter = new Emitter<Dimension | null>();\n    readonly onDidResize = this.onResizeEmitter.event;\n\n    constructor(\n        readonly uri: URI,\n        readonly document: MonacoEditorModel,\n        readonly node: HTMLElement,\n        services: MonacoEditorServices,\n        options?: MonacoEditor.IOptions,\n        override?: EditorServiceOverrides\n    ) {\n        super(services);\n        this.toDispose.pushAll([\n            this.onCursorPositionChangedEmitter,\n            this.onSelectionChangedEmitter,\n            this.onFocusChangedEmitter,\n            this.onDocumentContentChangedEmitter,\n            this.onMouseDownEmitter,\n            this.onLanguageChangedEmitter,\n            this.onScrollChangedEmitter\n        ]);\n        this.toDispose.push(this.create(options, override));\n        this.addHandlers(this.editor);\n        this.editor.setModel(document.textEditorModel);\n    }\n\n    getControl(): CodeEditorWidget {\n        return this.editor;\n    }\n\n    protected create(options?: MonacoEditor.IOptions, override?: EditorServiceOverrides): Disposable {\n        const combinedOptions = {\n            ...options,\n            lightbulb: { enabled: true },\n            fixedOverflowWidgets: true,\n            automaticLayout: true,\n            scrollbar: {\n                useShadows: false,\n                verticalHasArrows: false,\n                horizontalHasArrows: false,\n                verticalScrollbarSize: 10,\n                horizontalScrollbarSize: 10,\n                ...options?.scrollbar,\n            }\n        };\n        const instantiator = this.getInstantiatorWithOverrides(override);\n        return this.editor = instantiator.createInstance(CodeEditorWidget, this.node, {\n            ...combinedOptions,\n            dimension: {\n                width: 0,\n                height: 0\n            },\n        }, {\n\n        });\n    }\n\n    protected addHandlers(codeEditor: CodeEditorWidget): void {\n        this.toDispose.push(codeEditor.onDidChangeModelLanguage(e =>\n            this.fireLanguageChanged(e.newLanguage)\n        ));\n        this.toDispose.push(codeEditor.onDidChangeConfiguration(() => this.refresh()));\n        this.toDispose.push(codeEditor.onDidChangeModel(() => this.refresh()));\n        this.toDispose.push(codeEditor.onDidChangeModelContent(e => {\n            this.refresh();\n            this.onDocumentContentChangedEmitter.fire({ document: this.document, contentChanges: e.changes.map(this.mapModelContentChange.bind(this)) });\n        }));\n        this.toDispose.push(codeEditor.onMouseDown(e => {\n            const { element, position, range } = e.target;\n            this.onMouseDownEmitter.fire({\n                target: {\n                    ...(e.target as unknown as MouseTarget),\n                    element: element || undefined,\n                    mouseColumn: this.m2p.asPosition(undefined, e.target.mouseColumn).character,\n                    range: range && this.m2p.asRange(range) || undefined,\n                    position: position && this.m2p.asPosition(position.lineNumber, position.column) || undefined,\n                    detail: undefined\n                },\n                event: e.event.browserEvent\n            });\n        }));\n        this.toDispose.push(codeEditor.onDidScrollChange(e => {\n            this.onScrollChangedEmitter.fire(undefined);\n        }));\n    }\n\n    setLanguage(languageId: string): void {\n        monaco.editor.setModelLanguage(this.document.textEditorModel, languageId);\n    }\n\n    protected fireLanguageChanged(languageId: string): void {\n        this.onLanguageChangedEmitter.fire(languageId);\n    }\n\n    protected getInstantiatorWithOverrides(override?: EditorServiceOverrides): IInstantiationService {\n        const instantiator = StandaloneServices.initialize({});\n        if (override) {\n            const overrideServices = new ServiceCollection(...override);\n            return instantiator.createChild(overrideServices);\n        }\n        return instantiator;\n    }\n\n    protected mapModelContentChange(change: monaco.editor.IModelContentChange): TextDocumentContentChangeDelta {\n        return {\n            range: this.m2p.asRange(change.range),\n            rangeLength: change.rangeLength,\n            text: change.text\n        };\n    }\n\n    refresh(): void {\n        this.autoresize();\n    }\n\n    resizeToFit(): void {\n        this.autoresize();\n        // eslint-disable-next-line no-null/no-null\n        this.onResizeEmitter.fire(null);\n    }\n\n    setSize(dimension: Dimension): void {\n        this.resize(dimension);\n        this.onResizeEmitter.fire(dimension);\n    }\n\n    protected autoresize(): void {\n        this.resize();\n    }\n\n    protected resize(dimension?: Dimension): void {\n        if (this.node) {\n            const layoutSize = this.computeLayoutSize(this.node, dimension);\n            this.editor.layout(layoutSize);\n        }\n    }\n\n    protected computeLayoutSize(hostNode: HTMLElement, dimension: monaco.editor.IDimension | undefined): monaco.editor.IDimension {\n        if (dimension && dimension.width >= 0 && dimension.height >= 0) {\n            return dimension;\n        }\n        const boxSizing = ElementExt.boxSizing(hostNode);\n\n        const width = (!dimension || dimension.width < 0) ?\n            this.getWidth(hostNode, boxSizing) :\n            dimension.width;\n\n        const height = (!dimension || dimension.height < 0) ?\n            this.getHeight(hostNode, boxSizing) :\n            dimension.height;\n\n        return { width, height };\n    }\n\n    protected getWidth(hostNode: HTMLElement, boxSizing: ElementExt.IBoxSizing): number {\n        return hostNode.offsetWidth - boxSizing.horizontalSum;\n    }\n\n    protected getHeight(hostNode: HTMLElement, boxSizing: ElementExt.IBoxSizing): number {\n        return this.editor.getContentHeight();\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Command, CommandContribution, CommandRegistry, CompoundMenuNodeRole, MenuContribution, MenuModelRegistry, nls } from '@theia/core';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { ApplicationShell, codicon, CommonCommands } from '@theia/core/lib/browser';\nimport { NotebookModel } from '../view-model/notebook-model';\nimport { NotebookService } from '../service/notebook-service';\nimport { CellEditType, CellKind } from '../../common';\nimport { KernelPickerMRUStrategy, NotebookKernelQuickPickService } from '../service/notebook-kernel-quick-pick-service';\nimport { NotebookExecutionService } from '../service/notebook-execution-service';\nimport { NotebookEditorWidget } from '../notebook-editor-widget';\n\nexport namespace NotebookCommands {\n    export const ADD_NEW_CELL_COMMAND = Command.toDefaultLocalizedCommand({\n        id: 'notebook.add-new-cell',\n        iconClass: codicon('add')\n    });\n\n    export const ADD_NEW_MARKDOWN_CELL_COMMAND = Command.toDefaultLocalizedCommand({\n        id: 'notebook.add-new-markdown-cell',\n        iconClass: codicon('add')\n    });\n\n    export const ADD_NEW_CODE_CELL_COMMAND = Command.toDefaultLocalizedCommand({\n        id: 'notebook.add-new-code-cell',\n        iconClass: codicon('add')\n    });\n\n    export const SELECT_KERNEL_COMMAND = Command.toDefaultLocalizedCommand({\n        id: 'notebook.selectKernel',\n        category: 'Notebook',\n        iconClass: codicon('server-environment')\n    });\n\n    export const EXECUTE_NOTEBOOK_COMMAND = Command.toDefaultLocalizedCommand({\n        id: 'notebook.execute',\n        category: 'Notebook',\n        iconClass: codicon('run-all')\n    });\n\n    export const CLEAR_ALL_OUTPUTS_COMMAND = Command.toDefaultLocalizedCommand({\n        id: 'notebook.clear-all-outputs',\n        category: 'Notebook',\n        iconClass: codicon('clear-all')\n    });\n}\n\n@injectable()\nexport class NotebookActionsContribution implements CommandContribution, MenuContribution {\n\n    @inject(NotebookService)\n    protected notebookService: NotebookService;\n\n    @inject(NotebookKernelQuickPickService)\n    protected notebookKernelQuickPickService: KernelPickerMRUStrategy;\n\n    @inject(NotebookExecutionService)\n    protected notebookExecutionService: NotebookExecutionService;\n\n    @inject(ApplicationShell)\n    protected shell: ApplicationShell;\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(NotebookCommands.ADD_NEW_CELL_COMMAND, {\n            execute: (notebookModel: NotebookModel, cellKind: CellKind, index?: number) => {\n                const insertIndex = index ?? (notebookModel.selectedCell ? notebookModel.cells.indexOf(notebookModel.selectedCell) : 0);\n                let firstCodeCell;\n                if (cellKind === CellKind.Code) {\n                    firstCodeCell = notebookModel.cells.find(cell => cell.cellKind === CellKind.Code);\n                }\n\n                notebookModel.applyEdits([{\n                    editType: CellEditType.Replace,\n                    index: insertIndex,\n                    count: 0,\n                    cells: [{\n                        cellKind,\n                        language: firstCodeCell?.language ?? 'markdown',\n                        source: '',\n                        outputs: [],\n                        metadata: {},\n                    }]\n                }], true);\n            }\n        });\n\n        commands.registerCommand(NotebookCommands.ADD_NEW_MARKDOWN_CELL_COMMAND, {\n            execute: (notebookModel: NotebookModel) => commands.executeCommand(NotebookCommands.ADD_NEW_CELL_COMMAND.id, notebookModel, CellKind.Markup)\n        });\n\n        commands.registerCommand(NotebookCommands.ADD_NEW_CODE_CELL_COMMAND, {\n            execute: (notebookModel: NotebookModel) => commands.executeCommand(NotebookCommands.ADD_NEW_CELL_COMMAND.id, notebookModel, CellKind.Code)\n        });\n\n        commands.registerCommand(NotebookCommands.SELECT_KERNEL_COMMAND, {\n            execute: (notebookModel: NotebookModel) => this.notebookKernelQuickPickService.showQuickPick(notebookModel)\n        });\n\n        commands.registerCommand(NotebookCommands.EXECUTE_NOTEBOOK_COMMAND, {\n            execute: (notebookModel: NotebookModel) => this.notebookExecutionService.executeNotebookCells(notebookModel, notebookModel.cells)\n        });\n\n        commands.registerCommand(NotebookCommands.CLEAR_ALL_OUTPUTS_COMMAND, {\n            execute: (notebookModel: NotebookModel) =>\n                notebookModel.cells.forEach(cell => cell.spliceNotebookCellOutputs({ start: 0, deleteCount: cell.outputs.length, newOutputs: [] }))\n        });\n\n        commands.registerHandler(CommonCommands.UNDO.id, {\n            isEnabled: () => this.shell.activeWidget instanceof NotebookEditorWidget,\n            execute: () => (this.shell.activeWidget as NotebookEditorWidget).undo()\n        });\n        commands.registerHandler(CommonCommands.REDO.id, {\n            isEnabled: () => this.shell.activeWidget instanceof NotebookEditorWidget,\n            execute: () => (this.shell.activeWidget as NotebookEditorWidget).redo()\n        });\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        // independent submenu for plugins to add commands\n        menus.registerIndependentSubmenu(NotebookMenus.NOTEBOOK_MAIN_TOOLBAR, 'Notebook Main Toolbar');\n        // Add Notebook Cell items\n        menus.registerSubmenu(NotebookMenus.NOTEBOOK_MAIN_TOOLBAR_CELL_ADD_GROUP, 'Add Notebook Cell', { role: CompoundMenuNodeRole.Group });\n        menus.registerMenuAction(NotebookMenus.NOTEBOOK_MAIN_TOOLBAR_CELL_ADD_GROUP, {\n            commandId: NotebookCommands.ADD_NEW_CODE_CELL_COMMAND.id,\n            label: nls.localizeByDefault('Code'),\n            icon: codicon('add'),\n        });\n        menus.registerMenuAction(NotebookMenus.NOTEBOOK_MAIN_TOOLBAR_CELL_ADD_GROUP, {\n            commandId: NotebookCommands.ADD_NEW_MARKDOWN_CELL_COMMAND.id,\n            label: nls.localizeByDefault('Markdown'),\n            icon: codicon('add'),\n        });\n\n        // Execution related items\n        menus.registerSubmenu(NotebookMenus.NOTEBOOK_MAIN_TOOLBAR_EXECUTION_GROUP, 'Cell Execution', { role: CompoundMenuNodeRole.Group });\n        menus.registerMenuAction(NotebookMenus.NOTEBOOK_MAIN_TOOLBAR_EXECUTION_GROUP, {\n            commandId: NotebookCommands.EXECUTE_NOTEBOOK_COMMAND.id,\n            label: nls.localizeByDefault('Run All'),\n            icon: codicon('run-all'),\n            order: '10'\n        });\n        menus.registerMenuAction(NotebookMenus.NOTEBOOK_MAIN_TOOLBAR_EXECUTION_GROUP, {\n            commandId: NotebookCommands.CLEAR_ALL_OUTPUTS_COMMAND.id,\n            label: nls.localizeByDefault('Clear All Outputs'),\n            icon: codicon('clear-all'),\n            order: '30'\n        });\n        // other items\n    }\n\n}\n\nexport namespace NotebookMenus {\n    export const NOTEBOOK_MAIN_TOOLBAR = 'notebook/toolbar';\n    export const NOTEBOOK_MAIN_TOOLBAR_CELL_ADD_GROUP = [NOTEBOOK_MAIN_TOOLBAR, 'cell-add-group'];\n    export const NOTEBOOK_MAIN_TOOLBAR_EXECUTION_GROUP = [NOTEBOOK_MAIN_TOOLBAR, 'cell-execution-group'];\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Command, CommandContribution, CommandRegistry, CompoundMenuNodeRole, MenuContribution, MenuModelRegistry, nls } from '@theia/core';\nimport { codicon } from '@theia/core/lib/browser';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { NotebookModel } from '../view-model/notebook-model';\nimport { NotebookCellModel } from '../view-model/notebook-cell-model';\nimport { NOTEBOOK_CELL_MARKDOWN_EDIT_MODE, NOTEBOOK_CELL_TYPE, NotebookContextKeys, NOTEBOOK_CELL_EXECUTING } from './notebook-context-keys';\nimport { ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nimport { NotebookExecutionService } from '../service/notebook-execution-service';\nimport { NotebookCellOutputModel } from '../view-model/notebook-cell-output-model';\nimport { CellEditType } from '../../common';\n\nexport namespace NotebookCellCommands {\n    /** Parameters: notebookModel: NotebookModel | undefined, cell: NotebookCellModel */\n    export const EDIT_COMMAND = Command.toDefaultLocalizedCommand({\n        id: 'notebook.cell.edit',\n        iconClass: codicon('edit')\n    });\n    /** Parameters: notebookModel: NotebookModel | undefined, cell: NotebookCellModel */\n    export const STOP_EDIT_COMMAND = Command.toDefaultLocalizedCommand({\n        id: 'notebook.cell.stop-edit',\n        iconClass: codicon('check')\n    });\n    /** Parameters: notebookModel: NotebookModel, cell: NotebookCellModel */\n    export const DELETE_COMMAND = Command.toDefaultLocalizedCommand({\n        id: 'notebook.cell.delete',\n        iconClass: codicon('trash')\n    });\n    /** Parameters: notebookModel: NotebookModel, cell: NotebookCellModel */\n    export const SPLIT_CELL_COMMAND = Command.toDefaultLocalizedCommand({\n        id: 'notebook.cell.split-cell',\n        iconClass: codicon('split-vertical'),\n    });\n    /** Parameters: notebookModel: NotebookModel, cell: NotebookCellModel */\n    export const EXECUTE_SINGLE_CELL_COMMAND = Command.toDefaultLocalizedCommand({\n        id: 'notebook.cell.execute-cell',\n        iconClass: codicon('play'),\n    });\n    /** Parameters: notebookModel: NotebookModel, cell: NotebookCellModel */\n    export const STOP_CELL_EXECUTION_COMMAND = Command.toDefaultLocalizedCommand({\n        id: 'notebook.cell.stop-cell-execution',\n        iconClass: codicon('stop'),\n    });\n    /** Parameters: notebookModel: NotebookModel | undefined, cell: NotebookCellModel */\n    export const CLEAR_OUTPUTS_COMMAND = Command.toDefaultLocalizedCommand({\n        id: 'notebook.cell.clear-outputs',\n        label: 'Clear Cell Outputs',\n    });\n    /** Parameters: notebookModel: NotebookModel | undefined, cell: NotebookCellModel | undefined, output: NotebookCellOutputModel */\n    export const CHANGE_OUTPUT_PRESENTATION_COMMAND = Command.toDefaultLocalizedCommand({\n        id: 'notebook.cell.change-presentation',\n        label: 'Change Presentation',\n    });\n}\n\n@injectable()\nexport class NotebookCellActionContribution implements MenuContribution, CommandContribution {\n\n    @inject(ContextKeyService)\n    protected contextKeyService: ContextKeyService;\n\n    @inject(NotebookExecutionService)\n    protected notebookExecutionService: NotebookExecutionService;\n\n    @postConstruct()\n    protected init(): void {\n        NotebookContextKeys.initNotebookContextKeys(this.contextKeyService);\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction(NotebookCellActionContribution.ACTION_MENU, {\n            commandId: NotebookCellCommands.EDIT_COMMAND.id,\n            icon: NotebookCellCommands.EDIT_COMMAND.iconClass,\n            when: `${NOTEBOOK_CELL_TYPE} == 'markdown' && !${NOTEBOOK_CELL_MARKDOWN_EDIT_MODE}`,\n            label: nls.localizeByDefault('Edit Cell'),\n            order: '10'\n        });\n        menus.registerMenuAction(NotebookCellActionContribution.ACTION_MENU, {\n            commandId: NotebookCellCommands.STOP_EDIT_COMMAND.id,\n            icon: NotebookCellCommands.STOP_EDIT_COMMAND.iconClass,\n            when: `${NOTEBOOK_CELL_TYPE} == 'markdown' && ${NOTEBOOK_CELL_MARKDOWN_EDIT_MODE}`,\n            label: nls.localizeByDefault('Stop Editing Cell'),\n            order: '10'\n        });\n        menus.registerMenuAction(NotebookCellActionContribution.ACTION_MENU, {\n            commandId: NotebookCellCommands.EXECUTE_SINGLE_CELL_COMMAND.id,\n            icon: NotebookCellCommands.EXECUTE_SINGLE_CELL_COMMAND.iconClass,\n            when: `${NOTEBOOK_CELL_TYPE} == 'code'`,\n            label: nls.localizeByDefault('Execute Cell'),\n            order: '10'\n        });\n\n        menus.registerMenuAction(NotebookCellActionContribution.ACTION_MENU, {\n            commandId: NotebookCellCommands.SPLIT_CELL_COMMAND.id,\n            icon: NotebookCellCommands.SPLIT_CELL_COMMAND.iconClass,\n            label: nls.localizeByDefault('Split Cell'),\n            order: '20'\n        });\n        menus.registerMenuAction(NotebookCellActionContribution.ACTION_MENU, {\n            commandId: NotebookCellCommands.DELETE_COMMAND.id,\n            icon: NotebookCellCommands.DELETE_COMMAND.iconClass,\n            label: nls.localizeByDefault('Delete Cell'),\n            order: '999'\n        });\n\n        menus.registerSubmenu(\n            NotebookCellActionContribution.ADDITIONAL_ACTION_MENU,\n            nls.localizeByDefault('More'),\n            {\n                icon: codicon('ellipsis'),\n                role: CompoundMenuNodeRole.Submenu,\n                order: '30'\n            }\n        );\n\n        menus.registerIndependentSubmenu(NotebookCellActionContribution.CONTRIBUTED_CELL_ACTION_MENU, '', { role: CompoundMenuNodeRole.Flat });\n        // since contributions are adding to an independent submenu we have to manually add it to the more submenu\n        menus.getMenu(NotebookCellActionContribution.ADDITIONAL_ACTION_MENU).addNode(menus.getMenuNode(NotebookCellActionContribution.CONTRIBUTED_CELL_ACTION_MENU));\n\n        // code cell sidebar menu\n        menus.registerMenuAction(NotebookCellActionContribution.CODE_CELL_SIDEBAR_MENU, {\n            commandId: NotebookCellCommands.EXECUTE_SINGLE_CELL_COMMAND.id,\n            icon: NotebookCellCommands.EXECUTE_SINGLE_CELL_COMMAND.iconClass,\n            label: nls.localizeByDefault('Execute Cell'),\n            when: `!${NOTEBOOK_CELL_EXECUTING}`\n        });\n        menus.registerMenuAction(NotebookCellActionContribution.CODE_CELL_SIDEBAR_MENU, {\n            commandId: NotebookCellCommands.STOP_CELL_EXECUTION_COMMAND.id,\n            icon: NotebookCellCommands.STOP_CELL_EXECUTION_COMMAND.iconClass,\n            label: nls.localizeByDefault('Stop Cell Execution'),\n            when: NOTEBOOK_CELL_EXECUTING\n        });\n\n        // Notebook Cell extra execution options\n        menus.registerIndependentSubmenu(NotebookCellActionContribution.CONTRIBUTED_CELL_EXECUTION_MENU,\n            nls.localizeByDefault('More...'),\n            { role: CompoundMenuNodeRole.Flat, icon: codicon('chevron-down') });\n        menus.getMenu(NotebookCellActionContribution.CODE_CELL_SIDEBAR_MENU).addNode(menus.getMenuNode(NotebookCellActionContribution.CONTRIBUTED_CELL_EXECUTION_MENU));\n\n        // code cell output sidebar menu\n        menus.registerSubmenu(\n            NotebookCellActionContribution.ADDITIONAL_OUTPUT_SIDEBAR_MENU,\n            nls.localizeByDefault('More'),\n            {\n                icon: codicon('ellipsis'),\n                role: CompoundMenuNodeRole.Submenu\n            });\n        menus.registerMenuAction(NotebookCellActionContribution.ADDITIONAL_OUTPUT_SIDEBAR_MENU, {\n            commandId: NotebookCellCommands.CLEAR_OUTPUTS_COMMAND.id,\n            label: nls.localizeByDefault('Clear Cell Outputs'),\n        });\n        menus.registerMenuAction(NotebookCellActionContribution.ADDITIONAL_OUTPUT_SIDEBAR_MENU, {\n            commandId: NotebookCellCommands.CHANGE_OUTPUT_PRESENTATION_COMMAND.id,\n            label: nls.localizeByDefault('Change Presentation'),\n        });\n\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(NotebookCellCommands.EDIT_COMMAND, { execute: (_, cell: NotebookCellModel) => cell.requestEdit() });\n        commands.registerCommand(NotebookCellCommands.STOP_EDIT_COMMAND, { execute: (_, cell: NotebookCellModel) => cell.requestStopEdit() });\n        commands.registerCommand(NotebookCellCommands.DELETE_COMMAND, {\n            execute: (notebookModel: NotebookModel, cell: NotebookCellModel) => notebookModel.applyEdits([{\n                editType: CellEditType.Replace,\n                index: notebookModel.cells.indexOf(cell),\n                count: 1,\n                cells: []\n            }], true)\n        });\n        commands.registerCommand(NotebookCellCommands.SPLIT_CELL_COMMAND);\n\n        commands.registerCommand(NotebookCellCommands.EXECUTE_SINGLE_CELL_COMMAND, {\n            execute: (notebookModel: NotebookModel, cell: NotebookCellModel) => this.notebookExecutionService.executeNotebookCells(notebookModel, [cell])\n        });\n        commands.registerCommand(NotebookCellCommands.STOP_CELL_EXECUTION_COMMAND, {\n            execute: (notebookModel: NotebookModel, cell: NotebookCellModel) => this.notebookExecutionService.cancelNotebookCells(notebookModel, [cell])\n        });\n        commands.registerCommand(NotebookCellCommands.CLEAR_OUTPUTS_COMMAND, {\n            execute: (_, cell: NotebookCellModel) => cell.spliceNotebookCellOutputs({ start: 0, deleteCount: cell.outputs.length, newOutputs: [] })\n        });\n        commands.registerCommand(NotebookCellCommands.CHANGE_OUTPUT_PRESENTATION_COMMAND, {\n            execute: (_, __, output: NotebookCellOutputModel) => output.requestOutputPresentationUpdate()\n        });\n    }\n}\n\nexport namespace NotebookCellActionContribution {\n    export const ACTION_MENU = ['notebook-cell-actions-menu'];\n    export const ADDITIONAL_ACTION_MENU = [...ACTION_MENU, 'more'];\n    export const CONTRIBUTED_CELL_ACTION_MENU = 'notebook/cell/title';\n    export const CONTRIBUTED_CELL_EXECUTION_MENU = 'notebook/cell/execute';\n    export const CODE_CELL_SIDEBAR_MENU = ['code-cell-sidebar-menu'];\n    export const OUTPUT_SIDEBAR_MENU = ['code-cell-output-sidebar-menu'];\n    export const ADDITIONAL_OUTPUT_SIDEBAR_MENU = [...OUTPUT_SIDEBAR_MENU, 'more'];\n\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ContextKeyService } from '@theia/core/lib/browser/context-key-service';\n\nexport type NotebookCellExecutionStateContext = 'idle' | 'pending' | 'executing' | 'succeeded' | 'failed';\n\n/**\n * Context Keys for the Notebook Editor as defined by vscode in https://github.com/microsoft/vscode/blob/main/src/vs/workbench/contrib/notebook/common/notebookContextKeys.ts\n */\nexport const HAS_OPENED_NOTEBOOK = 'userHasOpenedNotebook';\nexport const KEYBINDING_CONTEXT_NOTEBOOK_FIND_WIDGET_FOCUSED = 'notebookFindWidgetFocused';\nexport const NOTEBOOK_EDITOR_FOCUSED = 'notebookEditorFocused';\nexport const NOTEBOOK_CELL_LIST_FOCUSED = 'notebookCellListFocused';\nexport const NOTEBOOK_OUTPUT_FOCUSED = 'notebookOutputFocused';\nexport const NOTEBOOK_EDITOR_EDITABLE = 'notebookEditable';\nexport const NOTEBOOK_HAS_RUNNING_CELL = 'notebookHasRunningCell';\nexport const NOTEBOOK_USE_CONSOLIDATED_OUTPUT_BUTTON = 'notebookUseConsolidatedOutputButton';\nexport const NOTEBOOK_BREAKPOINT_MARGIN_ACTIVE = 'notebookBreakpointMargin';\nexport const NOTEBOOK_CELL_TOOLBAR_LOCATION = 'notebookCellToolbarLocation';\nexport const NOTEBOOK_CURSOR_NAVIGATION_MODE = 'notebookCursorNavigationMode';\nexport const NOTEBOOK_LAST_CELL_FAILED = 'notebookLastCellFailed';\nexport const NOTEBOOK_VIEW_TYPE = 'notebookType';\nexport const NOTEBOOK_CELL_TYPE = 'notebookCellType';\nexport const NOTEBOOK_CELL_EDITABLE = 'notebookCellEditable';\nexport const NOTEBOOK_CELL_FOCUSED = 'notebookCellFocused';\nexport const NOTEBOOK_CELL_EDITOR_FOCUSED = 'notebookCellEditorFocused';\nexport const NOTEBOOK_CELL_MARKDOWN_EDIT_MODE = 'notebookCellMarkdownEditMode';\nexport const NOTEBOOK_CELL_LINE_NUMBERS = 'notebookCellLineNumbers';\nexport const NOTEBOOK_CELL_EXECUTION_STATE = 'notebookCellExecutionState';\nexport const NOTEBOOK_CELL_EXECUTING = 'notebookCellExecuting';\nexport const NOTEBOOK_CELL_HAS_OUTPUTS = 'notebookCellHasOutputs';\nexport const NOTEBOOK_CELL_INPUT_COLLAPSED = 'notebookCellInputIsCollapsed';\nexport const NOTEBOOK_CELL_OUTPUT_COLLAPSED = 'notebookCellOutputIsCollapsed';\nexport const NOTEBOOK_CELL_RESOURCE = 'notebookCellResource';\nexport const NOTEBOOK_KERNEL = 'notebookKernel';\nexport const NOTEBOOK_KERNEL_COUNT = 'notebookKernelCount';\nexport const NOTEBOOK_KERNEL_SOURCE_COUNT = 'notebookKernelSourceCount';\nexport const NOTEBOOK_KERNEL_SELECTED = 'notebookKernelSelected';\nexport const NOTEBOOK_INTERRUPTIBLE_KERNEL = 'notebookInterruptibleKernel';\nexport const NOTEBOOK_MISSING_KERNEL_EXTENSION = 'notebookMissingKernelExtension';\nexport const NOTEBOOK_HAS_OUTPUTS = 'notebookHasOutputs';\n\nexport namespace NotebookContextKeys {\n    export function initNotebookContextKeys(service: ContextKeyService): void {\n        service.createKey(HAS_OPENED_NOTEBOOK, false);\n        service.createKey(KEYBINDING_CONTEXT_NOTEBOOK_FIND_WIDGET_FOCUSED, false);\n\n        // // Is Notebook\n        // export const NOTEBOOK_IS_ACTIVE_EDITOR = ContextKeyExpr.equals('activeEditor', NOTEBOOK_EDITOR_ID);\n        // export const INTERACTIVE_WINDOW_IS_ACTIVE_EDITOR = ContextKeyExpr.equals('activeEditor', INTERACTIVE_WINDOW_EDITOR_ID);\n\n        // Editor keys\n        service.createKey(NOTEBOOK_EDITOR_FOCUSED, false);\n        service.createKey(NOTEBOOK_CELL_LIST_FOCUSED, false);\n        service.createKey(NOTEBOOK_OUTPUT_FOCUSED, false);\n        service.createKey(NOTEBOOK_EDITOR_EDITABLE, true);\n        service.createKey(NOTEBOOK_HAS_RUNNING_CELL, false);\n        service.createKey(NOTEBOOK_USE_CONSOLIDATED_OUTPUT_BUTTON, false);\n        service.createKey(NOTEBOOK_BREAKPOINT_MARGIN_ACTIVE, false);\n        service.createKey(NOTEBOOK_CELL_TOOLBAR_LOCATION, 'left');\n        service.createKey(NOTEBOOK_CURSOR_NAVIGATION_MODE, false);\n        service.createKey(NOTEBOOK_LAST_CELL_FAILED, false);\n\n        // Cell keys\n        service.createKey(NOTEBOOK_VIEW_TYPE, undefined);\n        service.createKey(NOTEBOOK_CELL_TYPE, undefined);\n        service.createKey(NOTEBOOK_CELL_EDITABLE, false);\n        service.createKey(NOTEBOOK_CELL_FOCUSED, false);\n        service.createKey(NOTEBOOK_CELL_EDITOR_FOCUSED, false);\n        service.createKey(NOTEBOOK_CELL_MARKDOWN_EDIT_MODE, false);\n        service.createKey(NOTEBOOK_CELL_LINE_NUMBERS, 'inherit');\n        service.createKey(NOTEBOOK_CELL_EXECUTION_STATE, undefined);\n        service.createKey(NOTEBOOK_CELL_EXECUTING, false);\n        service.createKey(NOTEBOOK_CELL_HAS_OUTPUTS, false);\n        service.createKey(NOTEBOOK_CELL_INPUT_COLLAPSED, false);\n        service.createKey(NOTEBOOK_CELL_OUTPUT_COLLAPSED, false);\n        service.createKey(NOTEBOOK_CELL_RESOURCE, '');\n\n        // Kernels\n        service.createKey(NOTEBOOK_KERNEL, undefined);\n        service.createKey(NOTEBOOK_KERNEL_COUNT, 0);\n        service.createKey(NOTEBOOK_KERNEL_SOURCE_COUNT, 0);\n        service.createKey(NOTEBOOK_KERNEL_SELECTED, false);\n        service.createKey(NOTEBOOK_INTERRUPTIBLE_KERNEL, false);\n        service.createKey(NOTEBOOK_MISSING_KERNEL_EXTENSION, false);\n        service.createKey(NOTEBOOK_HAS_OUTPUTS, false);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as React from '@theia/core/shared/react';\nimport { CommandRegistry, MenuModelRegistry, URI } from '@theia/core';\nimport { ReactWidget, Navigatable, SaveableSource, Message, DelegatingSaveable } from '@theia/core/lib/browser';\nimport { ReactNode } from '@theia/core/shared/react';\nimport { CellKind } from '../common';\nimport { CellRenderer as CellRenderer, NotebookCellListView } from './view/notebook-cell-list-view';\nimport { NotebookCodeCellRenderer } from './view/notebook-code-cell-view';\nimport { NotebookMarkdownCellRenderer } from './view/notebook-markdown-cell-view';\nimport { NotebookModel } from './view-model/notebook-model';\nimport { NotebookCellToolbarFactory } from './view/notebook-cell-toolbar-factory';\nimport { inject, injectable, interfaces, postConstruct } from '@theia/core/shared/inversify';\nimport { Emitter } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { NotebookEditorWidgetService } from './service/notebook-editor-widget-service';\nimport { NotebookMainToolbarRenderer } from './view/notebook-main-toolbar';\n\nexport const NotebookEditorWidgetContainerFactory = Symbol('NotebookEditorWidgetContainerFactory');\n\nexport function createNotebookEditorWidgetContainer(parent: interfaces.Container, props: NotebookEditorProps): interfaces.Container {\n    const child = parent.createChild();\n\n    child.bind(NotebookEditorProps).toConstantValue(props);\n    child.bind(NotebookEditorWidget).toSelf();\n\n    return child;\n}\n\nconst NotebookEditorProps = Symbol('NotebookEditorProps');\n\nexport interface NotebookEditorProps {\n    uri: URI,\n    readonly notebookType: string,\n    notebookData: Promise<NotebookModel>\n}\nexport const NOTEBOOK_EDITOR_ID_PREFIX = 'notebook:';\n\n@injectable()\nexport class NotebookEditorWidget extends ReactWidget implements Navigatable, SaveableSource {\n    static readonly ID = 'notebook';\n\n    readonly saveable = new DelegatingSaveable();\n\n    @inject(NotebookCellToolbarFactory)\n    protected readonly cellToolbarFactory: NotebookCellToolbarFactory;\n\n    @inject(CommandRegistry)\n    protected commandRegistry: CommandRegistry;\n\n    @inject(MenuModelRegistry)\n    protected menuRegistry: MenuModelRegistry;\n\n    @inject(NotebookEditorWidgetService)\n    protected notebookEditorService: NotebookEditorWidgetService;\n\n    @inject(NotebookMainToolbarRenderer)\n    protected notebookMainToolbarRenderer: NotebookMainToolbarRenderer;\n\n    @inject(NotebookCodeCellRenderer)\n    protected codeCellRenderer: NotebookCodeCellRenderer;\n    @inject(NotebookMarkdownCellRenderer)\n    protected markdownCellRenderer: NotebookMarkdownCellRenderer;\n    @inject(NotebookEditorProps)\n    protected readonly props: NotebookEditorProps;\n\n    protected readonly onDidChangeModelEmitter = new Emitter<void>();\n    readonly onDidChangeModel = this.onDidChangeModelEmitter.event;\n\n    protected readonly renderers = new Map<CellKind, CellRenderer>();\n    protected _model?: NotebookModel;\n\n    get notebookType(): string {\n        return this.props.notebookType;\n    }\n\n    get model(): NotebookModel | undefined {\n        return this._model;\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.id = NOTEBOOK_EDITOR_ID_PREFIX + this.props.uri.toString();\n        this.node.tabIndex = -1;\n\n        this.title.closable = true;\n        this.update();\n\n        this.toDispose.push(this.onDidChangeModelEmitter);\n\n        this.renderers.set(CellKind.Markup, this.markdownCellRenderer);\n        this.renderers.set(CellKind.Code, this.codeCellRenderer);\n        this.waitForData();\n\n    }\n\n    protected async waitForData(): Promise<void> {\n        this._model = await this.props.notebookData;\n        this.saveable.delegate = this._model;\n        this.toDispose.push(this._model);\n        // Ensure that the model is loaded before adding the editor\n        this.notebookEditorService.addNotebookEditor(this);\n        this.update();\n    }\n\n    protected override onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.node.focus();\n    }\n\n    getResourceUri(): URI | undefined {\n        return this.props.uri;\n    }\n\n    createMoveToUri(resourceUri: URI): URI | undefined {\n        return this.props.uri;\n    }\n\n    undo(): void {\n        this.model?.undo();\n    }\n\n    redo(): void {\n        this.model?.redo();\n    }\n\n    protected render(): ReactNode {\n        if (this._model) {\n            return <div>\n                {this.notebookMainToolbarRenderer.render(this._model)}\n                <NotebookCellListView renderers={this.renderers}\n                    notebookModel={this._model}\n                    toolbarRenderer={this.cellToolbarFactory}\n                    commandRegistry={this.commandRegistry} />\n            </div>;\n        } else {\n            return <div></div>;\n        }\n    }\n\n    protected override onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n    }\n\n    protected override onAfterDetach(msg: Message): void {\n        super.onAfterDetach(msg);\n        this.notebookEditorService.removeNotebookEditor(this);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, Path } from '@theia/core';\nimport { injectable } from '@theia/core/shared/inversify';\nimport { NotebookRendererDescriptor } from '../common/notebook-protocol';\n\nexport interface NotebookRendererInfo {\n    readonly id: string;\n    readonly displayName: string;\n    readonly mimeTypes: string[];\n    readonly entrypoint: { readonly extends?: string; readonly uri: string };\n    readonly requiresMessaging: boolean;\n}\n\n@injectable()\nexport class NotebookRendererRegistry {\n\n    private readonly _notebookRenderers: NotebookRendererInfo[] = [];\n\n    get notebookRenderers(): readonly NotebookRendererInfo[] {\n        return this._notebookRenderers;\n    }\n\n    registerNotebookRenderer(type: NotebookRendererDescriptor, basePath: string): Disposable {\n        let entrypoint;\n        if (typeof type.entrypoint === 'string') {\n            entrypoint = {\n                uri: new Path(basePath).join(type.entrypoint).toString()\n            };\n        } else {\n            entrypoint = {\n                uri: new Path(basePath).join(type.entrypoint.path).toString(),\n                extends: type.entrypoint.extends\n            };\n        }\n\n        this._notebookRenderers.push({\n            ...type,\n            mimeTypes: type.mimeTypes || [],\n            requiresMessaging: type.requiresMessaging === 'always' || type.requiresMessaging === 'optional',\n            entrypoint\n        });\n        return Disposable.create(() => {\n            this._notebookRenderers.splice(this._notebookRenderers.findIndex(renderer => renderer.id === type.id), 1);\n        });\n    }\n}\n\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { Disposable } from '@theia/core';\nimport { injectable } from '@theia/core/shared/inversify';\nimport { NotebookTypeDescriptor } from '../common/notebook-protocol';\n\n@injectable()\nexport class NotebookTypeRegistry {\n    private readonly _notebookTypes: NotebookTypeDescriptor[] = [];\n\n    get notebookTypes(): readonly NotebookTypeDescriptor[] {\n        return this._notebookTypes;\n    }\n\n    registerNotebookType(type: NotebookTypeDescriptor): Disposable {\n        this._notebookTypes.push(type);\n        return Disposable.create(() => {\n            this._notebookTypes.splice(this._notebookTypes.indexOf(type), 1);\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Disposable } from '@theia/core';\nimport { NotebookCellModel } from '../view-model/notebook-cell-model';\n\nexport const CellOutputWebviewFactory = Symbol('outputWebviewFactory');\n\nexport type CellOutputWebviewFactory = (cell: NotebookCellModel) => Promise<CellOutputWebview>;\n\nexport interface CellOutputWebview extends Disposable {\n\n    readonly id: string;\n\n    render(): React.ReactNode;\n\n    attachWebview(): void;\n    isAttached(): boolean\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, DisposableCollection, Emitter } from '@theia/core';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { ApplicationShell } from '@theia/core/lib/browser';\nimport { NotebookEditorWidget } from '../notebook-editor-widget';\n\n@injectable()\nexport class NotebookEditorWidgetService implements Disposable {\n\n    @inject(ApplicationShell)\n    protected applicationShell: ApplicationShell;\n\n    private readonly notebookEditors = new Map<string, NotebookEditorWidget>();\n\n    private readonly onNotebookEditorAddEmitter = new Emitter<NotebookEditorWidget>();\n    private readonly onNotebookEditorRemoveEmitter = new Emitter<NotebookEditorWidget>();\n    readonly onDidAddNotebookEditor = this.onNotebookEditorAddEmitter.event;\n    readonly onDidRemoveNotebookEditor = this.onNotebookEditorRemoveEmitter.event;\n\n    private readonly onDidChangeFocusedEditorEmitter = new Emitter<NotebookEditorWidget | undefined>();\n    readonly onDidChangeFocusedEditor = this.onDidChangeFocusedEditorEmitter.event;\n\n    private readonly toDispose = new DisposableCollection();\n\n    focusedEditor?: NotebookEditorWidget = undefined;\n\n    @postConstruct()\n    protected init(): void {\n        this.toDispose.push(this.applicationShell.onDidChangeActiveWidget(event => {\n            if (event.newValue instanceof NotebookEditorWidget && event.newValue !== this.focusedEditor) {\n                this.focusedEditor = event.newValue;\n                this.onDidChangeFocusedEditorEmitter.fire(this.focusedEditor);\n            } else {\n                this.onDidChangeFocusedEditorEmitter.fire(undefined);\n            }\n        }));\n    }\n\n    dispose(): void {\n        this.onNotebookEditorAddEmitter.dispose();\n        this.onNotebookEditorRemoveEmitter.dispose();\n        this.onDidChangeFocusedEditorEmitter.dispose();\n        this.toDispose.dispose();\n    }\n\n    // --- editor management\n\n    addNotebookEditor(editor: NotebookEditorWidget): void {\n        if (this.notebookEditors.has(editor.id)) {\n            console.warn('Attempting to add duplicated notebook editor: ' + editor.id);\n        }\n        this.notebookEditors.set(editor.id, editor);\n        this.onNotebookEditorAddEmitter.fire(editor);\n    }\n\n    removeNotebookEditor(editor: NotebookEditorWidget): void {\n        if (this.notebookEditors.has(editor.id)) {\n            this.notebookEditors.delete(editor.id);\n            this.onNotebookEditorRemoveEmitter.fire(editor);\n        } else {\n            console.warn('Attempting to remove not registered editor: ' + editor.id);\n        }\n    }\n\n    getNotebookEditor(editorId: string): NotebookEditorWidget | undefined {\n        return this.notebookEditors.get(editorId);\n    }\n\n    listNotebookEditors(): readonly NotebookEditorWidget[] {\n        return [...this.notebookEditors].map(e => e[1]);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { CellExecution, NotebookExecutionStateService } from '../service/notebook-execution-state-service';\nimport { CellKind, NotebookCellExecutionState } from '../../common';\nimport { NotebookCellModel } from '../view-model/notebook-cell-model';\nimport { NotebookModel } from '../view-model/notebook-model';\nimport { NotebookKernelService, NotebookKernel } from './notebook-kernel-service';\nimport { CommandService, Disposable } from '@theia/core';\nimport { NotebookKernelQuickPickService, NotebookKernelQuickPickServiceImpl } from './notebook-kernel-quick-pick-service';\nimport { NotebookKernelHistoryService } from './notebook-kernel-history-service';\nimport { NotebookCommands } from '../contributions/notebook-actions-contribution';\n\nexport interface CellExecutionParticipant {\n    onWillExecuteCell(executions: CellExecution[]): Promise<void>;\n}\n\n@injectable()\nexport class NotebookExecutionService {\n\n    @inject(NotebookExecutionStateService)\n    protected notebookExecutionStateService: NotebookExecutionStateService;\n\n    @inject(NotebookKernelService)\n    protected notebookKernelService: NotebookKernelService;\n\n    @inject(NotebookKernelHistoryService)\n    protected notebookKernelHistoryService: NotebookKernelHistoryService;\n\n    @inject(CommandService)\n    protected commandService: CommandService;\n\n    @inject(NotebookKernelQuickPickService)\n    protected notebookKernelQuickPickService: NotebookKernelQuickPickServiceImpl;\n\n    private readonly cellExecutionParticipants = new Set<CellExecutionParticipant>();\n\n    async executeNotebookCells(notebook: NotebookModel, cells: Iterable<NotebookCellModel>): Promise<void> {\n        const cellsArr = Array.from(cells)\n            .filter(c => c.cellKind === CellKind.Code);\n        if (!cellsArr.length) {\n            return;\n        }\n\n        // create cell executions\n        const cellExecutions: [NotebookCellModel, CellExecution][] = [];\n        for (const cell of cellsArr) {\n            const cellExe = this.notebookExecutionStateService.getCellExecution(cell.uri);\n            if (!cellExe) {\n                cellExecutions.push([cell, this.notebookExecutionStateService.getOrCreateCellExecution(notebook.uri, cell.handle)]);\n            }\n        }\n\n        const kernel = await this.resolveKernel(notebook);\n\n        if (!kernel) {\n            // clear all pending cell executions\n            cellExecutions.forEach(cellExe => cellExe[1].complete({}));\n            return;\n        }\n\n        // filter cell executions based on selected kernel\n        const validCellExecutions: CellExecution[] = [];\n        for (const [cell, cellExecution] of cellExecutions) {\n            if (!kernel.supportedLanguages.includes(cell.language)) {\n                cellExecution.complete({});\n            } else {\n                validCellExecutions.push(cellExecution);\n            }\n        }\n\n        // request execution\n        if (validCellExecutions.length > 0) {\n            await this.runExecutionParticipants(validCellExecutions);\n\n            this.notebookKernelService.selectKernelForNotebook(kernel, notebook);\n            await kernel.executeNotebookCellsRequest(notebook.uri, validCellExecutions.map(c => c.cellHandle));\n            // the connecting state can change before the kernel resolves executeNotebookCellsRequest\n            const unconfirmed = validCellExecutions.filter(exe => exe.state === NotebookCellExecutionState.Unconfirmed);\n            if (unconfirmed.length) {\n                unconfirmed.forEach(exe => exe.complete({}));\n            }\n        }\n    }\n\n    registerExecutionParticipant(participant: CellExecutionParticipant): Disposable {\n        this.cellExecutionParticipants.add(participant);\n        return Disposable.create(() => this.cellExecutionParticipants.delete(participant));\n    }\n\n    private async runExecutionParticipants(executions: CellExecution[]): Promise<void> {\n        for (const participant of this.cellExecutionParticipants) {\n            await participant.onWillExecuteCell(executions);\n        }\n        return;\n    }\n\n    async cancelNotebookCellHandles(notebook: NotebookModel, cells: Iterable<number>): Promise<void> {\n        const cellsArr = Array.from(cells);\n        const kernel = this.notebookKernelService.getSelectedOrSuggestedKernel(notebook);\n        if (kernel) {\n            await kernel.cancelNotebookCellExecution(notebook.uri, cellsArr);\n        }\n    }\n\n    async cancelNotebookCells(notebook: NotebookModel, cells: Iterable<NotebookCellModel>): Promise<void> {\n        this.cancelNotebookCellHandles(notebook, Array.from(cells, cell => cell.handle));\n    }\n\n    async resolveKernel(notebook: NotebookModel): Promise<NotebookKernel | undefined> {\n        const alreadySelected = this.notebookKernelHistoryService.getKernels(notebook);\n\n        if (alreadySelected.selected) {\n            return alreadySelected.selected;\n        }\n\n        await this.commandService.executeCommand(NotebookCommands.SELECT_KERNEL_COMMAND.id, notebook);\n        const { selected } = this.notebookKernelHistoryService.getKernels(notebook);\n        return selected;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, DisposableCollection, Emitter, URI } from '@theia/core';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { NotebookService } from './notebook-service';\nimport {\n    CellEditType, CellExecuteOutputEdit, CellExecuteOutputItemEdit, CellExecutionUpdateType,\n    CellUri, CellPartialInternalMetadataEditByHandle, NotebookCellExecutionState, CellEditOperation, NotebookCellInternalMetadata\n} from '../../common';\nimport { NotebookModel } from '../view-model/notebook-model';\nimport { v4 } from 'uuid';\n\nexport type CellExecuteUpdate = CellExecuteOutputEdit | CellExecuteOutputItemEdit | CellExecutionStateUpdate;\n\nexport interface CellExecutionComplete {\n    runEndTime?: number;\n    lastRunSuccess?: boolean;\n}\n\nexport interface CellExecutionStateUpdate {\n    editType: CellExecutionUpdateType.ExecutionState;\n    executionOrder?: number;\n    runStartTime?: number;\n    didPause?: boolean;\n    isPaused?: boolean;\n}\n\nexport interface ICellExecutionComplete {\n    runEndTime?: number;\n    lastRunSuccess?: boolean;\n}\nexport enum NotebookExecutionType {\n    cell,\n    notebook\n}\n\nexport interface NotebookFailStateChangedEvent {\n    visible: boolean;\n    notebook: URI;\n}\n\nexport interface FailedCellInfo {\n    cellHandle: number;\n    disposable: Disposable;\n    visible: boolean;\n}\n\n@injectable()\nexport class NotebookExecutionStateService implements Disposable {\n\n    @inject(NotebookService)\n    protected notebookService: NotebookService;\n\n    protected toDispose: DisposableCollection = new DisposableCollection();\n\n    protected readonly executions = new Map<string, Map<number, CellExecution>>();\n\n    private readonly onDidChangeExecutionEmitter = new Emitter<CellExecutionStateChangedEvent>();\n    onDidChangeExecution = this.onDidChangeExecutionEmitter.event;\n\n    private readonly onDidChangeLastRunFailStateEmitter = new Emitter<NotebookFailStateChangedEvent>();\n    onDidChangeLastRunFailState = this.onDidChangeLastRunFailStateEmitter.event;\n\n    getOrCreateCellExecution(notebookUri: URI, cellHandle: number): CellExecution {\n        const notebook = this.notebookService.getNotebookEditorModel(notebookUri);\n\n        if (!notebook) {\n            throw new Error(`Notebook not found: ${notebookUri.toString()}`);\n        }\n\n        let execution = this.executions.get(notebookUri.toString())?.get(cellHandle);\n\n        if (!execution) {\n            execution = this.createNotebookCellExecution(notebook, cellHandle);\n            if (!this.executions.has(notebookUri.toString())) {\n                this.executions.set(notebookUri.toString(), new Map());\n            }\n            this.executions.get(notebookUri.toString())?.set(cellHandle, execution);\n            execution.initialize();\n            this.onDidChangeExecutionEmitter.fire(new CellExecutionStateChangedEvent(notebookUri, cellHandle, execution));\n        }\n\n        return execution;\n\n    }\n\n    private createNotebookCellExecution(notebook: NotebookModel, cellHandle: number): CellExecution {\n        const notebookUri = notebook.uri;\n        const execution = new CellExecution(cellHandle, notebook);\n        execution.toDispose.push(execution.onDidUpdate(() => this.onDidChangeExecutionEmitter.fire(new CellExecutionStateChangedEvent(notebookUri, cellHandle, execution))));\n        execution.toDispose.push(execution.onDidComplete(lastRunSuccess => this.onCellExecutionDidComplete(notebookUri, cellHandle, execution, lastRunSuccess)));\n\n        return execution;\n    }\n\n    private onCellExecutionDidComplete(notebookUri: URI, cellHandle: number, exe: CellExecution, lastRunSuccess?: boolean): void {\n        const notebookExecutions = this.executions.get(notebookUri.toString())?.get(cellHandle);\n        if (!notebookExecutions) {\n            throw new Error('Notebook Cell Execution not found while trying to complete it');\n        }\n\n        exe.dispose();\n        this.executions.get(notebookUri.toString())?.delete(cellHandle);\n\n        this.onDidChangeExecutionEmitter.fire(new CellExecutionStateChangedEvent(notebookUri, cellHandle));\n    }\n\n    getCellExecution(cellUri: URI): CellExecution | undefined {\n        const parsed = CellUri.parse(cellUri);\n        if (!parsed) {\n            throw new Error(`Not a cell URI: ${cellUri}`);\n        }\n\n        return this.executions.get(parsed.notebook.toString())?.get(parsed.handle);\n    }\n\n    dispose(): void {\n        this.onDidChangeExecutionEmitter.dispose();\n        this.onDidChangeLastRunFailStateEmitter.dispose();\n\n        this.executions.forEach(notebookExecutions => notebookExecutions.forEach(execution => execution.dispose()));\n    }\n\n}\n\nexport class CellExecution implements Disposable {\n    private readonly onDidUpdateEmitter = new Emitter<void>();\n    readonly onDidUpdate = this.onDidUpdateEmitter.event;\n\n    private readonly onDidCompleteEmitter = new Emitter<boolean | undefined>();\n    readonly onDidComplete = this.onDidCompleteEmitter.event;\n\n    toDispose = new DisposableCollection();\n\n    private _state: NotebookCellExecutionState = NotebookCellExecutionState.Unconfirmed;\n    get state(): NotebookCellExecutionState {\n        return this._state;\n    }\n\n    get notebookURI(): URI {\n        return this.notebook.uri;\n    }\n\n    private _didPause = false;\n    get didPause(): boolean {\n        return this._didPause;\n    }\n\n    private _isPaused = false;\n    get isPaused(): boolean {\n        return this._isPaused;\n    }\n\n    constructor(\n        readonly cellHandle: number,\n        private readonly notebook: NotebookModel,\n    ) {\n        console.debug(`CellExecution#ctor ${this.getCellLog()}`);\n    }\n\n    initialize(): void {\n        const startExecuteEdit: CellPartialInternalMetadataEditByHandle = {\n            editType: CellEditType.PartialInternalMetadata,\n            handle: this.cellHandle,\n            internalMetadata: {\n                executionId: v4(),\n                runStartTime: undefined,\n                runEndTime: undefined,\n                lastRunSuccess: undefined,\n                executionOrder: undefined,\n                renderDuration: undefined,\n            }\n        };\n        this.applyCellExecutionEditsToNotebook([startExecuteEdit]);\n    }\n\n    private getCellLog(): string {\n        return `${this.notebookURI.toString()}, ${this.cellHandle}`;\n    }\n\n    confirm(): void {\n        this._state = NotebookCellExecutionState.Pending;\n        this.onDidUpdateEmitter.fire();\n    }\n\n    update(updates: CellExecuteUpdate[]): void {\n        if (updates.some(u => u.editType === CellExecutionUpdateType.ExecutionState)) {\n            this._state = NotebookCellExecutionState.Executing;\n        }\n\n        if (!this._didPause && updates.some(u => u.editType === CellExecutionUpdateType.ExecutionState && u.didPause)) {\n            this._didPause = true;\n        }\n\n        const lastIsPausedUpdate = [...updates].reverse().find(u => u.editType === CellExecutionUpdateType.ExecutionState && typeof u.isPaused === 'boolean');\n        if (lastIsPausedUpdate) {\n            this._isPaused = (lastIsPausedUpdate as CellExecutionStateUpdate).isPaused!;\n        }\n\n        const cellModel = this.notebook.cells.find(c => c.handle === this.cellHandle);\n        if (!cellModel) {\n            console.debug(`CellExecution#update, updating cell not in notebook: ${this.notebook.uri.toString()}, ${this.cellHandle}`);\n        } else {\n            const edits = updates.map(update => updateToEdit(update, this.cellHandle));\n            this.applyCellExecutionEditsToNotebook(edits);\n        }\n\n        if (updates.some(u => u.editType === CellExecutionUpdateType.ExecutionState)) {\n            this.onDidUpdateEmitter.fire();\n        }\n\n    }\n\n    complete(completionData: CellExecutionComplete): void {\n        const cellModel = this.notebook.cells.find(c => c.handle === this.cellHandle);\n        if (!cellModel) {\n            console.debug(`CellExecution#complete, completing cell not in notebook: ${this.notebook.uri.toString()}, ${this.cellHandle}`);\n        } else {\n            const edit: CellEditOperation = {\n                editType: CellEditType.PartialInternalMetadata,\n                handle: this.cellHandle,\n                internalMetadata: {\n                    lastRunSuccess: completionData.lastRunSuccess,\n                    // eslint-disable-next-line no-null/no-null\n                    runStartTime: this._didPause ? null : cellModel.internalMetadata.runStartTime,\n                    // eslint-disable-next-line no-null/no-null\n                    runEndTime: this._didPause ? null : completionData.runEndTime,\n                }\n            };\n            this.applyCellExecutionEditsToNotebook([edit]);\n        }\n\n        this.onDidCompleteEmitter.fire(completionData.lastRunSuccess);\n\n    }\n\n    dispose(): void {\n        this.onDidUpdateEmitter.dispose();\n        this.onDidCompleteEmitter.dispose();\n        this.toDispose.dispose();\n    }\n\n    private applyCellExecutionEditsToNotebook(edits: CellEditOperation[]): void {\n        this.notebook.applyEdits(edits, false);\n    }\n}\n\nexport class CellExecutionStateChangedEvent {\n    readonly type = NotebookExecutionType.cell;\n    constructor(\n        readonly notebook: URI,\n        readonly cellHandle: number,\n        readonly changed?: CellExecution\n    ) { }\n\n    affectsCell(cell: URI): boolean {\n        const parsedUri = CellUri.parse(cell);\n        return !!parsedUri && this.notebook.isEqual(parsedUri.notebook) && this.cellHandle === parsedUri.handle;\n    }\n\n    affectsNotebook(notebook: URI): boolean {\n        return this.notebook.toString() === notebook.toString();\n    }\n}\n\nexport function updateToEdit(update: CellExecuteUpdate, cellHandle: number): CellEditOperation {\n    if (update.editType === CellExecutionUpdateType.Output) {\n        return {\n            editType: CellEditType.Output,\n            handle: update.cellHandle,\n            append: update.append,\n            outputs: update.outputs,\n        };\n    } else if (update.editType === CellExecutionUpdateType.OutputItems) {\n        return {\n            editType: CellEditType.OutputItems,\n            items: update.items,\n            outputId: update.outputId,\n            append: update.append,\n        };\n    } else if (update.editType === CellExecutionUpdateType.ExecutionState) {\n        const newInternalMetadata: Partial<NotebookCellInternalMetadata> = {};\n        if (typeof update.executionOrder !== 'undefined') {\n            newInternalMetadata.executionOrder = update.executionOrder;\n        }\n        if (typeof update.runStartTime !== 'undefined') {\n            newInternalMetadata.runStartTime = update.runStartTime;\n        }\n        return {\n            editType: CellEditType.PartialInternalMetadata,\n            handle: cellHandle,\n            internalMetadata: newInternalMetadata\n        };\n    }\n\n    throw new Error('Unknown cell update type');\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { StorageService } from '@theia/core/lib/browser';\nimport { NotebookKernel, NotebookTextModelLike, NotebookKernelService } from './notebook-kernel-service';\nimport { Disposable } from '@theia/core';\n\ninterface KernelsList {\n    [viewType: string]: string[];\n}\n\ninterface MostRecentKernelsResult {\n    selected?: NotebookKernel,\n    all: NotebookKernel[]\n}\n\nconst MAX_KERNELS_IN_HISTORY = 5;\n\n@injectable()\nexport class NotebookKernelHistoryService implements Disposable {\n\n    @inject(StorageService)\n    protected storageService: StorageService;\n\n    @inject(NotebookKernelService)\n    protected notebookKernelService: NotebookKernelService;\n\n    declare serviceBrand: undefined;\n\n    private static STORAGE_KEY = 'notebook.kernelHistory';\n    private mostRecentKernelsMap: KernelsList = {};\n\n    @postConstruct()\n    protected init(): void {\n        this.loadState();\n    }\n\n    getKernels(notebook: NotebookTextModelLike): MostRecentKernelsResult {\n        const allAvailableKernels = this.notebookKernelService.getMatchingKernel(notebook);\n        const allKernels = allAvailableKernels.all;\n        const selectedKernel = allAvailableKernels.selected;\n        // We will suggest the only kernel\n        const suggested = allAvailableKernels.all.length === 1 ? allAvailableKernels.all[0] : undefined;\n        const mostRecentKernelIds = this.mostRecentKernelsMap[notebook.viewType] ? this.mostRecentKernelsMap[notebook.viewType].map(kernel => kernel[1]) : [];\n        const all = mostRecentKernelIds.map(kernelId => allKernels.find(kernel => kernel.id === kernelId)).filter(kernel => !!kernel) as NotebookKernel[];\n\n        return {\n            selected: selectedKernel ?? suggested,\n            all\n        };\n    }\n\n    addMostRecentKernel(kernel: NotebookKernel): void {\n        const viewType = kernel.viewType;\n        const recentKernels = this.mostRecentKernelsMap[viewType] ?? [kernel.id];\n\n        if (recentKernels.length > MAX_KERNELS_IN_HISTORY) {\n            recentKernels.splice(MAX_KERNELS_IN_HISTORY);\n        }\n\n        this.mostRecentKernelsMap[viewType] = recentKernels;\n        this.saveState();\n    }\n\n    private saveState(): void {\n        let notEmpty = false;\n        for (const [_, kernels] of Object.entries(this.mostRecentKernelsMap)) {\n            notEmpty = notEmpty || Object.entries(kernels).length > 0;\n        }\n\n        this.storageService.setData(NotebookKernelHistoryService.STORAGE_KEY, notEmpty ? this.mostRecentKernelsMap : undefined);\n    }\n\n    private async loadState(): Promise<void> {\n        const kernelMap = await this.storageService.getData(NotebookKernelHistoryService.STORAGE_KEY);\n        if (kernelMap) {\n            this.mostRecentKernelsMap = kernelMap as KernelsList;\n        } else {\n            this.mostRecentKernelsMap = {};\n        }\n    }\n\n    clear(): void {\n        this.mostRecentKernelsMap = {};\n        this.saveState();\n    }\n\n    dispose(): void {\n\n    }\n}\n","\n// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ArrayUtils, Command, CommandService, DisposableCollection, Event, nls, QuickInputButton, QuickInputService, QuickPickInput, QuickPickItem, URI, } from '@theia/core';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { NotebookKernelService, NotebookKernel, NotebookKernelMatchResult, SourceCommand } from './notebook-kernel-service';\nimport { NotebookModel } from '../view-model/notebook-model';\nimport { NotebookEditorWidget } from '../notebook-editor-widget';\nimport { codicon, OpenerService } from '@theia/core/lib/browser';\nimport { NotebookKernelHistoryService } from './notebook-kernel-history-service';\nimport debounce = require('@theia/core/shared/lodash.debounce');\n\nexport const JUPYTER_EXTENSION_ID = 'ms-toolsai.jupyter';\n\nexport const NotebookKernelQuickPickService = Symbol('NotebookKernelQuickPickService');\n\ntype KernelPick = QuickPickItem & { kernel: NotebookKernel };\nfunction isKernelPick(item: QuickPickInput<QuickPickItem>): item is KernelPick {\n    return 'kernel' in item;\n}\ntype GroupedKernelsPick = QuickPickItem & { kernels: NotebookKernel[]; source: string };\nfunction isGroupedKernelsPick(item: QuickPickInput<QuickPickItem>): item is GroupedKernelsPick {\n    return 'kernels' in item;\n}\ntype SourcePick = QuickPickItem & { action: SourceCommand };\nfunction isSourcePick(item: QuickPickInput<QuickPickItem>): item is SourcePick {\n    return 'action' in item;\n}\ntype InstallExtensionPick = QuickPickItem & { extensionIds: string[] };\n\ntype KernelSourceQuickPickItem = QuickPickItem & { command: Command; documentation?: string };\nfunction isKernelSourceQuickPickItem(item: QuickPickItem): item is KernelSourceQuickPickItem {\n    return 'command' in item;\n}\n\nfunction supportAutoRun(item: QuickPickInput<KernelQuickPickItem>): item is QuickPickItem {\n    return 'autoRun' in item && !!item.autoRun;\n}\n\ntype KernelQuickPickItem = (QuickPickItem & { autoRun?: boolean }) | InstallExtensionPick | KernelPick | GroupedKernelsPick | SourcePick | KernelSourceQuickPickItem;\n\nconst KERNEL_PICKER_UPDATE_DEBOUNCE = 200;\n\nexport type KernelQuickPickContext =\n    { id: string; extension: string } |\n    { notebookEditorId: string } |\n    { id: string; extension: string; notebookEditorId: string } |\n    { ui?: boolean; notebookEditor?: NotebookEditorWidget };\n\nfunction toKernelQuickPick(kernel: NotebookKernel, selected: NotebookKernel | undefined): KernelPick {\n    const res: KernelPick = {\n        kernel,\n        label: kernel.label,\n        description: kernel.description,\n        detail: kernel.detail\n    };\n    if (kernel.id === selected?.id) {\n        if (!res.description) {\n            res.description = nls.localizeByDefault('Currently Selected');\n        } else {\n            res.description = nls.localizeByDefault('{0} - Currently Selected', res.description);\n        }\n    }\n    return res;\n}\n\n@injectable()\nexport abstract class NotebookKernelQuickPickServiceImpl {\n\n    @inject(NotebookKernelService)\n    protected readonly notebookKernelService: NotebookKernelService;\n    @inject(QuickInputService)\n    protected readonly quickInputService: QuickInputService;\n    @inject(CommandService)\n    protected readonly commandService: CommandService;\n\n    async showQuickPick(editor: NotebookModel, wantedId?: string, skipAutoRun?: boolean): Promise<boolean> {\n        const notebook = editor;\n        const matchResult = this.getMatchingResult(notebook);\n        const { selected, all } = matchResult;\n\n        let newKernel: NotebookKernel | undefined;\n        if (wantedId) {\n            for (const candidate of all) {\n                if (candidate.id === wantedId) {\n                    newKernel = candidate;\n                    break;\n                }\n            }\n            if (!newKernel) {\n                console.warn(`wanted kernel DOES NOT EXIST, wanted: ${wantedId}, all: ${all.map(k => k.id)}`);\n                return false;\n            }\n        }\n\n        if (newKernel) {\n            this.selectKernel(notebook, newKernel);\n            return true;\n        }\n\n        const quickPick = this.quickInputService.createQuickPick<KernelQuickPickItem>();\n        const quickPickItems = this.getKernelPickerQuickPickItems(matchResult);\n\n        if (quickPickItems.length === 1 && supportAutoRun(quickPickItems[0]) && !skipAutoRun) {\n            return this.handleQuickPick(editor, quickPickItems[0], quickPickItems as KernelQuickPickItem[]);\n        }\n\n        quickPick.items = quickPickItems;\n        quickPick.canSelectMany = false;\n        quickPick.placeholder = selected\n            ? nls.localizeByDefault(\"Change kernel for '{0}'\", 'current') // TODO get label for current notebook from a label provider\n            : nls.localizeByDefault(\"Select kernel for '{0}'\", 'current');\n\n        quickPick.busy = this.notebookKernelService.getKernelDetectionTasks(notebook).length > 0;\n\n        const kernelDetectionTaskListener = this.notebookKernelService.onDidChangeKernelDetectionTasks(() => {\n            quickPick.busy = this.notebookKernelService.getKernelDetectionTasks(notebook).length > 0;\n        });\n\n        const kernelChangeEventListener = debounce(\n            Event.any(\n                this.notebookKernelService.onDidChangeSourceActions,\n                this.notebookKernelService.onDidAddKernel,\n                this.notebookKernelService.onDidRemoveKernel,\n                this.notebookKernelService.onDidChangeNotebookAffinity\n            ),\n            KERNEL_PICKER_UPDATE_DEBOUNCE\n        )(async () => {\n            // reset quick pick progress\n            quickPick.busy = false;\n\n            const currentActiveItems = quickPick.activeItems;\n            const newMatchResult = this.getMatchingResult(notebook);\n            const newQuickPickItems = this.getKernelPickerQuickPickItems(newMatchResult);\n            quickPick.keepScrollPosition = true;\n\n            // recalculate active items\n            const activeItems: KernelQuickPickItem[] = [];\n            for (const item of currentActiveItems) {\n                if (isKernelPick(item)) {\n                    const kernelId = item.kernel.id;\n                    const sameItem = newQuickPickItems.find(pi => isKernelPick(pi) && pi.kernel.id === kernelId) as KernelPick | undefined;\n                    if (sameItem) {\n                        activeItems.push(sameItem);\n                    }\n                } else if (isSourcePick(item)) {\n                    const sameItem = newQuickPickItems.find(pi => isSourcePick(pi) && pi.action.command.id === item.action.command.id) as SourcePick | undefined;\n                    if (sameItem) {\n                        activeItems.push(sameItem);\n                    }\n                }\n            }\n\n            quickPick.items = newQuickPickItems;\n            quickPick.activeItems = activeItems;\n        }, this);\n\n        const pick = await new Promise<{ selected: KernelQuickPickItem | undefined; items: KernelQuickPickItem[] }>((resolve, reject) => {\n            quickPick.onDidAccept(() => {\n                const item = quickPick.selectedItems[0];\n                if (item) {\n                    resolve({ selected: item, items: quickPick.items as KernelQuickPickItem[] });\n                } else {\n                    resolve({ selected: undefined, items: quickPick.items as KernelQuickPickItem[] });\n                }\n\n                quickPick.hide();\n            });\n\n            quickPick.onDidHide(() => {\n                kernelDetectionTaskListener.dispose();\n                kernelChangeEventListener?.dispose();\n                quickPick.dispose();\n                resolve({ selected: undefined, items: quickPick.items as KernelQuickPickItem[] });\n            });\n            quickPick.show();\n        });\n\n        if (pick.selected) {\n            return this.handleQuickPick(editor, pick.selected, pick.items);\n        }\n\n        return false;\n    }\n\n    protected getMatchingResult(notebook: NotebookModel): NotebookKernelMatchResult {\n        return this.notebookKernelService.getMatchingKernel(notebook);\n    }\n\n    protected abstract getKernelPickerQuickPickItems(matchResult: NotebookKernelMatchResult): QuickPickInput<KernelQuickPickItem>[];\n\n    protected async handleQuickPick(editor: NotebookModel, pick: KernelQuickPickItem, quickPickItems: KernelQuickPickItem[]): Promise<boolean> {\n        if (isKernelPick(pick)) {\n            const newKernel = pick.kernel;\n            this.selectKernel(editor, newKernel);\n            return true;\n        }\n\n        if (isSourcePick(pick)) {\n            // selected explicitly, it should trigger the execution?\n            pick.action.run(this.commandService);\n        }\n\n        return true;\n    }\n\n    protected selectKernel(notebook: NotebookModel, kernel: NotebookKernel): void {\n        this.notebookKernelService.selectKernelForNotebook(kernel, notebook);\n    }\n}\n@injectable()\nexport class KernelPickerMRUStrategy extends NotebookKernelQuickPickServiceImpl {\n\n    @inject(OpenerService)\n    protected openerService: OpenerService;\n\n    @inject(NotebookKernelHistoryService)\n    protected notebookKernelHistoryService: NotebookKernelHistoryService;\n\n    protected getKernelPickerQuickPickItems(matchResult: NotebookKernelMatchResult): QuickPickInput<KernelQuickPickItem>[] {\n        const quickPickItems: QuickPickInput<KernelQuickPickItem>[] = [];\n\n        if (matchResult.selected) {\n            const kernelItem = toKernelQuickPick(matchResult.selected, matchResult.selected);\n            quickPickItems.push(kernelItem);\n        }\n\n        // TODO use suggested here when kernel affinity is implemented. For now though show all kernels\n        matchResult.all.filter(kernel => kernel.id !== matchResult.selected?.id).map(kernel => toKernelQuickPick(kernel, matchResult.selected))\n            .forEach(kernel => {\n                quickPickItems.push(kernel);\n            });\n\n        const shouldAutoRun = quickPickItems.length === 0;\n\n        if (quickPickItems.length > 0) {\n            quickPickItems.push({\n                type: 'separator'\n            });\n        }\n\n        // select another kernel quick pick\n        quickPickItems.push({\n            id: 'selectAnother',\n            label: nls.localizeByDefault('Select Another Kernel...'),\n            autoRun: shouldAutoRun\n        });\n\n        return quickPickItems;\n    }\n\n    protected override selectKernel(notebook: NotebookModel, kernel: NotebookKernel): void {\n        const currentInfo = this.notebookKernelService.getMatchingKernel(notebook);\n        if (currentInfo.selected) {\n            // there is already a selected kernel\n            this.notebookKernelHistoryService.addMostRecentKernel(currentInfo.selected);\n        }\n        super.selectKernel(notebook, kernel);\n        this.notebookKernelHistoryService.addMostRecentKernel(kernel);\n    }\n\n    protected override getMatchingResult(notebook: NotebookModel): NotebookKernelMatchResult {\n        const { selected, all } = this.notebookKernelHistoryService.getKernels(notebook);\n        const matchingResult = this.notebookKernelService.getMatchingKernel(notebook);\n        return {\n            selected: selected,\n            all: matchingResult.all,\n            suggestions: all,\n            hidden: []\n        };\n    }\n\n    protected override async handleQuickPick(editor: NotebookModel, pick: KernelQuickPickItem, items: KernelQuickPickItem[]): Promise<boolean> {\n        if (pick.id === 'selectAnother') {\n            return this.displaySelectAnotherQuickPick(editor, items.length === 1 && items[0] === pick);\n        }\n\n        return super.handleQuickPick(editor, pick, items);\n    }\n\n    private async displaySelectAnotherQuickPick(editor: NotebookModel, kernelListEmpty: boolean): Promise<boolean> {\n        const notebook: NotebookModel = editor;\n        const disposables = new DisposableCollection();\n        const quickPick = this.quickInputService.createQuickPick<KernelQuickPickItem>();\n        const quickPickItem = await new Promise<KernelQuickPickItem | QuickInputButton | undefined>(resolve => {\n            // select from kernel sources\n            quickPick.title = kernelListEmpty ? nls.localizeByDefault('Select Kernel') : nls.localizeByDefault('Select Another Kernel');\n            quickPick.placeholder = nls.localizeByDefault('Type to choose a kernel source');\n            quickPick.busy = true;\n            // quickPick.buttons = [this.quickInputService.backButton];\n            quickPick.show();\n\n            disposables.push(quickPick.onDidTriggerButton(button => {\n                if (button === this.quickInputService.backButton) {\n                    resolve(button);\n                }\n            }));\n            quickPick.onDidTriggerItemButton(async e => {\n\n                if (isKernelSourceQuickPickItem(e.item) && e.item.documentation !== undefined) {\n                    const uri: URI | undefined = this.isUri(e.item.documentation) ? new URI(e.item.documentation) : await this.commandService.executeCommand(e.item.documentation);\n                    if (uri) {\n                        (await this.openerService.getOpener(uri, { openExternal: true })).open(uri, { openExternal: true });\n                    }\n                }\n            });\n            disposables.push(quickPick.onDidAccept(async () => {\n                resolve(quickPick.selectedItems[0]);\n            }));\n            disposables.push(quickPick.onDidHide(() => {\n                resolve(undefined);\n            }));\n\n            this.calculateKernelSources(editor).then(quickPickItems => {\n                quickPick.items = quickPickItems;\n                if (quickPick.items.length > 0) {\n                    quickPick.busy = false;\n                }\n            });\n\n            debounce(\n                Event.any(\n                    this.notebookKernelService.onDidChangeSourceActions,\n                    this.notebookKernelService.onDidAddKernel,\n                    this.notebookKernelService.onDidRemoveKernel\n                ),\n                KERNEL_PICKER_UPDATE_DEBOUNCE,\n            )(async () => {\n                quickPick.busy = true;\n                const quickPickItems = await this.calculateKernelSources(editor);\n                quickPick.items = quickPickItems;\n                quickPick.busy = false;\n            });\n        });\n\n        quickPick.hide();\n        disposables.dispose();\n\n        if (quickPickItem === this.quickInputService.backButton) {\n            return this.showQuickPick(editor, undefined, true);\n        }\n\n        if (quickPickItem) {\n            const selectedKernelPickItem = quickPickItem as KernelQuickPickItem;\n            if (isKernelSourceQuickPickItem(selectedKernelPickItem)) {\n                try {\n                    const selectedKernelId = await this.executeCommand<string>(notebook, selectedKernelPickItem.command);\n                    if (selectedKernelId) {\n                        const { all } = this.getMatchingResult(notebook);\n                        const notebookKernel = all.find(kernel => kernel.id === `ms-toolsai.jupyter/${selectedKernelId}`);\n                        if (notebookKernel) {\n                            this.selectKernel(notebook, notebookKernel);\n                            return true;\n                        }\n                        return true;\n                    } else {\n                        return this.displaySelectAnotherQuickPick(editor, false);\n                    }\n                } catch (ex) {\n                    return false;\n                }\n            } else if (isKernelPick(selectedKernelPickItem)) {\n                this.selectKernel(notebook, selectedKernelPickItem.kernel);\n                return true;\n            } else if (isGroupedKernelsPick(selectedKernelPickItem)) {\n                await this.selectOneKernel(notebook, selectedKernelPickItem.source, selectedKernelPickItem.kernels);\n                return true;\n            } else if (isSourcePick(selectedKernelPickItem)) {\n                // selected explicitly, it should trigger the execution?\n                try {\n                    await selectedKernelPickItem.action.run(this.commandService);\n                    return true;\n                } catch (ex) {\n                    return false;\n                }\n            }\n            // } else if (isSearchMarketplacePick(selectedKernelPickItem)) {\n            //     await this.showKernelExtension(\n            //         this.paneCompositePartService,\n            //         this.extensionWorkbenchService,\n            //         this.extensionService,\n            //         editor.textModel.viewType,\n            //         []\n            //     );\n            //     return true;\n            // } else if (isInstallExtensionPick(selectedKernelPickItem)) {\n            //     await this.showKernelExtension(\n            //         this.paneCompositePartService,\n            //         this.extensionWorkbenchService,\n            //         this.extensionService,\n            //         editor.textModel.viewType,\n            //         selectedKernelPickItem.extensionIds,\n            //     );\n            //     return true;\n            // }\n        }\n\n        return false;\n    }\n\n    private isUri(value: string): boolean {\n        return /^(?<scheme>\\w[\\w\\d+.-]*):/.test(value);\n    }\n\n    private async calculateKernelSources(editor: NotebookModel): Promise<QuickPickInput<KernelQuickPickItem>[]> {\n        const notebook: NotebookModel = editor;\n\n        const actions = await this.notebookKernelService.getKernelSourceActionsFromProviders(notebook);\n        const matchResult = this.getMatchingResult(notebook);\n\n        const others = matchResult.all.filter(item => item.extensionId !== JUPYTER_EXTENSION_ID);\n        const quickPickItems: QuickPickInput<KernelQuickPickItem>[] = [];\n\n        // group controllers by extension\n        for (const group of ArrayUtils.groupBy(others, (a, b) => a.extensionId === b.extensionId ? 0 : 1)) {\n            const source = group[0].extensionId;\n            if (group.length > 1) {\n                quickPickItems.push({\n                    label: source,\n                    kernels: group\n                });\n            } else {\n                quickPickItems.push({\n                    label: group[0].label,\n                    kernel: group[0]\n                });\n            }\n        }\n\n        const validActions = actions.filter(action => action.command);\n\n        quickPickItems.push(...validActions.map(action => {\n            const buttons = action.documentation ? [{\n                iconClass: codicon('info'),\n                tooltip: nls.localizeByDefault('Learn More'),\n            }] : [];\n            return {\n                id: typeof action.command! === 'string' ? action.command! : action.command!.id,\n                label: action.label,\n                description: action.description,\n                command: action.command,\n                documentation: action.documentation,\n                buttons\n            };\n        }));\n\n        return quickPickItems;\n    }\n\n    private async selectOneKernel(notebook: NotebookModel, source: string, kernels: NotebookKernel[]): Promise<void> {\n        const quickPickItems: QuickPickInput<KernelPick>[] = kernels.map(kernel => toKernelQuickPick(kernel, undefined));\n        const quickPick = this.quickInputService.createQuickPick<KernelQuickPickItem>();\n        quickPick.items = quickPickItems;\n        quickPick.canSelectMany = false;\n\n        quickPick.title = nls.localizeByDefault('Select Kernel from {0}', source);\n\n        quickPick.onDidAccept(async () => {\n            if (quickPick.selectedItems && quickPick.selectedItems.length > 0 && isKernelPick(quickPick.selectedItems[0])) {\n                this.selectKernel(notebook, quickPick.selectedItems[0].kernel);\n            }\n\n            quickPick.hide();\n            quickPick.dispose();\n        });\n\n        quickPick.onDidHide(() => {\n            quickPick.dispose();\n        });\n\n        quickPick.show();\n    }\n\n    private async executeCommand<T>(notebook: NotebookModel, command: string | Command): Promise<T | undefined | void> {\n        const id = typeof command === 'string' ? command : command.id;\n\n        return this.commandService.executeCommand(id, { uri: notebook.uri });\n\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Command, CommandService, Disposable, Emitter, Event, URI } from '@theia/core';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { StorageService } from '@theia/core/lib/browser';\nimport { NotebookKernelSourceAction } from '../../common';\nimport { NotebookModel } from '../view-model/notebook-model';\nimport { NotebookService } from './notebook-service';\n\nexport interface SelectedNotebookKernelChangeEvent {\n    notebook: URI;\n    oldKernel: string | undefined;\n    newKernel: string | undefined;\n}\n\nexport interface NotebookKernelMatchResult {\n    readonly selected: NotebookKernel | undefined;\n    readonly suggestions: NotebookKernel[];\n    readonly all: NotebookKernel[];\n    readonly hidden: NotebookKernel[];\n}\n\nexport interface NotebookKernelChangeEvent {\n    label?: true;\n    description?: true;\n    detail?: true;\n    supportedLanguages?: true;\n    hasExecutionOrder?: true;\n    hasInterruptHandler?: true;\n}\n\nexport interface NotebookKernel {\n    readonly id: string;\n    readonly viewType: string;\n    readonly onDidChange: Event<Readonly<NotebookKernelChangeEvent>>;\n    // ID of the extension providing this kernel\n    readonly extensionId: string;\n\n    label: string;\n    description?: string;\n    detail?: string;\n    supportedLanguages: string[];\n    implementsInterrupt?: boolean;\n    implementsExecutionOrder?: boolean;\n\n    executeNotebookCellsRequest(uri: URI, cellHandles: number[]): Promise<void>;\n    cancelNotebookCellExecution(uri: URI, cellHandles: number[]): Promise<void>;\n}\n\nexport const enum ProxyKernelState {\n    Disconnected = 1,\n    Connected = 2,\n    Initializing = 3\n}\n\nexport interface INotebookProxyKernelChangeEvent extends NotebookKernelChangeEvent {\n    connectionState?: true;\n}\n\nexport interface NotebookTextModelLike { uri: URI; viewType: string }\n\nclass KernelInfo {\n\n    private static instanceCounter = 0;\n\n    score: number;\n    readonly kernel: NotebookKernel;\n    readonly handle: number;\n\n    constructor(kernel: NotebookKernel) {\n        this.kernel = kernel;\n        this.score = -1;\n        this.handle = KernelInfo.instanceCounter++;\n    }\n}\n\nexport interface NotebookSourceActionChangeEvent {\n    notebook?: URI;\n    viewType: string;\n}\n\nexport interface KernelSourceActionProvider {\n    readonly viewType: string;\n    onDidChangeSourceActions?: Event<void>;\n    provideKernelSourceActions(): Promise<NotebookKernelSourceAction[]>;\n}\n\nexport class SourceCommand implements Disposable {\n    execution: Promise<void> | undefined;\n    protected readonly onDidChangeStateEmitter = new Emitter<void>();\n    readonly onDidChangeState = this.onDidChangeStateEmitter.event;\n\n    constructor(\n        readonly command: Command,\n        readonly model: NotebookTextModelLike,\n    ) { }\n\n    async run(commandService: CommandService): Promise<void> {\n        if (this.execution) {\n            return this.execution;\n        }\n\n        this.execution = this.runCommand(commandService);\n        this.onDidChangeStateEmitter.fire();\n        await this.execution;\n        this.execution = undefined;\n        this.onDidChangeStateEmitter.fire();\n    }\n\n    private async runCommand(commandService: CommandService): Promise<void> {\n        try {\n            await commandService.executeCommand(this.command.id, {\n                uri: this.model.uri,\n            });\n\n        } catch (error) {\n            console.warn(`Kernel source command failed: ${error}`);\n        }\n    }\n\n    dispose(): void {\n        this.onDidChangeStateEmitter.dispose();\n    }\n\n}\n\nconst NOTEBOOK_KERNEL_BINDING_STORAGE_KEY = 'notebook.kernel.bindings';\n@injectable()\nexport class NotebookKernelService implements Disposable {\n\n    @inject(NotebookService)\n    protected notebookService: NotebookService;\n\n    @inject(StorageService)\n    protected storageService: StorageService;\n\n    private readonly kernels = new Map<string, KernelInfo>();\n\n    private notebookBindings: { [key: string]: string } = {};\n\n    private readonly kernelDetectionTasks = new Map<string, string[]>();\n    private readonly onDidChangeKernelDetectionTasksEmitter = new Emitter<string>();\n    readonly onDidChangeKernelDetectionTasks = this.onDidChangeKernelDetectionTasksEmitter.event;\n\n    private readonly onDidChangeSourceActionsEmitter = new Emitter<NotebookSourceActionChangeEvent>();\n    private readonly kernelSourceActionProviders = new Map<string, KernelSourceActionProvider[]>();\n    readonly onDidChangeSourceActions: Event<NotebookSourceActionChangeEvent> = this.onDidChangeSourceActionsEmitter.event;\n\n    private readonly onDidAddKernelEmitter = new Emitter<NotebookKernel>();\n    readonly onDidAddKernel: Event<NotebookKernel> = this.onDidAddKernelEmitter.event;\n\n    private readonly onDidRemoveKernelEmitter = new Emitter<NotebookKernel>();\n    readonly onDidRemoveKernel: Event<NotebookKernel> = this.onDidRemoveKernelEmitter.event;\n\n    private readonly onDidChangeSelectedNotebookKernelBindingEmitter = new Emitter<SelectedNotebookKernelChangeEvent>();\n    readonly onDidChangeSelectedKernel: Event<SelectedNotebookKernelChangeEvent> = this.onDidChangeSelectedNotebookKernelBindingEmitter.event;\n\n    private readonly onDidChangeNotebookAffinityEmitter = new Emitter<void>();\n    readonly onDidChangeNotebookAffinity: Event<void> = this.onDidChangeNotebookAffinityEmitter.event;\n\n    @postConstruct()\n    init(): void {\n        this.storageService.getData(NOTEBOOK_KERNEL_BINDING_STORAGE_KEY).then((value: { [key: string]: string } | undefined) => {\n            if (value) {\n                this.notebookBindings = value;\n            }\n        });\n    }\n\n    registerKernel(kernel: NotebookKernel): Disposable {\n        if (this.kernels.has(kernel.id)) {\n            throw new Error(`Notebook Controller with id '${kernel.id}' already exists`);\n        }\n\n        this.kernels.set(kernel.id, new KernelInfo(kernel));\n        this.onDidAddKernelEmitter.fire(kernel);\n\n        // auto associate the new kernel to existing notebooks it was\n        // associated to in the past.\n        for (const notebook of this.notebookService.getNotebookModels()) {\n            this.tryAutoBindNotebook(notebook, kernel);\n        }\n\n        return Disposable.create(() => {\n            if (this.kernels.delete(kernel.id)) {\n                this.onDidRemoveKernelEmitter.fire(kernel);\n            }\n        });\n    }\n\n    /**\n     * Helps to find the best matching kernel for a notebook.\n     * @param notebook notebook to get the matching kernel for\n     * @returns and object containing:\n     *  all kernels sorted to match the notebook best first (affinity ascending, score descending, label))\n     *  the selected kernel (if any)\n     *  specific suggested kernels (if any)\n     *  hidden kernels (if any)\n     */\n    getMatchingKernel(notebook: NotebookTextModelLike): NotebookKernelMatchResult {\n        const kernels: { kernel: NotebookKernel; instanceAffinity: number; score: number }[] = [];\n        for (const info of this.kernels.values()) {\n            const score = NotebookKernelService.score(info.kernel, notebook);\n            if (score) {\n                kernels.push({\n                    score,\n                    kernel: info.kernel,\n                    instanceAffinity: 1 /* vscode.NotebookControllerPriority.Default */,\n                });\n            }\n        }\n\n        kernels\n            .sort((a, b) => b.instanceAffinity - a.instanceAffinity || a.score - b.score || a.kernel.label.localeCompare(b.kernel.label));\n        const all = kernels.map(obj => obj.kernel);\n\n        // bound kernel\n        const selectedId = this.notebookBindings[`${notebook.viewType}/${notebook.uri}`];\n        const selected = selectedId ? this.kernels.get(selectedId)?.kernel : undefined;\n        const suggestions = kernels.filter(item => item.instanceAffinity > 1).map(item => item.kernel); // TODO implement notebookAffinity\n        const hidden = kernels.filter(item => item.instanceAffinity < 0).map(item => item.kernel);\n        return { all, selected, suggestions, hidden };\n\n    }\n\n    selectKernelForNotebook(kernel: NotebookKernel | undefined, notebook: NotebookTextModelLike): void {\n        const key = `${notebook.viewType}/${notebook.uri}`;\n        const oldKernel = this.notebookBindings[key];\n        if (oldKernel !== kernel?.id) {\n            if (kernel) {\n                this.notebookBindings[key] = kernel.id;\n            } else {\n                delete this.notebookBindings[key];\n            }\n            this.storageService.setData(NOTEBOOK_KERNEL_BINDING_STORAGE_KEY, this.notebookBindings);\n            this.onDidChangeSelectedNotebookKernelBindingEmitter.fire({ notebook: notebook.uri, oldKernel, newKernel: kernel?.id });\n        }\n    }\n\n    getSelectedOrSuggestedKernel(notebook: NotebookModel): NotebookKernel | undefined {\n        const info = this.getMatchingKernel(notebook);\n        if (info.selected) {\n            return info.selected;\n        }\n\n        return info.all.length === 1 ? info.all[0] : undefined;\n    }\n\n    getKernel(id: string): NotebookKernel | undefined {\n        return this.kernels.get(id)?.kernel;\n    }\n\n    private static score(kernel: NotebookKernel, notebook: NotebookTextModelLike): number {\n        if (kernel.viewType === notebook.viewType) {\n            return 10;\n        } else if (kernel.viewType === '*') {\n            return 5;\n        } else {\n            return 0;\n        }\n    }\n\n    private tryAutoBindNotebook(notebook: NotebookModel, onlyThisKernel?: NotebookKernel): void {\n\n        const id = this.notebookBindings[`${notebook.viewType}/${notebook.uri}`];\n        if (!id) {\n            // no kernel associated\n            return;\n        }\n        const existingKernel = this.kernels.get(id);\n        if (!existingKernel || !NotebookKernelService.score(existingKernel.kernel, notebook)) {\n            // associated kernel not known, not matching\n            return;\n        }\n        if (!onlyThisKernel || existingKernel.kernel === onlyThisKernel) {\n            this.onDidChangeSelectedNotebookKernelBindingEmitter.fire({ notebook: notebook.uri, oldKernel: undefined, newKernel: existingKernel.kernel.id });\n        }\n    }\n\n    registerNotebookKernelDetectionTask(notebookType: string): Disposable {\n        const all = this.kernelDetectionTasks.get(notebookType) ?? [];\n        all.push(notebookType);\n        this.kernelDetectionTasks.set(notebookType, all);\n        this.onDidChangeKernelDetectionTasksEmitter.fire(notebookType);\n        return Disposable.create(() => {\n            const allTasks = this.kernelDetectionTasks.get(notebookType) ?? [];\n            const taskIndex = allTasks.indexOf(notebookType);\n            if (taskIndex >= 0) {\n                allTasks.splice(taskIndex, 1);\n                this.kernelDetectionTasks.set(notebookType, allTasks);\n                this.onDidChangeKernelDetectionTasksEmitter.fire(notebookType);\n            }\n        });\n    }\n\n    getKernelDetectionTasks(notebook: NotebookTextModelLike): string[] {\n        return this.kernelDetectionTasks.get(notebook.viewType) ?? [];\n    }\n\n    registerKernelSourceActionProvider(viewType: string, provider: KernelSourceActionProvider): Disposable {\n        const providers = this.kernelSourceActionProviders.get(viewType) ?? [];\n        providers.push(provider);\n        this.kernelSourceActionProviders.set(viewType, providers);\n        this.onDidChangeSourceActionsEmitter.fire({ viewType: viewType });\n\n        const eventEmitterDisposable = provider.onDidChangeSourceActions?.(() => {\n            this.onDidChangeSourceActionsEmitter.fire({ viewType: viewType });\n        });\n\n        return Disposable.create(() => {\n            const sourceProviders = this.kernelSourceActionProviders.get(viewType) ?? [];\n            const providerIndex = sourceProviders.indexOf(provider);\n            if (providerIndex >= 0) {\n                sourceProviders.splice(providerIndex, 1);\n                this.kernelSourceActionProviders.set(viewType, sourceProviders);\n            }\n\n            eventEmitterDisposable?.dispose();\n        });\n    }\n\n    async getKernelSourceActionsFromProviders(notebook: NotebookTextModelLike): Promise<NotebookKernelSourceAction[]> {\n        const viewType = notebook.viewType;\n        const providers = this.kernelSourceActionProviders.get(viewType) ?? [];\n        const promises = providers.map(provider => provider.provideKernelSourceActions());\n        const allActions = await Promise.all(promises);\n        return allActions.flat();\n    }\n\n    dispose(): void {\n        this.onDidChangeKernelDetectionTasksEmitter.dispose();\n        this.onDidChangeSourceActionsEmitter.dispose();\n        this.onDidAddKernelEmitter.dispose();\n        this.onDidRemoveKernelEmitter.dispose();\n        this.onDidChangeSelectedNotebookKernelBindingEmitter.dispose();\n        this.onDidChangeNotebookAffinityEmitter.dispose();\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Emitter, URI } from '@theia/core';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { UriComponents } from '@theia/core/lib/common/uri';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { CellKind, NotebookData } from '../../common';\nimport { NotebookModel } from '../view-model/notebook-model';\nimport { NotebookService } from './notebook-service';\nimport { NotebookTypeRegistry } from '../notebook-type-registry';\nimport { NotebookFileSelector } from '../../common/notebook-protocol';\nimport { match } from '@theia/core/lib/common/glob';\n\nexport interface UntitledResource {\n    untitledResource: URI | undefined\n}\n@injectable()\nexport class NotebookModelResolverService {\n\n    @inject(FileService)\n    protected fileService: FileService;\n\n    @inject(NotebookService)\n    protected notebookService: NotebookService;\n\n    @inject(NotebookTypeRegistry)\n    protected notebookTypeRegistry: NotebookTypeRegistry;\n\n    protected onDidChangeDirtyEmitter = new Emitter<NotebookModel>();\n    readonly onDidChangeDirty = this.onDidChangeDirtyEmitter.event;\n    protected onDidSaveNotebookEmitter = new Emitter<UriComponents>();\n    readonly onDidSaveNotebook = this.onDidSaveNotebookEmitter.event;\n\n    async resolve(resource: URI, viewType?: string): Promise<NotebookModel> {\n\n        if (!viewType) {\n            const existingViewType = this.notebookService.getNotebookEditorModel(resource)?.viewType;\n            if (existingViewType) {\n                viewType = existingViewType;\n            } else {\n                viewType = this.findViewTypeForResource(resource);\n            }\n        }\n\n        if (!viewType) {\n            throw new Error(`Missing viewType for '${resource}'`);\n        }\n\n        const notebookData = await this.resolveExistingNotebookData(resource, viewType!);\n\n        const notebookModel = await this.notebookService.createNotebookModel(notebookData, viewType, resource);\n\n        notebookModel.onDirtyChanged(() => this.onDidChangeDirtyEmitter.fire(notebookModel));\n        notebookModel.onDidSaveNotebook(() => this.onDidSaveNotebookEmitter.fire(notebookModel.uri.toComponents()));\n\n        return notebookModel;\n    }\n\n    async resolveUntitledResource(arg: UntitledResource, viewType: string): Promise<NotebookModel> {\n        let resource: URI;\n        // let hasAssociatedFilePath = false;\n        arg = arg as UntitledResource;\n        if (!arg.untitledResource) {\n            const notebookTypeInfo = this.notebookTypeRegistry.notebookTypes.find(info => info.type === viewType);\n            if (!notebookTypeInfo) {\n                throw new Error('UNKNOWN view type: ' + viewType);\n            }\n\n            const suffix = this.getPossibleFileEnding(notebookTypeInfo.selector ?? []) ?? '';\n            for (let counter = 1; ; counter++) {\n                const candidate = new URI()\n                    .withScheme('untitled')\n                    .withPath(`Untitled-notebook-${counter}${suffix}`)\n                    .withQuery(viewType);\n                if (!this.notebookService.getNotebookEditorModel(candidate)) {\n                    resource = candidate;\n                    break;\n                }\n            }\n        } else if (arg.untitledResource.scheme === 'untitled') {\n            resource = arg.untitledResource;\n        } else {\n            throw new Error('Invalid untitled resource: ' + arg.untitledResource.toString() + ' untitled resources with associated file path are not supported yet');\n            // TODO implement associated file path support\n            // resource = arg.untitledResource.withScheme('untitled');\n            // hasAssociatedFilePath = true;\n        }\n\n        return this.resolve(resource, viewType);\n    }\n\n    protected async resolveExistingNotebookData(resource: URI, viewType: string): Promise<NotebookData> {\n        if (resource.scheme === 'untitled') {\n\n            return {\n                cells: [\n                    {\n                        cellKind: CellKind.Markup,\n                        language: 'markdown',\n                        outputs: [],\n                        source: ''\n                    }\n                ],\n                metadata: {}\n            };\n        } else {\n            const file = await this.fileService.readFile(resource);\n\n            const dataProvider = await this.notebookService.getNotebookDataProvider(viewType);\n            const notebook = await dataProvider.serializer.toNotebook(file.value);\n\n            return notebook;\n        }\n    }\n\n    protected getPossibleFileEnding(selectors: readonly NotebookFileSelector[]): string | undefined {\n        for (const selector of selectors) {\n            const ending = this.possibleFileEnding(selector);\n            if (ending) {\n                return ending;\n            }\n        }\n        return undefined;\n    }\n\n    protected possibleFileEnding(selector: NotebookFileSelector): string | undefined {\n\n        const pattern = /^.*(\\.[a-zA-Z0-9_-]+)$/;\n\n        const candidate = typeof selector === 'string' ? selector : selector.filenamePattern;\n\n        if (candidate) {\n            const matches = pattern.exec(candidate);\n            if (matches) {\n                return matches[1];\n            }\n        }\n\n        return undefined;\n    }\n\n    protected findViewTypeForResource(resource: URI): string | undefined {\n        return this.notebookTypeRegistry.notebookTypes.find(info =>\n            info.selector?.some(selector => selector.filenamePattern && match(selector.filenamePattern, resource.path.name + resource.path.ext))\n        )?.type;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from '@theia/core';\nimport { injectable } from '@theia/core/shared/inversify';\nimport { Disposable } from '@theia/core/shared/vscode-languageserver-protocol';\n\ninterface RendererMessage {\n    editorId: string;\n    rendererId: string;\n    message: unknown\n};\n\nexport interface RendererMessaging extends Disposable {\n    /**\n     * Method called when a message is received. Should return a boolean\n     * indicating whether a renderer received it.\n     */\n    receiveMessage?: (rendererId: string, message: unknown) => Promise<boolean>;\n\n    /**\n     * Sends a message to an extension from a renderer.\n     */\n    postMessage(rendererId: string, message: unknown): void;\n}\n\n@injectable()\nexport class NotebookRendererMessagingService implements Disposable {\n\n    private readonly postMessageEmitter = new Emitter<RendererMessage>();\n    readonly onPostMessage = this.postMessageEmitter.event;\n\n    private readonly willActivateRendererEmitter = new Emitter<string>();\n    readonly onWillActivateRenderer = this.willActivateRendererEmitter.event;\n\n    private readonly activations = new Map<string /* rendererId */, undefined | RendererMessage[]>();\n    private readonly scopedMessaging = new Map<string /* editorId */, RendererMessaging>();\n\n    receiveMessage(editorId: string | undefined, rendererId: string, message: unknown): Promise<boolean> {\n        if (editorId === undefined) {\n            const sends = [...this.scopedMessaging.values()].map(e => e.receiveMessage?.(rendererId, message));\n            return Promise.all(sends).then(values => values.some(value => !!value));\n        }\n\n        return this.scopedMessaging.get(editorId)?.receiveMessage?.(rendererId, message) ?? Promise.resolve(false);\n    }\n\n    prepare(rendererId: string): void {\n        if (this.activations.has(rendererId)) {\n            return;\n        }\n\n        const queue: RendererMessage[] = [];\n        this.activations.set(rendererId, queue);\n\n        Promise.all(this.willActivateRendererEmitter.fire(rendererId)).then(() => {\n            for (const message of queue) {\n                this.postMessageEmitter.fire(message);\n            }\n            this.activations.set(rendererId, undefined);\n        });\n    }\n\n    public getScoped(editorId: string): RendererMessaging {\n        const existing = this.scopedMessaging.get(editorId);\n        if (existing) {\n            return existing;\n        }\n\n        const messaging: RendererMessaging = {\n            postMessage: (rendererId, message) => this.postMessage(editorId, rendererId, message),\n            dispose: () => this.scopedMessaging.delete(editorId),\n        };\n\n        this.scopedMessaging.set(editorId, messaging);\n        return messaging;\n    }\n\n    private postMessage(editorId: string, rendererId: string, message: unknown): void {\n        if (!this.activations.has(rendererId)) {\n            this.prepare(rendererId);\n        }\n\n        const activation = this.activations.get(rendererId);\n        const toSend = { rendererId, editorId, message };\n        if (activation === undefined) {\n            this.postMessageEmitter.fire(toSend);\n        } else {\n            activation.push(toSend);\n        }\n    }\n\n    dispose(): void {\n        this.postMessageEmitter.dispose();\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Disposable, DisposableCollection, Emitter, URI } from '@theia/core';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { BinaryBuffer } from '@theia/core/lib/common/buffer';\nimport { NotebookData, TransientOptions } from '../../common';\nimport { NotebookModel, NotebookModelFactory, NotebookModelProps } from '../view-model/notebook-model';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { MonacoTextModelService } from '@theia/monaco/lib/browser/monaco-text-model-service';\nimport { NotebookCellModel, NotebookCellModelFactory, NotebookCellModelProps } from '../view-model/notebook-cell-model';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\n\nexport const NotebookProvider = Symbol('notebook provider');\n\nexport interface NotebookProviderInfo {\n    readonly notebookType: string,\n    readonly serializer: NotebookSerializer,\n}\n\nexport interface NotebookSerializer {\n    options: TransientOptions;\n    toNotebook(data: BinaryBuffer): Promise<NotebookData>;\n    fromNotebook(data: NotebookData): Promise<BinaryBuffer>;\n}\n\n@injectable()\nexport class NotebookService implements Disposable {\n\n    @inject(FileService)\n    protected fileService: FileService;\n\n    @inject(MonacoTextModelService)\n    protected modelService: MonacoTextModelService;\n\n    @inject(NotebookModelFactory)\n    protected notebookModelFactory: (props: NotebookModelProps) => NotebookModel;\n\n    @inject(NotebookCellModelFactory)\n    protected notebookCellModelFactory: (props: NotebookCellModelProps) => NotebookCellModel;\n\n    protected willUseNotebookSerializerEmitter = new Emitter<string>();\n    readonly onWillUseNotebookSerializer = this.willUseNotebookSerializerEmitter.event;\n\n    protected readonly disposables = new DisposableCollection();\n\n    protected readonly notebookProviders = new Map<string, NotebookProviderInfo>();\n    protected readonly notebookModels = new Map<string, NotebookModel>();\n\n    protected readonly didRegisterNotebookSerializerEmitter = new Emitter<string>();\n    readonly onDidRegisterNotebookSerializer = this.didRegisterNotebookSerializerEmitter.event;\n\n    protected readonly didRemoveViewTypeEmitter = new Emitter<string>();\n    readonly onDidRemoveViewType = this.didRemoveViewTypeEmitter.event;\n\n    protected readonly willOpenNotebookTypeEmitter = new Emitter<string>();\n    readonly onWillOpenNotebook = this.willOpenNotebookTypeEmitter.event;\n\n    protected readonly didAddNotebookDocumentEmitter = new Emitter<NotebookModel>();\n    readonly onDidAddNotebookDocument = this.didAddNotebookDocumentEmitter.event;\n    protected readonly didRemoveNotebookDocumentEmitter = new Emitter<NotebookModel>();\n    readonly onDidRemoveNotebookDocument = this.didRemoveNotebookDocumentEmitter.event;\n\n    dispose(): void {\n        this.disposables.dispose();\n    }\n\n    protected readonly ready = new Deferred();\n\n    /**\n     * Marks the notebook service as ready. From this point on, the service will start dispatching the `onNotebookSerializer` event.\n     */\n    markReady(): void {\n        this.ready.resolve();\n    }\n\n    registerNotebookSerializer(viewType: string, serializer: NotebookSerializer): Disposable {\n        if (this.notebookProviders.has(viewType)) {\n            throw new Error(`notebook provider for viewtype '${viewType}' already exists`);\n        }\n\n        this.notebookProviders.set(viewType, { notebookType: viewType, serializer });\n        this.didRegisterNotebookSerializerEmitter.fire(viewType);\n\n        return Disposable.create(() => {\n            this.notebookProviders.delete(viewType);\n            this.didRemoveViewTypeEmitter.fire(viewType);\n        });\n    }\n\n    async createNotebookModel(data: NotebookData, viewType: string, uri: URI): Promise<NotebookModel> {\n        const serializer = this.notebookProviders.get(viewType)?.serializer;\n        if (!serializer) {\n            throw new Error('no notebook serializer for ' + viewType);\n        }\n\n        const model = this.notebookModelFactory({ data, uri, viewType, serializer });\n        this.notebookModels.set(uri.toString(), model);\n        // Resolve cell text models right after creating the notebook model\n        // This ensures that all text models are available in the plugin host\n        await Promise.all(model.cells.map(e => e.resolveTextModel()));\n        this.didAddNotebookDocumentEmitter.fire(model);\n        return model;\n    }\n\n    async getNotebookDataProvider(viewType: string): Promise<NotebookProviderInfo> {\n        await this.ready.promise;\n\n        const result = await this.waitForNotebookProvider(viewType);\n        if (!result) {\n            throw new Error(`No provider registered for view type: '${viewType}'`);\n        }\n        return result;\n    }\n\n    /**\n     * When the application starts up, notebook providers from plugins are not registered yet.\n     * It takes a few seconds for the plugin host to start so that notebook data providers can be registered.\n     * This methods waits until the notebook provider is registered.\n     */\n    protected async waitForNotebookProvider(type: string): Promise<NotebookProviderInfo | undefined> {\n        if (this.notebookProviders.has(type)) {\n            return this.notebookProviders.get(type);\n        }\n        await Promise.all(this.willUseNotebookSerializerEmitter.fire(type));\n        const deferred = new Deferred<NotebookProviderInfo | undefined>();\n        // 20 seconds of timeout\n        const timeoutDuration = 20_000;\n        const disposable = this.onDidRegisterNotebookSerializer(viewType => {\n            if (viewType === type) {\n                clearTimeout(timeout);\n                disposable.dispose();\n                deferred.resolve(this.notebookProviders.get(type));\n            }\n        });\n        const timeout = setTimeout(() => {\n            clearTimeout(timeout);\n            disposable.dispose();\n            deferred.reject();\n        }, timeoutDuration);\n        return deferred.promise;\n    }\n\n    getNotebookEditorModel(uri: URI): NotebookModel | undefined {\n        return this.notebookModels.get(uri.toString());\n    }\n\n    getNotebookModels(): Iterable<NotebookModel> {\n        return this.notebookModels.values();\n    }\n\n    async willOpenNotebook(type: string): Promise<void> {\n        return this.willOpenNotebookTypeEmitter.sequence(async listener => listener(type));\n    }\n\n    listNotebookDocuments(): NotebookModel[] {\n        return [...this.notebookModels.values()];\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, DisposableCollection, Emitter, Event, URI } from '@theia/core';\nimport { inject, injectable, interfaces, postConstruct } from '@theia/core/shared/inversify';\nimport { MonacoEditorModel } from '@theia/monaco/lib/browser/monaco-editor-model';\nimport { MonacoTextModelService } from '@theia/monaco/lib/browser/monaco-text-model-service';\nimport {\n    CellInternalMetadataChangedEvent, CellKind, NotebookCellCollapseState, NotebookCellInternalMetadata,\n    NotebookCellMetadata, NotebookCellOutputsSplice, CellOutput, CellData, NotebookCell, CellOutputItem\n} from '../../common';\nimport { NotebookCellOutputModel } from './notebook-cell-output-model';\n\nexport const NotebookCellModelFactory = Symbol('NotebookModelFactory');\nexport type NotebookCellModelFactory = (props: NotebookCellModelProps) => NotebookCellModel;\n\nexport function createNotebookCellModelContainer(parent: interfaces.Container, props: NotebookCellModelProps,\n    notebookCellContextManager: new (...args: never[]) => unknown): interfaces.Container {\n    const child = parent.createChild();\n\n    child.bind(NotebookCellModelProps).toConstantValue(props);\n    // We need the constructor as property here to avoid circular dependencies for the context manager\n    child.bind(NotebookCellContextManager).to(notebookCellContextManager).inSingletonScope();\n    child.bind(NotebookCellModel).toSelf();\n\n    return child;\n}\n\nconst NotebookCellContextManager = Symbol('NotebookCellContextManager');\ninterface NotebookCellContextManager {\n    updateCellContext(cell: NotebookCellModel, context: HTMLElement): void;\n    dispose(): void;\n    onDidChangeContext: Event<void>;\n}\n\nconst NotebookCellModelProps = Symbol('NotebookModelProps');\nexport interface NotebookCellModelProps {\n    readonly uri: URI,\n    readonly handle: number,\n    source: string,\n    language: string,\n    readonly cellKind: CellKind,\n    outputs: CellOutput[],\n    metadata?: NotebookCellMetadata | undefined,\n    internalMetadata?: NotebookCellInternalMetadata | undefined,\n    readonly collapseState?: NotebookCellCollapseState | undefined,\n\n}\n\n@injectable()\nexport class NotebookCellModel implements NotebookCell, Disposable {\n\n    protected readonly onDidChangeOutputsEmitter = new Emitter<NotebookCellOutputsSplice>();\n    readonly onDidChangeOutputs: Event<NotebookCellOutputsSplice> = this.onDidChangeOutputsEmitter.event;\n\n    protected readonly onDidChangeOutputItemsEmitter = new Emitter<CellOutput>();\n    readonly onDidChangeOutputItems: Event<CellOutput> = this.onDidChangeOutputItemsEmitter.event;\n\n    protected readonly onDidChangeContentEmitter = new Emitter<'content' | 'language' | 'mime'>();\n    readonly onDidChangeContent: Event<'content' | 'language' | 'mime'> = this.onDidChangeContentEmitter.event;\n\n    protected readonly onDidChangeMetadataEmitter = new Emitter<void>();\n    readonly onDidChangeMetadata: Event<void> = this.onDidChangeMetadataEmitter.event;\n\n    protected readonly onDidChangeInternalMetadataEmitter = new Emitter<CellInternalMetadataChangedEvent>();\n    readonly onDidChangeInternalMetadata: Event<CellInternalMetadataChangedEvent> = this.onDidChangeInternalMetadataEmitter.event;\n\n    protected readonly onDidChangeLanguageEmitter = new Emitter<string>();\n    readonly onDidChangeLanguage: Event<string> = this.onDidChangeLanguageEmitter.event;\n\n    protected readonly onDidRequestCellEditChangeEmitter = new Emitter<boolean>();\n    readonly onDidRequestCellEditChange = this.onDidRequestCellEditChangeEmitter.event;\n\n    @inject(NotebookCellContextManager)\n    readonly notebookCellContextManager: NotebookCellContextManager;\n\n    @inject(NotebookCellModelProps)\n    protected readonly props: NotebookCellModelProps;\n    @inject(MonacoTextModelService)\n    protected readonly textModelService: MonacoTextModelService;\n\n    get outputs(): NotebookCellOutputModel[] {\n        return this._outputs;\n    }\n\n    protected _outputs: NotebookCellOutputModel[];\n\n    get metadata(): NotebookCellMetadata {\n        return this._metadata;\n    }\n\n    protected _metadata: NotebookCellMetadata;\n\n    protected toDispose = new DisposableCollection();\n\n    protected _internalMetadata: NotebookCellInternalMetadata;\n\n    get internalMetadata(): NotebookCellInternalMetadata {\n        return this._internalMetadata;\n    }\n\n    set internalMetadata(newInternalMetadata: NotebookCellInternalMetadata) {\n        const lastRunSuccessChanged = this._internalMetadata.lastRunSuccess !== newInternalMetadata.lastRunSuccess;\n        newInternalMetadata = {\n            ...newInternalMetadata,\n            ...{ runStartTimeAdjustment: computeRunStartTimeAdjustment(this._internalMetadata, newInternalMetadata) }\n        };\n        this._internalMetadata = newInternalMetadata;\n        this.onDidChangeInternalMetadataEmitter.fire({ lastRunSuccessChanged });\n\n    }\n\n    textModel: MonacoEditorModel;\n\n    protected htmlContext: HTMLLIElement;\n\n    get context(): HTMLLIElement {\n        return this.htmlContext;\n    }\n\n    get text(): string {\n        return this.textModel ? this.textModel.getText() : this.source;\n    }\n\n    get source(): string {\n        return this.props.source;\n    }\n    set source(source: string) {\n        this.props.source = source;\n    }\n    get language(): string {\n        return this.props.language;\n    }\n\n    set language(newLanguage: string) {\n        if (this.language === newLanguage) {\n            return;\n        }\n\n        this.props.language = newLanguage;\n        if (this.textModel) {\n            this.textModel.setLanguageId(newLanguage);\n        }\n\n        this.language = newLanguage;\n        this.onDidChangeLanguageEmitter.fire(newLanguage);\n        this.onDidChangeContentEmitter.fire('language');\n    }\n\n    get uri(): URI {\n        return this.props.uri;\n    }\n    get handle(): number {\n        return this.props.handle;\n    }\n    get cellKind(): CellKind {\n        return this.props.cellKind;\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this._outputs = this.props.outputs.map(op => new NotebookCellOutputModel(op));\n        this._metadata = this.props.metadata ?? {};\n        this._internalMetadata = this.props.internalMetadata ?? {};\n    }\n\n    refChanged(node: HTMLLIElement): void {\n        if (node) {\n            this.htmlContext = node;\n            this.notebookCellContextManager.updateCellContext(this, node);\n        }\n    }\n\n    dispose(): void {\n        this.onDidChangeOutputsEmitter.dispose();\n        this.onDidChangeOutputItemsEmitter.dispose();\n        this.onDidChangeContentEmitter.dispose();\n        this.onDidChangeMetadataEmitter.dispose();\n        this.onDidChangeInternalMetadataEmitter.dispose();\n        this.onDidChangeLanguageEmitter.dispose();\n        this.notebookCellContextManager.dispose();\n        this.textModel.dispose();\n        this.toDispose.dispose();\n    }\n\n    requestEdit(): void {\n        this.onDidRequestCellEditChangeEmitter.fire(true);\n    }\n\n    requestStopEdit(): void {\n        this.onDidRequestCellEditChangeEmitter.fire(false);\n    }\n\n    spliceNotebookCellOutputs(splice: NotebookCellOutputsSplice): void {\n        if (splice.deleteCount > 0 && splice.newOutputs.length > 0) {\n            const commonLen = Math.min(splice.deleteCount, splice.newOutputs.length);\n            // update\n            for (let i = 0; i < commonLen; i++) {\n                const currentOutput = this.outputs[splice.start + i];\n                const newOutput = splice.newOutputs[i];\n\n                this.replaceOutputData(currentOutput.outputId, newOutput);\n            }\n\n            this.outputs.splice(splice.start + commonLen, splice.deleteCount - commonLen, ...splice.newOutputs.slice(commonLen).map(op => new NotebookCellOutputModel(op)));\n            this.onDidChangeOutputsEmitter.fire({ start: splice.start + commonLen, deleteCount: splice.deleteCount - commonLen, newOutputs: splice.newOutputs.slice(commonLen) });\n        } else {\n            this.outputs.splice(splice.start, splice.deleteCount, ...splice.newOutputs.map(op => new NotebookCellOutputModel(op)));\n            this.onDidChangeOutputsEmitter.fire(splice);\n        }\n    }\n\n    replaceOutputData(outputId: string, newOutputData: CellOutput): boolean {\n        const output = this.outputs.find(out => out.outputId === outputId);\n\n        if (!output) {\n            return false;\n        }\n\n        output.replaceData(newOutputData);\n        this.onDidChangeOutputItemsEmitter.fire(output);\n        return true;\n    }\n\n    changeOutputItems(outputId: string, append: boolean, items: CellOutputItem[]): boolean {\n        const output = this.outputs.find(out => out.outputId === outputId);\n\n        if (!output) {\n            return false;\n        }\n\n        if (append) {\n            output.appendData(items);\n        } else {\n            output.replaceData({ outputId: outputId, outputs: items, metadata: output.metadata });\n        }\n        this.onDidChangeOutputItemsEmitter.fire(output);\n        return true;\n    }\n\n    getData(): CellData {\n        return {\n            cellKind: this.cellKind,\n            language: this.language,\n            outputs: this.outputs.map(output => output.getData()),\n            source: this.text,\n            collapseState: this.props.collapseState,\n            internalMetadata: this.internalMetadata,\n            metadata: this.metadata\n        };\n    }\n\n    async resolveTextModel(): Promise<MonacoEditorModel> {\n        if (this.textModel) {\n            return this.textModel;\n        }\n\n        const ref = await this.textModelService.createModelReference(this.uri);\n        this.textModel = ref.object;\n        return ref.object;\n    }\n}\n\nfunction computeRunStartTimeAdjustment(oldMetadata: NotebookCellInternalMetadata, newMetadata: NotebookCellInternalMetadata): number | undefined {\n    if (oldMetadata.runStartTime !== newMetadata.runStartTime && typeof newMetadata.runStartTime === 'number') {\n        const offset = Date.now() - newMetadata.runStartTime;\n        return offset < 0 ? Math.abs(offset) : 0;\n    } else {\n        return newMetadata.runStartTimeAdjustment;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Disposable, Emitter } from '@theia/core';\nimport { BinaryBuffer } from '@theia/core/lib/common/buffer';\nimport { CellOutput, CellOutputItem, isTextStreamMime } from '../../common';\n\nexport class NotebookCellOutputModel implements Disposable {\n\n    private didChangeDataEmitter = new Emitter<void>();\n    readonly onDidChangeData = this.didChangeDataEmitter.event;\n\n    private requestOutputPresentationChangeEmitter = new Emitter<void>();\n    readonly onRequestOutputPresentationChange = this.requestOutputPresentationChangeEmitter.event;\n\n    get outputId(): string {\n        return this.rawOutput.outputId;\n    }\n\n    get outputs(): CellOutputItem[] {\n        return this.rawOutput.outputs || [];\n    }\n\n    get metadata(): Record<string, unknown> | undefined {\n        return this.rawOutput.metadata;\n    }\n\n    constructor(private rawOutput: CellOutput) { }\n\n    replaceData(rawData: CellOutput): void {\n        this.rawOutput = rawData;\n        this.optimizeOutputItems();\n        this.didChangeDataEmitter.fire();\n    }\n\n    appendData(items: CellOutputItem[]): void {\n        this.rawOutput.outputs.push(...items);\n        this.optimizeOutputItems();\n        this.didChangeDataEmitter.fire();\n    }\n\n    dispose(): void {\n        this.didChangeDataEmitter.dispose();\n        this.requestOutputPresentationChangeEmitter.dispose();\n    }\n\n    requestOutputPresentationUpdate(): void {\n        this.requestOutputPresentationChangeEmitter.fire();\n    }\n\n    getData(): CellOutput {\n        return {\n            outputs: this.outputs,\n            metadata: this.metadata,\n            outputId: this.outputId\n        };\n    }\n\n    private optimizeOutputItems(): void {\n        if (this.outputs.length > 1 && this.outputs.every(item => isTextStreamMime(item.mime))) {\n            // Look for the mimes in the items, and keep track of their order.\n            // Merge the streams into one output item, per mime type.\n            const mimeOutputs = new Map<string, BinaryBuffer[]>();\n            const mimeTypes: string[] = [];\n            this.outputs.forEach(item => {\n                let items: BinaryBuffer[];\n                if (mimeOutputs.has(item.mime)) {\n                    items = mimeOutputs.get(item.mime)!;\n                } else {\n                    items = [];\n                    mimeOutputs.set(item.mime, items);\n                    mimeTypes.push(item.mime);\n                }\n                items.push(item.data);\n            });\n            this.outputs.length = 0;\n            mimeTypes.forEach(mime => {\n                this.outputs.push({\n                    mime,\n                    data: BinaryBuffer.concat(mimeOutputs.get(mime)!)\n                });\n            });\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 20023 Typefox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Disposable, Emitter, URI } from '@theia/core';\nimport { Saveable, SaveOptions } from '@theia/core/lib/browser';\nimport {\n    CellData,\n    CellEditOperation, CellEditType, CellUri, NotebookCellInternalMetadata,\n    NotebookCellsChangeType, NotebookCellTextModelSplice, NotebookData,\n    NotebookDocumentMetadata, NotebookModelWillAddRemoveEvent,\n    NotebookTextModelChangedEvent, NullablePartialNotebookCellInternalMetadata\n} from '../../common';\nimport { NotebookSerializer } from '../service/notebook-service';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { NotebookCellModel, NotebookCellModelFactory } from './notebook-cell-model';\nimport { MonacoTextModelService } from '@theia/monaco/lib/browser/monaco-text-model-service';\nimport { inject, injectable, interfaces, postConstruct } from '@theia/core/shared/inversify';\nimport { NotebookKernel } from '../service/notebook-kernel-service';\nimport { UndoRedoService } from '@theia/editor/lib/browser/undo-redo-service';\n\nexport const NotebookModelFactory = Symbol('NotebookModelFactory');\n\nexport function createNotebookModelContainer(parent: interfaces.Container, props: NotebookModelProps): interfaces.Container {\n    const child = parent.createChild();\n\n    child.bind(NotebookModelProps).toConstantValue(props);\n    child.bind(NotebookModel).toSelf();\n\n    return child;\n}\n\nconst NotebookModelProps = Symbol('NotebookModelProps');\nexport interface NotebookModelProps {\n    data: NotebookData,\n    uri: URI,\n    viewType: string,\n    serializer: NotebookSerializer,\n}\n\n@injectable()\nexport class NotebookModel implements Saveable, Disposable {\n\n    protected readonly onDirtyChangedEmitter = new Emitter<void>();\n    readonly onDirtyChanged = this.onDirtyChangedEmitter.event;\n\n    protected readonly onDidSaveNotebookEmitter = new Emitter<void>();\n    readonly onDidSaveNotebook = this.onDidSaveNotebookEmitter.event;\n\n    protected readonly onDidAddOrRemoveCellEmitter = new Emitter<NotebookModelWillAddRemoveEvent>();\n    readonly onDidAddOrRemoveCell = this.onDidAddOrRemoveCellEmitter.event;\n\n    protected readonly onDidChangeContentEmitter = new Emitter<NotebookTextModelChangedEvent>();\n    readonly onDidChangeContent = this.onDidChangeContentEmitter.event;\n\n    @inject(FileService)\n    protected readonly fileService: FileService;\n\n    @inject(UndoRedoService)\n    protected readonly undoRedoService: UndoRedoService;\n\n    @inject(NotebookModelProps)\n    protected props: NotebookModelProps;\n\n    @inject(MonacoTextModelService)\n    protected modelService: MonacoTextModelService;\n\n    @inject(NotebookCellModelFactory)\n    protected cellModelFactory: NotebookCellModelFactory;\n    readonly autoSave: 'off' | 'afterDelay' | 'onFocusChange' | 'onWindowChange';\n\n    nextHandle: number = 0;\n\n    kernel?: NotebookKernel;\n\n    dirty: boolean;\n    selectedCell?: NotebookCellModel;\n    protected dirtyCells: NotebookCellModel[] = [];\n\n    cells: NotebookCellModel[];\n\n    get uri(): URI {\n        return this.props.uri;\n    }\n\n    get viewType(): string {\n        return this.props.viewType;\n    }\n\n    metadata: NotebookDocumentMetadata = {};\n\n    @postConstruct()\n    initialize(): void {\n        this.dirty = false;\n\n        this.cells = this.props.data.cells.map((cell, index) => this.cellModelFactory({\n            uri: CellUri.generate(this.props.uri, index),\n            handle: index,\n            source: cell.source,\n            language: cell.language,\n            cellKind: cell.cellKind,\n            outputs: cell.outputs,\n            metadata: cell.metadata,\n            internalMetadata: cell.internalMetadata,\n            collapseState: cell.collapseState\n        }));\n\n        this.addCellOutputListeners(this.cells);\n\n        this.metadata = this.metadata;\n\n        this.modelService.onDidCreate(editorModel => {\n            const modelUri = new URI(editorModel.uri);\n            if (modelUri.scheme === CellUri.scheme) {\n                const cellUri = CellUri.parse(modelUri);\n                if (cellUri && cellUri.notebook.isEqual(this.uri)) {\n                    const cell = this.cells.find(c => c.handle === cellUri.handle);\n                    if (cell) {\n                        cell.textModel = editorModel;\n                    }\n                }\n            }\n        });\n        this.nextHandle = this.cells.length;\n    }\n\n    dispose(): void {\n        this.onDirtyChangedEmitter.dispose();\n        this.onDidSaveNotebookEmitter.dispose();\n        this.onDidAddOrRemoveCellEmitter.dispose();\n        this.onDidChangeContentEmitter.dispose();\n        this.cells.forEach(cell => cell.dispose());\n    }\n\n    async save(options: SaveOptions): Promise<void> {\n        this.dirtyCells = [];\n        this.dirty = false;\n        this.onDirtyChangedEmitter.fire();\n\n        const serializedNotebook = await this.props.serializer.fromNotebook({\n            cells: this.cells.map(cell => cell.getData()),\n            metadata: this.metadata\n        });\n        this.fileService.writeFile(this.uri, serializedNotebook);\n\n        this.onDidSaveNotebookEmitter.fire();\n    }\n\n    createSnapshot(): Saveable.Snapshot {\n        const model = this;\n        return {\n            read(): string {\n                return JSON.stringify({\n                    cells: model.cells.map(cell => cell.getData()),\n                    metadata: model.metadata\n                });\n            }\n        };\n    }\n\n    async revert(options?: Saveable.RevertOptions): Promise<void> {\n        this.dirty = false;\n        this.onDirtyChangedEmitter.fire();\n    }\n\n    isDirty(): boolean {\n        return this.dirty;\n    }\n\n    cellDirtyChanged(cell: NotebookCellModel, dirtyState: boolean): void {\n        if (dirtyState) {\n            this.dirtyCells.push(cell);\n        } else {\n            this.dirtyCells.splice(this.dirtyCells.indexOf(cell), 1);\n        }\n\n        const oldDirtyState = this.dirty;\n        this.dirty = this.dirtyCells.length > 0;\n        if (this.dirty !== oldDirtyState) {\n            this.onDirtyChangedEmitter.fire();\n        }\n    }\n\n    undo(): void {\n        // TODO we probably need to check if a monaco editor is focused and if so, not undo\n        this.undoRedoService.undo(this.uri);\n    }\n\n    redo(): void {\n        // TODO see undo\n        this.undoRedoService.redo(this.uri);\n    }\n\n    setSelectedCell(cell: NotebookCellModel): void {\n        this.selectedCell = cell;\n    }\n\n    private addCellOutputListeners(cells: NotebookCellModel[]): void {\n        for (const cell of cells) {\n            cell.onDidChangeOutputs(() => {\n                this.dirty = true;\n                this.onDirtyChangedEmitter.fire();\n            });\n        }\n    }\n\n    applyEdits(rawEdits: CellEditOperation[], computeUndoRedo: boolean): void {\n        const editsWithDetails = rawEdits.map((edit, index) => {\n            let cellIndex: number = -1;\n            if ('index' in edit) {\n                cellIndex = edit.index;\n            } else if ('handle' in edit) {\n                cellIndex = this.getCellIndexByHandle(edit.handle);\n            } else if ('outputId' in edit) {\n                cellIndex = this.cells.findIndex(cell => cell.outputs.some(output => output.outputId === edit.outputId));\n            }\n\n            return {\n                edit,\n                cellIndex,\n                end: edit.editType === CellEditType.Replace ? edit.index + edit.count : cellIndex,\n                originalIndex: index\n            };\n        }).filter(edit => !!edit);\n\n        for (const { edit, cellIndex } of editsWithDetails) {\n            const cell = this.cells[cellIndex];\n            if (cell) {\n                this.cellDirtyChanged(cell, true);\n            }\n            switch (edit.editType) {\n                case CellEditType.Replace:\n                    this.replaceCells(edit.index, edit.count, edit.cells, computeUndoRedo);\n                    break;\n                case CellEditType.Output: {\n                    if (edit.append) {\n                        cell.spliceNotebookCellOutputs({ deleteCount: 0, newOutputs: edit.outputs, start: cell.outputs.length });\n                    } else {\n                        // could definitely be more efficient. See vscode __spliceNotebookCellOutputs2\n                        // For now, just replace the whole existing output with the new output\n                        cell.spliceNotebookCellOutputs({ start: 0, deleteCount: cell.outputs.length, newOutputs: edit.outputs });\n                    }\n\n                    break;\n                }\n                case CellEditType.OutputItems:\n                    cell.changeOutputItems(edit.outputId, !!edit.append, edit.items);\n                    break;\n                case CellEditType.Metadata:\n                    this.updateNotebookMetadata(edit.metadata, computeUndoRedo);\n                    break;\n                case CellEditType.PartialInternalMetadata:\n                    this.changeCellInternalMetadataPartial(this.cells[cellIndex], edit.internalMetadata);\n                    break;\n                case CellEditType.CellLanguage:\n                    this.changeCellLanguage(this.cells[cellIndex], edit.language, computeUndoRedo);\n                    break;\n                case CellEditType.DocumentMetadata:\n                    break;\n                case CellEditType.Move:\n                    this.moveCellToIndex(cellIndex, edit.length, edit.newIdx, computeUndoRedo);\n                    break;\n\n            }\n        }\n    }\n\n    private replaceCells(start: number, deleteCount: number, newCells: CellData[], computeUndoRedo: boolean): void {\n        const cells = newCells.map(cell => {\n            const handle = this.nextHandle++;\n            return this.cellModelFactory({\n                uri: CellUri.generate(this.uri, handle),\n                handle: handle,\n                source: cell.source,\n                language: cell.language,\n                cellKind: cell.cellKind,\n                outputs: cell.outputs,\n                metadata: cell.metadata,\n                internalMetadata: cell.internalMetadata,\n                collapseState: cell.collapseState\n            });\n        });\n        this.addCellOutputListeners(cells);\n\n        const changes: NotebookCellTextModelSplice<NotebookCellModel>[] = [[start, deleteCount, cells]];\n\n        const deletedCells = this.cells.splice(start, deleteCount, ...cells);\n\n        for (const cell of deletedCells) {\n            cell.dispose();\n        }\n\n        if (computeUndoRedo) {\n            this.undoRedoService.pushElement(this.uri,\n                async () => this.replaceCells(start, newCells.length, deletedCells.map(cell => cell.getData()), false),\n                async () => this.replaceCells(start, deleteCount, newCells, false));\n        }\n\n        this.onDidAddOrRemoveCellEmitter.fire({ rawEvent: { kind: NotebookCellsChangeType.ModelChange, changes } });\n        this.onDidChangeContentEmitter.fire({ rawEvents: [{ kind: NotebookCellsChangeType.ModelChange, changes }] });\n    }\n\n    private changeCellInternalMetadataPartial(cell: NotebookCellModel, internalMetadata: NullablePartialNotebookCellInternalMetadata): void {\n        const newInternalMetadata: NotebookCellInternalMetadata = {\n            ...cell.internalMetadata\n        };\n        let k: keyof NotebookCellInternalMetadata;\n        // eslint-disable-next-line guard-for-in\n        for (k in internalMetadata) {\n            newInternalMetadata[k] = (internalMetadata[k] ?? undefined) as never;\n        }\n\n        cell.internalMetadata = newInternalMetadata;\n        this.onDidChangeContentEmitter.fire({\n            rawEvents: [\n                { kind: NotebookCellsChangeType.ChangeCellInternalMetadata, index: this.cells.indexOf(cell), internalMetadata: newInternalMetadata }\n            ]\n        });\n    }\n\n    private updateNotebookMetadata(metadata: NotebookDocumentMetadata, computeUndoRedo: boolean): void {\n        const oldMetadata = this.metadata;\n        if (computeUndoRedo) {\n            this.undoRedoService.pushElement(this.uri,\n                async () => this.updateNotebookMetadata(oldMetadata, false),\n                async () => this.updateNotebookMetadata(metadata, false)\n            );\n        }\n\n        this.metadata = metadata;\n        this.onDidChangeContentEmitter.fire({\n            rawEvents: [{ kind: NotebookCellsChangeType.ChangeDocumentMetadata, metadata: this.metadata }],\n            synchronous: true,\n        });\n    }\n\n    private changeCellLanguage(cell: NotebookCellModel, languageId: string, computeUndoRedo: boolean): void {\n        if (cell.language === languageId) {\n            return;\n        }\n\n        cell.language = languageId;\n\n        this.onDidChangeContentEmitter.fire({\n            rawEvents: [{ kind: NotebookCellsChangeType.ChangeCellLanguage, index: this.cells.indexOf(cell), language: languageId }],\n            synchronous: true,\n        });\n    }\n\n    private moveCellToIndex(fromIndex: number, length: number, toIndex: number, computeUndoRedo: boolean): boolean {\n        if (computeUndoRedo) {\n            this.undoRedoService.pushElement(this.uri,\n                async () => { this.moveCellToIndex(toIndex, length, fromIndex, false); },\n                async () => { this.moveCellToIndex(fromIndex, length, toIndex, false); }\n            );\n        }\n\n        const cells = this.cells.splice(fromIndex, length);\n        this.cells.splice(toIndex, 0, ...cells);\n        this.onDidChangeContentEmitter.fire({\n            rawEvents: [{ kind: NotebookCellsChangeType.Move, index: fromIndex, length, newIdx: toIndex, cells }],\n        });\n\n        return true;\n    }\n\n    private getCellIndexByHandle(handle: number): number {\n        return this.cells.findIndex(c => c.handle === handle);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as React from '@theia/core/shared/react';\nimport { NotebookModel } from '../view-model/notebook-model';\nimport { NotebookCellModel } from '../view-model/notebook-cell-model';\nimport { SimpleMonacoEditor } from '@theia/monaco/lib/browser/simple-monaco-editor';\nimport { MonacoEditorServices } from '@theia/monaco/lib/browser/monaco-editor';\nimport { MonacoEditorProvider } from '@theia/monaco/lib/browser/monaco-editor-provider';\nimport { DisposableCollection } from '@theia/core';\n\ninterface CellEditorProps {\n    notebookModel: NotebookModel,\n    cell: NotebookCellModel,\n    monacoServices: MonacoEditorServices\n}\n\nconst DEFAULT_EDITOR_OPTIONS = {\n    ...MonacoEditorProvider.inlineOptions,\n    minHeight: -1,\n    maxHeight: -1,\n    scrollbar: {\n        ...MonacoEditorProvider.inlineOptions.scrollbar,\n        alwaysConsumeMouseWheel: false\n    }\n};\n\nexport class CellEditor extends React.Component<CellEditorProps, {}> {\n\n    protected editor?: SimpleMonacoEditor;\n    protected toDispose = new DisposableCollection();\n    protected container?: HTMLDivElement;\n\n    override componentDidMount(): void {\n        this.disposeEditor();\n        this.initEditor();\n    }\n\n    override componentWillUnmount(): void {\n        this.disposeEditor();\n    }\n\n    protected disposeEditor(): void {\n        this.toDispose.dispose();\n        this.toDispose = new DisposableCollection();\n    }\n\n    protected async initEditor(): Promise<void> {\n        const { cell, notebookModel, monacoServices } = this.props;\n        if (this.container) {\n            const editorNode = this.container;\n            const editorModel = await cell.resolveTextModel();\n            const uri = cell.uri;\n            this.editor = new SimpleMonacoEditor(uri,\n                editorModel,\n                editorNode,\n                monacoServices,\n                DEFAULT_EDITOR_OPTIONS);\n            this.toDispose.push(this.editor);\n            this.editor.setLanguage(cell.language);\n            this.toDispose.push(this.editor.getControl().onDidContentSizeChange(() => {\n                editorNode.style.height = this.editor!.getControl().getContentHeight() + 7 + 'px';\n                this.editor!.setSize({ width: -1, height: this.editor!.getControl().getContentHeight() });\n            }));\n            this.toDispose.push(this.editor.onDocumentContentChanged(e => {\n                notebookModel.cellDirtyChanged(cell, true);\n                cell.source = e.document.getText();\n            }));\n        }\n    }\n\n    protected assignRef = (component: HTMLDivElement) => {\n        this.container = component;\n    };\n\n    protected handleResize = () => {\n        this.editor?.refresh();\n    };\n\n    override render(): React.ReactNode {\n        return <div className='theia-notebook-cell-editor' onResize={this.handleResize} id={this.props.cell.uri.toString()} ref={this.assignRef}></div>;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport * as React from '@theia/core/shared/react';\nimport { CellEditType, CellKind } from '../../common';\nimport { NotebookCellModel } from '../view-model/notebook-cell-model';\nimport { NotebookModel } from '../view-model/notebook-model';\nimport { NotebookCellToolbarFactory } from './notebook-cell-toolbar-factory';\nimport { codicon } from '@theia/core/lib/browser';\nimport { CommandRegistry, DisposableCollection, nls } from '@theia/core';\nimport { NotebookCommands } from '../contributions/notebook-actions-contribution';\nimport { NotebookCellActionContribution } from '../contributions/notebook-cell-actions-contribution';\n\nexport interface CellRenderer {\n    render(notebookData: NotebookModel, cell: NotebookCellModel, index: number): React.ReactNode\n}\n\ninterface CellListProps {\n    renderers: Map<CellKind, CellRenderer>;\n    notebookModel: NotebookModel;\n    toolbarRenderer: NotebookCellToolbarFactory;\n    commandRegistry: CommandRegistry\n}\n\ninterface NotebookCellListState {\n    selectedCell?: NotebookCellModel;\n    dragOverIndicator: { cell: NotebookCellModel, position: 'top' | 'bottom' } | undefined;\n}\n\nexport class NotebookCellListView extends React.Component<CellListProps, NotebookCellListState> {\n\n    protected toDispose = new DisposableCollection();\n\n    constructor(props: CellListProps) {\n        super(props);\n        this.state = { selectedCell: undefined, dragOverIndicator: undefined };\n        this.toDispose.push(props.notebookModel.onDidAddOrRemoveCell(e => {\n            this.setState({ selectedCell: undefined });\n        }));\n    }\n\n    override componentWillUnmount(): void {\n        this.toDispose.dispose();\n    }\n\n    override render(): React.ReactNode {\n        return <ul className='theia-notebook-cell-list'>\n            {this.props.notebookModel.cells\n                .map((cell, index) =>\n                    <React.Fragment key={'cell-' + cell.handle}>\n                        <NotebookCellDivider onAddNewCell={(kind: CellKind) => this.onAddNewCell(kind, index)}\n                            onDrop={e => this.onDrop(e, index)}\n                            onDragOver={e => this.onDragOver(e, cell, 'top')} />\n                        {this.shouldRenderDragOverIndicator(cell, 'top') && <CellDropIndicator />}\n                        <li className={'theia-notebook-cell' + (this.state.selectedCell === cell ? ' focused' : '')}\n                            onClick={() => {\n                                this.setState({ selectedCell: cell });\n                                this.props.notebookModel.setSelectedCell(cell);\n                            }}\n                            onDragStart={e => this.onDragStart(e, index)}\n                            onDragOver={e => this.onDragOver(e, cell)}\n                            onDrop={e => this.onDrop(e, index)}\n                            draggable={true}\n                            ref={(node: HTMLLIElement) => cell.refChanged(node)}>\n                            <div className={'theia-notebook-cell-marker' + (this.state.selectedCell === cell ? ' theia-notebook-cell-marker-selected' : '')}></div>\n                            <div className='theia-notebook-cell-content'>\n                                {this.renderCellContent(cell, index)}\n                            </div>\n                            {this.state.selectedCell === cell &&\n                                this.props.toolbarRenderer.renderCellToolbar(NotebookCellActionContribution.ACTION_MENU, this.props.notebookModel, cell)}\n                        </li>\n                        {this.shouldRenderDragOverIndicator(cell, 'bottom') && <CellDropIndicator />}\n                    </React.Fragment>\n                )\n            }\n            <NotebookCellDivider onAddNewCell={(kind: CellKind) => this.onAddNewCell(kind, this.props.notebookModel.cells.length)}\n                onDrop={e => this.onDrop(e, this.props.notebookModel.cells.length - 1)}\n                onDragOver={e => this.onDragOver(e, this.props.notebookModel.cells[this.props.notebookModel.cells.length - 1], 'bottom')} />\n        </ul>;\n    }\n\n    renderCellContent(cell: NotebookCellModel, index: number): React.ReactNode {\n        const renderer = this.props.renderers.get(cell.cellKind);\n        if (!renderer) {\n            throw new Error(`No renderer found for cell type ${cell.cellKind}`);\n        }\n        return renderer.render(this.props.notebookModel, cell, index);\n    }\n\n    protected onDragStart(event: React.DragEvent<HTMLLIElement>, index: number): void {\n        event.stopPropagation();\n        event.dataTransfer.setData('text/notebook-cell-index', index.toString());\n    }\n\n    protected onDragOver(event: React.DragEvent<HTMLLIElement>, cell: NotebookCellModel, position?: 'top' | 'bottom'): void {\n        event.preventDefault();\n        event.stopPropagation();\n        // show indicator\n        this.setState({ ...this.state, dragOverIndicator: { cell, position: position ?? event.nativeEvent.offsetY < event.currentTarget.clientHeight / 2 ? 'top' : 'bottom' } });\n    }\n\n    protected onDrop(event: React.DragEvent<HTMLLIElement>, dropElementIndex: number): void {\n        const index = parseInt(event.dataTransfer.getData('text/notebook-cell-index'));\n        const isTargetBelow = index < dropElementIndex;\n        let newIdx = this.state.dragOverIndicator?.position === 'top' ? dropElementIndex : dropElementIndex + 1;\n        newIdx = isTargetBelow ? newIdx - 1 : newIdx;\n        if (index !== undefined && index !== dropElementIndex) {\n            this.props.notebookModel.applyEdits([{\n                editType: CellEditType.Move,\n                length: 1,\n                index,\n                newIdx\n            }], true);\n        }\n        this.setState({ ...this.state, dragOverIndicator: undefined });\n    }\n\n    protected onAddNewCell(kind: CellKind, index: number): void {\n        this.props.commandRegistry.executeCommand(NotebookCommands.ADD_NEW_CELL_COMMAND.id,\n            this.props.notebookModel,\n            kind,\n            index\n        );\n    }\n\n    protected shouldRenderDragOverIndicator(cell: NotebookCellModel, position: 'top' | 'bottom'): boolean {\n        return this.state.dragOverIndicator !== undefined &&\n            this.state.dragOverIndicator.cell === cell &&\n            this.state.dragOverIndicator.position === position;\n    }\n\n}\n\nexport interface NotebookCellDividerProps {\n    onAddNewCell: (type: CellKind) => void;\n    onDrop: (event: React.DragEvent<HTMLLIElement>) => void;\n    onDragOver: (event: React.DragEvent<HTMLLIElement>) => void;\n}\n\nexport function NotebookCellDivider({ onAddNewCell, onDrop, onDragOver }: NotebookCellDividerProps): React.JSX.Element {\n    const [hover, setHover] = React.useState(false);\n\n    return <li className='theia-notebook-cell-divider' onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)} onDrop={onDrop} onDragOver={onDragOver}>\n        {hover && <div className='theia-notebook-add-cell-buttons'>\n            <button className='theia-notebook-add-cell-button' onClick={() => onAddNewCell(CellKind.Code)} title={nls.localizeByDefault('Add Code Cell')}>\n                <div className={codicon('add') + ' theia-notebook-add-cell-button-icon'} />\n                {nls.localizeByDefault('Code')}\n            </button>\n            <button className='theia-notebook-add-cell-button' onClick={() => onAddNewCell(CellKind.Markup)} title={nls.localizeByDefault('Add Markdown Cell')}>\n                <div className={codicon('add') + ' theia-notebook-add-cell-button-icon'} />\n                {nls.localizeByDefault('Markdown')}\n            </button>\n        </div>}\n    </li>;\n}\n\nfunction CellDropIndicator(): React.JSX.Element {\n    return <div className='theia-notebook-cell-drop-indicator' />;\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as React from '@theia/core/shared/react';\nimport { CommandRegistry, CompoundMenuNodeRole, MenuModelRegistry, MenuNode } from '@theia/core';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nimport { NotebookCellSidebar, NotebookCellToolbar } from './notebook-cell-toolbar';\nimport { ContextMenuRenderer } from '@theia/core/lib/browser';\nimport { NotebookModel } from '../view-model/notebook-model';\nimport { NotebookCellModel } from '../view-model/notebook-cell-model';\nimport { NotebookCellOutputModel } from '../view-model/notebook-cell-output-model';\n\nexport interface NotebookCellToolbarItem {\n    id: string;\n    icon?: string;\n    label?: string;\n    onClick: (e: React.MouseEvent) => void;\n}\n\n@injectable()\nexport class NotebookCellToolbarFactory {\n\n    @inject(MenuModelRegistry)\n    protected menuRegistry: MenuModelRegistry;\n\n    @inject(ContextKeyService)\n    protected contextKeyService: ContextKeyService;\n\n    @inject(ContextMenuRenderer)\n    protected readonly contextMenuRenderer: ContextMenuRenderer;\n\n    @inject(CommandRegistry)\n    protected readonly commandRegistry: CommandRegistry;\n\n    renderCellToolbar(menuPath: string[], notebookModel: NotebookModel, cell: NotebookCellModel): React.ReactNode {\n        return <NotebookCellToolbar getMenuItems={() => this.getMenuItems(menuPath, notebookModel, cell)}\n            onContextKeysChanged={cell.notebookCellContextManager.onDidChangeContext} />;\n    }\n\n    renderSidebar(menuPath: string[], notebookModel: NotebookModel, cell: NotebookCellModel, output?: NotebookCellOutputModel): React.ReactNode {\n        return <NotebookCellSidebar getMenuItems={() => this.getMenuItems(menuPath, notebookModel, cell, output)}\n            onContextKeysChanged={cell.notebookCellContextManager.onDidChangeContext} />;\n    }\n\n    private getMenuItems(menuItemPath: string[], notebookModel: NotebookModel, cell: NotebookCellModel, output?: NotebookCellOutputModel): NotebookCellToolbarItem[] {\n        const inlineItems: NotebookCellToolbarItem[] = [];\n\n        for (const menuNode of this.menuRegistry.getMenu(menuItemPath).children) {\n            if (!menuNode.when || this.contextKeyService.match(menuNode.when, cell.context ?? undefined)) {\n                if (menuNode.role === CompoundMenuNodeRole.Flat) {\n                    inlineItems.push(...menuNode.children?.map(child => this.createToolbarItem(child, notebookModel, cell, output)) ?? []);\n                } else {\n                    inlineItems.push(this.createToolbarItem(menuNode, notebookModel, cell, output));\n                }\n            }\n        }\n        return inlineItems;\n    }\n\n    private createToolbarItem(menuNode: MenuNode, notebookModel: NotebookModel, cell: NotebookCellModel, output?: NotebookCellOutputModel): NotebookCellToolbarItem {\n        const menuPath = menuNode.role === CompoundMenuNodeRole.Submenu ? this.menuRegistry.getPath(menuNode) : undefined;\n        return {\n            id: menuNode.id,\n            icon: menuNode.icon,\n            label: menuNode.label,\n            onClick: menuPath ?\n                e => this.contextMenuRenderer.render(\n                    {\n                        anchor: e.nativeEvent,\n                        menuPath,\n                        includeAnchorArg: false,\n                        args: [notebookModel, cell, output]\n                    }) :\n                () => this.commandRegistry.executeCommand(menuNode.command!, notebookModel, cell, output)\n        };\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport * as React from '@theia/core/shared/react';\nimport { ACTION_ITEM } from '@theia/core/lib/browser';\nimport { NotebookCellToolbarItem } from './notebook-cell-toolbar-factory';\nimport { DisposableCollection, Event } from '@theia/core';\n\nexport interface NotebookCellToolbarProps {\n    getMenuItems: () => NotebookCellToolbarItem[];\n    onContextKeysChanged: Event<void>;\n}\n\ninterface NotebookCellToolbarState {\n    inlineItems: NotebookCellToolbarItem[];\n}\n\nabstract class NotebookCellActionItems extends React.Component<NotebookCellToolbarProps, NotebookCellToolbarState> {\n\n    protected toDispose = new DisposableCollection();\n\n    constructor(props: NotebookCellToolbarProps) {\n        super(props);\n        this.toDispose.push(props.onContextKeysChanged(e => {\n            this.setState({ inlineItems: this.props.getMenuItems() });\n        }));\n        this.state = { inlineItems: this.props.getMenuItems() };\n    }\n\n    override componentWillUnmount(): void {\n        this.toDispose.dispose();\n    }\n\n    protected renderItem(item: NotebookCellToolbarItem): React.ReactNode {\n        return <div key={item.id} title={item.label} onClick={item.onClick} className={`${item.icon} ${ACTION_ITEM} theia-notebook-cell-toolbar-item`} />;\n    }\n\n}\n\nexport class NotebookCellToolbar extends NotebookCellActionItems {\n\n    override render(): React.ReactNode {\n        return <div className='theia-notebook-cell-toolbar'>\n            {this.state.inlineItems.map(item => this.renderItem(item))}\n        </div>;\n    }\n\n}\n\nexport class NotebookCellSidebar extends NotebookCellActionItems {\n\n    override render(): React.ReactNode {\n        return <div className='theia-notebook-cell-sidebar'>\n            {this.state.inlineItems.map(item => this.renderItem(item))}\n        </div>;\n    }\n}\n\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport * as React from '@theia/core/shared/react';\nimport { MonacoEditorServices } from '@theia/monaco/lib/browser/monaco-editor';\nimport { CellOutputWebviewFactory, CellOutputWebview } from '../renderers/cell-output-webview';\nimport { NotebookRendererRegistry } from '../notebook-renderer-registry';\nimport { NotebookCellModel } from '../view-model/notebook-cell-model';\nimport { NotebookModel } from '../view-model/notebook-model';\nimport { CellEditor } from './notebook-cell-editor';\nimport { CellRenderer } from './notebook-cell-list-view';\nimport { NotebookCellToolbarFactory } from './notebook-cell-toolbar-factory';\nimport { NotebookCellActionContribution } from '../contributions/notebook-cell-actions-contribution';\nimport { CellExecution, NotebookExecutionStateService } from '../service/notebook-execution-state-service';\nimport { codicon } from '@theia/core/lib/browser';\nimport { NotebookCellExecutionState } from '../../common';\nimport { DisposableCollection } from '@theia/core';\n\n@injectable()\nexport class NotebookCodeCellRenderer implements CellRenderer {\n    @inject(MonacoEditorServices)\n    protected readonly monacoServices: MonacoEditorServices;\n\n    @inject(NotebookRendererRegistry)\n    protected readonly notebookRendererRegistry: NotebookRendererRegistry;\n\n    @inject(CellOutputWebviewFactory)\n    protected readonly cellOutputWebviewFactory: CellOutputWebviewFactory;\n\n    @inject(NotebookCellToolbarFactory)\n    protected readonly notebookCellToolbarFactory: NotebookCellToolbarFactory;\n\n    @inject(NotebookExecutionStateService)\n    protected readonly executionStateService: NotebookExecutionStateService;\n\n    render(notebookModel: NotebookModel, cell: NotebookCellModel, handle: number): React.ReactNode {\n        return <div>\n            <div className='theia-notebook-cell-with-sidebar'>\n                <div>\n                    {this.notebookCellToolbarFactory.renderSidebar(NotebookCellActionContribution.CODE_CELL_SIDEBAR_MENU, notebookModel, cell)}\n                    {/* cell-execution-order needs an own component. Could be a little more complicated\n                    <p className='theia-notebook-code-cell-execution-order'>{`[${cell.exec ?? ' '}]`}</p> */}\n                </div>\n                <div className='theia-notebook-cell-editor-container'>\n                    <CellEditor notebookModel={notebookModel} cell={cell} monacoServices={this.monacoServices} />\n                    <NotebookCodeCellStatus cell={cell} executionStateService={this.executionStateService}></NotebookCodeCellStatus>\n                </div>\n            </div>\n            <div className='theia-notebook-cell-with-sidebar'>\n                <NotebookCodeCellOutputs cell={cell} outputWebviewFactory={this.cellOutputWebviewFactory}\n                    renderSidebar={() =>\n                        this.notebookCellToolbarFactory.renderSidebar(NotebookCellActionContribution.OUTPUT_SIDEBAR_MENU, notebookModel, cell, cell.outputs[0])} />\n            </div>\n        </div >;\n    }\n}\n\nexport interface NotebookCodeCellStatusProps {\n    cell: NotebookCellModel;\n    executionStateService: NotebookExecutionStateService\n}\n\nexport class NotebookCodeCellStatus extends React.Component<NotebookCodeCellStatusProps, { currentExecution?: CellExecution }> {\n\n    protected toDispose = new DisposableCollection();\n\n    constructor(props: NotebookCodeCellStatusProps) {\n        super(props);\n\n        this.state = {};\n\n        this.toDispose.push(props.executionStateService.onDidChangeExecution(event => {\n            if (event.affectsCell(this.props.cell.uri)) {\n                this.setState({ currentExecution: event.changed });\n            }\n        }));\n    }\n\n    override componentWillUnmount(): void {\n        this.toDispose.dispose();\n    }\n\n    override render(): React.ReactNode {\n        return <div className='notebook-cell-status'>\n            <div className='notebook-cell-status-left'>\n                {this.renderExecutionState()}\n            </div>\n            <div className='notebook-cell-status-right'>\n                <span>{this.props.cell.language}</span>\n            </div>\n        </div>;\n    }\n\n    private renderExecutionState(): React.ReactNode {\n        const state = this.state.currentExecution?.state;\n        const { lastRunSuccess } = this.props.cell.internalMetadata;\n\n        let iconClasses: string | undefined = undefined;\n        let color: string | undefined = undefined;\n        if (!state && lastRunSuccess) {\n            iconClasses = codicon('check');\n            color = 'green';\n        } else if (!state && lastRunSuccess === false) {\n            iconClasses = codicon('error');\n            color = 'red';\n        } else if (state === NotebookCellExecutionState.Pending || state === NotebookCellExecutionState.Unconfirmed) {\n            iconClasses = codicon('clock');\n        } else if (state === NotebookCellExecutionState.Executing) {\n            iconClasses = `${codicon('sync')} theia-animation-spin`;\n        }\n        return <>\n            {iconClasses &&\n                <>\n                    <span className={`${iconClasses} notebook-cell-status-item`} style={{ color }}></span>\n                    <div className='notebook-cell-status-item'>{this.getExecutionTime()}</div>\n                </>}\n        </>;\n    }\n\n    private getExecutionTime(): string {\n        const { runStartTime, runEndTime } = this.props.cell.internalMetadata;\n        if (runStartTime && runEndTime) {\n            return `${((runEndTime - runStartTime) / 1000).toLocaleString(undefined, { maximumFractionDigits: 1, minimumFractionDigits: 1 })}s`;\n        }\n        return '0.0s';\n    }\n}\n\ninterface NotebookCellOutputProps {\n    cell: NotebookCellModel;\n    outputWebviewFactory: CellOutputWebviewFactory;\n    renderSidebar: () => React.ReactNode;\n}\n\nexport class NotebookCodeCellOutputs extends React.Component<NotebookCellOutputProps> {\n\n    protected outputsWebview: CellOutputWebview | undefined;\n\n    constructor(props: NotebookCellOutputProps) {\n        super(props);\n    }\n\n    override async componentDidMount(): Promise<void> {\n        const { cell, outputWebviewFactory } = this.props;\n        cell.onDidChangeOutputs(async () => {\n            if (!this.outputsWebview && cell.outputs.length > 0) {\n                this.outputsWebview = await outputWebviewFactory(cell);\n            } else if (this.outputsWebview && cell.outputs.length === 0) {\n                this.outputsWebview.dispose();\n                this.outputsWebview = undefined;\n            }\n            this.forceUpdate();\n        });\n        if (cell.outputs.length > 0) {\n            this.outputsWebview = await outputWebviewFactory(cell);\n            this.forceUpdate();\n        }\n    }\n\n    override componentDidUpdate(): void {\n        if (!this.outputsWebview?.isAttached()) {\n            this.outputsWebview?.attachWebview();\n        }\n    }\n\n    override render(): React.ReactNode {\n        return this.outputsWebview ?\n            <>\n                {this.props.renderSidebar()}\n                {this.outputsWebview.render()}\n            </> :\n            <></>;\n\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { CommandRegistry, CompoundMenuNodeRole, DisposableCollection, MenuModelRegistry, MenuNode, nls } from '@theia/core';\nimport * as React from '@theia/core/shared/react';\nimport { codicon } from '@theia/core/lib/browser';\nimport { NotebookCommands, NotebookMenus } from '../contributions/notebook-actions-contribution';\nimport { NotebookModel } from '../view-model/notebook-model';\nimport { NotebookKernelService } from '../service/notebook-kernel-service';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { ContextKeyService } from '@theia/core/lib/browser/context-key-service';\n\nexport interface NotebookMainToolbarProps {\n    notebookModel: NotebookModel\n    menuRegistry: MenuModelRegistry;\n    notebookKernelService: NotebookKernelService;\n    commandRegistry: CommandRegistry;\n    contextKeyService: ContextKeyService;\n}\n\n@injectable()\nexport class NotebookMainToolbarRenderer {\n    @inject(NotebookKernelService) protected readonly notebookKernelService: NotebookKernelService;\n    @inject(CommandRegistry) protected readonly commandRegistry: CommandRegistry;\n    @inject(MenuModelRegistry) protected readonly menuRegistry: MenuModelRegistry;\n    @inject(ContextKeyService) protected readonly contextKeyService: ContextKeyService;\n\n    render(notebookModel: NotebookModel): React.ReactNode {\n        return <NotebookMainToolbar notebookModel={notebookModel}\n            menuRegistry={this.menuRegistry}\n            notebookKernelService={this.notebookKernelService}\n            commandRegistry={this.commandRegistry}\n            contextKeyService={this.contextKeyService}\n        />;\n    }\n}\n\nexport class NotebookMainToolbar extends React.Component<NotebookMainToolbarProps, { selectedKernelLabel?: string }> {\n\n    protected toDispose = new DisposableCollection();\n\n    constructor(props: NotebookMainToolbarProps) {\n        super(props);\n\n        this.state = { selectedKernelLabel: props.notebookKernelService.getSelectedOrSuggestedKernel(props.notebookModel)?.label };\n        this.toDispose.push(props.notebookKernelService.onDidChangeSelectedKernel(event => {\n            if (props.notebookModel.uri.isEqual(event.notebook)) {\n                this.setState({ selectedKernelLabel: props.notebookKernelService.getKernel(event.newKernel ?? '')?.label });\n            }\n        }));\n        // in case the selected kernel is added after the notebook is loaded\n        this.toDispose.push(props.notebookKernelService.onDidAddKernel(() => {\n            if (!this.state.selectedKernelLabel) {\n                this.setState({ selectedKernelLabel: props.notebookKernelService.getSelectedOrSuggestedKernel(props.notebookModel)?.label });\n            }\n        }));\n    }\n\n    override componentWillUnmount(): void {\n        this.toDispose.dispose();\n    }\n\n    override render(): React.ReactNode {\n        return <div className='theia-notebook-main-toolbar'>\n            {this.getMenuItems().map(item => this.renderMenuItem(item))}\n            <div style={{ flexGrow: 1 }}></div>\n            <div className='theia-notebook-main-toolbar-item'\n                onClick={() => this.props.commandRegistry.executeCommand(NotebookCommands.SELECT_KERNEL_COMMAND.id, this.props.notebookModel)}>\n                <span className={codicon('server-environment')} />\n                <span className=' theia-notebook-main-toolbar-item-text'>\n                    {this.state.selectedKernelLabel ?? nls.localizeByDefault('Select Kernel')}\n                </span>\n            </div>\n        </div>;\n    }\n\n    protected renderMenuItem(item: MenuNode): React.ReactNode {\n        if (item.role === CompoundMenuNodeRole.Group) {\n            const itemNodes = item.children?.map(child => this.renderMenuItem(child)).filter(child => !!child);\n            return <React.Fragment key={item.id}>\n                {itemNodes}\n                {itemNodes && itemNodes.length > 0 && <span key={`${item.id}-separator`} className='theia-notebook-toolbar-separator'></span>}\n            </React.Fragment>;\n        } else if (!item.when || this.props.contextKeyService.match(item.when)) {\n            return <div key={item.id} title={item.id} className='theia-notebook-main-toolbar-item'\n                onClick={() => {\n                    if (item.command) {\n                        this.props.commandRegistry.executeCommand(item.command, this.props.notebookModel);\n                    }\n                }}>\n                <span className={item.icon} />\n                <span className='theia-notebook-main-toolbar-item-text'>{item.label}</span>\n            </div>;\n        }\n        return undefined;\n    }\n\n    private getMenuItems(): readonly MenuNode[] {\n        const menuPath = NotebookMenus.NOTEBOOK_MAIN_TOOLBAR;\n        const pluginCommands = this.props.menuRegistry.getMenuNode(menuPath).children;\n        return this.props.menuRegistry.getMenu([menuPath]).children.concat(pluginCommands);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as React from '@theia/core/shared/react';\nimport { MarkdownRenderer } from '@theia/core/lib/browser/markdown-rendering/markdown-renderer';\nimport { MarkdownStringImpl } from '@theia/core/lib/common/markdown-rendering/markdown-string';\nimport { NotebookModel } from '../view-model/notebook-model';\nimport { CellRenderer } from './notebook-cell-list-view';\nimport { NotebookCellModel } from '../view-model/notebook-cell-model';\nimport { CellEditor } from './notebook-cell-editor';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { MonacoEditorServices } from '@theia/monaco/lib/browser/monaco-editor';\nimport { nls } from '@theia/core';\n\n@injectable()\nexport class NotebookMarkdownCellRenderer implements CellRenderer {\n\n    @inject(MarkdownRenderer)\n    private readonly markdownRenderer: MarkdownRenderer;\n    @inject(MonacoEditorServices)\n    protected readonly monacoServices: MonacoEditorServices;\n\n    render(notebookModel: NotebookModel, cell: NotebookCellModel): React.ReactNode {\n        return <MarkdownCell markdownRenderer={this.markdownRenderer} monacoServices={this.monacoServices}\n            cell={cell} notebookModel={notebookModel} />;\n    }\n\n}\n\ninterface MarkdownCellProps {\n    markdownRenderer: MarkdownRenderer,\n    monacoServices: MonacoEditorServices\n\n    cell: NotebookCellModel,\n    notebookModel: NotebookModel\n}\n\nfunction MarkdownCell({ markdownRenderer, monacoServices, cell, notebookModel }: MarkdownCellProps): React.JSX.Element {\n    const [editMode, setEditMode] = React.useState(false);\n\n    React.useEffect(() => {\n        const listener = cell.onDidRequestCellEditChange(cellEdit => setEditMode(cellEdit));\n        return () => listener.dispose();\n    }, [editMode]);\n\n    let markdownContent = React.useMemo(() => markdownRenderer.render(new MarkdownStringImpl(cell.source)).element.innerHTML, [cell, editMode]);\n    if (markdownContent.length === 0) {\n        markdownContent = `<i class=\"theia-notebook-empty-markdown\">${nls.localizeByDefault('Empty markdown cell, double-click or press enter to edit.')}</i>`;\n    }\n\n    return editMode ?\n        <CellEditor cell={cell} notebookModel={notebookModel} monacoServices={monacoServices} /> :\n        <div className='theia-notebook-markdown-content'\n            onDoubleClick={() => cell.requestEdit()}\n            // This sets the non React HTML node from the markdown renderers output as a child node to this react component\n            // This is currently sadly the best way we have to combine React (Virtual Nodes) and normal dom nodes\n            // the HTML is already sanitized by the markdown renderer, so we don't need to sanitize it again\n            dangerouslySetInnerHTML={{ __html: markdownContent }} // eslint-disable-line react/no-danger\n        />;\n}\n"],"names":[],"sourceRoot":""}