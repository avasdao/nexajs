{"version":3,"file":"vendors-node_modules_theia_terminal_lib_browser_terminal-link-provider_js.js","mappings":"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","sources":["webpack:///./node_modules/@theia/terminal/src/browser/terminal-link-helpers.ts?","webpack:///./node_modules/@theia/terminal/src/browser/terminal-link-provider.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2022 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport type { IBufferRange, IBufferLine, IBuffer, Terminal } from 'xterm';\n\nexport const LinkContext = Symbol('LinkContext');\nexport interface LinkContext {\n    text: string;\n    startLine: number;\n    lines: IBufferLine[];\n}\n\n/**\n * Mimics VS Code IRange\n */\ninterface TerminalRange {\n    readonly startLineNumber: number;\n    readonly startColumn: number;\n    readonly endLineNumber: number;\n    readonly endColumn: number;\n}\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation and others. All rights reserved.\n *  Licensed under the MIT License.\n *--------------------------------------------------------------------------------------------*/\nexport function getLinkContext(terminal: Terminal, line: number, maxLinkLength = 2000): LinkContext {\n    // The following method is based on VS Code's TerminalLinkDetectorAdapter._provideLinks()\n    // https://github.com/microsoft/vscode/blob/7888ff3a6b104e9e2e3d0f7890ca92dd0828215f/src/vs/workbench/contrib/terminal/browser/links/terminalLinkDetectorAdapter.ts#L51\n    let startLine = line - 1;\n    let endLine = startLine;\n\n    const lines: IBufferLine[] = [terminal.buffer.active.getLine(startLine)!];\n\n    // Cap the maximum context on either side of the line being provided, by taking the context\n    // around the line being provided for this ensures the line the pointer is on will have\n    // links provided.\n    const maxLineContext = Math.max(maxLinkLength / terminal.cols);\n    const minStartLine = Math.max(startLine - maxLineContext, 0);\n    const maxEndLine = Math.min(endLine + maxLineContext, terminal.buffer.active.length);\n\n    while (startLine >= minStartLine && terminal.buffer.active.getLine(startLine)?.isWrapped) {\n        lines.unshift(terminal.buffer.active.getLine(startLine - 1)!);\n        startLine--;\n    }\n\n    while (endLine < maxEndLine && terminal.buffer.active.getLine(endLine + 1)?.isWrapped) {\n        lines.push(terminal.buffer.active.getLine(endLine + 1)!);\n        endLine++;\n    }\n\n    const text = getXtermLineContent(terminal.buffer.active, startLine, endLine, terminal.cols);\n\n    return { text, startLine, lines };\n}\n\n// The following code is taken as is from\n// https://github.com/microsoft/vscode/blob/7888ff3a6b104e9e2e3d0f7890ca92dd0828215f/src/vs/workbench/contrib/terminal/browser/links/terminalLinkHelpers.ts#L1\n\n/**\n * Converts a possibly wrapped link's range (comprised of string indices) into a buffer range that plays nicely with xterm.js\n *\n * @param lines A single line (not the entire buffer)\n * @param bufferWidth The number of columns in the terminal\n * @param range The link range - string indices\n * @param startLine The absolute y position (on the buffer) of the line\n */\nexport function convertLinkRangeToBuffer(\n    lines: IBufferLine[],\n    bufferWidth: number,\n    range: TerminalRange,\n    startLine: number\n): IBufferRange {\n    const bufferRange: IBufferRange = {\n        start: {\n            x: range.startColumn,\n            y: range.startLineNumber + startLine\n        },\n        end: {\n            x: range.endColumn - 1,\n            y: range.endLineNumber + startLine\n        }\n    };\n\n    // Shift start range right for each wide character before the link\n    let startOffset = 0;\n    const startWrappedLineCount = Math.ceil(range.startColumn / bufferWidth);\n    for (let y = 0; y < Math.min(startWrappedLineCount); y++) {\n        const lineLength = Math.min(bufferWidth, range.startColumn - y * bufferWidth);\n        let lineOffset = 0;\n        const line = lines[y];\n        // Sanity check for line, apparently this can happen but it's not clear under what\n        // circumstances this happens. Continue on, skipping the remainder of start offset if this\n        // happens to minimize impact.\n        if (!line) {\n            break;\n        }\n        for (let x = 0; x < Math.min(bufferWidth, lineLength + lineOffset); x++) {\n            const cell = line.getCell(x)!;\n            const width = cell.getWidth();\n            if (width === 2) {\n                lineOffset++;\n            }\n            const char = cell.getChars();\n            if (char.length > 1) {\n                lineOffset -= char.length - 1;\n            }\n        }\n        startOffset += lineOffset;\n    }\n\n    // Shift end range right for each wide character inside the link\n    let endOffset = 0;\n    const endWrappedLineCount = Math.ceil(range.endColumn / bufferWidth);\n    for (let y = Math.max(0, startWrappedLineCount - 1); y < endWrappedLineCount; y++) {\n        const start = (y === startWrappedLineCount - 1 ? (range.startColumn + startOffset) % bufferWidth : 0);\n        const lineLength = Math.min(bufferWidth, range.endColumn + startOffset - y * bufferWidth);\n        const startLineOffset = (y === startWrappedLineCount - 1 ? startOffset : 0);\n        let lineOffset = 0;\n        const line = lines[y];\n        // Sanity check for line, apparently this can happen but it's not clear under what\n        // circumstances this happens. Continue on, skipping the remainder of start offset if this\n        // happens to minimize impact.\n        if (!line) {\n            break;\n        }\n        for (let x = start; x < Math.min(bufferWidth, lineLength + lineOffset + startLineOffset); x++) {\n            const cell = line.getCell(x)!;\n            const width = cell.getWidth();\n            // Offset for 0 cells following wide characters\n            if (width === 2) {\n                lineOffset++;\n            }\n            // Offset for early wrapping when the last cell in row is a wide character\n            if (x === bufferWidth - 1 && cell.getChars() === '') {\n                lineOffset++;\n            }\n        }\n        endOffset += lineOffset;\n    }\n\n    // Apply the width character offsets to the result\n    bufferRange.start.x += startOffset;\n    bufferRange.end.x += startOffset + endOffset;\n\n    // Convert back to wrapped lines\n    while (bufferRange.start.x > bufferWidth) {\n        bufferRange.start.x -= bufferWidth;\n        bufferRange.start.y++;\n    }\n    while (bufferRange.end.x > bufferWidth) {\n        bufferRange.end.x -= bufferWidth;\n        bufferRange.end.y++;\n    }\n\n    return bufferRange;\n}\n\nfunction getXtermLineContent(buffer: IBuffer, lineStart: number, lineEnd: number, cols: number): string {\n    // Cap the maximum number of lines generated to prevent potential performance problems. This is\n    // more of a sanity check as the wrapped line should already be trimmed down at this point.\n    const maxLineLength = Math.max(2048 / cols * 2);\n    lineEnd = Math.min(lineEnd, lineStart + maxLineLength);\n    let content = '';\n    for (let i = lineStart; i <= lineEnd; i++) {\n        // Make sure only 0 to cols are considered as resizing when windows mode is enabled will\n        // retain buffer data outside of the terminal width as reflow is disabled.\n        const line = buffer.getLine(i);\n        if (line) {\n            content += line.translateToString(true, 0, cols);\n        }\n    }\n    return content;\n}\n","// *****************************************************************************\n// Copyright (C) 2022 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { CancellationToken, ContributionProvider, DisposableCollection, disposableTimeout, isOSX } from '@theia/core';\nimport { PreferenceService } from '@theia/core/lib/browser';\nimport { inject, injectable, interfaces, named, postConstruct } from '@theia/core/shared/inversify';\nimport { IBufferRange, ILink, ILinkDecorations } from 'xterm';\nimport { TerminalWidget } from './base/terminal-widget';\nimport { TerminalContribution } from './terminal-contribution';\nimport { convertLinkRangeToBuffer, getLinkContext, LinkContext } from './terminal-link-helpers';\nimport { TerminalWidgetImpl } from './terminal-widget-impl';\n\nexport const TerminalLinkProvider = Symbol('TerminalLinkProvider');\nexport interface TerminalLinkProvider {\n    provideLinks(line: string, terminal: TerminalWidget, cancelationToken?: CancellationToken): Promise<TerminalLink[]>;\n}\n\nexport const TerminalLink = Symbol('TerminalLink');\nexport interface TerminalLink {\n    startIndex: number;\n    length: number;\n    tooltip?: string;\n    handle(): Promise<void>;\n}\n\nexport const XtermLink = Symbol('XtermLink');\nexport const XtermLinkFactory = Symbol('XtermLinkFactory');\nexport type XtermLinkFactory = (link: TerminalLink, terminal: TerminalWidgetImpl, context: LinkContext) => ILink;\n\nexport function createXtermLinkFactory(ctx: interfaces.Context): XtermLinkFactory {\n    return (link: TerminalLink, terminal: TerminalWidgetImpl, context: LinkContext): ILink => {\n        const container = ctx.container.createChild();\n        container.bind(TerminalLink).toConstantValue(link);\n        container.bind(TerminalWidgetImpl).toConstantValue(terminal);\n        container.bind(LinkContext).toConstantValue(context);\n        container.bind(XtermLinkAdapter).toSelf().inSingletonScope();\n        container.bind(XtermLink).toService(XtermLinkAdapter);\n        const provider = container.get<ILink>(XtermLink);\n        return provider;\n    };\n}\n\n@injectable()\nexport class TerminalLinkProviderContribution implements TerminalContribution {\n\n    @inject(ContributionProvider) @named(TerminalLinkProvider)\n    protected readonly terminalLinkContributionProvider: ContributionProvider<TerminalLinkProvider>;\n\n    @inject(XtermLinkFactory)\n    protected readonly xtermLinkFactory: XtermLinkFactory;\n\n    onCreate(terminalWidget: TerminalWidgetImpl): void {\n        terminalWidget.getTerminal().registerLinkProvider({\n            provideLinks: (line, provideLinks) => this.provideTerminalLinks(terminalWidget, line, provideLinks)\n        });\n    }\n\n    protected async provideTerminalLinks(terminal: TerminalWidgetImpl, line: number, provideLinks: (links?: ILink[]) => void): Promise<void> {\n        const context = getLinkContext(terminal.getTerminal(), line);\n\n        const linkProviderPromises: Promise<TerminalLink[]>[] = [];\n        for (const provider of this.terminalLinkContributionProvider.getContributions()) {\n            linkProviderPromises.push(provider.provideLinks(context.text, terminal));\n        }\n\n        const xtermLinks: ILink[] = [];\n        for (const providerResult of await Promise.allSettled(linkProviderPromises)) {\n            if (providerResult.status === 'fulfilled') {\n                const providedLinks = providerResult.value;\n                xtermLinks.push(...providedLinks.map(link => this.xtermLinkFactory(link, terminal, context)));\n            } else {\n                console.warn('Terminal link provider failed to provide links', providerResult.reason);\n            }\n        }\n\n        provideLinks(xtermLinks);\n    }\n\n}\n\nconst DELAY_PREFERENCE = 'workbench.hover.delay';\n\n@injectable()\nexport class XtermLinkAdapter implements ILink {\n\n    text: string;\n    range: IBufferRange;\n    decorations: ILinkDecorations;\n\n    @inject(TerminalLink) protected link: TerminalLink;\n    @inject(TerminalWidgetImpl) protected terminalWidget: TerminalWidgetImpl;\n    @inject(LinkContext) protected context: LinkContext;\n    @inject(PreferenceService) protected readonly preferences: PreferenceService;\n\n    protected toDispose = new DisposableCollection();\n\n    protected mouseEnteredHover = false;\n    protected mouseLeftHover = false;\n\n    @postConstruct()\n    initializeLinkFields(): void {\n        const range = {\n            startColumn: this.link.startIndex + 1,\n            startLineNumber: 1,\n            endColumn: this.link.startIndex + this.link.length + 1,\n            endLineNumber: 1\n        };\n        const terminal = this.terminalWidget.getTerminal();\n        this.range = convertLinkRangeToBuffer(this.context.lines, terminal.cols, range, this.context.startLine);\n        this.text = this.context.text.substring(this.link.startIndex, this.link.startIndex + this.link.length) || '';\n    }\n\n    hover(event: MouseEvent, text: string): void {\n        this.scheduleHover(event);\n    }\n\n    protected scheduleHover(event: MouseEvent): void {\n        this.cancelHover();\n        const delay: number = this.preferences.get(DELAY_PREFERENCE) ?? 500;\n        this.toDispose.push(disposableTimeout(() => this.showHover(event), delay));\n    }\n\n    protected showHover(event: MouseEvent): void {\n        this.toDispose.push(this.terminalWidget.onMouseEnterLinkHover(() => this.mouseEnteredHover = true));\n        this.toDispose.push(this.terminalWidget.onMouseLeaveLinkHover(mouseEvent => {\n            this.mouseLeftHover = true;\n            this.leave(mouseEvent);\n        }));\n        this.terminalWidget.showLinkHover(\n            () => this.executeLinkHandler(),\n            event.clientX,\n            event.clientY,\n            this.link.tooltip\n        );\n    }\n\n    leave(event: MouseEvent): void {\n        this.toDispose.push(disposableTimeout(() => {\n            if (!this.mouseEnteredHover || this.mouseLeftHover) {\n                this.cancelHover();\n            }\n        }, 50));\n    }\n\n    protected cancelHover(): void {\n        this.mouseEnteredHover = false;\n        this.mouseLeftHover = false;\n        this.toDispose.dispose();\n        this.terminalWidget.hideLinkHover();\n    }\n\n    activate(event: MouseEvent, text: string): void {\n        event.preventDefault();\n        if (this.isModifierKeyDown(event) || this.wasTouchEvent(event, this.terminalWidget.lastTouchEndEvent)) {\n            this.executeLinkHandler();\n        } else {\n            this.terminalWidget.getTerminal().focus();\n        }\n    }\n\n    protected executeLinkHandler(): void {\n        this.link.handle();\n        this.cancelHover();\n    }\n\n    protected isModifierKeyDown(event: MouseEvent | KeyboardEvent): boolean {\n        return isOSX ? event.metaKey : event.ctrlKey;\n    }\n\n    protected wasTouchEvent(event: MouseEvent, lastTouchEnd?: TouchEvent): boolean {\n        if (!lastTouchEnd) {\n            return false;\n        }\n        if ((event.timeStamp - lastTouchEnd.timeStamp) > 400) {\n            // A 'touchend' event typically precedes a matching 'click' event by 50ms.\n            return false;\n        }\n        if (Math.abs(event.pageX - (lastTouchEnd as unknown as MouseEvent).pageX) > 5) {\n            // Matching 'touchend' and 'click' events typically have the same page coordinates,\n            // plus or minus 1 pixel.\n            return false;\n        }\n        if (Math.abs(event.pageY - (lastTouchEnd as unknown as MouseEvent).pageY) > 5) {\n            return false;\n        }\n        // We have a match! This link was tapped.\n        return true;\n    }\n\n}\n"],"names":[],"sourceRoot":""}