{"version":3,"file":"vendors-node_modules_theia_core_lib_browser_widgets_alert-message_js-node_modules_theia_scm_l-4487ba.js","mappings":";;;;;;;;;;AAAA,gFAAgF;AAChF,0CAA0C;AAC1C,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAEhF,gFAAgC;AAChC,iHAAmC;AAWnC,MAAM,gBAAgB,GAAG;IACrB,IAAI,EAAE,oBAAO,EAAC,MAAM,CAAC;IACrB,OAAO,EAAE,oBAAO,EAAC,MAAM,CAAC;IACxB,OAAO,EAAE,oBAAO,EAAC,SAAS,CAAC;IAC3B,KAAK,EAAE,oBAAO,EAAC,OAAO,CAAC;CAC1B,CAAC;AAQF,MAAa,YAAa,SAAQ,KAAK,CAAC,SAA4B;IAEvD,MAAM;QACX,OAAO,6BAAK,SAAS,EAAC,+BAA+B;YACjD,6BAAK,SAAS,EAAE,SAAS,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ;gBAC1D,6BAAK,SAAS,EAAC,sBAAsB;oBACjC,2BAAG,SAAS,EAAE,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAM;;oBACpD,IAAI,CAAC,KAAK,CAAC,MAAM,CAChB;gBACN,6BAAK,SAAS,EAAC,uBAAuB,IAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAO,CAChE,CACJ,CAAC;IACX,CAAC;CAEJ;AAdD,oCAcC;;;;;;;;;;;;ACvDD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;AAEhF,oIAA0D;AAC1D,8FAA6B;AAG7B,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAEzB,KAAK,CAAC,SAAS,CAAC,KAAa;QACzB,MAAM,IAAI,GAAG,YAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAChC,OAAO,mCAAmC,IAAI,aAAa,CAAC;IAChE,CAAC;CACJ;AANY,gBAAgB;IAD5B,0BAAU,GAAE;GACA,gBAAgB,CAM5B;AANY,4CAAgB;;;;;;;;;;;;ACpB7B,gFAAgF;AAChF,+CAA+C;AAC/C,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAEhF,uDAAuD;AAEvD,6FAAuC;AACvC,qHAAmF;AACnF,wJAA6E;AAO7E,IAAY,iBAIX;AAJD,WAAY,iBAAiB;IACzB,2DAAS;IACT,+DAAW;IACX,uEAAe;AACnB,CAAC,EAJW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAI5B;AAkBD,MAAa,QAAQ;IAgBjB,YACuB,UAA2B,EAAE;;QAA7B,YAAO,GAAP,OAAO,CAAsB;QAfjC,uBAAkB,GAAG,IAAI,gBAAO,EAAQ,CAAC;QACnD,gBAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;QAKlC,sBAAiB,GAAG,IAAI,gBAAO,EAAQ,CAAC;QAClD,eAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;QAEhC,cAAS,GAAG,IAAI,6BAAoB,CACnD,IAAI,CAAC,kBAAkB,EACvB,IAAI,CAAC,iBAAiB,CACzB,CAAC;QAUQ,iBAAY,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;QAyBxC,aAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAahC,aAAQ,GAAG,UAAI,CAAC,OAAO,CAAC,OAAO,mCAAI,IAAI,CAAC;QAyBlD,aAAQ,GAAG,QAAQ,CAAC,KAAK,IAAmB,EAAE;YAC1C,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;gBACxB,IAAI,CAAC,KAAK,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACzD;QACL,CAAC,EAAE,GAAG,CAAC,CAAC;IAzEJ,CAAC;IAdK,aAAa;QACnB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5C,CAAC;IAcD,OAAO;QACH,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAGD,IAAI,WAAW;QACX,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IACD,IAAI,WAAW,CAAC,WAA+B;QAC3C,IAAI,IAAI,CAAC,YAAY,KAAK,WAAW,EAAE;YACnC,OAAO;SACV;QACD,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAGD,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;IAC7B,CAAC;IACD,IAAI,KAAK,CAAC,KAAa;QACnB,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;YACtB,OAAO;SACV;QACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAGD,IAAI,OAAO;;QACP,OAAO,UAAI,CAAC,QAAQ,mCAAI,IAAI,CAAC;IACjC,CAAC;IACD,IAAI,OAAO,CAAC,OAAgB;QACxB,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,EAAE;YAC1B,OAAO;SACV;QACD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAGD,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IACD,IAAI,OAAO,CAAC,OAAgB;QACxB,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO,EAAE;YAC3B,OAAO;SACV;QACD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAGD,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IACD,IAAI,KAAK,CAAC,KAAgC;QACtC,IAAI,mBAAO,CAAC,SAAS,CAAa,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC,EAAc,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,EAAE;YAC/E,OAAO;SACV;QACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAQD,KAAK;QACD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC3C,CAAC;IAED,MAAM;QACF,OAAO;YACH,KAAK,EAAE,IAAI,CAAC,MAAM;YAClB,KAAK,EAAE,IAAI,CAAC,MAAM;SACrB,CAAC;IACN,CAAC;IAED,QAAQ,CAAC,IAAwB;QAC7B,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;YAC3B,OAAO;SACV;QACD,IAAI,OAAO,IAAI,IAAI,EAAE;YACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;YACzB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;YACzB,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB;IACL,CAAC;CACJ;AAlHD,4BAkHC;;;;;;;;;;;;ACnKD,gFAAgF;AAChF,+CAA+C;AAC/C,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAEhF,qHAAmF;AACnF,iHAAwD;AAOxD,MAAa,aAAa;IAYtB,YACa,QAAqB,EACX,UAA8B,EAAE;QAD1C,aAAQ,GAAR,QAAQ,CAAa;QACX,YAAO,GAAP,OAAO,CAAyB;QAZpC,uBAAkB,GAAG,IAAI,gBAAO,EAAQ,CAAC;QACnD,gBAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;QAKlC,cAAS,GAAG,IAAI,6BAAoB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAQ7E,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YACnB,IAAI,CAAC,QAAQ;YACb,IAAI,CAAC,KAAK,GAAG,IAAI,oBAAQ,CAAC,OAAO,CAAC,KAAK,CAAC;YACxC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;SACrD,CAAC,CAAC;IACP,CAAC;IAjBS,aAAa;QACnB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5C,CAAC;IAiBD,OAAO;QACH,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;CAEJ;AA3BD,sCA2BC;;;;;;;;;;;;ACnDD,gFAAgF;AAChF,+CAA+C;AAC/C,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,uDAAuD;AAEvD,qHAAuE;AACvE,oIAAkE;AAClE,2JAAiE;AACjE,gIAAqE;AAErE,oHAA6C;AAG7C,IAAa,UAAU,GAAvB,MAAa,UAAU;IAAvB;QAKuB,kBAAa,GAAG,IAAI,GAAG,EAAyB,CAAC;QAGjD,yCAAoC,GAAG,IAAI,gBAAO,EAA6B,CAAC;QAC1F,kCAA6B,GAAG,IAAI,CAAC,oCAAoC,CAAC,KAAK,CAAC;QAEtE,8BAAyB,GAAG,IAAI,gBAAO,EAAiB,CAAC;QACnE,uBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC;QAEhD,iCAA4B,GAAG,IAAI,gBAAO,EAAiB,CAAC;QACtE,0BAAqB,GAAG,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC;QAEnD,wCAAmC,GAAG,IAAI,gBAAO,EAAgB,CAAC;QAC5E,iCAA4B,GAAG,IAAI,CAAC,mCAAmC,CAAC,KAAK,CAAC;QAiBpE,wBAAmB,GAAG,IAAI,6BAAoB,EAAE,CAAC;IA8CxE,CAAC;IA9Da,8BAA8B;QACpC,IAAI,CAAC,mCAAmC,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC1E,CAAC;IACD,IAAI,iBAAiB;QACjB,MAAM,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAC3C,OAAO,UAAU,IAAI,UAAU,CAAC,QAAQ,CAAC,iBAAiB,IAAI,EAAE,CAAC;IACrE,CAAC;IAED,IAAI,YAAY;QACZ,OAAO,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,IAAI,kBAAkB;QAClB,OAAO,IAAI,CAAC,mBAAmB,CAAC;IACpC,CAAC;IAGD,IAAI,kBAAkB,CAAC,UAAqC;QACxD,IAAI,IAAI,CAAC,mBAAmB,KAAK,UAAU,EAAE;YACzC,OAAO;SACV;QACD,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;QACnC,IAAI,CAAC,mBAAmB,GAAG,UAAU,CAAC;QACtC,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC1B,IAAI,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,4BAA4B,EAAE;gBAChE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,4BAA4B,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,8BAA8B,EAAE,CAAC,CAAC,CAAC;aAC9I;SACJ;QACD,IAAI,CAAC,oCAAoC,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACzE,IAAI,CAAC,8BAA8B,EAAE,CAAC;IAC1C,CAAC;IAED,cAAc,CAAC,GAAQ;QACnB,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CACtC,CAAC,EAAiB,EAAE,EAAiB,EAAE,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CACpG,CAAC;QACF,OAAO,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,aAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC;IACzF,CAAC;IAED,mBAAmB,CAAC,QAAqB,EAAE,UAA8B,EAAE;QACvE,MAAM,GAAG,GAAG,QAAQ,CAAC,EAAE,GAAG,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC;QACjD,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YAC7B,MAAM,IAAI,KAAK,CAAC,GAAG,QAAQ,CAAC,KAAK,kBAAkB,QAAQ,CAAC,OAAO,mBAAmB,CAAC,CAAC;SAC3F;QACD,MAAM,UAAU,GAAG,IAAI,8BAAa,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACxD,MAAM,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;QACnC,UAAU,CAAC,OAAO,GAAG,GAAG,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC/B,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;YAC3B,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACnD,IAAI,IAAI,CAAC,mBAAmB,KAAK,UAAU,EAAE;gBACzC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;aACtE;QACL,CAAC,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;QACxC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAChD,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,EAAE;YAC/B,IAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC;SACxC;QACD,OAAO,UAAU,CAAC;IACtB,CAAC;CAEJ;AA9EG;IADC,sBAAM,EAAC,8CAAoB,CAAC;8BACG,8CAAoB;+CAAC;AAH5C,UAAU;IADtB,0BAAU,GAAE;GACA,UAAU,CAiFtB;AAjFY,gCAAU","sources":["webpack:///./node_modules/@theia/core/src/browser/widgets/alert-message.tsx?","webpack:///./node_modules/@theia/scm/src/browser/scm-avatar-service.ts?","webpack:///./node_modules/@theia/scm/src/browser/scm-input.ts?","webpack:///./node_modules/@theia/scm/src/browser/scm-repository.ts?","webpack:///./node_modules/@theia/scm/src/browser/scm-service.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport React = require('react');\nimport { codicon } from './widget';\n\nexport type MessageType = keyof AlertMessageIcon;\n\ninterface AlertMessageIcon {\n    INFO: string;\n    SUCCESS: string;\n    WARNING: string;\n    ERROR: string;\n}\n\nconst AlertMessageIcon = {\n    INFO: codicon('info'),\n    SUCCESS: codicon('pass'),\n    WARNING: codicon('warning'),\n    ERROR: codicon('error')\n};\n\nexport interface AlertMessageProps {\n    type: MessageType;\n    header: string;\n    children?: React.ReactNode\n}\n\nexport class AlertMessage extends React.Component<AlertMessageProps> {\n\n    override render(): React.ReactNode {\n        return <div className='theia-alert-message-container'>\n            <div className={`theia-${this.props.type.toLowerCase()}-alert`}>\n                <div className='theia-message-header'>\n                    <i className={AlertMessageIcon[this.props.type]}></i>&nbsp;\n                    {this.props.header}\n                </div>\n                <div className='theia-message-content'>{this.props.children}</div>\n            </div>\n        </div>;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { Md5 } from 'ts-md5';\n\n@injectable()\nexport class ScmAvatarService {\n\n    async getAvatar(email: string): Promise<string> {\n        const hash = Md5.hashStr(email);\n        return `https://www.gravatar.com/avatar/${hash}?d=robohash`;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as debounce from 'p-debounce';\nimport { Disposable, DisposableCollection, Emitter } from '@theia/core/lib/common';\nimport { JSONExt, JSONObject } from '@theia/core/shared/@phosphor/coreutils';\n\nexport interface ScmInputIssue {\n    message: string;\n    type: ScmInputIssueType;\n}\n\nexport enum ScmInputIssueType {\n    Error = 0,\n    Warning = 1,\n    Information = 2\n}\n\nexport interface ScmInputValidator {\n    (value: string): Promise<ScmInputIssue | undefined>;\n}\n\nexport interface ScmInputOptions {\n    placeholder?: string;\n    validator?: ScmInputValidator;\n    visible?: boolean;\n    enabled?: boolean;\n}\n\nexport interface ScmInputData {\n    value?: string;\n    issue?: ScmInputIssue;\n}\n\nexport class ScmInput implements Disposable {\n\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n    readonly onDidChange = this.onDidChangeEmitter.event;\n    protected fireDidChange(): void {\n        this.onDidChangeEmitter.fire(undefined);\n    }\n\n    protected readonly onDidFocusEmitter = new Emitter<void>();\n    readonly onDidFocus = this.onDidFocusEmitter.event;\n\n    protected readonly toDispose = new DisposableCollection(\n        this.onDidChangeEmitter,\n        this.onDidFocusEmitter\n    );\n\n    constructor(\n        protected readonly options: ScmInputOptions = {}\n    ) { }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    protected _placeholder = this.options.placeholder;\n    get placeholder(): string | undefined {\n        return this._placeholder;\n    }\n    set placeholder(placeholder: string | undefined) {\n        if (this._placeholder === placeholder) {\n            return;\n        }\n        this._placeholder = placeholder;\n        this.fireDidChange();\n    }\n\n    protected _value: string | undefined;\n    get value(): string {\n        return this._value || '';\n    }\n    set value(value: string) {\n        if (this.value === value) {\n            return;\n        }\n        this._value = value;\n        this.fireDidChange();\n        this.validate();\n    }\n\n    protected _visible = this.options.visible;\n    get visible(): boolean {\n        return this._visible ?? true;\n    }\n    set visible(visible: boolean) {\n        if (this.visible === visible) {\n            return;\n        }\n        this._visible = visible;\n        this.fireDidChange();\n        this.validate();\n    }\n\n    protected _enabled = this.options.enabled ?? true;\n    get enabled(): boolean {\n        return this._enabled;\n    }\n    set enabled(enabled: boolean) {\n        if (this._enabled === enabled) {\n            return;\n        }\n        this._enabled = enabled;\n        this.fireDidChange();\n        this.validate();\n    }\n\n    protected _issue: ScmInputIssue | undefined;\n    get issue(): ScmInputIssue | undefined {\n        return this._issue;\n    }\n    set issue(issue: ScmInputIssue | undefined) {\n        if (JSONExt.deepEqual(<JSONObject>(this._issue || {}), <JSONObject>(issue || {}))) {\n            return;\n        }\n        this._issue = issue;\n        this.fireDidChange();\n    }\n\n    validate = debounce(async (): Promise<void> => {\n        if (this.options.validator) {\n            this.issue = await this.options.validator(this.value);\n        }\n    }, 200);\n\n    focus(): void {\n        this.onDidFocusEmitter.fire(undefined);\n    }\n\n    toJSON(): ScmInputData {\n        return {\n            value: this._value,\n            issue: this._issue\n        };\n    }\n\n    fromJSON(data: ScmInputData | any): void {\n        if (this._value !== undefined) {\n            return;\n        }\n        if ('value' in data) {\n            this._value = data.value;\n            this._issue = data.issue;\n            this.fireDidChange();\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Disposable, DisposableCollection, Emitter } from '@theia/core/lib/common';\nimport { ScmInput, ScmInputOptions } from './scm-input';\nimport { ScmProvider } from './scm-provider';\n\nexport interface ScmProviderOptions {\n    input?: ScmInputOptions\n}\n\nexport class ScmRepository implements Disposable {\n\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n    readonly onDidChange = this.onDidChangeEmitter.event;\n    protected fireDidChange(): void {\n        this.onDidChangeEmitter.fire(undefined);\n    }\n\n    protected readonly toDispose = new DisposableCollection(this.onDidChangeEmitter);\n\n    readonly input: ScmInput;\n\n    constructor(\n        readonly provider: ScmProvider,\n        protected readonly options: ScmProviderOptions = {}\n    ) {\n        this.toDispose.pushAll([\n            this.provider,\n            this.input = new ScmInput(options.input),\n            this.input.onDidChange(() => this.fireDidChange())\n        ]);\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { DisposableCollection, Emitter } from '@theia/core/lib/common';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { ScmContextKeyService } from './scm-context-key-service';\nimport { ScmRepository, ScmProviderOptions } from './scm-repository';\nimport { ScmCommand, ScmProvider } from './scm-provider';\nimport URI from '@theia/core/lib/common/uri';\n\n@injectable()\nexport class ScmService {\n\n    @inject(ScmContextKeyService)\n    protected readonly contextKeys: ScmContextKeyService;\n\n    protected readonly _repositories = new Map<string, ScmRepository>();\n    protected _selectedRepository: ScmRepository | undefined;\n\n    protected readonly onDidChangeSelectedRepositoryEmitter = new Emitter<ScmRepository | undefined>();\n    readonly onDidChangeSelectedRepository = this.onDidChangeSelectedRepositoryEmitter.event;\n\n    protected readonly onDidAddRepositoryEmitter = new Emitter<ScmRepository>();\n    readonly onDidAddRepository = this.onDidAddRepositoryEmitter.event;\n\n    protected readonly onDidRemoveRepositoryEmitter = new Emitter<ScmRepository>();\n    readonly onDidRemoveRepository = this.onDidAddRepositoryEmitter.event;\n\n    protected readonly onDidChangeStatusBarCommandsEmitter = new Emitter<ScmCommand[]>();\n    readonly onDidChangeStatusBarCommands = this.onDidChangeStatusBarCommandsEmitter.event;\n    protected fireDidChangeStatusBarCommands(): void {\n        this.onDidChangeStatusBarCommandsEmitter.fire(this.statusBarCommands);\n    }\n    get statusBarCommands(): ScmCommand[] {\n        const repository = this.selectedRepository;\n        return repository && repository.provider.statusBarCommands || [];\n    }\n\n    get repositories(): ScmRepository[] {\n        return [...this._repositories.values()];\n    }\n\n    get selectedRepository(): ScmRepository | undefined {\n        return this._selectedRepository;\n    }\n\n    protected readonly toDisposeOnSelected = new DisposableCollection();\n    set selectedRepository(repository: ScmRepository | undefined) {\n        if (this._selectedRepository === repository) {\n            return;\n        }\n        this.toDisposeOnSelected.dispose();\n        this._selectedRepository = repository;\n        if (this._selectedRepository) {\n            if (this._selectedRepository.provider.onDidChangeStatusBarCommands) {\n                this.toDisposeOnSelected.push(this._selectedRepository.provider.onDidChangeStatusBarCommands(() => this.fireDidChangeStatusBarCommands()));\n            }\n        }\n        this.onDidChangeSelectedRepositoryEmitter.fire(this._selectedRepository);\n        this.fireDidChangeStatusBarCommands();\n    }\n\n    findRepository(uri: URI): ScmRepository | undefined {\n        const reposSorted = this.repositories.sort(\n            (ra: ScmRepository, rb: ScmRepository) => rb.provider.rootUri.length - ra.provider.rootUri.length\n        );\n        return reposSorted.find(repo => new URI(repo.provider.rootUri).isEqualOrParent(uri));\n    }\n\n    registerScmProvider(provider: ScmProvider, options: ScmProviderOptions = {}): ScmRepository {\n        const key = provider.id + ':' + provider.rootUri;\n        if (this._repositories.has(key)) {\n            throw new Error(`${provider.label} provider for '${provider.rootUri}' already exists.`);\n        }\n        const repository = new ScmRepository(provider, options);\n        const dispose = repository.dispose;\n        repository.dispose = () => {\n            this._repositories.delete(key);\n            dispose.bind(repository)();\n            this.onDidRemoveRepositoryEmitter.fire(repository);\n            if (this._selectedRepository === repository) {\n                this.selectedRepository = this._repositories.values().next().value;\n            }\n        };\n        this._repositories.set(key, repository);\n        this.onDidAddRepositoryEmitter.fire(repository);\n        if (this._repositories.size === 1) {\n            this.selectedRepository = repository;\n        }\n        return repository;\n    }\n\n}\n"],"names":[],"sourceRoot":""}