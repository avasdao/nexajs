{"version":3,"file":"vendors-node_modules_theia_core_lib_common_markdown-rendering_markdown-string_js-node_modules-6a51cc.js","mappings":"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B,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElzB,EAAG,EAAGC,EAAG,EAAGgzB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElzB,EAAG,EAAGC,EAAG,EAAGgzB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElzB,EAAG,EAAGC,EAAG,EAAGgzB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElzB,EAAG,EAAGC,EAAG,EAAGgzB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElzB,EAAG,EAAGC,EAAG,EAAGgzB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElzB,EAAG,EAAGC,EAAG,EAAGgzB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElzB,EAAG,EAAGC,EAAG,EAAGgzB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElzB,EAAG,EAAGC,EAAG,EAAGgzB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElzB,EAAG,EAAGC,EAAG,EAAGgzB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElzB,EAAG,EAAGC,EAAG,EAAGgzB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElzB,EAAG,EAAGC,EAAG,EAAGgzB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElzB,EAAG,EAAGC,EAAG,EAAGgzB,EAAG,EAAGC,EAAG,IAG7B,IAAK,CAAC,CAAElzB,EAAG,EAAGC,EAAG,EAAGgzB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElzB,EAAG,EAAGC,EAAG,EAAGgzB,EAAG,EAAGC,EAAG,IAG7B,IAAK,CAAC,CAAElzB,EAAG,EAAGC,EAAG,EAAGgzB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElzB,EAAG,EAAGC,EAAG,EAAGgzB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElzB,EAAG,EAAGC,EAAG,EAAGgzB,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElzB,EAAG,EAAGC,EAAG,EAAGgzB,EAAG,EAAGC,EAAG,GAAK,CAAElzB,EAAG,EAAGC,EAAG,E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","sources":["webpack:///./node_modules/@theia/core/src/common/markdown-rendering/icon-utilities.ts?","webpack:///./node_modules/@theia/core/src/common/markdown-rendering/markdown-string.ts?","webpack:///./node_modules/@theia/terminal/src/browser/terminal-preferences.ts?","webpack:///./node_modules/@theia/terminal/src/browser/terminal-theme-service.ts?","webpack:///FitAddon/webpack/universalModuleDefinition?","webpack:///FitAddon/./src/FitAddon.ts?","webpack:///FitAddon/webpack/bootstrap?","webpack:///FitAddon/webpack/startup?","webpack:///xterm/webpack/universalModuleDefinition?","webpack:///xterm/./src/browser/AccessibilityManager.ts?","webpack:///xterm/./src/browser/Clipboard.ts?","webpack:///xterm/./src/browser/ColorContrastCache.ts?","webpack:///xterm/./src/browser/ColorManager.ts?","webpack:///xterm/./src/browser/Dom.ts?","webpack:///xterm/./src/browser/Lifecycle.ts?","webpack:///xterm/./src/browser/Linkifier.ts?","webpack:///xterm/./src/browser/Linkifier2.ts?","webpack:///xterm/./src/browser/LocalizableStrings.ts?","webpack:///xterm/./src/browser/MouseZoneManager.ts?","webpack:///xterm/./src/browser/RenderDebouncer.ts?","webpack:///xterm/./src/browser/ScreenDprMonitor.ts?","webpack:///xterm/./src/browser/Terminal.ts?","webpack:///xterm/./src/browser/TimeBasedDebouncer.ts?","webpack:///xterm/./src/browser/Viewport.ts?","webpack:///xterm/./src/browser/decorations/BufferDecorationRenderer.ts?","webpack:///xterm/./src/browser/decorations/ColorZoneStore.ts?","webpack:///xterm/./src/browser/decorations/OverviewRulerRenderer.ts?","webpack:///xterm/./src/browser/input/CompositionHelper.ts?","webpack:///xterm/./src/browser/input/Mouse.ts?","webpack:///xterm/./src/browser/input/MoveToCell.ts?","webpack:///xterm/./src/browser/public/Terminal.ts?","webpack:///xterm/./src/browser/renderer/BaseRenderLayer.ts?","webpack:///xterm/./src/browser/renderer/CursorRenderLayer.ts?","webpack:///xterm/./src/browser/renderer/CustomGlyphs.ts?","webpack:///xterm/./src/browser/renderer/GridCache.ts?","webpack:///xterm/./src/browser/renderer/LinkRenderLayer.ts?","webpack:///xterm/./src/browser/renderer/Renderer.ts?","webpack:///xterm/./src/browser/renderer/RendererUtils.ts?","webpack:///xterm/./src/browser/renderer/SelectionRenderLayer.ts?","webpack:///xterm/./src/browser/renderer/TextRenderLayer.ts?","webpack:///xterm/./src/browser/renderer/atlas/BaseCharAtlas.ts?","webpack:///xterm/./src/browser/renderer/atlas/CharAtlasCache.ts?","webpack:///xterm/./src/browser/renderer/atlas/CharAtlasUtils.ts?","webpack:///xterm/./src/browser/renderer/atlas/Constants.ts?","webpack:///xterm/./src/browser/renderer/atlas/DynamicCharAtlas.ts?","webpack:///xterm/./src/browser/renderer/atlas/LRUMap.ts?","webpack:///xterm/./src/browser/renderer/dom/DomRenderer.ts?","webpack:///xterm/./src/browser/renderer/dom/DomRendererRowFactory.ts?","webpack:///xterm/./src/browser/selection/SelectionModel.ts?","webpack:///xterm/./src/browser/services/CharSizeService.ts?","webpack:///xterm/./src/browser/services/CharacterJoinerService.ts?","webpack:///xterm/./src/browser/services/CoreBrowserService.ts?","webpack:///xterm/./src/browser/services/MouseService.ts?","webpack:///xterm/./src/browser/services/RenderService.ts?","webpack:///xterm/./src/browser/services/SelectionService.ts?","webpack:///xterm/./src/browser/services/Services.ts?","webpack:///xterm/./src/browser/services/SoundService.ts?","webpack:///xterm/./src/common/CircularList.ts?","webpack:///xterm/./src/common/Clone.ts?","webpack:///xterm/./src/common/Color.ts?","webpack:///xterm/./src/common/CoreTerminal.ts?","webpack:///xterm/./src/common/EventEmitter.ts?","webpack:///xterm/./src/common/InputHandler.ts?","webpack:///xterm/./src/common/Lifecycle.ts?","webpack:///xterm/./src/common/Platform.ts?","webpack:///xterm/./src/common/SortedList.ts?","webpack:///xterm/./src/common/TypedArrayUtils.ts?","webpack:///xterm/./src/common/WindowsMode.ts?","webpack:///xterm/./src/common/buffer/AttributeData.ts?","webpack:///xterm/./src/common/buffer/Buffer.ts?","webpack:///xterm/./src/common/buffer/BufferLine.ts?","webpack:///xterm/./src/common/buffer/BufferRange.ts?","webpack:///xterm/./src/common/buffer/BufferReflow.ts?","webpack:///xterm/./src/common/buffer/BufferSet.ts?","webpack:///xterm/./src/common/buffer/CellData.ts?","webpack:///xterm/./src/common/buffer/Constants.ts?","webpack:///xterm/./src/common/buffer/Marker.ts?","webpack:///xterm/./src/common/data/Charsets.ts?","webpack:///xterm/./src/common/data/EscapeSequences.ts?","webpack:///xterm/./src/common/input/Keyboard.ts?","webpack:///xterm/./src/common/input/TextDecoder.ts?","webpack:///xterm/./src/common/input/UnicodeV6.ts?","webpack:///xterm/./src/common/input/WriteBuffer.ts?","webpack:///xterm/./src/common/input/XParseColor.ts?","webpack:///xterm/./src/common/parser/Constants.ts?","webpack:///xterm/./src/common/parser/DcsParser.ts?","webpack:///xterm/./src/common/parser/EscapeSequenceParser.ts?","webpack:///xterm/./src/common/parser/OscParser.ts?","webpack:///xterm/./src/common/parser/Params.ts?","webpack:///xterm/./src/common/public/AddonManager.ts?","webpack:///xterm/./src/common/public/BufferApiView.ts?","webpack:///xterm/./src/common/public/BufferLineApiView.ts?","webpack:///xterm/./src/common/public/BufferNamespaceApi.ts?","webpack:///xterm/./src/common/public/ParserApi.ts?","webpack:///xterm/./src/common/public/UnicodeApi.ts?","webpack:///xterm/./src/common/services/BufferService.ts?","webpack:///xterm/./src/common/services/CharsetService.ts?","webpack:///xterm/./src/common/services/CoreMouseService.ts?","webpack:///xterm/./src/common/services/CoreService.ts?","webpack:///xterm/./src/common/services/DecorationService.ts?","webpack:///xterm/./src/common/services/DirtyRowService.ts?","webpack:///xterm/./src/common/services/InstantiationService.ts?","webpack:///xterm/./src/common/services/LogService.ts?","webpack:///xterm/./src/common/services/OptionsService.ts?","webpack:///xterm/./src/common/services/ServiceRegistry.ts?","webpack:///xterm/./src/common/services/Services.ts?","webpack:///xterm/./src/common/services/UnicodeService.ts?","webpack:///xterm/webpack/bootstrap?","webpack:///xterm/webpack/startup?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n// Copied from https://github.com/microsoft/vscode/blob/7d9b1c37f8e5ae3772782ba3b09d827eb3fdd833/src/vs/base/common/codicons.ts\nexport namespace CSSIcon {\n    export const iconNameSegment = '[A-Za-z0-9]+';\n    export const iconNameExpression = '[A-Za-z0-9-]+';\n    export const iconModifierExpression = '~[A-Za-z]+';\n    export const iconNameCharacter = '[A-Za-z0-9~-]';\n}\n\nconst iconsRegex = new RegExp(`\\\\$\\\\(${CSSIcon.iconNameExpression}(?:${CSSIcon.iconModifierExpression})?\\\\)`, 'g'); // no capturing groups\n\nconst escapeIconsRegex = new RegExp(`(\\\\\\\\)?${iconsRegex.source}`, 'g');\nexport function escapeIcons(text: string): string {\n    return text.replace(escapeIconsRegex, (match, escaped) => escaped ? match : `\\\\${match}`);\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { escapeRegExpCharacters } from '../strings';\nimport { UriComponents } from '../uri';\nimport { escapeIcons } from './icon-utilities';\nimport { isObject, isString } from '../types';\n\nexport interface MarkdownString {\n    readonly value: string;\n    readonly isTrusted?: boolean;\n    readonly supportThemeIcons?: boolean;\n    readonly supportHtml?: boolean;\n    readonly baseUri?: UriComponents;\n    uris?: { [href: string]: UriComponents };\n}\n\nexport enum MarkdownStringTextNewlineStyle {\n    Paragraph = 0,\n    Break = 1,\n}\n\nexport namespace MarkdownString {\n    /**\n     * @returns whether the candidate satisfies the interface of a markdown string\n     */\n    export function is(candidate: unknown): candidate is MarkdownString {\n        return isObject<MarkdownString>(candidate) && isString(candidate.value);\n    }\n}\n\n// Copied from https://github.com/microsoft/vscode/blob/7d9b1c37f8e5ae3772782ba3b09d827eb3fdd833/src/vs/base/common/htmlContent.ts\n\nexport class MarkdownStringImpl implements MarkdownString {\n\n    public value: string;\n    public isTrusted?: boolean;\n    public supportThemeIcons?: boolean;\n    public supportHtml?: boolean;\n    public baseUri?: UriComponents;\n\n    constructor(\n        value: string = '',\n        isTrustedOrOptions: boolean | { isTrusted?: boolean; supportThemeIcons?: boolean; supportHtml?: boolean } = false,\n    ) {\n        this.value = value;\n        if (typeof this.value !== 'string') {\n            throw new Error('Illegal value for MarkdownString. Expected string, got ' + typeof this.value);\n        }\n\n        if (typeof isTrustedOrOptions === 'boolean') {\n            this.isTrusted = isTrustedOrOptions;\n            this.supportThemeIcons = false;\n            this.supportHtml = false;\n        } else {\n            this.isTrusted = isTrustedOrOptions.isTrusted ?? undefined;\n            this.supportThemeIcons = isTrustedOrOptions.supportThemeIcons ?? false;\n            this.supportHtml = isTrustedOrOptions.supportHtml ?? false;\n        }\n    }\n\n    appendText(value: string, newlineStyle: MarkdownStringTextNewlineStyle = MarkdownStringTextNewlineStyle.Paragraph): MarkdownStringImpl {\n        this.value += escapeMarkdownSyntaxTokens(this.supportThemeIcons ? escapeIcons(value) : value)\n            .replace(/([ \\t]+)/g, (_match, g1) => '&nbsp;'.repeat(g1.length))\n            .replace(/\\>/gm, '\\\\>')\n            .replace(/\\n/g, newlineStyle === MarkdownStringTextNewlineStyle.Break ? '\\\\\\n' : '\\n\\n');\n\n        return this;\n    }\n\n    appendMarkdown(value: string): MarkdownStringImpl {\n        this.value += value;\n        return this;\n    }\n\n    appendCodeblock(langId: string, code: string): MarkdownStringImpl {\n        this.value += '\\n```';\n        this.value += langId;\n        this.value += '\\n';\n        this.value += code;\n        this.value += '\\n```\\n';\n        return this;\n    }\n\n    appendLink(target: UriComponents | string, label: string, title?: string): MarkdownStringImpl {\n        this.value += '[';\n        this.value += this._escape(label, ']');\n        this.value += '](';\n        this.value += this._escape(String(target), ')');\n        if (title) {\n            this.value += ` \"${this._escape(this._escape(title, '\"'), ')')}\"`;\n        }\n        this.value += ')';\n        return this;\n    }\n\n    private _escape(value: string, ch: string): string {\n        const r = new RegExp(escapeRegExpCharacters(ch), 'g');\n        return value.replace(r, (match, offset) => {\n            if (value.charAt(offset - 1) !== '\\\\') {\n                return `\\\\${match}`;\n            } else {\n                return match;\n            }\n        });\n    }\n}\n\nexport function escapeMarkdownSyntaxTokens(text: string): string {\n    // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    return text.replace(/[\\\\`*_{}[\\]()#+\\-!]/g, '\\\\$&');\n}\n\n// Copied from https://github.com/microsoft/vscode/blob/1.72.2/src/vs/base/common/htmlContent.ts\n\nexport function parseHrefAndDimensions(href: string): { href: string; dimensions: string[] } {\n    const dimensions: string[] = [];\n    const splitted = href.split('|').map(s => s.trim());\n    href = splitted[0];\n    const parameters = splitted[1];\n    if (parameters) {\n        const heightFromParams = /height=(\\d+)/.exec(parameters);\n        const widthFromParams = /width=(\\d+)/.exec(parameters);\n        const height = heightFromParams ? heightFromParams[1] : '';\n        const width = widthFromParams ? widthFromParams[1] : '';\n        const widthIsFinite = isFinite(parseInt(width));\n        const heightIsFinite = isFinite(parseInt(height));\n        if (widthIsFinite) {\n            dimensions.push(`width=\"${width}\"`);\n        }\n        if (heightIsFinite) {\n            dimensions.push(`height=\"${height}\"`);\n        }\n    }\n    return { href, dimensions };\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Bitsler and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable max-len */\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { IJSONSchema } from '@theia/core/lib/common/json-schema';\nimport { createPreferenceProxy, PreferenceProxy, PreferenceService, PreferenceContribution, PreferenceSchema, PreferenceSchemaProperties } from '@theia/core/lib/browser';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { editorGeneratedPreferenceProperties } from '@theia/editor/lib/browser/editor-generated-preference-schema';\nimport { OS } from '@theia/core';\nimport { terminalAnsiColorMap } from './terminal-theme-service';\n\nconst commonProfileProperties: PreferenceSchemaProperties = {\n    env: {\n        type: 'object',\n        additionalProperties: {\n            type: 'string'\n        },\n        markdownDescription: nls.localizeByDefault('An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.'),\n    },\n    overrideName: {\n        type: 'boolean',\n        description: nls.localizeByDefault('Controls whether or not the profile name overrides the auto detected one.')\n    },\n    icon: {\n        type: 'string',\n        markdownDescription: nls.localize('theia/terminal/profileIcon', 'A codicon ID to associate with the terminal icon.\\nterminal-tmux:\"$(terminal-tmux)\"')\n    },\n    color: {\n        type: 'string',\n        enum: Object.getOwnPropertyNames(terminalAnsiColorMap),\n        description: nls.localize('theia/terminal/profileColor', 'A terminal theme color ID to associate with the terminal.')\n    }\n};\n\nconst stringOrStringArray: IJSONSchema = {\n    oneOf: [\n        { type: 'string' },\n        {\n            type: 'array',\n            items: {\n                type: 'string'\n            }\n        }\n    ]\n};\n\nconst pathProperty: IJSONSchema = {\n    description: nls.localize('theia/terminal/profilePath', 'The path of the shell that this profile uses.'),\n    ...stringOrStringArray\n};\n\nfunction shellArgsDeprecatedMessage(type: OS.Type): string {\n    return nls.localize('theia/terminal/shell.deprecated', 'This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in \\'terminal.integrated.profiles.{0}\\' and setting its profile name as the default in \\'terminal.integrated.defaultProfile.{0}.\\'', type.toString().toLowerCase());\n}\n\nexport const TerminalConfigSchema: PreferenceSchema = {\n    type: 'object',\n    properties: {\n        'terminal.enableCopy': {\n            type: 'boolean',\n            description: nls.localize('theia/terminal/enableCopy', 'Enable ctrl-c (cmd-c on macOS) to copy selected text'),\n            default: true\n        },\n        'terminal.enablePaste': {\n            type: 'boolean',\n            description: nls.localize('theia/terminal/enablePaste', 'Enable ctrl-v (cmd-v on macOS) to paste from clipboard'),\n            default: true\n        },\n        'terminal.integrated.fontFamily': {\n            type: 'string',\n            markdownDescription: nls.localizeByDefault('Controls the font family of the terminal. Defaults to {0}\\'s value.', '`#editor.fontFamily#`'),\n            default: editorGeneratedPreferenceProperties['editor.fontFamily'].default,\n        },\n        'terminal.integrated.fontSize': {\n            type: 'number',\n            description: nls.localizeByDefault('Controls the font size in pixels of the terminal.'),\n            minimum: 6,\n            default: editorGeneratedPreferenceProperties['editor.fontSize'].default\n        },\n        'terminal.integrated.fontWeight': {\n            type: 'string',\n            enum: ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'],\n            description: nls.localizeByDefault('The font weight to use within the terminal for non-bold text. Accepts \\\"normal\\\" and \\\"bold\\\" keywords or numbers between 1 and 1000.'),\n            default: 'normal'\n        },\n        'terminal.integrated.fontWeightBold': {\n            type: 'string',\n            enum: ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'],\n            description: nls.localizeByDefault('The font weight to use within the terminal for bold text. Accepts \\\"normal\\\" and \\\"bold\\\" keywords or numbers between 1 and 1000.'),\n            default: 'bold'\n        },\n        'terminal.integrated.drawBoldTextInBrightColors': {\n            description: nls.localizeByDefault('Controls whether bold text in the terminal will always use the \\\"bright\\\" ANSI color variant.'),\n            type: 'boolean',\n            default: true,\n        },\n        'terminal.integrated.letterSpacing': {\n            description: nls.localizeByDefault('Controls the letter spacing of the terminal. This is an integer value which represents the number of additional pixels to add between characters.'),\n            type: 'number',\n            default: 1\n        },\n        'terminal.integrated.lineHeight': {\n            description: nls.localizeByDefault('Controls the line height of the terminal. This number is multiplied by the terminal font size to get the actual line-height in pixels.'),\n            type: 'number',\n            minimum: 1,\n            default: 1\n        },\n        'terminal.integrated.scrollback': {\n            description: nls.localizeByDefault('Controls the maximum number of lines the terminal keeps in its buffer. We pre-allocate memory based on this value in order to ensure a smooth experience. As such, as the value increases, so will the amount of memory.'),\n            type: 'number',\n            default: 1000\n        },\n        'terminal.integrated.fastScrollSensitivity': {\n            markdownDescription: nls.localizeByDefault('Scrolling speed multiplier when pressing `Alt`.'),\n            type: 'number',\n            default: 5,\n        },\n        'terminal.integrated.rendererType': {\n            description: nls.localize('theia/terminal/rendererType', 'Controls how the terminal is rendered.'),\n            type: 'string',\n            enum: ['canvas', 'dom'],\n            default: 'canvas'\n        },\n        'terminal.integrated.copyOnSelection': {\n            description: nls.localizeByDefault('Controls whether text selected in the terminal will be copied to the clipboard.'),\n            type: 'boolean',\n            default: false,\n        },\n        'terminal.integrated.cursorBlinking': {\n            description: nls.localizeByDefault('Controls whether the terminal cursor blinks.'),\n            type: 'boolean',\n            default: false\n        },\n        'terminal.integrated.cursorStyle': {\n            description: nls.localizeByDefault('Controls the style of terminal cursor when the terminal is focused.'),\n            enum: ['block', 'underline', 'line'],\n            default: 'block'\n        },\n        'terminal.integrated.cursorWidth': {\n            markdownDescription: nls.localizeByDefault('Controls the width of the cursor when {0} is set to {1}.', '`#terminal.integrated.cursorStyle#`', '`line`'),\n            type: 'number',\n            default: 1\n        },\n        'terminal.integrated.shell.windows': {\n            type: ['string', 'null'],\n            typeDetails: { isFilepath: true },\n            markdownDescription: nls.localize('theia/terminal/shellWindows', 'The path of the shell that the terminal uses on Windows. (default: \\'{0}\\').', 'C:\\\\Windows\\\\System32\\\\cmd.exe'),\n            default: undefined,\n            deprecationMessage: shellArgsDeprecatedMessage(OS.Type.Windows),\n        },\n        'terminal.integrated.shell.osx': {\n            type: ['string', 'null'],\n            markdownDescription: nls.localize('theia/terminal/shellOsx', 'The path of the shell that the terminal uses on macOS (default: \\'{0}\\'}).', '/bin/bash'),\n            default: undefined,\n            deprecationMessage: shellArgsDeprecatedMessage(OS.Type.OSX),\n        },\n        'terminal.integrated.shell.linux': {\n            type: ['string', 'null'],\n            markdownDescription: nls.localize('theia/terminal/shellLinux', 'The path of the shell that the terminal uses on Linux (default: \\'{0}\\'}).', '/bin/bash'),\n            default: undefined,\n            deprecationMessage: shellArgsDeprecatedMessage(OS.Type.Linux),\n        },\n        'terminal.integrated.shellArgs.windows': {\n            type: 'array',\n            markdownDescription: nls.localize('theia/terminal/shellArgsWindows', 'The command line arguments to use when on the Windows terminal.'),\n            default: [],\n            deprecationMessage: shellArgsDeprecatedMessage(OS.Type.Windows),\n        },\n        'terminal.integrated.shellArgs.osx': {\n            type: 'array',\n            markdownDescription: nls.localize('theia/terminal/shellArgsOsx', 'The command line arguments to use when on the macOS terminal.'),\n            default: [\n                '-l'\n            ],\n            deprecationMessage: shellArgsDeprecatedMessage(OS.Type.OSX),\n        },\n        'terminal.integrated.shellArgs.linux': {\n            type: 'array',\n            markdownDescription: nls.localize('theia/terminal/shellArgsLinux', 'The command line arguments to use when on the Linux terminal.'),\n            default: [],\n            deprecationMessage: shellArgsDeprecatedMessage(OS.Type.Linux),\n        },\n        'terminal.integrated.confirmOnExit': {\n            type: 'string',\n            description: nls.localizeByDefault('Controls whether to confirm when the window closes if there are active terminal sessions.'),\n            enum: ['never', 'always', 'hasChildProcesses'],\n            enumDescriptions: [\n                nls.localizeByDefault('Never confirm.'),\n                nls.localizeByDefault('Always confirm if there are terminals.'),\n                nls.localizeByDefault('Confirm if there are any terminals that have child processes.'),\n            ],\n            default: 'never'\n        },\n        'terminal.integrated.enablePersistentSessions': {\n            type: 'boolean',\n            description: nls.localizeByDefault('Persist terminal sessions/history for the workspace across window reloads.'),\n            default: true\n        },\n        'terminal.integrated.defaultProfile.windows': {\n            type: 'string',\n            description: nls.localize('theia/terminal/defaultProfile', 'The default profile used on {0}', OS.Type.Windows.toString())\n\n        },\n        'terminal.integrated.defaultProfile.linux': {\n            type: 'string',\n            description: nls.localize('theia/terminal/defaultProfile', 'The default profile used on {0}', OS.Type.Linux.toString())\n\n        },\n        'terminal.integrated.defaultProfile.osx': {\n            type: 'string',\n            description: nls.localize('theia/terminal/defaultProfile', 'The default profile used on {0}', OS.Type.OSX.toString())\n        },\n        'terminal.integrated.profiles.windows': {\n            markdownDescription: nls.localize('theia/terminal/profiles', 'The profiles to present when creating a new terminal. Set the path property manually with optional args.\\nSet an existing profile to `null` to hide the profile from the list, for example: `\"{0}\": null`.', 'cmd'),\n            anyOf: [\n                {\n                    type: 'object',\n                    properties: {\n                    },\n                    additionalProperties: {\n                        oneOf: [{\n                            type: 'object',\n                            additionalProperties: false,\n                            properties: {\n                                path: pathProperty,\n                                args: {\n                                    ...stringOrStringArray,\n                                    description: nls.localize('theia/terminal/profileArgs', 'The shell arguments that this profile uses.'),\n\n                                },\n                                ...commonProfileProperties\n                            },\n                            required: ['path']\n                        },\n                        {\n                            type: 'object',\n                            additionalProperties: false,\n                            properties: {\n                                source: {\n                                    type: 'string',\n                                    description: nls.localizeByDefault('A profile source that will auto detect the paths to the shell. Note that non-standard executable locations are not supported and must be created manually in a new profile.')\n                                },\n                                args: {\n                                    ...stringOrStringArray,\n                                    description: nls.localize('theia/terminal/profileArgs', 'The shell arguments that this profile uses.'),\n\n                                },\n                                ...commonProfileProperties\n                            },\n                            required: ['source'],\n                            default: {\n                                path: 'C:\\\\Windows\\\\System32\\\\cmd.exe'\n                            }\n\n                        }, {\n                            type: 'null'\n                        }]\n                    },\n                    default: {\n                        cmd: {\n                            path: 'C:\\\\Windows\\\\System32\\\\cmd.exe'\n                        }\n                    }\n                },\n                { type: 'null' }\n            ]\n        },\n        'terminal.integrated.profiles.linux': {\n            markdownDescription: nls.localize('theia/terminal/profiles', 'The profiles to present when creating a new terminal. Set the path property manually with optional args.\\nSet an existing profile to `null` to hide the profile from the list, for example: `\"{0}\": null`.', 'bash'),\n            anyOf: [{\n                type: 'object',\n                properties: {\n                },\n                additionalProperties: {\n                    oneOf: [\n                        {\n                            type: 'object',\n                            properties: {\n                                path: pathProperty,\n                                args: {\n                                    type: 'array',\n                                    items: { type: 'string' },\n                                    description: nls.localize('theia/terminal/profileArgs', 'The shell arguments that this profile uses.'),\n                                },\n                                ...commonProfileProperties\n                            },\n                            required: ['path'],\n                            additionalProperties: false,\n                        },\n                        { type: 'null' }\n                    ]\n                },\n                default: {\n                    path: '${env:SHELL}',\n                    args: ['-l']\n                }\n\n            },\n            { type: 'null' }\n            ]\n        },\n        'terminal.integrated.profiles.osx': {\n            markdownDescription: nls.localize('theia/terminal/profiles', 'The profiles to present when creating a new terminal. Set the path property manually with optional args.\\nSet an existing profile to `null` to hide the profile from the list, for example: `\"{0}\": null`.', 'zsh'),\n            anyOf: [{\n                type: 'object',\n                properties: {\n                },\n                additionalProperties: {\n                    oneOf: [\n                        {\n                            type: 'object',\n                            properties: {\n                                path: pathProperty,\n                                args: {\n                                    type: 'array',\n                                    items: { type: 'string' },\n                                    description: nls.localize('theia/terminal/profileArgs', 'The shell arguments that this profile uses.'),\n                                },\n                                ...commonProfileProperties\n                            },\n                            required: ['path'],\n                            additionalProperties: false,\n                        },\n                        { type: 'null' }\n                    ]\n                },\n                default: {\n                    path: '${env:SHELL}',\n                    args: ['-l']\n                }\n\n            },\n            { type: 'null' }\n            ]\n        },\n    }\n};\n\nexport type Profiles = null | {\n    [key: string]: {\n        path?: string | string[],\n        source?: string,\n        args?: string | string[],\n        env?: { [key: string]: string },\n        overrideName?: boolean;\n        icon?: string,\n        color?: string\n    }\n};\n\nexport interface TerminalConfiguration {\n    'terminal.enableCopy': boolean\n    'terminal.enablePaste': boolean\n    // xterm compatible, see https://xtermjs.org/docs/api/terminal/interfaces/iterminaloptions/\n    'terminal.integrated.fontFamily': string\n    'terminal.integrated.fontSize': number\n    'terminal.integrated.fontWeight': FontWeight\n    'terminal.integrated.fontWeightBold': FontWeight,\n    'terminal.integrated.drawBoldTextInBrightColors': boolean,\n    'terminal.integrated.letterSpacing': number\n    'terminal.integrated.lineHeight': number,\n    'terminal.integrated.scrollback': number,\n    'terminal.integrated.fastScrollSensitivity': number,\n    'terminal.integrated.rendererType': TerminalRendererType,\n    'terminal.integrated.copyOnSelection': boolean,\n    'terminal.integrated.cursorBlinking': boolean,\n    'terminal.integrated.cursorStyle': CursorStyleVSCode,\n    'terminal.integrated.cursorWidth': number,\n    'terminal.integrated.shell.windows': string | null | undefined,\n    'terminal.integrated.shell.osx': string | null | undefined,\n    'terminal.integrated.shell.linux': string | null | undefined,\n    'terminal.integrated.shellArgs.windows': string[],\n    'terminal.integrated.shellArgs.osx': string[],\n    'terminal.integrated.shellArgs.linux': string[],\n    'terminal.integrated.defaultProfile.windows': string,\n    'terminal.integrated.defaultProfile.linux': string,\n    'terminal.integrated.defaultProfile.osx': string,\n    'terminal.integrated.profiles.windows': Profiles\n    'terminal.integrated.profiles.linux': Profiles,\n    'terminal.integrated.profiles.osx': Profiles,\n    'terminal.integrated.confirmOnExit': ConfirmOnExitType\n    'terminal.integrated.enablePersistentSessions': boolean\n}\n\ntype FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\nexport type CursorStyle = 'block' | 'underline' | 'bar';\n// VS Code uses 'line' to represent 'bar'. The following conversion is necessary to support their preferences.\nexport type CursorStyleVSCode = CursorStyle | 'line';\nexport type TerminalRendererType = 'canvas' | 'dom';\nexport type ConfirmOnExitType = 'never' | 'always' | 'hasChildProcesses';\nexport const DEFAULT_TERMINAL_RENDERER_TYPE = 'canvas';\nexport function isTerminalRendererType(arg: unknown): arg is TerminalRendererType {\n    return typeof arg === 'string' && (arg === 'canvas' || arg === 'dom');\n}\n\nexport const TerminalPreferenceContribution = Symbol('TerminalPreferenceContribution');\nexport const TerminalPreferences = Symbol('TerminalPreferences');\nexport type TerminalPreferences = PreferenceProxy<TerminalConfiguration>;\n\nexport function createTerminalPreferences(preferences: PreferenceService, schema: PreferenceSchema = TerminalConfigSchema): TerminalPreferences {\n    return createPreferenceProxy(preferences, schema);\n}\n\nexport function bindTerminalPreferences(bind: interfaces.Bind): void {\n    bind(TerminalPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        const contribution = ctx.container.get<PreferenceContribution>(TerminalPreferenceContribution);\n        return createTerminalPreferences(preferences, contribution.schema);\n    }).inSingletonScope();\n    bind(TerminalPreferenceContribution).toConstantValue({ schema: TerminalConfigSchema });\n    bind(PreferenceContribution).toService(TerminalPreferenceContribution);\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ITheme } from 'xterm';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { ColorRegistry } from '@theia/core/lib/browser/color-registry';\nimport { ColorDefaults } from '@theia/core/lib/common/color';\nimport { ThemeService } from '@theia/core/lib/browser/theming';\nimport { ThemeChangeEvent } from '@theia/core/lib/common/theme';\nimport { Event } from '@theia/core';\n\n/**\n * It should be aligned with https://github.com/microsoft/vscode/blob/0dfa355b3ad185a6289ba28a99c141ab9e72d2be/src/vs/workbench/contrib/terminal/common/terminalColorRegistry.ts#L40\n */\nexport const terminalAnsiColorMap: { [key: string]: { index: number, defaults: ColorDefaults } } = {\n    'terminal.ansiBlack': {\n        index: 0,\n        defaults: {\n            light: '#000000',\n            dark: '#000000',\n            hcDark: '#000000',\n            hcLight: '#292929'\n        }\n    },\n    'terminal.ansiRed': {\n        index: 1,\n        defaults: {\n            light: '#cd3131',\n            dark: '#cd3131',\n            hcDark: '#cd0000',\n            hcLight: '#cd3131'\n        }\n    },\n    'terminal.ansiGreen': {\n        index: 2,\n        defaults: {\n            light: '#00BC00',\n            dark: '#0DBC79',\n            hcDark: '#00cd00',\n            hcLight: '#00bc00'\n        }\n    },\n    'terminal.ansiYellow': {\n        index: 3,\n        defaults: {\n            light: '#949800',\n            dark: '#e5e510',\n            hcDark: '#cdcd00',\n            hcLight: '#949800'\n        }\n    },\n    'terminal.ansiBlue': {\n        index: 4,\n        defaults: {\n            light: '#0451a5',\n            dark: '#2472c8',\n            hcDark: '#0000ee',\n            hcLight: '#0451a5'\n        }\n    },\n    'terminal.ansiMagenta': {\n        index: 5,\n        defaults: {\n            light: '#bc05bc',\n            dark: '#bc3fbc',\n            hcDark: '#cd00cd',\n            hcLight: '#bc05bc'\n        }\n    },\n    'terminal.ansiCyan': {\n        index: 6,\n        defaults: {\n            light: '#0598bc',\n            dark: '#11a8cd',\n            hcDark: '#00cdcd',\n            hcLight: '#0598b'\n        }\n    },\n    'terminal.ansiWhite': {\n        index: 7,\n        defaults: {\n            light: '#555555',\n            dark: '#e5e5e5',\n            hcDark: '#e5e5e5',\n            hcLight: '#555555'\n        }\n    },\n    'terminal.ansiBrightBlack': {\n        index: 8,\n        defaults: {\n            light: '#666666',\n            dark: '#666666',\n            hcDark: '#7f7f7f',\n            hcLight: '#666666'\n        }\n    },\n    'terminal.ansiBrightRed': {\n        index: 9,\n        defaults: {\n            light: '#cd3131',\n            dark: '#f14c4c',\n            hcDark: '#ff0000',\n            hcLight: '#cd3131'\n        }\n    },\n    'terminal.ansiBrightGreen': {\n        index: 10,\n        defaults: {\n            light: '#14CE14',\n            dark: '#23d18b',\n            hcDark: '#00ff00',\n            hcLight: '#00bc00'\n        }\n    },\n    'terminal.ansiBrightYellow': {\n        index: 11,\n        defaults: {\n            light: '#b5ba00',\n            dark: '#f5f543',\n            hcDark: '#ffff00',\n            hcLight: '#b5ba00'\n        }\n    },\n    'terminal.ansiBrightBlue': {\n        index: 12,\n        defaults: {\n            light: '#0451a5',\n            dark: '#3b8eea',\n            hcDark: '#5c5cff',\n            hcLight: '#0451a5'\n        }\n    },\n    'terminal.ansiBrightMagenta': {\n        index: 13,\n        defaults: {\n            light: '#bc05bc',\n            dark: '#d670d6',\n            hcDark: '#ff00ff',\n            hcLight: '#bc05bc'\n        }\n    },\n    'terminal.ansiBrightCyan': {\n        index: 14,\n        defaults: {\n            light: '#0598bc',\n            dark: '#29b8db',\n            hcDark: '#00ffff',\n            hcLight: '#0598bc'\n        }\n    },\n    'terminal.ansiBrightWhite': {\n        index: 15,\n        defaults: {\n            light: '#a5a5a5',\n            dark: '#e5e5e5',\n            hcDark: '#ffffff',\n            hcLight: '#a5a5a5'\n        }\n    }\n};\n\n@injectable()\nexport class TerminalThemeService {\n\n    @inject(ColorRegistry) protected readonly colorRegistry: ColorRegistry;\n    @inject(ThemeService) protected readonly themeService: ThemeService;\n\n    get onDidChange(): Event<ThemeChangeEvent> {\n        return this.themeService.onDidColorThemeChange;\n    }\n\n    get theme(): ITheme {\n        const foregroundColor = this.colorRegistry.getCurrentColor('terminal.foreground');\n        const backgroundColor = this.colorRegistry.getCurrentColor('terminal.background') || this.colorRegistry.getCurrentColor('panel.background');\n        const cursorColor = this.colorRegistry.getCurrentColor('terminalCursor.foreground') || foregroundColor;\n        const cursorAccentColor = this.colorRegistry.getCurrentColor('terminalCursor.background') || backgroundColor;\n        const selectionColor = this.colorRegistry.getCurrentColor('terminal.selectionBackground');\n\n        const theme: ITheme = {\n            background: backgroundColor,\n            foreground: foregroundColor,\n            cursor: cursorColor,\n            cursorAccent: cursorAccentColor,\n            selection: selectionColor\n        };\n        // eslint-disable-next-line guard-for-in\n        for (const id in terminalAnsiColorMap) {\n            const colorId = id.substring(13);\n            const colorName = colorId.charAt(0).toLowerCase() + colorId.slice(1);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (theme as any)[colorName] = this.colorRegistry.getCurrentColor(id);\n        }\n        return theme;\n    }\n\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  constructor() {}\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    if (core._renderService.dimensions.actualCellWidth === 0 || core._renderService.dimensions.actualCellHeight === 0) {\n      return undefined;\n    }\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - core.viewport.scrollBarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / core._renderService.dimensions.actualCellWidth)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / core._renderService.dimensions.actualCellHeight))\n    };\n    return geometry;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(775);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n    this._accessibilityTreeRoot.tabIndex = 0;\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    removeElementFromParent(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'common/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { ColorIndex, IColor } from 'common/Types';\n\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionTransparent: DEFAULT_SELECTION,\n      selectionOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionForeground: undefined,\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selectionTransparent = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = color.blend(this.colors.background, this.colors.selectionTransparent);\n    const nullColor: IColor = {\n      css: '',\n      rgba: 0\n    };\n    this.colors.selectionForeground = theme.selectionForeground ? this._parseColor(theme.selectionForeground, nullColor) : undefined;\n    if (this.colors.selectionForeground === nullColor) {\n      this.colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(this.colors.selectionTransparent)) {\n      const opacity = 0.3;\n      this.colors.selectionTransparent = color.opacity(this.colors.selectionTransparent, opacity);\n    }\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this.colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this.colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this.colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this.colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this.colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this.colors.foreground,\n      background: this.colors.background,\n      cursor: this.colors.cursor,\n      ansi: this.colors.ansi.slice()\n    };\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService, IOptionsService, IUnicodeService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onShowLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    @IBufferService protected readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IUnicodeService private readonly _unicodeService: IUnicodeService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n\n    // Cannot use window.setTimeout since tests need to run in node\n    this._rowsTimeoutId = setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency) as any as number;\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n    // FIXME: get cell length from buffer to avoid mismatch after Unicode version change\n    const width = this._unicodeService.getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        const newWindow = window.open();\n        if (newWindow) {\n          newWindow.opener = null;\n          newWindow.location.href = uri;\n        } else {\n          console.warn('Opening link blocked as opener could not be cleared');\n        }\n      },\n      () => {\n        this._onShowLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onHideLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._onMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _onMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._onHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _onHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = window.setTimeout(() => this._onTooltip(e), this._optionsService.rawOptions.linkTooltipHoverDuration);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    zone?.tooltipCallback(e);\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport, ILinkifier2, CharacterJoinerHandler } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService, ICharacterJoinerService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'common/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n  private _soundService: ISoundService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier: ILinkifier;\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n  private _colorManager: ColorManager | undefined;\n  private _theme: ITheme | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onBell = new EventEmitter<void>();\n  public get onBell(): IEvent<void> { return this._onBell.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier = this._instantiationService.createInstance(Linkifier);\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this.bell()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._colorManager) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi' | undefined = undefined;\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      if (acc) {\n        switch (req.type) {\n          case ColorRequestType.REPORT:\n            const channels = color.toColorRGB(acc === 'ansi'\n              ? this._colorManager.colors.ansi[req.index]\n              : this._colorManager.colors[acc]);\n            this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n            break;\n          case ColorRequestType.SET:\n            if (acc === 'ansi') this._colorManager.colors.ansi[req.index] = rgba.toColor(...req.color);\n            else this._colorManager.colors[acc] = rgba.toColor(...req.color);\n            break;\n          case ColorRequestType.RESTORE:\n            this._colorManager.restoreColor(req.index);\n            break;\n        }\n      }\n    }\n    this._renderService?.setColors(this._colorManager.colors);\n    this.viewport?.onThemeChange(this._colorManager.colors);\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._renderService?.dispose();\n    this._customKeyEventHandler = undefined;\n    this.write = () => { };\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  protected _updateOptions(key: string): void {\n    super._updateOptions(key);\n\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        this._renderService?.clear();\n        this._charSizeService?.measure();\n        break;\n      case 'cursorBlink':\n      case 'cursorStyle':\n        // The DOM renderer needs a row refresh to update the cursor styles\n        this.refresh(this.buffer.y, this.buffer.y);\n        break;\n      case 'customGlyphs':\n      case 'drawBoldTextInBrightColors':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'minimumContrastRatio':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this._renderService) {\n          this._renderService.clear();\n          this._renderService.onResize(this.cols, this.rows);\n          this.refresh(0, this.rows - 1);\n        }\n        break;\n      case 'rendererType':\n        if (this._renderService) {\n          this._renderService.setRenderer(this._createRenderer());\n          this._renderService.onResize(this.cols, this.rows);\n        }\n        break;\n      case 'scrollback':\n        this.viewport?.syncScrollArea();\n        break;\n      case 'screenReaderMode':\n        if (this.optionsService.rawOptions.screenReaderMode) {\n          if (!this._accessibilityManager && this._renderService) {\n            this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n          }\n        } else {\n          this._accessibilityManager?.dispose();\n          this._accessibilityManager = undefined;\n        }\n        break;\n      case 'tabStopWidth': this.buffers.setupTabStops(); break;\n      case 'theme':\n        this._setTheme(this.optionsService.rawOptions.theme);\n        break;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.actualCellHeight;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.actualCellWidth * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.actualCellHeight;\n    const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._theme = this.options.theme || this._theme;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.register(this.optionsService.onOptionChange(e => this._colorManager!.onOptionsChange(e)));\n    this._colorManager.setTheme(this._theme);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    const renderer = this._createRenderer();\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea,\n      this.element\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.onCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.onBlur()));\n    this.register(this.onFocus(() => this._renderService!.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager!.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement);\n    }\n    this.optionsService.onOptionChange(() => {\n      if (!this._overviewRulerRenderer && this.options.overviewRulerWidth && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement);\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager!.colors, this.screenElement!, this.linkifier, this.linkifier2);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager!.colors, this.element!, this.screenElement!, this._viewportElement!, this.linkifier, this.linkifier2);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getRawByteCoords(ev, self.screenElement!, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.onTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart![0],\n      startRow: this._selectionService.selectionStart![1],\n      endColumn: this._selectionService.selectionEnd![0],\n      endRow: this._selectionService.selectionEnd![1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.rawOptions.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService?.playBellSound();\n    }\n\n    this._onBell.fire();\n\n    // if (this._visualBell()) {\n    //   this.element.classList.add('visual-bell-active');\n    //   clearTimeout(this._visualBellTimer);\n    //   this._visualBellTimer = window.setTimeout(() => {\n    //     this.element.classList.remove('visual-bell-active');\n    //   }, 200);\n    // }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.scaledCanvasWidth.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.scaledCanvasHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.scaledCellWidth.toFixed(0);\n        const cellHeight = this._renderService.dimensions.scaledCellHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentScaledCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    private readonly _element: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._currentScaledCellHeight = this._renderService.dimensions.scaledCellHeight;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.scaledCellHeight !== this._currentScaledCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n  }\n\n  public override dispose(): void {\n    this._container.remove();\n    this._decorationElements.clear();\n    super.dispose();\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this.refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  public refreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.actualCellWidth)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.actualCellHeight}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.actualCellHeight}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.actualCellHeight}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        decoration.onDispose(() => this._removeDecoration(decoration));\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n      }\n      element.style.top = `${line * this._renderService.dimensions.actualCellHeight}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.actualCellWidth}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.actualCellWidth}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onOptionChange(o => {\n      if (o === 'overviewRulerWidth') {\n        this._queueRefresh(true);\n      }\n    }));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(window, 'resize', () => {\n      this._queueRefresh(true);\n    }));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  public override dispose(): void {\n    this._canvas?.remove();\n    super.dispose();\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * window.devicePixelRatio);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * window.devicePixelRatio);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * window.devicePixelRatio);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * window.devicePixelRatio);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    // TODO: Is _decorationElements needed?\n\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._dataAlreadySent = diff;\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.actualCellHeight;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.actualCellHeight;\n      const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, FontWeight, IModes, IDecorationOptions, IDecoration } from 'xterm';\nimport { ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: ITerminalOptions;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    this._checkProposedApi();\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    this._checkProposedApi();\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): ITerminalOptions {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    this._checkProposedApi();\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._checkProposedApi();\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._checkProposedApi();\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.registerMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell'): boolean;\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'fontWeight' | 'fontWeightBold'): FontWeight;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell', value: boolean): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._checkReadonlyOptions(key);\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData, IColor } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { excludeFromContrastRatioDemands, throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { channels, color, rgba } from 'common/Color';\nimport { removeElementFromParent } from 'browser/Dom';\nimport { tryDrawCustomChar } from 'browser/renderer/CustomGlyphs';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService,\n    protected readonly _decorationService: IDecorationService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    removeElementFromParent(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.rawOptions, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  public clearTextureAtlas(): void {\n    this._charAtlas?.clear();\n  }\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n     * Fills a 1px line (2px on HDPI) at the middle of the cell. This uses the\n     * existing fillStyle on the context.\n     * @param x The column to fill.\n     * @param y The row to fill.\n     */\n  protected _fillMiddleLineAtCells(x: number, y: number, width: number = 1): void {\n    const cellOffset = Math.ceil(this._scaledCellHeight * 0.5);\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - cellOffset - window.devicePixelRatio,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = TEXT_BASELINE;\n    this._clipRow(y);\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.rawOptions.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell, x, y);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n\n    // Don't try cache the glyph if it uses any decoration foreground/background override.\n    let hasOverrides = false;\n    for (const d of this._decorationService.getDecorationsAtCell(x, y)) {\n      if (d.backgroundColorRGB || d.foregroundColorRGB) {\n        hasOverrides = true;\n        break;\n      }\n    }\n\n    const atlasDidDraw = hasOverrides ? false : this._charAtlas?.draw(this._ctx, this._currentGlyphIdentifier, x * this._scaledCellWidth + this._scaledCharLeft, y * this._scaledCellHeight + this._scaledCharTop);\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = TEXT_BASELINE;\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = color.opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.rawOptions.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n\n    this._ctx.restore();\n  }\n\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      this._bufferService.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.rawOptions.fontWeightBold : this._optionsService.rawOptions.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.rawOptions.fontSize * window.devicePixelRatio}px ${this._optionsService.rawOptions.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData, x: number, y: number): IColor | undefined {\n    // Get any decoration foreground/background overrides, this must be fetched before the early\n    // exist but applied after inverse\n    let bgOverride: number | undefined;\n    let fgOverride: number | undefined;\n    let isTop = false;\n    for (const d of this._decorationService.getDecorationsAtCell(x, y)) {\n      if (d.options.layer !== 'top' && isTop) {\n        continue;\n      }\n      if (d.backgroundColorRGB) {\n        bgOverride = d.backgroundColorRGB.rgba;\n      }\n      if (d.foregroundColorRGB) {\n        fgOverride = d.foregroundColorRGB.rgba;\n      }\n      isTop = d.options.layer === 'top';\n    }\n\n    // Apply selection foreground if applicable\n    if (!isTop) {\n      if (this._colors.selectionForeground && this._isCellInSelection(x, y)) {\n        fgOverride = this._colors.selectionForeground.rgba;\n      }\n    }\n\n    if (!bgOverride && !fgOverride && (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode()))) {\n      return undefined;\n    }\n\n    if (!bgOverride && !fgOverride) {\n      // Try get from cache\n      const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n      if (adjustedColor !== undefined) {\n        return adjustedColor || undefined;\n      }\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgOverride !== undefined ? Attributes.CM_RGB : bgColorMode, bgOverride ?? bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    let result = rgba.ensureContrastRatio(bgOverride ?? bgRgba, fgOverride ?? fgRgba, this._optionsService.rawOptions.minimumContrastRatio);\n\n    if (!result) {\n      if (!fgOverride) {\n        this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n        return undefined;\n      }\n      // If it was an override and there was no contrast change, set as the result\n      result = fgOverride;\n    }\n\n    const color: IColor = {\n      css: channels.toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    if (!bgOverride && !fgOverride) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n    }\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      return x >= start[0] && y >= start[1] &&\n        x < end[0] && y < end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService, IDecorationService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRedraw: IEventEmitter<IRequestRedrawEvent>,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IDecorationService decorationService: IDecorationService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService, decorationService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n  }\n\n  public dispose(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    super.dispose();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n    this.onOptionsChanged();\n  }\n\n  public onBlur(): void {\n    this._cursorBlinkStateManager?.pause();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    this._cursorBlinkStateManager?.resume();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.rawOptions.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.rawOptions.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.rawOptions.cursorStyle || 'block'](cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.rawOptions.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      // Avoid potential rounding errors when device pixel ratio is less than 1\n      if (window.devicePixelRatio < 1) {\n        this._clearAll();\n      } else {\n        this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      }\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.rawOptions.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '▀': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '▁': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '▂': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '▃': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '▄': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '▅': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '▆': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '▇': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '█': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '▉': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '▊': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '▋': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '▌': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '▍': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '▎': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '▏': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '▐': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '▔': [{ x: 0, y: 0, w: 9, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '▕': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '▖': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '▗': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '▘': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '▙': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '▚': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '▛': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '▜': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '▝': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '▞': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '▟': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '░': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '▒': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '▓': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** │ */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** ─ */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** └ */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** ┘ */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** ┐ */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** ┌ */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** ╵ */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** ╴ */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** ╶ */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** ╷ */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** ┴ */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** ┤ */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** ├ */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** ┬ */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** ┼ */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** ╌ */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** ┄ */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** ┉ */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** ╎ */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** ┆ */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** ┊ */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | ((xp: number, yp: number) => string) } | undefined } = {\n  // Uniform normal and bold\n  '─': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '━': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '│': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '┃': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '┌': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '┏': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '┐': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '┓': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '└': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '┗': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '┘': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '┛': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '├': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '┣': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '┤': { [Style.NORMAL]: Shapes.T_LEFT },\n  '┫': { [Style.BOLD]:   Shapes.T_LEFT },\n  '┬': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '┳': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '┴': { [Style.NORMAL]: Shapes.T_TOP },\n  '┻': { [Style.BOLD]:   Shapes.T_TOP },\n  '┼': { [Style.NORMAL]: Shapes.CROSS },\n  '╋': { [Style.BOLD]:   Shapes.CROSS },\n  '╴': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '╸': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '╵': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '╹': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '╶': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '╺': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '╷': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '╻': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '═': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '║': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╒': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╓': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╔': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╕': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╖': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '╗': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '╘': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '╙': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╚': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '╛': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '╜': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '╝': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '╞': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╟': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '╠': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╡': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╢': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╣': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '╤': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '╥': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╦': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╧': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╨': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╩': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╪': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╫': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╬': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '╱': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '╲': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '╳': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '╼': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '╽': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╾': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '╿': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┍': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┎': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┑': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┒': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┕': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┖': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┙': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┚': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┝': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┞': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┟': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┠': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┡': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┢': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┥': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┦': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┧': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┨': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┩': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┪': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┭': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┮': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┯': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┰': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┱': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┲': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┵': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┶': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┷': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┸': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┹': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┺': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┽': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┾': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┿': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '╀': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '╁': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╂': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '╃': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '╄': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '╅': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '╆': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '╇': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '╈': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '╉': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '╊': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '╌': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '╍': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '┄': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '┅': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '┈': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '┉': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '╎': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '╏': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '┆': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '┇': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '┊': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '┋': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '╭': { [Style.NORMAL]: 'C.5,1,.5,.5,1,.5' },\n  '╮': { [Style.NORMAL]: 'C.5,1,.5,.5,0,.5' },\n  '╯': { [Style.NORMAL]: 'C.5,0,.5,.5,0,.5' },\n  '╰': { [Style.NORMAL]: 'C.5,0,.5,.5,1,.5' }\n};\n\ninterface IVectorShape {\n  d: string;\n  type: VectorType;\n  /** Padding to apply to the vector's x axis in CSS pixels. */\n  horizontalPadding?: number;\n}\n\nconst enum VectorType {\n  FILL,\n  STROKE\n}\n\n/**\n * This contains the definitions of the primarily used box drawing characters as vector shapes. The\n * reason these characters are defined specially is to avoid common problems if a user's font has\n * not been patched with powerline characters and also to get pixel perfect rendering as rendering\n * issues can occur around AA/SPAA.\n *\n * Original symbols defined in https://github.com/powerline/fontpatcher\n */\nexport const powerlineDefinitions: { [index: string]: IVectorShape } = {\n  // Right triangle solid\n  '\\u{E0B0}': { d: 'M0,0 L1,.5 L0,1', type: VectorType.FILL },\n  // Right triangle line\n  '\\u{E0B1}': { d: 'M0,0 L1,.5 L0,1', type: VectorType.STROKE, horizontalPadding: 0.5 },\n  // Left triangle solid\n  '\\u{E0B2}': { d: 'M1,0 L0,.5 L1,1', type: VectorType.FILL },\n  // Left triangle line\n  '\\u{E0B3}': { d: 'M1,0 L0,.5 L1,1', type: VectorType.STROKE, horizontalPadding: 0.5 }\n};\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const powerlineDefinition = powerlineDefinitions[c];\n  if (powerlineDefinition) {\n    drawPowerlineChar(ctx, powerlineDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = scaledCellWidth / 8;\n    const yEighth = scaledCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.slice(1, 3), 16);\n      g = parseInt(fillStyle.slice(3, 5), 16);\n      b = parseInt(fillStyle.slice(5, 7), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.slice(7, 9), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       ┎┰┒┍┯┑╓╥╖╒╤╕ ┏┳┓┌┲┓┌┬┐┏┱┐\n * ┌─┬─┐ ┏━┳━┓ ╔═╦═╗ ┠╂┨┝┿┥╟╫╢╞╪╡ ┡╇┩├╊┫┢╈┪┣╉┤\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┖┸┚┕┷┙╙╨╜╘╧╛ └┴┘└┺┛┗┻┛┗┹┘\n * ├─┼─┤ ┣━╋━┫ ╠═╬═╣ ┏┱┐┌┲┓┌┬┐┌┬┐ ┏┳┓┌┮┓┌┬┐┏┭┐\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┡╃┤├╄┩├╆┪┢╅┤ ┞╀┦├┾┫┟╁┧┣┽┤\n * └─┴─┘ ┗━┻━┛ ╚═╩═╝ └┴┘└┴┘└┺┛┗┹┘ └┴┘└┶┛┗┻┛┗┵┘\n *\n * Other:\n * ╭─╮ ╲ ╱ ╷╻╎╏┆┇┊┋ ╺╾╴ ╌╌╌ ┄┄┄ ┈┈┈\n * │ │  ╳  ╽╿╎╏┆┇┊┋ ╶╼╸ ╍╍╍ ┅┅┅ ┉┉┉\n * ╰─╯ ╱ ╲ ╹╵╎╏┆┇┊┋\n *\n * All box drawing characters:\n * ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏\n * ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟\n * ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯\n * ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿\n * ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏\n * ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟\n * ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯\n * ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿\n *\n * ---\n *\n * Box drawing alignment tests:                                          █\n *                                                                       ▉\n *   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳\n *   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳\n *   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳\n *   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳\n *   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎\n *   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏\n *   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛           └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = window.devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / scaledCellHeight * scaledCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction drawPowerlineChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IVectorShape,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.beginPath();\n  ctx.lineWidth = window.devicePixelRatio;\n  for (const instruction of charDefinition.d.split(' ')) {\n    const type = instruction[0];\n    const f = svgToCanvasInstructionMap[type];\n    if (!f) {\n      console.error(`Could not find drawing instructions for \"${type}\"`);\n      continue;\n    }\n    const args: string[] = instruction.substring(1).split(',');\n    if (!args[0] || !args[1]) {\n      continue;\n    }\n    f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset, charDefinition.horizontalPadding));\n  }\n  if (charDefinition.type === VectorType.STROKE) {\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.stroke();\n  } else {\n    ctx.fill();\n  }\n  ctx.closePath();\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number, horizontalPadding: number = 0): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth - (horizontalPadding * 2 * window.devicePixelRatio);\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset + (horizontalPadding * window.devicePixelRatio);\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @IDecorationService decorationService: IDecorationService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService, decorationService);\n    linkifier.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n\n    linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, IInstantiationService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.rawOptions.allowTransparency;\n    this._renderLayers = [\n      instantiationService.createInstance(TextRenderLayer, this._screenElement, 0, this._colors, allowTransparency, this._id),\n      instantiationService.createInstance(SelectionRenderLayer, this._screenElement, 1, this._colors, this._id),\n      instantiationService.createInstance(LinkRenderLayer, this._screenElement, 2, this._colors, this._id, linkifier, linkifier2),\n      instantiationService.createInstance(CursorRenderLayer, this._screenElement, 3, this._colors, this._id, this._onRequestRedraw)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    super.dispose();\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._colors);\n      l.reset();\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this.dimensions);\n    }\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n    // Selection foreground requires a full re-render\n    if (this._colors.selectionForeground) {\n      this._onRequestRedraw.fire({ start: 0, end: this._bufferService.rows - 1 });\n    }\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    for (const l of this._renderLayers) {\n      operation(l);\n    }\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    for (const l of this._renderLayers) {\n      l.onGridChanged(start, end);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    for (const layer of this._renderLayers) {\n      layer.clearTextureAtlas();\n    }\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.rawOptions.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.rawOptions.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.rawOptions.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.rawOptions.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <=  0xE0D6;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return (0x2500 <= codepoint && codepoint <= 0x259F);\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @IDecorationService decorationService: IDecorationService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService, decorationService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    super.onSelectionChanged(start, end, columnSelectMode);\n\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      this._state.ydisp = this._bufferService.buffer.ydisp;\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selectionTransparent.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    alpha: boolean,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IDecorationService decorationService: IDecorationService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService, decorationService);\n    this._state = new GridCache<CharData>();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      // Get any decoration foreground/background overrides, this must be fetched before the early\n      // exist but applied after inverse\n      let isTop = false;\n      for (const d of this._decorationService.getDecorationsAtCell(x, this._bufferService.buffer.ydisp + y)) {\n        if (d.options.layer !== 'top' && isTop) {\n          continue;\n        }\n        if (d.backgroundColorRGB) {\n          nextFillStyle = d.backgroundColorRGB.css;\n        }\n        isTop = d.options.layer === 'top';\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline() || cell.isStrikethrough()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        if (cell.isStrikethrough()) {\n          this._fillMiddleLineAtCells(x, y, cell.getWidth());\n        }\n        if (cell.isUnderline()) {\n          this._fillBottomLineAtCells(x, y, cell.getWidth());\n        }\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.rawOptions.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  private _doWarmUp(): void { }\n\n  public clear(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IPartialColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    ansi: colors.ansi.slice()\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'common/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { color } from 'common/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', { alpha: true }));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', { alpha: this._config.allowTransparency }));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public clear(): void {\n    if (this._cacheMap.size > 0) {\n      const capacity = this._width * this._height;\n      this._cacheMap = new LRUMap(capacity);\n      this._cacheMap.prealloc(capacity);\n    }\n    this._cacheCtx.clearRect(0, 0, TEXTURE_WIDTH, TEXTURE_HEIGHT);\n    this._tmpCtx.clearRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n    if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    }\n    if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return color.opaque(this._config.colors.background);\n    }\n    if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = TEXT_BASELINE;\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight);\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    let imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // If this charcater is underscore and empty, shift it up until it is visible, try for a maximum\n    // of 5 pixels.\n    if (isEmpty && glyph.chars === '_' && !this._config.allowTransparency) {\n      for (let offset = 1; offset <= 5; offset++) {\n        // Draw the character\n        this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight - offset);\n\n        // clear the background from the character to avoid issues with drawing over the previous\n        // character if it extends past it's bounds\n        imageData = this._tmpCtx.getImageData(\n          0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n        );\n        isEmpty = clearColor(imageData, backgroundColor);\n        if (!isEmpty) {\n          break;\n        }\n      }\n    }\n\n    this._tmpCtx.restore();\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService, IInstantiationService, IDecorationService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'common/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return new EventEmitter<IRequestRedrawEvent>().event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier.onShowLinkUnderline(e => this._onLinkHover(e)));\n    this.register(this._linkifier.onHideLinkUnderline(e => this._onLinkLeave(e)));\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._onLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._onLinkLeave(e)));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n    // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n    // https://github.com/xtermjs/xterm.js/issues/2960\n    removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.actualCellWidth}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${this._colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${this._colors.cursor.css};` +\n      `  color: ${this._colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${this._colors.cursorAccent.css};` +\n      `  color: ${this._colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${this._colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${this._colors.cursor.css};` +\n      ` color: ${this._colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selectionOpaque.css};` +\n      `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    this._rowFactory.onSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      e.innerText = '';\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerText = '';\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { IColorSet } from 'browser/Types';\nimport { ICharacterJoinerService, ISelectionService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/RendererUtils';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  constructor(\n    private readonly _document: Document,\n    private _colors: IColorSet,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      for (const d of this._decorationService.getDecorationsAtCell(x, row)) {\n        if (d.options.layer !== 'top' && isTop) {\n          continue;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      }\n\n      // Apply selection foreground if applicable\n      const isInSelection = this._isCellInSelection(x, row);\n      if (!isTop) {\n        if (this._colors.selectionForeground && isInSelection) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = this._colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = this._colors.selectionForeground;\n        }\n      }\n\n      // If in the selection, force the element to be above the selection to improve contrast and\n      // support opaque selections\n      if (isInSelection) {\n        bgOverride = this._colors.selectionOpaque;\n        isTop = true;\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        charElement.classList.add(`xterm-decoration-top`);\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = this._colors.ansi[bg];\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = this._colors.foreground;\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = this._colors.background;\n          }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, this._colors.ansi[fg], cell, bgOverride, undefined)) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, this._colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      fragment.appendChild(charElement);\n\n      x = lastCharX;\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = this._colors.contrastCache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._colors.contrastCache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    const docOrShadowRoot = this._textarea.getRootNode ? this._textarea.getRootNode() as Document | ShadowRoot : document;\n    return docOrShadowRoot.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncer, IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRenderedViewportChange = new EventEmitter<{ start: number, end: number }>();\n  public get onRenderedViewportChange(): IEvent<{ start: number, end: number }> { return this._onRenderedViewportChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.onSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderer?.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService } from 'browser/services/Services';\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public get onRequestRedraw(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = this.register(new EventEmitter<void>());\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public get onRequestScrollLines(): IEvent<ISelectionRequestScrollLinesEvent> { return this._onRequestScrollLines.event; }\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._onMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.canvasHeight;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.getOption('altClickMovesCursor')) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/Types';\nimport { IColorSet, IRenderDebouncer } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\nimport { IDecorationOptions, IDecoration } from 'xterm';\nimport { IBufferService } from 'common/services/Services';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: undefined;\n\n  playBellSound(): void;\n}\n\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  public serviceBrand: undefined;\n\n  private static _audioContext: AudioContext;\n\n  public static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (window as any).AudioContext || (window as any).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.rawOptions.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorRGB } from 'common/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    if (css.match(/#[0-9a-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          const r = parseInt(css.slice(1, 2).repeat(2), 16);\n          const g = parseInt(css.slice(2, 3).repeat(2), 16);\n          const b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor(r, g, b);\n        }\n        case 5: { // #rgba\n          const r = parseInt(css.slice(1, 2).repeat(2), 16);\n          const g = parseInt(css.slice(2, 3).repeat(2), 16);\n          const b = parseInt(css.slice(3, 4).repeat(2), 16);\n          const a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor(r, g, b, a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) { // rgb() or rgba()\n      const r = parseInt(rgbaMatch[1]);\n      const g = parseInt(rgbaMatch[2]);\n      const b = parseInt(rgbaMatch[3]);\n      const a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor(r, g, b, a);\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, bgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, bgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, IDirtyRowService, LogLevelEnum, ITerminalOptions } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IBufferLine, IAttributeData, ICoreTerminal, IKeyboardEvent, IScrollEvent, ScrollSource, ITerminalOptions as IPublicTerminalOptions } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _dirtyRowService: IDirtyRowService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  protected _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  protected _onScroll = new EventEmitter<IScrollEvent, void>();\n  public get onWriteParsed(): IEvent<void> { return this._onWriteParsed.event; }\n  protected _onWriteParsed = new EventEmitter<void>();\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = new EventEmitter<number, void>();\n      this.register(this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      }));\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService, () => this.scrollToBottom()));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = new InputHandler(this._bufferService, this._charsetService, this.coreService, this._dirtyRowService, this._logService, this.optionsService, this.coreMouseService, this.unicodeService);\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.optionsService.onOptionChange(key => this._updateOptions(key)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.rawOptions.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  protected _updateOptions(key: string): void {\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        break;\n      case 'windowsMode':\n        if (this.optionsService.rawOptions.windowsMode) {\n          this._enableWindowsMode();\n        } else {\n          this._windowsMode?.dispose();\n          this._windowsMode = undefined;\n        }\n        break;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document common VT features here that are currently unsupported\n */\n// @vt: #N   DCS   SIXEL   \"SIXEL Graphics\"  \"DCS Ps ; Ps ; Ps ; q \tPt ST\"   \"Draw SIXEL image starting at cursor position.\"\n// @vt: #N   OSC    1   \"Set Icon Name\"  \"OSC 1 ; Pt BEL\"  \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n *\n * @vt: #P[See limited support below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n * `ESC P 0 ST` for invalid requests.\n *\n * Supported requests and responses:\n *\n * | Type                             | Request           | Response (`Pt`)                                       |\n * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | always reporting `0 \" q` (DECSCA is unsupported)      |\n * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n *\n *\n * TODO:\n * - fix SGR report\n * - either implement DECSCA or remove the report\n * - either check which conformance is better suited or remove the report completely\n *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  public hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  public unhook(success: boolean): boolean {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return true;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n        break;\n      case '\"p': // DECSCL\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r61;1\"p${C0.ESC}\\\\`);\n        break;\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n          ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n        break;\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n        break;\n      case ' q': // DECSCUSR\n        const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n        let style = STYLES[this._optionsService.rawOptions.cursorStyle];\n        style -= this._optionsService.rawOptions.cursorBlink ? 1 : 0;\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n        break;\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n    return true;\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n *\n * @vt: #N  DCS   DECUDK   \"User Defined Keys\"  \"DCS Ps ; Ps | Pt ST\"   \"Definitions for user-defined keys.\"\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n *\n * @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\"  \"DCS + q Pt ST\"   \"Request Terminfo String.\"\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n *\n * @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"  \"DCS + p Pt ST\"   \"Set Terminfo Data.\"\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestSendFocus = new EventEmitter<void>();\n  public get onRequestSendFocus(): IEvent<void> { return this._onRequestSendFocus.event; }\n  private _onRequestSyncScrollBar = new EventEmitter<void>();\n  public get onRequestSyncScrollBar(): IEvent<void> { return this._onRequestSyncScrollBar.event; }\n  private _onRequestWindowsOptionsReport = new EventEmitter<WindowsOptionsReportType>();\n  public get onRequestWindowsOptionsReport(): IEvent<WindowsOptionsReportType> { return this._onRequestWindowsOptionsReport.event; }\n\n  private _onA11yChar = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yChar.event; }\n  private _onA11yTab = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTab.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onColor = new EventEmitter<IColorEvent>();\n  public get onColor(): IEvent<IColorEvent> { return this._onColor.event; }\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowService.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   * @param cleanWrap clear the isWrapped flag\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()));\n    this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Currently the same as ED.\"\n   */\n  public eraseInDisplay(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Currently the same as EL.\"\n   */\n  public eraseInLine(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM). Always off.   | #N      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM). Always off.     | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #P[Currently outputs a single underline.] |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #P[Currently outputs a single underline.] |\n   * | 3      | Curly underline.                                              | #P[Currently outputs a single underline.] |\n   * | 4      | Dotted underline.                                             | #P[Currently outputs a single underline.] |\n   * | 5      | Dashed underline.                                             | #P[Currently outputs a single underline.] |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38) and background (Ps=48) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    const i = this._search(this._getKey(value), 0, this._array.length - 1);\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    let i = this._search(key, 0, this._array.length - 1);\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    let i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    return this._array.values();\n  }\n\n  private _search(key: number, min: number, max: number): number {\n    if (max < min) {\n      return min;\n    }\n    let mid = Math.floor((min + max) / 2);\n    if (this._getKey(this._array[mid]) > key) {\n      return this._search(key, min, mid - 1);\n    }\n    if (this._getKey(this._array[mid]) < key) {\n      return this._search(key, mid + 1, max);\n    }\n    // Value found! Since keys can be duplicates, move the result index back to the lowest index\n    // that matches the key.\n    while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n      mid--;\n    }\n    return mid;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  constructor(\n    // underline style, NONE is empty\n    public underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    // underline color, -1 is empty (same as FG)\n    public underlineColor: number = -1\n  ) {}\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor(\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: ExtendedAttrs} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data, FIXME: repeat this for extended attrs\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\n// queueMicrotask polyfill for nodejs < v11\nconst qmt: (cb: () => void) => void = (typeof queueMicrotask === 'undefined')\n  ? (cb: () => void) => { Promise.resolve().then(cb); }\n  : queueMicrotask;\n\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  public get onWriteParsed(): IEvent<void> { return this._onWriteParsed.event; }\n  private _onWriteParsed = new EventEmitter<void>();\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) { }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          qmt(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n  private _onBufferChange = new EventEmitter<IBufferApi>();\n  public get onBufferChange(): IEvent<IBufferApi> { return this._onBufferChange.event; }\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    super();\n    this.cols = Math.max(_optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.buffers.dispose();\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    this.buffers.setupTabStops(this.cols);\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  // Circular dependency, this must be unset or memory will leak after Terminal.dispose\n  private _scrollToBottom: (() => void) | undefined;\n\n  private _onData = this.register(new EventEmitter<string>());\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = this.register(new EventEmitter<void>());\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = this.register(new EventEmitter<string>());\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._scrollToBottom = scrollToBottom;\n    this.register({ dispose: () => this._scrollToBottom = undefined });\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom!();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecorationOptions, IDecoration, IMarker, IEvent } from 'xterm';\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e.marker.line);\n\n  private _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public get onDecorationRegistered(): IEvent<IInternalDecoration> { return this._onDecorationRegistered.event; }\n  private _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public get onDecorationRemoved(): IEvent<IInternalDecoration> { return this._onDecorationRemoved.event; }\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtLine(line: number): IterableIterator<IInternalDecoration> {\n    return this._decorations.getKeyIterator(line);\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public dispose(): void {\n    for (const d of this._decorations.values()) {\n      this._onDecorationRemoved.fire(d);\n    }\n    this.reset();\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public isDisposed: boolean = false;\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  public serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\nexport const DEFAULT_OPTIONS: Readonly<ITerminalOptions> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  bellSound: DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  linkTooltipHoverDuration: 500,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: true,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: undefined\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: ITerminalOptions;\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: Partial<ITerminalOptions>) {\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  public setOption(key: string, value: any): void {\n    this.options[key] = value;\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColorRGB, IColor } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: undefined;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Readonly<ITerminalOptions>;\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface ITerminalOptions {\n  allowProposedApi: boolean;\n  allowTransparency: boolean;\n  altClickMovesCursor: boolean;\n  bellSound: string;\n  bellStyle: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols: number;\n  convertEol: boolean;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  cursorWidth: number;\n  customGlyphs: boolean;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  linkTooltipHoverDuration: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  windowOptions: IWindowOptions;\n  wordSeparator: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  selectionForeground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /** Iterates over the decorations at a line (in no particular order). */\n  getDecorationsAtLine(line: number): IterableIterator<IInternalDecoration>;\n  /** Iterates over the decorations at a cell (in no particular order). */\n  getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration>;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(4389);\n"],"names":["root","factory","exports","module","define","amd","self","activate","terminal","this","_terminal","dispose","fit","dims","proposeDimensions","core","_core","rows","cols","_renderService","clear","resize","element","parentElement","dimensions","actualCellWidth","actualCellHeight","parentElementStyle","window","getComputedStyle","parentElementHeight","parseInt","getPropertyValue","parentElementWidth","Math","max","elementStyle","availableHeight","availableWidth","viewport","scrollBarWidth","floor","FitAddon","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","a","i","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","document","createElement","classList","add","tabIndex","_rowContainer","setAttribute","_rowElements","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","e","_onBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_renderRowsDebouncer","TimeBasedDebouncer","_renderRows","bind","_refreshRows","_liveRegion","Error","insertAdjacentElement","register","onResize","_onResize","onRender","start","end","onScroll","onA11yChar","char","_onChar","onLineFeed","onA11yTab","spaceCount","_onTab","onKey","_onKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","setListener","addDisposableDomListener","removeElementFromParent","position","boundaryElement","target","beforeBoundaryElement","getAttribute","buffer","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","shift","removeEventListener","newElement","unshift","push","scrollLines","focus","preventDefault","stopImmediatePropagation","children","_refreshRowDimensions","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","style","height","Disposable","AccessibilityManager","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","width","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","_color","_rgba","setCss","bg","fg","getCss","undefined","setColor","getColor","ColorContrastCache","DEFAULT_FOREGROUND","css","toColor","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","rgba","DEFAULT_ANSI_COLORS","Object","freeze","colors","v","r","g","b","channels","toCss","toRgba","c","allowTransparency","canvas","ctx","getContext","_ctx","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","foreground","background","cursor","cursorAccent","selectionTransparent","selectionOpaque","color","blend","selectionForeground","ansi","slice","contrastCache","_updateRestoreColors","onOptionsChange","setTheme","theme","_parseColor","selection","nullColor","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","restoreColor","slot","_restoreColors","fallback","fillStyle","console","warn","fillRect","data","getImageData","substring","split","map","component","Number","alpha","round","ColorManager","elements","node","type","handler","options","disposed","_bufferService","_logService","_unicodeService","_linkMatchers","_nextLinkMatcherId","_onShowLinkUnderline","EventEmitter","_onHideLinkUnderline","_onLinkTooltip","_rowsToLinkify","event","attachToDom","mouseZoneManager","_element","_mouseZoneManager","linkifyRows","min","clearAll","_rowsTimeoutId","clearTimeout","_linkifyRows","Linkifier","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","ceil","iterator","hasNext","next","_doLinkifyRow","range","first","content","debug","registerLinkMatcher","regex","matcher","id","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","splice","deregisterLinkMatcher","matcherId","rowIndex","match","rex","RegExp","source","flags","stringIndex","uri","indexOf","lastIndex","bufferIndex","stringIndexToBufferIndex","line","get","attr","getFg","isValid","_addLink","exec","x","y","getStringCellWidth","x1","y1","x2","y2","MouseZone","newWindow","open","opener","location","href","fire","_createLinkHoverEvent","remove","IBufferService","ILogService","IUnicodeService","clickCallback","hoverCallback","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","getDisposeArrayDisposable","_currentLink","registerLinkProvider","linkProvider","providerIndex","mouseService","renderService","_mouseService","_clearCurrentLink","_onMouseMove","_handleMouseDown","_handleMouseUp","_lastMouseEvent","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","_onHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","_checkLinkProviderResult","provideLinks","links","linksWithState","set","size","_removeIntersectingLinks","entries","replies","occupiedCells","Set","providerReply","startX","endX","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","currentLink","_mouseDownLink","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","defineProperties","toggle","_fireUnderlineEvent","onRenderedViewportChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","leave","sameLine","wrappedFromLeft","wrappedToRight","coords","getCoords","Linkifier2","promptLabel","_screenElement","_selectionService","_optionsService","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseMoveListener","_mouseLeaveListener","_onMouseLeave","_clickListener","_onClick","_deactivate","zone","_activate","_currentZone","pageX","pageY","_findZoneEventAt","_tooltipTimeout","_onTooltip","rawOptions","linkTooltipHoverDuration","_getSelectionLength","currentSelectionLength","IMouseService","ISelectionService","IOptionsService","MouseZoneManager","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","callback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","_rowEnd","_runRefreshCallbacks","RenderDebouncer","_currentDevicePixelRatio","devicePixelRatio","listener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","_onRender","_onSelectionChange","_onTitleChange","_onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_setup","linkifier","_instantiationService","createInstance","linkifier2","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","bell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","onCursorMove","onTitleChange","_afterResize","_colorManager","req","acc","ident","toColorRGB","C0","ESC","toRgbString","C1_ESCAPED","ST","setColors","onThemeChange","_isDisposed","_customKeyEventHandler","write","buffers","active","preventScroll","_updateOptions","_charSizeService","measure","setRenderer","_createRenderer","syncScrollArea","optionsService","screenReaderMode","_accessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_onTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","copyHandler","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","_queueLinkification","parent","isConnected","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","coreBrowserService","CoreBrowserService","ICoreBrowserService","CharSizeService","ICharSizeService","_theme","onOptionChange","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","renderer","RenderService","IRenderService","_compositionView","CompositionHelper","_soundService","SoundService","ISoundService","MouseService","Viewport","amount","onRequestSyncScrollBar","onFocus","SelectionService","onRequestScrollLines","suppressScrollEvent","onSelectionChange","onRequestRedraw","onSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","onMouseDown","coreMouseService","areMouseEventsActive","disable","enable","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","bindMouse","rendererType","Renderer","DomRenderer","el","sendEvent","but","action","getRawByteCoords","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","normal","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","startColumn","selectionStart","endColumn","selectionEnd","clearSelection","selectAll","selectLines","shouldIgnoreComposition","macOptionIsMeta","keydown","scrollToBottom","result","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","wasModifierKeyOnlyEvent","charCode","which","String","fromCharCode","inputType","composed","_soundBell","playBellSound","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","scaledCanvasWidth","toFixed","canvasHeight","scaledCanvasHeight","GET_CELL_SIZE_PIXELS","scaledCellWidth","scaledCellHeight","force","cancelEvents","_visualBell","bellStyle","CoreTerminal","Terminal","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollLines","_scrollArea","_currentRowHeight","_currentScaledCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","backgroundColor","_refresh","immediate","offsetHeight","newBufferHeight","scrollTop","offsetParent","diff","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_queueRefresh","onDecorationRegistered","onDecorationRemoved","decoration","_removeDecoration","refreshDecorations","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","marker","display","onRenderEmitter","onDispose","anchor","right","delete","_zonePool","_zonePoolIndex","_linePadding","full","center","addDecoration","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","ColorZoneStore","drawHeight","drawWidth","drawX","_colorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","insertBefore","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","o","_refreshDrawConstants","outerWidth","innerWidth","pixelsPerLine","nonFullHeight","_width","_refreshDecorations","clearRect","lineWidth","zones","_renderColorZone","updateCanvasDimensions","updateAnchor","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","input","oldValue","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","leftPadding","topPadding","colCount","hasValidCharSize","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","isWrapped","wrappedRowsCount","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","targetX","resetStartingRow","horizontalDirection","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","CONSTRUCTOR_ONLY_OPTIONS","_addonManager","AddonManager","_publicOptions","getter","propName","setter","_checkReadonlyOptions","desc","defineProperty","includes","_checkProposedApi","allowProposedApi","onBell","onBinary","onData","onWriteParsed","_parser","ParserApi","UnicodeApi","_buffer","BufferNamespaceApi","m","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","applicationKeypad","insertMode","modes","originMode","origin","reverseWraparoundMode","reverseWraparound","sendFocusMode","wraparoundMode","wraparound","columns","_verifyIntegers","registerMarker","_verifyPositiveIntegers","scrollPages","pageCount","scrollToTop","scrollToLine","writeUtf8","writeln","getOption","setOption","loadAddon","addon","values","Infinity","isNaN","_alpha","_colors","_rendererId","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_columnSelectMode","_currentGlyphIdentifier","chars","code","bold","dim","italic","_initCanvas","_charAtlas","throwIfFalsy","_clearAll","onOptionsChanged","onGridChanged","_selectionStart","_selectionEnd","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","acquireCharAtlas","warmUp","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","_fillCells","_fillMiddleLineAtCells","cellOffset","_fillBottomLineAtCells","_fillLeftLineAtCell","_strokeRectAtCell","strokeRect","_clearCells","_fillCharTrueColor","cell","font","_getFont","textBaseline","TEXT_BASELINE","_clipRow","drawSuccess","customGlyphs","tryDrawCustomChar","getChars","fillText","_drawChars","contrastColor","_getContrastColor","isFgRGB","isBgRGB","_drawUncachedChars","isInverse","isBgDefault","INVERTED_DEFAULT_COLOR","getBgColor","isFgDefault","getFgColor","DEFAULT_COLOR","drawBoldTextInBrightColors","isBold","WHITESPACE_CELL_CHAR","getCode","WHITESPACE_CELL_CODE","isDim","isItalic","hasOverrides","getDecorationsAtCell","d","backgroundColorRGB","foregroundColorRGB","draw","fgOverride","save","opaque","AttributeData","join","globalAlpha","DIM_OPACITY","restore","beginPath","clip","fontWeightBold","fontWeight","bgOverride","isTop","layer","_isCellInSelection","minimumContrastRatio","excludeFromContrastRatioDemands","adjustedColor","fgColor","fgColorMode","getFgColorMode","bgColor","bgColorMode","getBgColorMode","temp","temp2","bgRgba","_resolveBackgroundRgba","fgRgba","_resolveForegroundRgba","ensureContrastRatio","inverse","BaseRenderLayer","BLINK_INTERVAL","container","rendererId","_onRequestRedraw","_coreBrowserService","decorationService","_cell","CellData","_state","isFocused","_cursorRenderers","_renderBarCursor","_renderBlockCursor","_renderUnderlineCursor","_cursorBlinkStateManager","_clearCursor","restartBlinkAnimation","pause","resume","cursorBlink","CursorBlinkStateManager","_render","isPaused","triggeredByAnimationFrame","isCursorHidden","viewportRelativeCursorY","loadCell","cursorStyle","_renderBlurCursor","isCursorVisible","cursorWidth","strokeStyle","CursorRenderLayer","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","timeToStart","time","setInterval","blockElementDefinitions","w","h","patternCharacterDefinitions","boxDrawingDefinitions","xp","yp","powerlineDefinitions","horizontalPadding","xOffset","yOffset","blockElementDefinition","charDefinition","box","xEighth","yEighth","drawBlockElementChar","patternDefinition","patternSet","cachedPatterns","pattern","tmpCanvas","tmpCtx","imageData","ImageData","startsWith","parseFloat","putImageData","createPattern","drawPatternChar","boxDrawingDefinition","instructions","actualInstructions","instruction","f","svgToCanvasInstructionMap","args","translateArgs","error","stroke","closePath","drawBoxDrawingChar","powerlineDefinition","fill","drawPowerlineChar","clamp","bezierCurveTo","lineTo","moveTo","cache","GridCache","onShowLinkUnderline","onHideLinkUnderline","middleRowCount","is256Color","LinkRenderLayer","nextRendererId","instantiationService","_id","_renderLayers","TextRenderLayer","SelectionRenderLayer","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","l","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","IInstantiationService","isPowerlineGlyph","codepoint","isBoxOrBlockGlyph","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","_characterWidth","_characterFont","_characterOverlapCache","_workCell","terminalFont","_forEachCell","firstRow","lastRow","joinedRanges","getJoinedCharacters","isJoined","lastCharX","JoinedCellData","translateToString","_isOverlapping","getCodePoint","NULL_CELL_CODE","_drawBackground","prevFillStyle","nextFillStyle","isBgPalette","_drawForeground","isInvisible","isUnderline","isStrikethrough","beginFrame","hasOwnProperty","overlaps","measureText","_didWarmUp","_doWarmUp","BaseCharAtlas","charAtlasCache","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","atlas","newEntry","DynamicCharAtlas","clonedColors","colorCode","isLegacyEdge","CHAR_ATLAS_CELL_SPACING","TEXTURE_WIDTH","TEXTURE_HEIGHT","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","_tmpCtx","_height","capacity","_cacheMap","LRUMap","prealloc","_canCache","glyphKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","isEmpty","cacheX","cacheY","drawImage","inBitmap","_getColorFromAnsiIndex","idx","_getBackgroundColor","_getForegroundColor","fontStyle","clearColor","offset","_addGlyphToBitmap","isSafari","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","then","bitmap","NoneCharAtlas","_map","_head","_tail","_nodePool","_unlinkNode","prev","_appendNode","tail","nodePool","peekValue","head","TERMINAL_CLASS_PREFIX","FG_CLASS_PREFIX","BG_CLASS_PREFIX","FOCUS_CLASS","nextTerminalId","_linkifier","_linkifier2","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_onLinkHover","_onLinkLeave","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","documentFragment","isXFlipped","_createSelectionElement","colStart","colEnd","cursorAbsoluteY","rowElement","createRow","_setCellUnderline","enabled","span","textDecoration","DIM_CLASS","UNDERLINE_CLASS","STRIKETHROUGH_CLASS","isCursorRow","lineLength","charElement","isInSelection","resolvedBg","_addStyle","padStart","_applyMinimumContrast","padChar","isSelectAllActive","selectionStartLength","areSelectionValuesReversed","startPlusLength","onTrim","SelectionModel","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","firstCell","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","getBg","getTrimmedLength","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","newRange","inRange","getRootNode","activeElement","hasFocus","_renderer","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","_renderDebouncer","_fullRefresh","_handleOptionsChanged","onCharSizeChange","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","isIntersecting","intersectionRatio","isRedrawOnly","_fireOnCanvasResize","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","_onTrim","_onBufferActivate","_model","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","trim","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","last","createDecorator","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","connect","destination","base64","binaryString","atob","len","bytes","Uint8Array","dataURI","_maxLength","onDeleteEmitter","onInsertEmitter","onTrimEmitter","_array","Array","_startIndex","_length","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","CircularList","clone","val","depth","clonedObject","isArray","rgb","toPaddedHex","s","contrastRatio","l1","l2","fgR","fgG","fgB","bgR","bgG","bgB","ratio","rgbaColor","toChannels","rgbaMatch","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","cr","increaseLuminance","bgL","fgL","resultB","resultA","resultARatio","hasWriteSyncWarnHappened","_onBinary","_onData","_onLineFeed","_onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","CoreService","CoreMouseService","ICoreMouseService","_dirtyRowService","DirtyRowService","IDirtyRowService","unicodeService","UnicodeService","_charsetService","CharsetService","ICharsetService","InputHandler","markRangeDirty","scrollBottom","_writeBuffer","WriteBuffer","promiseResult","parse","_onScrollApi","_windowsMode","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsMode","_enableWindowsMode","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","call","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","_data","Uint32Array","hook","params","put","concat","subarray","unhook","success","utf32ToString","pt","_coreMouseService","EscapeSequenceParser","_parseBuffer","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","setCsiHandlerFallback","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","BEL","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","selectCharset","CHARSETS","screenAlignmentPattern","setErrorHandler","DECRQSS","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","wasPaused","DEBUG","prototype","clearRange","decode","chWidth","charset","curAttr","bufferRow","markDirty","setCellFromCodePoint","extended","wcwidth","ch","stringFromCodePoint","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","hasContent","DcsHandler","convertEol","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","replaceCells","_resetBufferLine","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","DEFAULT_CHARSET","activeEncoding","activateAltBuffer","activateNormalBuffer","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","underlineStyle","updateExtended","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","spec","parseColor","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","markAllDirty","_disposables","unregister","disposables","array","isNode","navigator","userAgent","platform","test","isIpad","isIphone","_getKey","insert","_search","getKeyIterator","mid","SortedList","fillFallback","constructor","lastChar","CHAR_DATA_CODE_INDEX","ExtendedAttrs","newObj","isBlink","isFgPalette","isAttributeDefault","hasExtendedAttrs","getUnderlineColor","getUnderlineColorMode","isUnderlineColorRGB","isUnderlineColorPalette","isUnderlineColorDefault","getUnderlineStyle","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_cols","_rows","_getCorrectBufferLength","getWhitespaceCell","BufferLine","maxLength","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","trimmedLines","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","lineIndex","trimRight","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","tabStopWidth","Marker","onInsert","onDelete","_removeMarker","startOverscan","endOverscan","BufferStringIterator","Buffer","_trimRight","_endIndex","_startOverscan","_endOverscan","_current","fillCellData","_combined","_extendedAttrs","cp","CHAR_DATA_ATTR_INDEX","codePoint","eAttrs","keys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_normal","_alt","inactiveBuffer","BufferSet","obj","combined","DEFAULT_ATTR","_nextId","isDisposed","_onDispose","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","DEL","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","toLowerCase","_interim","startPos","interim","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","table","BMP_COMBINING","HIGH_COMBINING","version","num","ucs","bisearch","UnicodeV6","qmt","queueMicrotask","cb","resolve","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","chunk","_innerWrite","lastTime","startTime","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","handlerResult","DcsParser","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","setDefault","addMany","codes","TransitionTable","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_start","_put","MAX_VALUE","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","k","newParams","getSubParamsAll","store","cur","_addons","instance","loadedAddon","_wrappedAddonDispose","init","getLine","BufferLineApiView","BufferApiView","_line","getCell","_onBufferChange","_alternate","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","isFull","oldYdisp","scrollAmount","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","_protocols","_encodings","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","addEncoding","name","protocol","encoding","_compareEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_scrollToBottom","wasUserInput","disableStdin","_decorations","_onDecorationRegistered","_onDecorationRemoved","Decoration","getDecorationsAtLine","xmin","xmax","_cachedBg","_cachedFg","foregroundColor","_end","_entries","service","ServiceCollection","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","info","INFO","ERROR","off","OFF","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","altClickMovesCursor","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","newValue","_sanitizeAndValidateOption","_setupOptions","storeServiceDependency","serviceRegistry","decorator","arguments","_providers","_onChange","defaultProvider","_activeProvider","cachedModule"],"sourceRoot":""}