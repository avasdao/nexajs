{"version":3,"file":"vendors-node_modules_theia_git_lib_browser_git-frontend-module_js.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACyG;AACjB;AACxF,8BAA8B,sEAA2B,CAAC,+EAAqC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,kIAAkI,QAAQ,MAAM,UAAU,YAAY,aAAa,WAAW,MAAM,KAAK,UAAU,MAAM,KAAK,UAAU,YAAY,OAAO,KAAK,UAAU,MAAM,KAAK,YAAY,aAAa,OAAO,KAAK,UAAU,YAAY,OAAO,KAAK,UAAU,OAAO,KAAK,UAAU,YAAY,OAAO,MAAM,YAAY,OAAO,KAAK,YAAY,aAAa,aAAa,aAAa,OAAO,KAAK,YAAY,WAAW,MAAM,KAAK,YAAY,aAAa,OAAO,KAAK,YAAY,aAAa,OAAO,KAAK,YAAY,aAAa,aAAa,OAAO,KAAK,YAAY,aAAa,OAAO,KAAK,UAAU,MAAM,KAAK,UAAU,MAAM,KAAK,YAAY,OAAO,KAAK,UAAU,u4BAAu4B,kBAAkB,2BAA2B,uBAAuB,iBAAiB,GAAG,+CAA+C,gBAAgB,GAAG,+BAA+B,YAAY,uBAAuB,GAAG,2CAA2C,iBAAiB,GAAG,yBAAyB,0CAA0C,sBAAsB,GAAG,qCAAqC,gBAAgB,0BAA0B,GAAG,6BAA6B,mBAAmB,GAAG,4BAA4B,kBAAkB,wBAAwB,GAAG,0EAA0E,wBAAwB,GAAG,8BAA8B,4BAA4B,qBAAqB,4BAA4B,wBAAwB,GAAG,2CAA2C,uBAAuB,gBAAgB,GAAG,2CAA2C,uBAAuB,uBAAuB,GAAG,sCAAsC,0CAA0C,sBAAsB,GAAG,6BAA6B,uBAAuB,2BAA2B,qBAAqB,GAAG,iCAAiC,wBAAwB,qBAAqB,GAAG,yCAAyC,kBAAkB,GAAG,uDAAuD,kBAAkB,GAAG,uDAAuD,sBAAsB,GAAG,kDAAkD,kBAAkB,GAAG,qBAAqB;AACpsG;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;;ACnHvC;AACyG;AACjB;AACO;AAC/F,4CAA4C,0JAAoD;AAChG,8BAA8B,sEAA2B,CAAC,+EAAqC;AAC/F,yCAAyC,yEAA+B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mCAAmC;AACvD,4BAA4B,mCAAmC;AAC/D;AACA,OAAO,uIAAuI,QAAQ,MAAM,YAAY,aAAa,aAAa,aAAa,aAAa,aAAa,23BAA23B,2BAA2B,0BAA0B,mCAAmC,kCAAkC,4DAA4D,oEAAoE,GAAG,qBAAqB;AACt3C;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;AClCvC;AACyG;AACjB;AACxF,8BAA8B,sEAA2B,CAAC,+EAAqC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,mIAAmI,QAAQ,MAAM,UAAU,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,q3BAAq3B,iBAAiB,2BAA2B,GAAG,kCAAkC,uBAAuB,GAAG,+BAA+B,mCAAmC,GAAG,yCAAyC,kEAAkE,GAAG,gDAAgD,8DAA8D,GAAG,8CAA8C,iEAAiE,GAAG,6CAA6C,gEAAgE,GAAG,6CAA6C,kEAAkE,GAAG,gDAAgD,oEAAoE,GAAG,4CAA4C,iEAAiE,GAAG,qBAAqB;AAC1tE;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;AC/DvC,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,oIAAiF;AAEjF,qHAAkJ;AAClJ,yIAAmD;AACnD,4HAAwE;AACxE,mIAA+C;AAE/C,yLAA8F;AAC9F,sKAA4F;AAE5F,6IAAgE;AAEhE,IAAiB,aAAa,CAS7B;AATD,WAAiB,aAAa;IACb,oCAAsB,GAAG,gBAAO,CAAC,kBAAkB,CAAC;QAC7D,EAAE,EAAE,+BAA+B;QACnC,QAAQ,EAAE,KAAK;QACf,KAAK,EAAE,0BAA0B;KACpC,EAAE,kCAAkC,EAAE,gCAAgC,CAAC,CAAC;IAC5D,mCAAqB,GAAY;QAC1C,EAAE,EAAE,8BAA8B;KACrC,CAAC;AACN,CAAC,EATgB,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAS7B;AAGD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAA9B;QAsFc,uBAAkB,GAAG,IAAI,GAAG,EAAgC,CAAC;IA4D3E,CAAC;IAjIa,IAAI;QACV,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAU,uBAAuB,EAAE,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAAC;QACnI,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;IACzE,CAAC;IAES,aAAa;QACnB,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAAC;IACtE,CAAC;IAED,gBAAgB,CAAC,QAAyB;QACtC,QAAQ,CAAC,eAAe,CAAC,aAAa,CAAC,sBAAsB,EAAE;YAC3D,OAAO,EAAE,GAAG,EAAE;gBACV,MAAM,YAAY,GAAG,IAAI,CAAC,uBAAuB,CAAC;gBAClD,IAAI,YAAY,EAAE;oBACd,IAAI,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;wBACrD,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;qBAC5C;yBAAM;wBACH,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;qBAChC;iBACJ;YACL,CAAC;YACD,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB;YAC/C,SAAS,EAAE,GAAG,EAAE;gBACZ,MAAM,YAAY,GAAG,IAAI,CAAC,uBAAuB,CAAC;gBAClD,OAAO,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACvE,CAAC;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,aAAa,CAAC,qBAAqB,EAAE;YAC1D,OAAO,EAAE,GAAG,EAAE;gBACV,MAAM,YAAY,GAAG,IAAI,CAAC,uBAAuB,CAAC;gBAClD,IAAI,YAAY,EAAE;oBACd,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;iBAC5C;YACL,CAAC;YACD,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB;YAC/C,SAAS,EAAE,GAAG,EAAE;gBACZ,MAAM,YAAY,GAAG,IAAI,CAAC,uBAAuB,CAAC;gBAClD,MAAM,OAAO,GAAG,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACtF,OAAO,OAAO,CAAC;YACnB,CAAC;SACJ,CAAC,CAAC;IACP,CAAC;IAED,qBAAqB,CAAC,GAAiB;;QACnC,OAAO,WAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,0CAAE,QAAQ,MAAK,KAAK,CAAC;IAC3E,CAAC;IAED,IAAc,uBAAuB;QACjC,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;QACtD,IAAI,YAAY,EAAE;YACd,IAAI,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,KAAK,MAAM,EAAE;gBAC3C,OAAO,YAAY,CAAC;aACvB;SACJ;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAES,WAAW,CAAC,GAAiB;QACnC,OAAO,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;IACzD,CAAC;IAES,uBAAuB;QAC7B,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;QAC/C,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;YACtF,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAIS,KAAK,CAAC,SAAS,CAAC,YAA0B;QAChD,MAAM,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC/C,IAAI,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YAClC,OAAO;SACV;QACD,MAAM,SAAS,GAAG,IAAI,6BAAoB,EAAE,CAAC;QAC7C,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;QAC5C,IAAI;YACA,MAAM,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC;YACnC,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YACjC,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;YAChE,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;YAC7D,IAAI,KAAK,EAAE;gBACP,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC3E,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,wBAAwB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC5E,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,uBAAuB,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;oBAC/D,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;wBACrB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;qBAC9D;gBACL,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;gBACT,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;aAC7D;SACJ;gBAAS;YACN,IAAI,SAAS,CAAC,QAAQ,EAAE;gBACpB,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aACvC;YAAA,CAAC;YACF,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB;IACL,CAAC;IAES,UAAU,CAAC,GAAiB;QAClC,MAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;QAChE,IAAI,WAAW,EAAE;YACb,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC/C,WAAW,CAAC,OAAO,EAAE,CAAC;YACtB,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB;IACL,CAAC;IAED,aAAa,CAAC,KAAwB;QAClC,KAAK,CAAC,kBAAkB,CAAC,gDAAuB,EAAE;YAC9C,SAAS,EAAE,aAAa,CAAC,sBAAsB,CAAC,EAAE;SACrD,CAAC,CAAC;IACP,CAAC;IAED,mBAAmB,CAAC,WAA+B;QAC/C,WAAW,CAAC,kBAAkB,CAAC;YAC3B,OAAO,EAAE,aAAa,CAAC,sBAAsB,CAAC,EAAE;YAChD,IAAI,EAAE,iBAAiB;YACvB,UAAU,EAAE,OAAO;SACtB,CAAC,CAAC;QACH,WAAW,CAAC,kBAAkB,CAAC;YAC3B,OAAO,EAAE,aAAa,CAAC,qBAAqB,CAAC,EAAE;YAC/C,IAAI,EAAE,uBAAuB;YAC7B,UAAU,EAAE,KAAK;SACpB,CAAC,CAAC;IACP,CAAC;CAEJ;AA/IG;IADC,sBAAM,EAAC,uBAAa,CAAC;8BACY,uBAAa;wDAAC;AAGhD;IADC,sBAAM,EAAC,gCAAc,CAAC;8BACO,gCAAc;oDAAC;AAG7C;IADC,sBAAM,EAAC,4BAAY,CAAC;8BACY,4BAAY;uDAAC;AAG9C;IADC,sBAAM,EAAC,uCAAiB,CAAC;;4DAC8B;AAKxD;IADC,6BAAa,GAAE;;;;6CAIf;AApBQ,iBAAiB;IAD7B,0BAAU,GAAE;GACA,iBAAiB,CAkJ7B;AAlJY,8CAAiB;;;;;;;;;;;;ACxC9B,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;;AAEhF,oIAAkE;AAClE,4HAAyJ;AAEzJ,wGAAoE;AACpE,6FAAiC;AACjC,oHAA6C;AAC7C,wHAA0D;AAC1D,6IAAoD;AAIpD,IAAa,cAAc,sBAA3B,MAAa,cAAc;IAEvB,YACc,6BAA4C,yBAAe,CAAC,gBAAgB,CAAC,0BAA0B,CAAC;QAAxG,+BAA0B,GAA1B,0BAA0B,CAA8E;QAiB5G,eAAU,GAA2B;YAC3C,QAAQ,EAAE,CAAC;oBACP,KAAK,EAAE,EAAE;iBACZ,CAAC;SACL,CAAC;QA+BQ,uBAAkB,GAAG,IAAI,GAAG,EAAmC,CAAC;QA0FhE,QAAG,GAAG,gBAAQ,CAAC,GAAG,EAAE,CAAC;QA5I3B,yBAAe,CAAC,oBAAoB,CAAC,IAAI,gBAAc,CAAC,mBAAmB,EAAE,EACzE,IAAI,CAAC,0BAA0B,CAAC,CAAC,KAAK,CAAC,eAAe,GAAG,mDAAmD,CAAC;QACjH,yBAAe,CAAC,oBAAoB,CAAC,IAAI,gBAAc,CAAC,2BAA2B,UAAU,EAAE,IAAI,CAAC,0BAA0B,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,UAAU,CAAC,CAAC,QAAQ;QACpK,yBAAe,CAAC,oBAAoB,CAAC,IAAI,gBAAc,CAAC,2BAA2B,SAAS,EAAE,IAAI,CAAC,0BAA0B,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,UAAU,CAAC,CAAC,SAAS;IACxK,CAAC;IAKS,qBAAqB,CAAC,GAAW;QACvC,mIAAmI;QACnI,OAAQ,MAAM,CAAC,SAAS,CAAC,qBAAgH,CACpI,CAAC,EAAE,OAAO,EAAE,IAAI,aAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC5D,CAAC;IAQD,KAAK,CAAC,YAAY,CAAC,KAA+B,EAAE,QAAyB,EAAE,KAA+B;QAC1G,MAAM,IAAI,GAAG,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC;QACrC,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QACjC,MAAM,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACtD,IAAI,CAAC,YAAY,EAAE;YACf,OAAO,IAAI,CAAC,UAAU,CAAC;SAC1B;QACD,MAAM,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC;QACjC,IAAI,CAAC,KAAK,EAAE;YACR,OAAO,IAAI,CAAC,UAAU,CAAC;SAC1B;QACD,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,UAAU,EAAE;YACb,OAAO,IAAI,CAAC,UAAU,CAAC;SAC1B;QACD,MAAM,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC;QAC3B,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAE,CAAC;QACvD,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAC/C,IAAI,aAAa,GAAG,MAAM,CAAC,OAAO,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QAChE,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACzF,MAAM,KAAK,GAAG,GAAG,MAAM,CAAC,GAAG,SAAS,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,EAAE,UAAU,aAAa,EAAE,CAAC;QAEpG,MAAM,KAAK,GAAG;YACV,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;YACrB,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;SACpI,CAAC;QACF,OAAO,KAAK,CAAC;IACjB,CAAC;IAID,QAAQ,CAAC,KAAmB,EAAE,MAAkB,EAAE,aAAqB;QACnE,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAClC,IAAI,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACpD,IAAI,CAAC,YAAY,EAAE;YACf,MAAM,IAAI,GAAG,YAAY,GAAG,IAAI,uBAAuB,EAAE,CAAC;YAC1D,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;YAC/C,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC,CAAC;YAC7D,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAU,CAAC,MAAM,CAAC,GAAG,EAAE;gBAC/C,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC,CAAC;YACJ,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAU,CAAC,MAAM,CAAC,GAAG,EAAE;gBAC/C,MAAM,CAAC,gBAAgB,CAAC,EAAE,cAAc,EAAE,IAAI,CAAC,mBAAmB,EAAE,cAAc,EAAE,EAAE,EAAE,CAAC,CAAC;YAC9F,CAAC,CAAC,CAAC,CAAC;SACP;QACD,IAAI,YAAY,CAAC,cAAc,EAAE;YAC7B,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;YACrD,IAAI,YAAY,CAAC,cAAc,KAAK,GAAG,EAAE;gBACrC,OAAO,YAAY,CAAC;aACvB;YACD,YAAY,CAAC,cAAc,GAAG,GAAG,CAAC;SACrC;QACD,YAAY,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;QACtC,MAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;QAClE,YAAY,CAAC,cAAc,CAAC,OAAO,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAC7D,MAAM,cAAc,GAAG,gBAAgB,CAAC,iBAAiB,CAAC;QAC1D,MAAM,cAAc,GAAG,YAAY,CAAC,mBAAmB,CAAC;QACxD,MAAM,kBAAkB,GAAG,MAAM,CAAC,gBAAgB,CAAC,EAAE,cAAc,EAAE,cAAc,EAAE,CAAC,CAAC;QACvF,YAAY,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,CAAC;QAC5C,YAAY,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,kBAAkB,CAAC,CAAC;QAC7D,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;QAC3B,OAAO,YAAY,CAAC;IACxB,CAAC;IAES,aAAa,CAAC,KAAmB,EAAE,IAAY;QACrD,MAAM,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC;QAChC,MAAM,UAAU,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;QAC1D,OAAO,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC;IACnD,CAAC;IAES,aAAa,CAAC,KAAmB,EAAE,aAAqB;QAC9D,MAAM,mBAAmB,GAAG,IAAI,GAAG,EAAiC,CAAC;QACrE,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAC9B,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;YAC1B,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;YACvB,MAAM,UAAU,GAAG,gBAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAC7D,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;YAC3C,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YACxE,MAAM,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAClC,IAAI,+BAAqB,CAAC,OAAO,GAAG,KAAK,EAAE,KAAK,CAAC,EAAE;gBAC/C,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,gBAAc,CAAC,mBAAmB,CAAC,CAAC;gBACzD,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;YAC7B,CAAC,EAAE,IAAI,CAAC,0BAA0B,CAAC,CAAC;YACpC,mBAAmB,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,+BAAqB,CAAC,OAAO,GAAG,KAAK,GAAG,UAAU,EAAE,KAAK,CAAC,EAAE;gBACzF,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,gBAAc,CAAC,yBAAyB,CAAC,CAAC;gBAC/D,KAAK,CAAC,OAAO,GAAG,IAAI,OAAO,GAAG,CAAC;YACnC,CAAC,EAAE,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC;YACrC,IAAI,+BAAqB,CAAC,OAAO,GAAG,KAAK,GAAG,SAAS,EAAE,KAAK,CAAC,EAAE;;gBAC3D,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,gBAAc,CAAC,wBAAwB,CAAC,CAAC;gBAC9D,KAAK,CAAC,OAAO,GAAG,CAAC,UAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,mCAAI,CAAC,CAAC,GAAG,EAAE;oBAC/E,CAAC,CAAC,IAAI,UAAG,CAAC,QAAQ,CAAC,0BAA0B,EAAE,mBAAmB,CAAC,GAAG;oBACtE,CAAC,CAAC,IAAI,UAAU,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,UAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC;YAC/D,CAAC,EAAE,IAAI,CAAC,0BAA0B,CAAC,CAAC;SACvC;QACD,MAAM,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC;QAChC,MAAM,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,aAAa,CAAC,IAAI,EAAE,CAAC;QACtE,IAAI,eAAe,GAAG,EAAE,CAAC;QACzB,MAAM,iBAAiB,GAAuB,EAAE,CAAC;QAEjD,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;YAClC,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,UAAU,CAAC;YACjC,MAAM,sBAAsB,GAAG,mBAAmB,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC,SAAS,CAAC;YACvE,MAAM,OAAO,GAA4B;gBACrC,sBAAsB;aACzB,CAAC;YACF,IAAI,GAAG,KAAK,cAAc,EAAE;gBACxB,OAAO,CAAC,sBAAsB,IAAI,GAAG,GAAG,gBAAc,CAAC,mBAAmB,CAAC;aAC9E;YACD,IAAI,GAAG,KAAK,eAAe,EAAE;gBACzB,OAAO,CAAC,sBAAsB,IAAI,GAAG,GAAG,gBAAc,CAAC,2BAA2B,GAAG,GAAG,GAAG,gBAAc,CAAC,2BAA2B,CAAC;aACzI;YACD,eAAe,GAAG,GAAG,CAAC;YACtB,MAAM,KAAK,GAAG,eAAK,CAAC,MAAM,CAAC,kBAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,kBAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YAC/E,iBAAiB,CAAC,IAAI,CAAmB,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;SAChE;QACD,MAAM,MAAM,GAAG,CAAC,GAAG,mBAAmB,CAAC,MAAM,EAAE,CAAC,CAAC;QACjD,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,CAAC;IACzC,CAAC;IAGS,YAAY,CAAC,UAAoB;;QACvC,MAAM,WAAW,GAAG,UAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,IAAI,mCAAI,CAAC,CAAC;QAC3E,IAAI,WAAW,IAAI,CAAC,EAAE;YAClB,OAAO,qBAAqB,CAAC;SAChC;QACD,IAAI,WAAW,IAAI,CAAC,EAAE;YAClB,OAAO,sBAAsB,CAAC;SACjC;QACD,IAAI,WAAW,IAAI,EAAE,EAAE;YACnB,OAAO,sBAAsB,CAAC;SACjC;QACD,IAAI,WAAW,IAAI,EAAE,EAAE;YACnB,OAAO,sBAAsB,CAAC;SACjC;QACD,IAAI,WAAW,IAAI,EAAE,EAAE;YACnB,OAAO,sBAAsB,CAAC;SACjC;QACD,IAAI,WAAW,IAAI,GAAG,EAAE;YACpB,OAAO,2BAA2B,CAAC;SACtC;QACD,IAAI,WAAW,IAAI,GAAG,EAAE;YACpB,OAAO,2BAA2B,CAAC;SACtC;QACD,IAAI,WAAW,IAAI,GAAG,EAAE;YACpB,OAAO,2BAA2B,CAAC;SACtC;QACD,OAAO,2BAA2B,CAAC;IACvC,CAAC;CAEJ;AAnKG;IADC,sBAAM,EAAC,uBAAa,CAAC;8BACY,uBAAa;qDAAC;AAZvC,cAAc;IAD1B,0BAAU,GAAE;qCAIiC,aAAa;GAH9C,cAAc,CA+K1B;AA/KY,wCAAc;AAiL3B,WAAiB,cAAc;IAEd,kCAAmB,GAAG,qBAAqB,CAAC;IAC5C,0CAA2B,GAAG,6BAA6B,CAAC;IAE5D,kCAAmB,GAAwB;QACpD,OAAO,EAAE,aAAa;QACtB,KAAK,EAAE,MAAM;QACb,WAAW,EAAE,MAAM;QACnB,cAAc,EAAE,eAAe;QAC/B,eAAe,EAAE,4CAA4C;QAC7D,WAAW,EAAE,WAAW;QACxB,MAAM,EAAE,MAAM;QACd,QAAQ,EAAE,QAAQ;KACrB,CAAC;IAEW,wCAAyB,GAAwB;QAC1D,KAAK,EAAE,4CAA4C;QACnD,QAAQ,EAAE,QAAQ;QAClB,YAAY,EAAE,UAAU;KAC3B,CAAC;IAEW,uCAAwB,GAAwB;QACzD,KAAK,EAAE,4CAA4C;QACnD,UAAU,EAAE,MAAM;KACrB,CAAC;AACN,CAAC,EA1BgB,cAAc,GAAd,sBAAc,KAAd,sBAAc,QA0B9B;AA3MY,wCAAc;AAkN3B,MAAa,uBAAuB;IAApC;QACa,cAAS,GAAG,IAAI,2BAAoB,EAAE,CAAC;QACvC,mBAAc,GAAG,IAAI,2BAAoB,EAAE,CAAC;QAC5C,wBAAmB,GAAa,EAAE,CAAC;IAShD,CAAC;IALG,OAAO;QACH,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;QAC9B,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IAC3B,CAAC;CACJ;AAZD,0DAYC;;;;;;;;;;;;ACzPD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,oIAAkE;AAClE,0GAAiD;AACjD,yJAAiE;AACjE,oHAA6C;AAG7C,IAAa,YAAY,GAAzB,MAAa,YAAY;IAQrB,WAAW,CAAC,GAAW;QACnB,OAAO,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,aAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,GAAW,EAAE,OAAgB;QACxC,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC;QAC7D,IAAI,CAAC,UAAU,EAAE;YACb,OAAO,SAAS,CAAC;SACpB;QACD,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;IACxD,CAAC;CAEJ;AAjBG;IADC,sBAAM,EAAC,YAAG,CAAC;;yCACgB;AAG5B;IADC,sBAAM,EAAC,6CAAoB,CAAC;8BACS,6CAAoB;uDAAC;AANlD,YAAY;IADxB,0BAAU,GAAE;GACA,YAAY,CAoBxB;AApBY,oCAAY;;;;;;;;;;;;ACtBzB,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAGhF,wHAAiE;AACjE,qHAA+E;AAC/E,kJAAyD;AACzD,yIAAmD;AACnD,mIAA+C;AAE/C,SAAgB,SAAS,CAAC,IAAqB;IAC3C,IAAI,CAAC,sCAAiB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACpD,IAAI,CAAC,4BAAY,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAC/C,IAAI,CAAC,gCAAc,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACjD,KAAK,MAAM,iBAAiB,IAAI,CAAC,4BAAmB,EAAE,gCAAsB,EAAE,yBAAgB,CAAC,EAAE;QAC7F,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,sCAAiB,CAAC,CAAC;KACxD;AACL,CAAC;AAPD,8BAOC;;;;;;;;;;;;AC9BD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;;;;AAEhF,qHAAuH;AACvH,wHAAsH;AACtH,uJAAuE;AACvE,4HAA0D;AAC1D,oIAAkE;AAClE,wIAA4D;AAC5D,+KAA4E;AAE5E,4IAAgE;AAChE,yLAAsH;AAEtH,yJAAgE;AAChE,wIAA6D;AAE7D,2HAAsD;AAEtD,6KAAsG;AACtG,kIAAgE;AAEhE,0HAAuD;AACvD,6JAAyE;AACzE,oHAAiD;AAEjD,IAAiB,eAAe,CAkC/B;AAlCD,WAAiB,eAAe;IACf,8BAAc,GAAG,gBAAO,CAAC,kBAAkB,CAAC;QACrD,EAAE,EAAE,yBAAyB;QAC7B,QAAQ,EAAE,UAAU;QACpB,KAAK,EAAE,iBAAiB;KAC3B,EAAE,uBAAuB,CAAC,CAAC;IACf,8BAAc,GAAG;QAC1B,EAAE,EAAE,mBAAmB;QACvB,OAAO,EAAE,SAAG,CAAC,iBAAiB,CAAC,cAAc,CAAC;QAC9C,SAAS,EAAE,qBAAO,EAAC,WAAW,CAAC;QAC/B,aAAa,EAAE,cAAc;QAC7B,KAAK,EAAE,SAAG,CAAC,iBAAiB,CAAC,cAAc,CAAC;KAC/C,CAAC;IACW,8BAAc,GAAG;QAC1B,EAAE,EAAE,mBAAmB;QACvB,OAAO,EAAE,SAAG,CAAC,iBAAiB,CAAC,cAAc,CAAC;QAC9C,SAAS,EAAE,qBAAO,EAAC,WAAW,CAAC;QAC/B,aAAa,EAAE,cAAc;QAC7B,KAAK,EAAE,SAAG,CAAC,iBAAiB,CAAC,cAAc,CAAC;KAC/C,CAAC;IACW,+BAAe,GAAG;QAC3B,EAAE,EAAE,+BAA+B;QACnC,OAAO,EAAE,SAAG,CAAC,iBAAiB,CAAC,iBAAiB,CAAC;QACjD,SAAS,EAAE,qBAAO,EAAC,YAAY,CAAC;QAChC,aAAa,EAAE,iBAAiB;QAChC,KAAK,EAAE,SAAG,CAAC,iBAAiB,CAAC,iBAAiB,CAAC;KAClD,CAAC;IACW,2BAAW,GAAG;QACvB,EAAE,EAAE,2BAA2B;QAC/B,OAAO,EAAE,SAAG,CAAC,iBAAiB,CAAC,aAAa,CAAC;QAC7C,SAAS,EAAE,qBAAO,EAAC,aAAa,CAAC;QACjC,aAAa,EAAE,aAAa;QAC5B,KAAK,EAAE,SAAG,CAAC,iBAAiB,CAAC,aAAa,CAAC;KAC9C,CAAC;AACN,CAAC,EAlCgB,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAkC/B;AAED,IAAiB,6BAA6B,CAE7C;AAFD,WAAiB,6BAA6B;IAC7B,iCAAG,GAAG,iBAAiB,CAAC;AACzC,CAAC,EAFgB,6BAA6B,GAA7B,qCAA6B,KAA7B,qCAA6B,QAE7C;AAGD,IAAa,mBAAmB,GAAhC,MAAa,mBAAoB,SAAQ,kCAAuC;IAc5E,YACiD,gBAAkC,EAC5B,aAA4B,EAC/B,GAAwB,EACxB,gBAAqC,EAC7C,WAAwB,EAC/B,aAA4B,EAClB,aAA6B,EACjC,UAAsB;QAE7D,KAAK,CAAC;YACF,QAAQ,EAAE,0BAAQ;YAClB,UAAU,EAAE,UAAU;YACtB,oBAAoB,EAAE;gBAClB,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,GAAG;aACZ;SACJ,CAAC,CAAC;QAhB0C,qBAAgB,GAAhB,gBAAgB,CAAkB;QAC5B,kBAAa,GAAb,aAAa,CAAe;QAC/B,QAAG,GAAH,GAAG,CAAqB;QACxB,qBAAgB,GAAhB,gBAAgB,CAAqB;QAC7C,gBAAW,GAAX,WAAW,CAAa;QAC/B,kBAAa,GAAb,aAAa,CAAe;QAClB,kBAAa,GAAb,aAAa,CAAgB;QACjC,eAAU,GAAV,UAAU,CAAY;IAUjE,CAAC;IAEQ,aAAa,CAAC,KAAwB;QAC3C,KAAK,CAAC,kBAAkB,CAAC,6CAAoB,CAAC,OAAO,EAAE;YACnD,SAAS,EAAE,eAAe,CAAC,cAAc,CAAC,EAAE;SAC/C,CAAC,CAAC;IACP,CAAC;IAEQ,gBAAgB,CAAC,QAAyB;QAC/C,QAAQ,CAAC,eAAe,CAAC,eAAe,CAAC,cAAc,EAAE,IAAI,CAAC,sCAAsC,CAAC;YACjG,SAAS,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC;YAC/C,SAAS,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC;YAC/C,OAAO,EAAE,KAAK,EAAC,OAAO,EAAC,EAAE;gBACrB,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;gBACnD,IAAI,UAAU,EAAE;oBACZ,MAAM,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAC7C,KAAK,EAAE,YAAY,EAAE,UAAU,EAAE,EAAE;wBAC/B,MAAM,GAAG,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;wBAC/B,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;wBACzD,MAAM,WAAW,GAAqB;4BAClC,GAAG;4BACH,KAAK,EAAE;gCACH,YAAY;6BACf;yBACJ,CAAC;wBACF,IAAI,QAAQ,CAAC,WAAW,EAAE;4BACtB,IAAI,CAAC,UAAU,CAAC,EAAE,OAAO,EAAE,UAAU,CAAC,QAAQ,EAAE,WAAW,EAAE,CAAC,CAAC;yBAClE;6BAAM;4BACH,MAAM,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,kCAAmB,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;4BAChF,MAAM,KAAK,GAAG,OAAO,CAAC;4BACtB,MAAM,OAAO,GAAG,oBAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;4BAChD,IAAI,OAAO,EAAE;gCACT,kBAAI,EAAC,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;oCACxC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;gCACxC,CAAC,CAAC,CAAC;6BACN;yBACJ;oBACL,CAAC,EAAE,UAAU,CAAC,CAAC;iBACtB;YACL,CAAC;SACJ,CAAC,CAAC,CAAC;QACJ,QAAQ,CAAC,eAAe,CAAC,eAAe,CAAC,eAAe,EAAE;YACtD,OAAO,EAAE,MAAM,CAAC,EAAE;gBACd,IAAI,MAAM,YAAY,+BAAa,EAAE;oBACjC,MAAM,CAAC,kBAAkB,EAAE,CAAC;iBAC/B;YACL,CAAC;YACD,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC,MAAM,YAAY,+BAAa;SACvD,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,eAAe,CAAC,WAAW,EAAE;YAClD,OAAO,EAAE,MAAM,CAAC,EAAE;gBACd,IAAI,MAAM,YAAY,+BAAa,EAAE;oBACjC,MAAM,CAAC,cAAc,EAAE,CAAC;iBAC3B;YACL,CAAC;YACD,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC,MAAM,YAAY,+BAAa;SACvD,CAAC,CAAC;IACP,CAAC;IAED,oBAAoB,CAAC,QAA+B;QAChD,IAAI,CAAC,yBAAyB,CAAC,uBAAuB,CAAC;YACnD,EAAE,EAAE,eAAe,CAAC,cAAc,CAAC,EAAE;YACrC,OAAO,EAAE,eAAe,CAAC,cAAc,CAAC,EAAE;YAC1C,OAAO,EAAE,eAAe,CAAC,cAAc,CAAC,KAAK;YAC7C,KAAK,EAAE,6BAA6B,CAAC,GAAG;SAC3C,CAAC,CAAC;QAEH,MAAM,eAAe,GAAG,IAAI,eAAO,EAAQ,CAAC;QAC5C,MAAM,iBAAiB,GAAG,CAAC,MAAe,EAAE,EAAE;YAC1C,IAAI,MAAM,YAAY,+BAAa,EAAE;gBACjC,OAAO,MAAM,CAAC;aACjB;QACL,CAAC,CAAC;QACF,MAAM,yBAAyB,GAAG,CAAC,MAAe,EAAE,EAAE;YAClD,MAAM,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;YAC/D,IAAI,GAAG,YAAY,gDAAqB,EAAE;gBACtC,OAAO,GAAG,CAAC;aACd;YACD,OAAO,SAAS,CAAC;QACrB,CAAC,CAAC;QACF,MAAM,sBAAsB,GAAG,CAAC,OAAgB,EAAE,IAAqB,EAAE,EAAE;YACvE,MAAM,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;YACtB,MAAM,IAAI,GAAsB;gBAC5B,EAAE;gBACF,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE,OAAO,CAAC,KAAK;gBACtB,WAAW,EAAE,eAAe,CAAC,KAAK;aACrC,CAAC;YAEF,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,OAAO,IAAI,OAAO,CAAC,SAAS,EAAE,EAAE;gBAClF,OAAO,EAAE,MAAM,CAAC,EAAE;oBACd,MAAM,iBAAiB,GAAG,iBAAiB,CAAC,MAAM,CAAC,IAAI,yBAAyB,CAAC,MAAM,CAAC,CAAC;oBACzF,IAAI,iBAAiB,EAAE;wBACnB,iBAAiB,CAAC,QAAQ,GAAG,IAAI,CAAC;wBAClC,eAAe,CAAC,IAAI,EAAE,CAAC;qBAC1B;gBACL,CAAC;gBACD,SAAS,EAAE,MAAM,CAAC,EAAE;oBAChB,MAAM,iBAAiB,GAAG,iBAAiB,CAAC,MAAM,CAAC,IAAI,yBAAyB,CAAC,MAAM,CAAC,CAAC;oBACzF,IAAI,iBAAiB,EAAE;wBACnB,OAAO,iBAAiB,CAAC,QAAQ,KAAK,IAAI,CAAC;qBAC9C;oBACD,OAAO,KAAK,CAAC;gBACjB,CAAC;aACJ,CAAC,CAAC;YACH,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC,CAAC;QACF,sBAAsB,CAAC,eAAe,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;QAC/D,sBAAsB,CAAC,eAAe,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;QAE/D,QAAQ,CAAC,YAAY,CAAC;YAClB,EAAE,EAAE,eAAe,CAAC,eAAe,CAAC,EAAE;YACtC,OAAO,EAAE,eAAe,CAAC,eAAe,CAAC,EAAE;YAC3C,OAAO,EAAE,eAAe,CAAC,eAAe,CAAC,KAAK;SACjD,CAAC,CAAC;QACH,QAAQ,CAAC,YAAY,CAAC;YAClB,EAAE,EAAE,eAAe,CAAC,WAAW,CAAC,EAAE;YAClC,OAAO,EAAE,eAAe,CAAC,WAAW,CAAC,EAAE;YACvC,OAAO,EAAE,eAAe,CAAC,WAAW,CAAC,KAAK;SAC7C,CAAC,CAAC;IACP,CAAC;IAES,iBAAiB,CAAC,GAAQ;QAChC,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QACjD,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE;YACpC,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;SAC9C;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,OAAiC;QAC9C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC;QACjC,MAAM,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC,QAAQ,CAAC;YACjB,QAAQ,EAAE,IAAI;SACjB,CAAC,CAAC;IACP,CAAC;IAES,sCAAsC,CAAC,OAA+B;QAC5E,OAAO,IAAI,wDAAmC,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;IAC1G,CAAC;CACJ;AA1KG;IADC,sBAAM,EAAC,uBAAa,CAAC;8BACY,uBAAa;0DAAC;AAGhD;IADC,sBAAM,EAAC,wBAAe,CAAC;8BACY,wBAAe;4DAAC;AAGpD;IADC,sBAAM,EAAC,kDAAyB,CAAC;8BACY,kDAAyB;sEAAC;AAGxE;IADC,sBAAM,EAAC,0BAAgB,CAAC;8BACY,0BAAgB;6DAAC;AAZ7C,mBAAmB;IAD/B,0BAAU,GAAE;IAgBJ,iCAAM,EAAC,yBAAgB,CAAC;IACxB,iCAAM,EAAC,8BAAa,CAAC;IACrB,iCAAM,EAAC,6BAAmB,CAAC;IAC3B,iCAAM,EAAC,4CAAmB,CAAC;IAC3B,iCAAM,EAAC,0BAAW,CAAC;IACnB,iCAAM,EAAC,uBAAa,CAAC;IACrB,iCAAM,EAAC,uBAAc,CAAC;IACtB,iCAAM,EAAC,wBAAU,CAAC;qCAP4C,yBAAgB;QACb,8BAAa;QAC1B,6BAAmB;QACN,4CAAmB;QAChC,0BAAW,UAEN,uBAAc;QACrB,wBAAU;GAtBxD,mBAAmB,CA6K/B;AA7KY,kDAAmB;;;;;;;;;;;;AChFhC,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAGhF,0JAA8D;AAC9D,wHAAyF;AACzF,wIAA4D;AAC5D,6JAA+D;AAC/D,oJAAyD;AACzD,4KAA0F;AAC1F,oKAAoF;AACpF,oJAA0D;AAC1D,yKAAsE;AACtE,uHAA6C;AAE7C,SAAgB,iBAAiB,CAAC,IAAqB;IAEnD,IAAI,CAAC,+BAAa,CAAC,CAAC,MAAM,EAAE,CAAC;IAC7B,IAAI,CAAC,uBAAa,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACvC,EAAE,EAAE,0BAAQ;QACZ,YAAY,EAAE,GAAG,EAAE;YACf,MAAM,KAAK,GAAG,4BAA4B,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YAC1D,OAAO,KAAK,CAAC,GAAG,CAAC,+BAAa,CAAC,CAAC;QACpC,CAAC;KACJ,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAEvB,kCAAoB,EAAC,IAAI,EAAE,2CAAmB,CAAC,CAAC;IAChD,IAAI,CAAC,2CAAyB,CAAC,CAAC,SAAS,CAAC,2CAAmB,CAAC,CAAC;AAEnE,CAAC;AAdD,8CAcC;AAED,SAAgB,4BAA4B,CAAC,MAA4B;IACrE,MAAM,KAAK,GAAG,gDAAsB,EAAC,MAAM,CAAC,CAAC;IAE7C,KAAK,CAAC,IAAI,CAAC,4CAAmB,CAAC,CAAC,MAAM,EAAE,CAAC;IACzC,KAAK,CAAC,IAAI,CAAC,sCAAgB,CAAC,CAAC,MAAM,EAAE,CAAC;IACtC,KAAK,CAAC,IAAI,CAAC,mBAAS,CAAC,CAAC,SAAS,CAAC,sCAAgB,CAAC,CAAC;IAClD,KAAK,CAAC,IAAI,CAAC,uCAAiB,CAAC,CAAC,EAAE,CAAC,mDAAsB,CAAC,CAAC;IACzD,OAAO,KAAK,CAAC;AACjB,CAAC;AARD,oEAQC;;;;;;;;;;;;ACpDD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,oIAAkE;AAClE,oHAA6C;AAC7C,4IAAgE;AAChE,uJAAuE;AACvE,iNAAyG;AACzG,wHAAmG;AAEnG,sHAAkD;AAElD,oCAAoC;AAGpC,IAAa,mBAAmB,GAAhC,MAAa,mBAAoB,SAAQ,qBAAW;IAWhD;QAEI,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,EAAE,GAAG,iBAAiB,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,qBAAO,EAAC,YAAY,CAAC,CAAC;IACjD,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,OAAyB;QACtC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAES,MAAM;QACZ,OAAO,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,yBAAyB,EAAE,EAAE,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;IACrG,CAAC;IAED;;OAEG;IACO,yBAAyB;QAC/B,OAAO;YACH,KAAK,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE;SACzB,CAAC;IACN,CAAC;IAES,oBAAoB;QAC1B,OAAO,IAAI,CAAC,sBAAsB,CAC9B,IAAI,CAAC,sBAAsB,EAAE,EAC7B,IAAI,CAAC,gBAAgB,EAAE,EACvB,IAAI,CAAC,oBAAoB,EAAE,CAC9B,CAAC;IACN,CAAC;IAES,sBAAsB,CAAC,GAAG,QAA2B;QAC3D,OAAO,6BAAK,SAAS,EAAC,aAAa,OAAK,QAAQ,CAAO,CAAC;IAC5D,CAAC;IAES,sBAAsB;QAC5B,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;YAClC,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;SACzG;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAES,kBAAkB,CAAC,GAAW;QACpC,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,aAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAChE,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB,IAAI,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,KAAK,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC;QAC/J,OAAO,UAAU,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,aAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAC5H,CAAC;IAES,gBAAgB;QACtB,OAAO,IAAI,CAAC,eAAe,CAAC;YACxB,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE;SAC3B,CAAC,CAAC;IACP,CAAC;IACS,UAAU;QAChB,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;YAClB,MAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAClE,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjB,OAAO,GAAG,GAAG,IAAI,CAAC;aACrB;iBAAM;gBACH,OAAO,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,aAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;aACpE;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAES,oBAAoB;QAC1B,OAAO,IAAI,CAAC,eAAe,CAAC;YACxB,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,YAAY;YAClB,KAAK,EAAE,IAAI,CAAC,cAAc,EAAE;SAC/B,CAAC,CAAC;IACP,CAAC;IACS,cAAc;QACpB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACpB,OAAO,IAAI,CAAC;SACf;QACD,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,QAAQ,EAAE;YACvC,OAAO,IAAI,CAAC,YAAY,CAAC;SAC5B;QACD,OAAO,CAAC,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC;IACjE,CAAC;IAES,eAAe,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAmF;QACzI,IAAI,CAAC,KAAK,EAAE;YACR,OAAO;SACV;QACD,MAAM,SAAS,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClE,OAAO,6BAAK,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK;YACrD,6BAAK,SAAS,EAAC,cAAc,IAAE,IAAI,CAAO;YAC1C,6BAAK,SAAS,EAAC,cAAc,IAAE,KAAK,CAAO,CACzC,CAAC;IACX,CAAC;IAED,IAAc,UAAU;QACpB,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC;IAC/D,CAAC;IAED,IAAc,YAAY;QACtB,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC;IACjE,CAAC;IAED,UAAU;QACN,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC;QACzB,OAAO;YACH,OAAO;SACV,CAAC;IACN,CAAC;IAED,8DAA8D;IAC9D,YAAY,CAAC,QAAa;QACtB,MAAM,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;QACpC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;CAEJ;AAhI+B;IAA3B,sBAAM,EAAC,4BAAkB,CAAC;8BAAiC,4BAAkB;wDAAC;AAC3D;IAAnB,sBAAM,EAAC,wBAAU,CAAC;8BAAgC,wBAAU;uDAAC;AACvC;IAAtB,sBAAM,EAAC,8BAAa,CAAC;8BAAmC,8BAAa;0DAAC;AACnC;IAAnC,sBAAM,EAAC,2DAA0B,CAAC;8BAAsC,2DAA0B;6DAAC;AAL3F,mBAAmB;IAD/B,0BAAU,GAAE;;GACA,mBAAmB,CAkI/B;AAlIY,kDAAmB;;;;;;;;;;;;AC5BhC,gFAAgF;AAChF,qCAAqC;AACrC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,oIAAkE;AAClE,qHAA8D;AAC9D,oHAA6C;AAC7C,qJAAqE;AACrE,0GAAkD;AAClD,4IAAgE;AAChE,uIAAuE;AAGvE,oJAA0D;AAG1D,IAAa,gBAAgB,GAA7B,MAAa,gBAAiB,SAAQ,6BAAY;IAY9C;QACI,KAAK,EAAE,CAAC;QALF,YAAO,GAAuB,EAAE,CAAC;QAExB,6BAAwB,GAAG,IAAI,6BAAoB,EAAE,CAAC;QAIrE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;IACvD,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,OAAiC;QAC9C,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,OAAO,CAAC;QACzC,IAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE,CAAC;QACxC,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,aAAG,CAAC,OAAO,CAAC,CAAC,CAAC;QACvE,IAAI,aAAa,IAAI,aAAa,CAAC,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE;YACtD,MAAM,QAAQ,GAAG,aAAa,CAAC,QAA0B,CAAC;YAC1D,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAE/B,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YACjC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,EAAE;gBACzD,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC,CAAC;SAEP;IACL,CAAC;IAES,KAAK,CAAC,iBAAiB,CAAC,QAAwB;QACtD,MAAM,UAAU,GAAG,EAAE,QAAQ,EAAE,QAAQ,CAAC,OAAO,EAAE,CAAC;QAElD,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAEzE,MAAM,KAAK,GAAqB,EAAE,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,eAAe,EAAE,SAAS,EAAE,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,EAAE,GAAE,CAAC,EAAE,CAAC;QACtH,MAAM,SAAS,GAAkB,cAAc;aAC1C,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,mCAAgB,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aAC7E,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACZ,SAAS,EAAE,IAAI,aAAG,CAAC,MAAM,CAAC,GAAG,CAAC;YAC9B,WAAW,EAAE;gBACT,MAAM,EAAE,sBAAa,CAAC,cAAc,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC;gBACvE,KAAK,EAAE,sBAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC;gBAChE,OAAO,EAAE,sBAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC;aACrE;YACD,IAAI,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YACnC,KAAK;SACR,CAAC,CAAC,CAAC;QACR,MAAM,YAAY,GAAG,EAAE,GAAG,KAAK,EAAE,SAAS,EAAE,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,CAAE,YAAY,CAAE,CAAC;QAEhC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;IAClC,CAAC;IAED,IAAI,OAAO;QACP,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;SAChC;IACL,CAAC;IAAA,CAAC;IAEF,cAAc;QACV,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,IAAI,MAAM;QACN,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAAA,CAAC;IAEF,KAAK,CAAC,IAAI,CAAC,MAAqB;QAC5B,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;QACxC,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC9C,CAAC;IAEQ,UAAU;QACf,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,OAAO;gBACH,GAAG,KAAK,CAAC,UAAU,EAAE;gBACrB,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO;gBAC9B,WAAW,EAAE,IAAI,CAAC,WAAW;aAChC,CAAC;SACL;aAAM;YACH,OAAO,KAAK,CAAC,UAAU,EAAE,CAAC;SAC7B;IACL,CAAC;IAEQ,YAAY,CAAC,QAAkC;QACpD,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAC7B,IAAI,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,WAAW,EAAE;YAC1C,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;SAC7B;IACL,CAAC;CACJ;AA7FgB;IAAZ,sBAAM,EAAC,YAAG,CAAC;;6CAA6B;AACrB;IAAnB,sBAAM,EAAC,wBAAU,CAAC;8BAAgC,wBAAU;oDAAC;AACnC;IAA1B,sBAAM,EAAC,uCAAiB,CAAC;;wDAAsD;AAJvE,gBAAgB;IAD5B,0BAAU,GAAE;;GACA,gBAAgB,CA+F5B;AA/FY,4CAAgB;AAiG7B,WAAiB,gBAAgB;IAI5B,CAAC;AACN,CAAC,EALgB,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAKhC;AAtGY,4CAAgB;;;;;;;;;;;;AC5B7B,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,oIAAiF;AACjF,wHAEiC;AACjC,4HAAiF;AACjF,oJAAyD;AACzD,0GAA0C;AAC1C,6JAA+D;AAC/D,4IAAgE;AAChE,4JAAmE;AACnE,wJAAuE;AACvE,wJAAwE;AACxE,wGAAkC;AAErB,gBAAQ,GAAG,UAAU,CAAC;AAEnC,IAAa,aAAa,GAA1B,MAAa,aAAc,SAAQ,oBAAU;IAgBzC;QACI,KAAK,EAAE,CAAC;QAfO,mBAAc,GAAG,UAAG,CAAC,QAAQ,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;QAgBvE,IAAI,CAAC,EAAE,GAAG,gBAAQ,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC;QACvC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QACzC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,qBAAO,EAAC,aAAa,CAAC,CAAC;QAE9C,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC;IACxC,CAAC;IAGS,IAAI;QACV,MAAM,MAAM,GAAG,IAAI,qBAAW,EAAE,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,IAAI,eAAK,CAAC;YACnB,MAAM,EAAE,IAAI,qBAAW,CAAC,EACvB,CAAC;SACL,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;QACzD,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE7B,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACtD,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAEpD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE;YAC5D,IAAI,CAAC,CAAC,cAAc,KAAK,qBAAqB,EAAE;gBAC5C,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;aACnC;QACL,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,IAAI,QAAQ,CAAC,IAAqB;QAC9B,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC;IACxC,CAAC;IACD,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;IACxC,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,OAAiC;QAC9C,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAC/B,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACtD,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,IAAI,eAAe;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,MAAqB,CAAC;IAC5C,CAAC;IAED;;;OAGG;IACO,cAAc,CAAC,UAA2B;QAChD,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;IAC/B,CAAC;IAES,iBAAiB;QACvB,IAAI,CAAC,eAAe,CAAC,gBAAM,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IACnD,CAAC;IAEkB,eAAe,CAAC,GAAY;QAC3C,qBAAW,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;QACpD,qBAAW,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;QAClD,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAEkB,aAAa,CAAC,GAAY;QACzC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAEhD,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,kBAAkB;QACd,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,CAAC;IAC7C,CAAC;IAED,cAAc;QACV,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;IACzC,CAAC;IAED,UAAU;QACN,MAAM,KAAK,GAAG;YACV,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE;YAC/C,gBAAgB,EAAE,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE;SACrD,CAAC;QACF,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,8DAA8D;IAC9D,YAAY,CAAC,QAAa;QACtB,MAAM,EAAE,WAAW,EAAE,gBAAgB,EAAE,GAAG,QAAQ,CAAC;QACnD,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QAChD,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;IACvD,CAAC;CAEJ;AAlHkC;IAA9B,sBAAM,EAAC,+CAAqB,CAAC;8BAAwC,+CAAqB;yDAAC;AAC7D;IAA9B,sBAAM,EAAC,+BAAqB,CAAC;;4DAAiE;AACxE;IAAtB,sBAAM,EAAC,uBAAa,CAAC;8BAAmC,uBAAa;oDAAC;AACnD;IAAnB,sBAAM,EAAC,mBAAU,CAAC;8BAAgC,mBAAU;iDAAC;AACjC;IAA5B,sBAAM,EAAC,4CAAmB,CAAC;8BAAsC,4CAAmB;uDAAC;AAC/D;IAAtB,sBAAM,EAAC,+BAAa,CAAC;8BAAoC,+BAAa;qDAAC;AAC9C;IAAzB,sBAAM,EAAC,sCAAgB,CAAC;8BAA2B,sCAAgB;4CAAC;AACjD;IAAnB,sBAAM,EAAC,wBAAU,CAAC;8BAAgC,wBAAU;iDAAC;AACtC;IAAvB,sBAAM,EAAC,gCAAc,CAAC;;qDAAmD;AAkB1E;IADC,6BAAa,GAAE;;;;yCAqBf;AAlDQ,aAAa;IADzB,0BAAU,GAAE;;GACA,aAAa,CAsHzB;AAtHY,sCAAa;;;;;;;;;;;;AChC1B,gFAAgF;AAChF,qCAAqC;AACrC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,oIAAkE;AAClE,2JAAyE;AAKzE,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAG/B,KAAK,CAAC,IAAI,CAAC,SAAc;QACrB,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;IAEjE,CAAC;CACJ;AAN0B;IAAtB,sBAAM,EAAC,8BAAa,CAAC;8BAAmC,8BAAa;6DAAC;AAD9D,sBAAsB;IADlC,0BAAU,GAAE;GACA,sBAAsB,CAOlC;AAPY,wDAAsB;;;;;;;;;;;;ACtBnC,gFAAgF;AAChF,qCAAqC;AACrC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAInE,yBAAiB,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC;;;;;;;;;;;;AClB7D,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;;;;AAEhF,oIAAkE;AAClE,6LAA4F;AAE5F,uJAAwD;AAGxD,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAE9B,YACiD,gBAAkC,EAChC,kBAAsC;QADxC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAChC,uBAAkB,GAAlB,kBAAkB,CAAoB;IACrF,CAAC;IAEL,OAAO,CAAC,GAAwB;QAC5B,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC;IACxG,CAAC;CAEJ;AAXY,qBAAqB;IADjC,0BAAU,GAAE;IAIJ,iCAAM,EAAC,qCAAgB,CAAC;IACxB,iCAAM,EAAC,yCAAkB,CAAC;qCADoC,qCAAgB;QACZ,yCAAkB;GAJhF,qBAAqB,CAWjC;AAXY,sDAAqB;;;;;;;;;;;;ACtBlC,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,oIAAiF;AACjF,4HAAiI;AACjI,oHAA6C;AAC7C,wGAA+E;AAC/E,wKAA+E;AAE/E,wKAA0F;AAC1F,oIAAsE;AAEtE,2HAAsD;AACtD,sJAA+D;AAC/D,0GAA2H;AAC3H,yJAAiE;AAEjE,6IAAgE;AAGhE,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAA7B;QAEuB,WAAM,GAAG,IAAI,GAAG,EAA0B,CAAC;QAE3C,6BAAwB,GAAG,IAAI,cAAO,EAAmB,CAAC;QACpE,sBAAiB,GAA2B,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC;IA6F7F,CAAC;IA3Ea,IAAI;QACV,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAES,KAAK,CAAC,MAAM;QAClB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,EAAC,CAAC,EAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAuC,EAAE,EAAE,CACzF,IAAI,CAAC,qBAAqB,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QACpF,MAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,CAAC;QAClE,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC;QAC7D,IAAI,SAAS,IAAI,UAAU,EAAE;YACzB,MAAM,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;SAC3D;IACL,CAAC;IAES,KAAK,CAAC,mBAAmB,CAAC,YAA0B;QAC1D,MAAM,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC;QACnC,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAClC,IAAI,MAAM,CAAC,GAAG,CAAC,MAAM,KAAK,MAAM,EAAE;YAC9B,OAAO;SACV;QACD,MAAM,SAAS,GAAG,IAAI,2BAAoB,EAAE,CAAC;QAC7C,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAC1C,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAC5B,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,KAA8B,EAAE,EAAE,CAAC,KAAK,CAAC,qBAAqB,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QACjJ,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE;YAC/B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACxB,SAAS,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QACH,MAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,CAAC;QAClE,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC;QAC7D,IAAI,SAAS,IAAI,UAAU,EAAE;YACzB,MAAM,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;YAC7D,MAAM,KAAK,CAAC,qBAAqB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;SAC1D;QACD,KAAK,CAAC,qBAAqB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACjD,CAAC;IAES,cAAc,CAAC,MAAkB;QACvC,MAAM,gBAAgB,GAAG,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACrE,MAAM,KAAK,GAAG,IAAI,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;QAC7E,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACpE,OAAO,KAAK,CAAC;IACjB,CAAC;IAES,0BAA0B,CAAC,OAAY;QAC7C,OAA4C;YACxC,OAAO;YACP,WAAW,EAAE,KAAK,EAAE,MAAe,EAAE,EAAE;gBACnC,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;gBACnC,MAAM,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,kCAAmB,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBACrE,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBACpE,OAAO,WAAW,CAAC,YAAY,EAAE,CAAC;YACtC,CAAC;YACD,mBAAmB,EAAE,KAAK,IAAI,EAAE;gBAC5B,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC;gBAC7D,IAAI,UAAU,EAAE;oBACZ,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;iBACnF;gBACD,OAAO,KAAK,CAAC;YACjB,CAAC;SACJ,CAAC;IACN,CAAC;IAES,KAAK,CAAC,qBAAqB,CAAC,UAAkC,EAAE,MAA0C;QAChH,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;QACzC,MAAM,eAAe,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAClF,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE;YACtC,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;YACxC,MAAM,OAAO,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;YAC3D,MAAM,KAAK,CAAC,qBAAqB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;SAC1D;IACL,CAAC;CAEJ;AA1FG;IADC,sBAAM,EAAC,YAAG,CAAC;;6CACgB;AAG5B;IADC,sBAAM,EAAC,6CAAoB,CAAC;8BACS,6CAAoB;2DAAC;AAG3D;IADC,sBAAM,EAAC,2CAAmB,CAAC;8BACY,2CAAmB;6DAAC;AAG5D;IADC,sBAAM,EAAC,uBAAa,CAAC;8BACY,uBAAa;uDAAC;AAGhD;IADC,sBAAM,EAAC,gCAAc,CAAC;;qDACwB;AAG/C;IADC,6BAAa,GAAE;;;;4CAGf;AAzBQ,gBAAgB;IAD5B,0BAAU,GAAE;GACA,gBAAgB,CAkG5B;AAlGY,4CAAgB;AAoG7B,MAAa,cAAc;IAYvB,YACa,MAAkB,EAClB,WAA2B,EACjB,gBAAqD;QAF/D,WAAM,GAAN,MAAM,CAAY;QAClB,gBAAW,GAAX,WAAW,CAAgB;QACjB,qBAAgB,GAAhB,gBAAgB,CAAqC;QAblE,cAAS,GAAG,IAAI,2BAAoB,EAAE,CAAC;QAEvC,YAAO,GAAG,IAAI,CAAC;QAKN,6BAAwB,GAAG,IAAI,cAAO,EAAmB,CAAC;QACpE,sBAAiB,GAA2B,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC;QAOrF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnG,CAAC;IAES,KAAK,CAAC,sBAAsB,CAAC,KAA8C;QACjF,MAAM,EAAE,cAAc,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC;QAC3C,IAAI,cAAc,KAAK,gCAAgC,EAAE;YACrD,MAAM,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC;YAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,MAAM,EAAE,CAAC;SACjB;QACD,IAAI,cAAc,KAAK,iCAAiC,EAAE;YACtD,IAAI,CAAC,MAAM,EAAE,CAAC;SACjB;IACL,CAAC;IAED,IAAc,UAAU;QACpB,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,iCAAiC,CAAC,CAAC;QAClE,OAAO,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC;IACvD,CAAC;IAIS,YAAY;QAClB,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YAChE,OAAO,KAAK,CAAC;SAChB;QACD,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;QAC9B,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,KAAK,CAAC;IACrF,CAAC;IAED,MAAM;QACF,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE;YACtB,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;YACrF,OAAO;SACV;QACD,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC3C;QACD,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;YACxC,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC;YACtC,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YACpC,IAAI,CAAC,QAAQ,IAAI,CAAC,OAAO,EAAE;gBACvB,OAAO;aACV;YACD,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;YAC/B,MAAM,SAAS,GAAG,cAAc,CAAC,gBAAgB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YACrE,IAAI,CAAC,SAAS,EAAE;gBACZ,uFAAuF;gBACvF,gDAAgD;gBAChD,OAAO;aACV;YACD,MAAM,eAAe,GAAoB,EAAE,MAAM,EAAE,GAAG,SAAS,EAAE,CAAC;YAClE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACxD,CAAC,EAAE,GAAG,CAAC,CAAC;IACZ,CAAC;IAED,qBAAqB,CAAC,QAA4B;QAC9C,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;YACzB,OAAO;SACV;QACD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;QACpE,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,KAAK,CAAC,qBAAqB,CAAC,UAAkC,EAAE,eAAgC;QAC5F,MAAM,iBAAiB,GAAG,eAAe,CAAC,MAAM,KAAK,CAAC,CAAC;QACvD,MAAM,cAAc,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,sBAAa,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAC/F,MAAM,gBAAgB,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,sBAAa,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAChG,MAAM,cAAc,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,sBAAa,CAAC,QAAQ,CAAC,CAAC;QACtF,MAAM,UAAU,GAAG,CAAC,CAAC,cAAc,CAAC;QACpC,MAAM,2BAA2B,GAAG,KAAK,IAAI,EAAE;YAC3C,IAAI;gBACA,IAAI,CAAC,eAAe,GAAG,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;aAClE;YAAC,MAAM;gBACJ,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;aACpC;QACL,CAAC,CAAC;QACF,IAAI,UAAU,IAAI,cAAc,EAAE;YAC9B,IAAI,CAAC,MAAM,GAAG,cAAc,IAAI,cAAe,CAAC,MAAM,IAAI,KAAK,CAAC;YAChE,MAAM,2BAA2B,EAAE,CAAC;SACvC;QACD,IAAI,gBAAgB,IAAI,CAAC,cAAc,EAAE;YACrC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;SACpC;QACD,IAAI,iBAAiB,EAAE;YACnB,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;YACjE,IAAI,eAAe,EAAE;gBACjB,MAAM,2BAA2B,EAAE,CAAC;aACvC;SACJ;QACD,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAES,KAAK,CAAC,iBAAiB,CAAC,UAAkC;QAChE,IAAI,CAAC,UAAU,EAAE;YACb,OAAO,KAAK,CAAC;SAChB;QACD,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC/D,MAAM,OAAO,GAAG,IAAI,aAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC3E,OAAO,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC;IACvF,CAAC;IAES,KAAK,CAAC,0BAA0B;QACtC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACtE,OAAO,QAAQ,CAAC,CAAC,CAAC,4BAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IACpE,CAAC;IAED,OAAO;QACH,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QACzB,IAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE,CAAC;IAC5C,CAAC;CACJ;AAjID,wCAiIC;AAED,WAAiB,cAAc;IAE3B,MAAM,YAAY,GAAG,IAAI,4BAAY,EAAE,CAAC;IAExC;;;;;;OAMG;IACH,SAAgB,gBAAgB,CAAC,QAAsB,EAAE,OAAqB;QAC1E,IAAI;YACA,OAAO,YAAY,CAAC,gBAAgB,CAAC,4BAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,4BAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;SAC3G;QAAC,MAAM;YACJ,OAAO,SAAS,CAAC;SACpB;IACL,CAAC;IANe,+BAAgB,mBAM/B;IAED,SAAgB,oBAAoB,CAAC,QAA4B;QAC7D,OAAO;YACH,MAAM,EAAE,QAAQ,CAAC,SAAS;YAC1B,cAAc,EAAE,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,GAAG,CAAC,CAAC;SAC5D,CAAC;IACN,CAAC;IALe,mCAAoB,uBAKnC;AAQL,CAAC,EAhCgB,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAgC9B;;;;;;;;;;;;ACxSD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAGhF,wHAA0E;AAC1E,sKAAkE;AAClE,uJAAwD;AAExD,SAAgB,aAAa,CAAC,IAAqB;IAC/C,IAAI,CAAC,qCAAgB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACnD,IAAI,CAAC,+CAAqB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACxD,IAAI,CAAC,yCAA+B,CAAC,CAAC,SAAS,CAAC,+CAAqB,CAAC,CAAC;AAC3E,CAAC;AAJD,sCAIC;;;;;;;;;;;;ACzBD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;AAEhF,oIAA0D;AAE1D,sIAAqE;AAGrE,IAAa,yBAAyB,iCAAtC,MAAa,yBAAyB;IAIlC;;OAEG;IACH,QAAQ,CAAC,KAAyB;QAC9B,IAAI,KAAK,EAAE;YACP,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnC,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtB,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,CAAC,MAAM,EAAE;oBACV,OAAO,MAAM,CAAC;iBACjB;aACJ;SACJ;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAES,WAAW,CAAC,IAAY,EAAE,KAAa;QAC7C,IAAI,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAClC,OAAO;gBACH,MAAM,EAAE,6BAAiB,CAAC,OAAO;gBACjC,OAAO,EAAE,8EAA8E;aAC1F,CAAC;SACL;QACD,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAClD,IAAI,IAAI,GAAG,CAAC,EAAE;YACV,OAAO;gBACH,MAAM,EAAE,6BAAiB,CAAC,OAAO;gBACjC,OAAO,EAAE,GAAG,IAAI,oBAAoB,IAAI,CAAC,eAAe,EAAE,kBAAkB;aAC/E,CAAC;SACL;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAES,eAAe;QACrB,OAAO,2BAAyB,CAAC,kBAAkB,CAAC;IACxD,CAAC;CAEJ;AAxCmB,4CAAkB,GAAG,EAAG;AAF/B,yBAAyB;IADrC,0BAAU,GAAE;GACA,yBAAyB,CA0CrC;AA1CY,8DAAyB;AA4CtC,WAAiB,yBAAyB;IAOtC,IAAiB,MAAM,CAYtB;IAZD,WAAiB,MAAM;QAEnB;;WAEG;QACH,SAAgB,KAAK,CAAC,IAAwB,EAAE,KAAyB;YACrE,IAAI,IAAI,IAAI,KAAK,EAAE;gBACf,OAAO,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM,CAAC;aACzE;YACD,OAAO,IAAI,KAAK,KAAK,CAAC;QAC1B,CAAC;QALe,YAAK,QAKpB;IAEL,CAAC,EAZgB,MAAM,GAAN,gCAAM,KAAN,gCAAM,QAYtB;AAEL,CAAC,EArBgB,yBAAyB,GAAzB,iCAAyB,KAAzB,iCAAyB,QAqBzC;AAjEY,8DAAyB;;;;;;;;;;;;;;;;;;;;;;;ACrBtC,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;AAChF,oIAAkE;AAElE,wGASqB;AACrB,wHAAoE;AAMpE,4HAAgH;AAChH,uGAA8D;AAC9D,wJAAgE;AAChE,wJAA0E;AAC1E,sIAAoD;AACpD,kIAAgE;AAChE,2JAAkE;AAClE,kJAA+D;AAC/D,yIAA8D;AAC9D,wJAAuE;AAEvE,2JAA0E;AAC1E,mIAAmD;AAGnD,sIAAqE;AACrE,sKAAiF;AACjF,2JAAkE;AAClE,oHAAiD;AAEjD,IAAiB,YAAY,CAqL5B;AArLD,WAAiB,YAAY;IAEzB,MAAM,gBAAgB,GAAG,gCAAgC,CAAC;IAC1D,MAAM,YAAY,GAAG,KAAK,CAAC;IAEd,kBAAK,GAAG,cAAO,CAAC,kBAAkB,CAAC;QAC5C,EAAE,EAAE,WAAW;QACf,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,UAAU;KACpB,EAAE,kCAAkC,EAAE,gBAAgB,CAAC,CAAC;IAC5C,kBAAK,GAAG,cAAO,CAAC,kBAAkB,CAAC;QAC5C,EAAE,EAAE,WAAW;QACf,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,UAAU;KACpB,EAAE,kCAAkC,EAAE,gBAAgB,CAAC,CAAC;IAC5C,yBAAY,GAAG,cAAO,CAAC,kBAAkB,CAAC;QACnD,EAAE,EAAE,kBAAkB;QACtB,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,MAAM;KAChB,EAAE,iCAAiC,EAAE,gBAAgB,CAAC,CAAC;IAC3C,kCAAqB,GAAY;QAC1C,EAAE,EAAE,yBAAY,CAAC,EAAE,GAAG,WAAW;QACjC,KAAK,EAAE,yBAAY,CAAC,KAAK;QACzB,aAAa,EAAE,yBAAY,CAAC,aAAa;KAC5C,CAAC;IACW,iBAAI,GAAG,cAAO,CAAC,kBAAkB,CAAC;QAC3C,EAAE,EAAE,UAAU;QACd,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,cAAc;KACxB,EAAE,qCAAqC,EAAE,gBAAgB,CAAC,CAAC;IAC/C,yBAAY,GAAG,cAAO,CAAC,kBAAkB,CAAC;QACnD,EAAE,EAAE,kBAAkB;QACtB,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,MAAM;KAChB,EAAE,iCAAiC,EAAE,gBAAgB,CAAC,CAAC;IAC3C,kCAAqB,GAAY;QAC1C,EAAE,EAAE,yBAAY,CAAC,EAAE,GAAG,WAAW;QACjC,KAAK,EAAE,yBAAY,CAAC,KAAK;QACzB,aAAa,EAAE,yBAAY,CAAC,aAAa;KAC5C,CAAC;IACW,iBAAI,GAAG,cAAO,CAAC,kBAAkB,CAAC;QAC3C,EAAE,EAAE,UAAU;QACd,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,YAAY;KACtB,EAAE,mCAAmC,EAAE,gBAAgB,CAAC,CAAC;IAC7C,kBAAK,GAAG,cAAO,CAAC,kBAAkB,CAAC;QAC5C,EAAE,EAAE,WAAW;QACf,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,UAAU;KACpB,EAAE,kCAAkC,EAAE,gBAAgB,CAAC,CAAC;IAC5C,qBAAQ,GAAG,cAAO,CAAC,kBAAkB,CAAC;QAC/C,EAAE,EAAE,cAAc;QAClB,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,UAAU;KACpB,EAAE,qCAAqC,EAAE,gBAAgB,CAAC,CAAC;IAC/C,mBAAM,GAAG;QAClB,GAAG,cAAO,CAAC,kBAAkB,CAAC;YAC1B,EAAE,EAAE,gBAAgB;YACpB,KAAK,EAAE,QAAQ;YACf,SAAS,EAAE,qBAAO,EAAC,OAAO,CAAC;SAC9B,EAAE,mCAAmC,CAAC;QACvC,OAAO,EAAE,+BAA+B;KAC3C,CAAC;IACW,gCAAmB,GAAG,cAAO,CAAC,kBAAkB,CAAC;QAC1D,EAAE,EAAE,yBAAyB;QAC7B,KAAK,EAAE,mBAAmB;QAC1B,QAAQ,EAAE,YAAY;QACtB,SAAS,EAAE,qBAAO,EAAC,MAAM,CAAC;KAC7B,EAAE,wBAAwB,EAAE,gBAAgB,CAAC,CAAC;IAClC,yBAAY,GAAG;QACxB,EAAE,EAAE,kBAAkB;KACzB,CAAC;IACW,4BAAe,GAAG;QAC3B,EAAE,EAAE,oBAAoB;KAC3B,CAAC;IACW,sBAAS,GAAG,cAAO,CAAC,kBAAkB,CAAC;QAChD,EAAE,EAAE,eAAe;QACnB,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,WAAW;QAClB,SAAS,EAAE,qBAAO,EAAC,YAAY,CAAC;KACnC,EAAE,qCAAqC,EAAE,gBAAgB,CAAC,CAAC;IAC/C,8BAAiB,GAAG,cAAO,CAAC,kBAAkB,CAAC;QACxD,EAAE,EAAE,uBAAuB;QAC3B,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,WAAW;QAClB,SAAS,EAAE,qBAAO,EAAC,YAAY,CAAC;KACnC,EAAE,qCAAqC,EAAE,gBAAgB,CAAC,CAAC;IAC/C,yBAAY,GAAG,cAAO,CAAC,kBAAkB,CAAC;QACnD,EAAE,EAAE,kBAAkB;QACtB,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,cAAc;QACrB,SAAS,EAAE,qBAAO,EAAC,aAAa,CAAC;KACpC,EAAE,uCAAuC,EAAE,gBAAgB,CAAC,CAAC;IACjD,iBAAI,GAAG,cAAO,CAAC,kBAAkB,CAAC;QAC3C,EAAE,EAAE,UAAU;QACd,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,MAAM;KAChB,EAAE,iCAAiC,EAAE,gBAAgB,CAAC,CAAC;IAC3C,oBAAO,GAAG,cAAO,CAAC,kBAAkB,CAAC;QAC9C,EAAE,EAAE,aAAa;QACjB,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,gBAAgB;KAC1B,EAAE,oCAAoC,EAAE,gBAAgB,CAAC,CAAC;IAC9C,kBAAK,GAAG,cAAO,CAAC,kBAAkB,CAAC;QAC5C,EAAE,EAAE,WAAW;QACf,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,eAAe;QACtB,SAAS,EAAE,qBAAO,EAAC,KAAK,CAAC;KAC5B,EAAE,kCAAkC,EAAE,gBAAgB,CAAC,CAAC;IAC5C,sBAAS,GAAG,cAAO,CAAC,kBAAkB,CAAC;QAChD,EAAE,EAAE,eAAe;QACnB,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,mBAAmB;QAC1B,SAAS,EAAE,qBAAO,EAAC,KAAK,CAAC;KAC5B,EAAE,qCAAqC,EAAE,gBAAgB,CAAC,CAAC;IAC/C,oBAAO,GAAG,cAAO,CAAC,kBAAkB,CAAC;QAC9C,EAAE,EAAE,aAAa;QACjB,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,iBAAiB;QACxB,SAAS,EAAE,qBAAO,EAAC,MAAM,CAAC;KAC7B,EAAE,oCAAoC,EAAE,gBAAgB,CAAC,CAAC;IAC9C,wBAAW,GAAG,cAAO,CAAC,kBAAkB,CAAC;QAClD,EAAE,EAAE,iBAAiB;QACrB,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,aAAa;QACpB,SAAS,EAAE,qBAAO,EAAC,MAAM,CAAC;KAC7B,EAAE,uCAAuC,EAAE,gBAAgB,CAAC,CAAC;IACjD,oBAAO,GAAG,cAAO,CAAC,kBAAkB,CAAC;QAC9C,EAAE,EAAE,aAAa;QACjB,SAAS,EAAE,qBAAO,EAAC,SAAS,CAAC;QAC7B,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,iBAAiB;KAC3B,EAAE,kCAAkC,EAAE,gBAAgB,CAAC,CAAC;IAC5C,wBAAW,GAAG,cAAO,CAAC,kBAAkB,CAAC;QAClD,EAAE,EAAE,iBAAiB;QACrB,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,qBAAqB;QAC5B,SAAS,EAAE,qBAAO,EAAC,SAAS,CAAC;KAChC,EAAE,qCAAqC,EAAE,gBAAgB,CAAC,CAAC;IAC/C,kBAAK,GAAG,cAAO,CAAC,kBAAkB,CAAC;QAC5C,EAAE,EAAE,WAAW;QACf,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,UAAU;KACpB,EAAE,kCAAkC,EAAE,gBAAgB,CAAC,CAAC;IAC5C,wBAAW,GAAG,cAAO,CAAC,kBAAkB,CAAC;QAClD,EAAE,EAAE,iBAAiB;QACrB,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,gBAAgB;KAC1B,EAAE,uCAAuC,EAAE,gBAAgB,CAAC,CAAC;IACjD,+BAAkB,GAAG,cAAO,CAAC,kBAAkB,CAAC;QACzD,EAAE,EAAE,wBAAwB;QAC5B,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,oBAAoB;KAC9B,EAAE,6CAA6C,EAAE,gBAAgB,CAAC,CAAC;IACvD,sBAAS,GAAG,cAAO,CAAC,kBAAkB,CAAC;QAChD,EAAE,EAAE,eAAe;QACnB,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,cAAc;KACxB,EAAE,qCAAqC,EAAE,gBAAgB,CAAC,CAAC;IAC/C,6BAAgB,GAAG,cAAO,CAAC,kBAAkB,CAAC;QACvD,EAAE,EAAE,sBAAsB;QAC1B,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,kBAAkB;KAC5B,EAAE,2CAA2C,EAAE,gBAAgB,CAAC,CAAC;IACrD,uBAAU,GAAG,cAAO,CAAC,kBAAkB,CAAC;QACjD,EAAE,EAAE,gBAAgB;QACpB,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,eAAe;KACzB,EAAE,sCAAsC,EAAE,gBAAgB,CAAC,CAAC;IAChD,oBAAO,GAAG,cAAO,CAAC,kBAAkB,CAAC;QAC9C,EAAE,EAAE,aAAa;QACjB,KAAK,EAAE,SAAS;QAChB,QAAQ,EAAE,YAAY;QACtB,SAAS,EAAE,qBAAO,EAAC,SAAS,CAAC;KAChC,EAAE,oCAAoC,EAAE,gBAAgB,CAAC,CAAC;IAC9C,4BAAe,GAAG,cAAO,CAAC,kBAAkB,CAAC;QACtD,EAAE,EAAE,UAAU;QACd,KAAK,EAAE,uBAAuB;QAC9B,QAAQ,EAAE,YAAY;QACtB,SAAS,EAAE,qBAAO,EAAC,KAAK,CAAC;KAC5B,EAAE,iCAAiC,EAAE,gBAAgB,CAAC,CAAC;AAC5D,CAAC,EArLgB,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAqL5B;AACD,IAAiB,SAAS,CAyBzB;AAzBD,WAAiB,SAAS;IACtB,mBAAmB;IACN,mBAAS,GAAG,aAAa,CAAC;IAC1B,wBAAc,GAAG,YAAY,CAAC;IAE9B,wBAAc,GAAG;QAC1B,KAAK,EAAE,wBAAc;QACrB,KAAK,EAAE,SAAG,CAAC,QAAQ,CAAC,mCAAmC,EAAE,QAAQ,CAAC;QAClE,UAAU,EAAE,CAAC,UAAU,CAAC;KAC3B,CAAC;IACW,yBAAe,GAAG;QAC3B,KAAK,EAAE,wBAAc;QACrB,KAAK,EAAE,SAAG,CAAC,QAAQ,CAAC,oCAAoC,EAAE,SAAS,CAAC;QACpE,UAAU,EAAE,CAAC,WAAW,CAAC;KAC5B,CAAC;IACW,2BAAiB,GAAG;QAC7B,KAAK,EAAE,wBAAc;QACrB,KAAK,EAAE,SAAG,CAAC,QAAQ,CAAC,qCAAqC,EAAE,YAAY,CAAC;QACxE,UAAU,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC;KAC9C,CAAC;IACW,uBAAa,GAAG;QACzB,KAAK,EAAE,wBAAc;QACrB,KAAK,EAAE,SAAG,CAAC,QAAQ,CAAC,kCAAkC,EAAE,OAAO,CAAC;QAChE,UAAU,EAAE,CAAC,SAAS,CAAC;KAC1B,CAAC;AACN,CAAC,EAzBgB,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAyBzB;AAED,IAAa,eAAe,GAA5B,MAAa,eAAe;IAA5B;QAKc,cAAS,GAAG,IAAI,2BAAoB,EAAE,CAAC;IA6tBrD,CAAC;IA7sBG,OAAO;QACH,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;QAChE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;QAC3D,IAAI,CAAC,kBAAkB,CAAC,2BAA2B,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IACpF,CAAC;IAED,aAAa,CAAC,KAAwB;QAClC,KAAK,CAAC,kBAAkB,CAAC,2BAAiB,CAAC,UAAU,EAAE;YACnD,SAAS,EAAE,YAAY,CAAC,SAAS,CAAC,EAAE;SACvC,CAAC,CAAC;QACH,KAAK,CAAC,kBAAkB,CAAC,2BAAiB,CAAC,UAAU,EAAE;YACnD,SAAS,EAAE,YAAY,CAAC,YAAY,CAAC,EAAE;SAC1C,CAAC,CAAC;QAEH,MAAM,sBAAsB,GAAG,CAAC,KAAa,EAAE,MAAkB,EAAE,EAAE;YACjE,KAAK,CAAC,kBAAkB,CAAC,+BAAa,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAAC;YACrE,KAAK,CAAC,kBAAkB,CAAC,CAAC,GAAG,+BAAa,CAAC,qBAAqB,EAAE,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC;QACtF,CAAC,CAAC;QAEF,sBAAsB,CAAC,YAAY,EAAE;YACjC,SAAS,EAAE,YAAY,CAAC,iBAAiB,CAAC,EAAE;YAC5C,IAAI,EAAE,qHAAqH;SAC9H,CAAC,CAAC;QACH,sBAAsB,CAAC,gBAAgB,EAAE;YACrC,SAAS,EAAE,YAAY,CAAC,OAAO,CAAC,EAAE;YAClC,IAAI,EAAE,qHAAqH;SAC9H,CAAC,CAAC;QACH,sBAAsB,CAAC,gBAAgB,EAAE;YACrC,SAAS,EAAE,YAAY,CAAC,KAAK,CAAC,EAAE;YAChC,IAAI,EAAE,qHAAqH;SAC9H,CAAC,CAAC;QAEH,sBAAsB,CAAC,YAAY,EAAE;YACjC,SAAS,EAAE,YAAY,CAAC,iBAAiB,CAAC,EAAE;YAC5C,IAAI,EAAE,iDAAiD;SAC1D,CAAC,CAAC;QACH,sBAAsB,CAAC,gBAAgB,EAAE;YACrC,SAAS,EAAE,YAAY,CAAC,OAAO,CAAC,EAAE;YAClC,IAAI,EAAE,iDAAiD;SAC1D,CAAC,CAAC;QAEH,sBAAsB,CAAC,YAAY,EAAE;YACjC,SAAS,EAAE,YAAY,CAAC,iBAAiB,CAAC,EAAE;YAC5C,IAAI,EAAE,iDAAiD;SAC1D,CAAC,CAAC;QACH,sBAAsB,CAAC,gBAAgB,EAAE;YACrC,SAAS,EAAE,YAAY,CAAC,OAAO,CAAC,EAAE;YAClC,IAAI,EAAE,iDAAiD;SAC1D,CAAC,CAAC;QACH,sBAAsB,CAAC,gBAAgB,EAAE;YACrC,SAAS,EAAE,YAAY,CAAC,KAAK,CAAC,EAAE;YAChC,IAAI,EAAE,iDAAiD;SAC1D,CAAC,CAAC;QAEH,MAAM,4BAA4B,GAAG,CAAC,KAAa,EAAE,MAAkB,EAAE,EAAE;YACvE,KAAK,CAAC,kBAAkB,CAAC,+BAAa,CAAC,2BAA2B,EAAE,MAAM,CAAC,CAAC;YAC5E,KAAK,CAAC,kBAAkB,CAAC,CAAC,GAAG,+BAAa,CAAC,4BAA4B,EAAE,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC;QAC7F,CAAC,CAAC;QAEF,4BAA4B,CAAC,gBAAgB,EAAE;YAC3C,SAAS,EAAE,YAAY,CAAC,OAAO,CAAC,EAAE;YAClC,IAAI,EAAE,qHAAqH;SAC9H,CAAC,CAAC;QACH,4BAA4B,CAAC,gBAAgB,EAAE;YAC3C,SAAS,EAAE,YAAY,CAAC,KAAK,CAAC,EAAE;YAChC,IAAI,EAAE,qHAAqH;SAC9H,CAAC,CAAC;QAEH,4BAA4B,CAAC,gBAAgB,EAAE;YAC3C,SAAS,EAAE,YAAY,CAAC,OAAO,CAAC,EAAE;YAClC,IAAI,EAAE,iDAAiD;SAC1D,CAAC,CAAC;QAEH,4BAA4B,CAAC,gBAAgB,EAAE;YAC3C,SAAS,EAAE,YAAY,CAAC,OAAO,CAAC,EAAE;YAClC,IAAI,EAAE,iDAAiD;SAC1D,CAAC,CAAC;QACH,4BAA4B,CAAC,gBAAgB,EAAE;YAC3C,SAAS,EAAE,YAAY,CAAC,KAAK,CAAC,EAAE;YAChC,IAAI,EAAE,iDAAiD;SAC1D,CAAC,CAAC;QAEH,MAAM,2BAA2B,GAAG,CAAC,KAAa,EAAE,MAAkB,EAAE,EAAE;YACtE,KAAK,CAAC,kBAAkB,CAAC,+BAAa,CAAC,0BAA0B,EAAE,MAAM,CAAC,CAAC;YAC3E,KAAK,CAAC,kBAAkB,CAAC,CAAC,GAAG,+BAAa,CAAC,2BAA2B,EAAE,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC;QAC5F,CAAC,CAAC;QAEF,2BAA2B,CAAC,gBAAgB,EAAE;YAC1C,SAAS,EAAE,YAAY,CAAC,SAAS,CAAC,EAAE;YACpC,IAAI,EAAE,iDAAiD;SAC1D,CAAC,CAAC;QACH,2BAA2B,CAAC,gBAAgB,EAAE;YAC1C,SAAS,EAAE,YAAY,CAAC,WAAW,CAAC,EAAE;YACtC,IAAI,EAAE,iDAAiD;SAC1D,CAAC,CAAC;QACH,2BAA2B,CAAC,gBAAgB,EAAE;YAC1C,SAAS,EAAE,YAAY,CAAC,SAAS,CAAC,EAAE;YACpC,IAAI,EAAE,qHAAqH;SAC9H,CAAC,CAAC;QACH,2BAA2B,CAAC,gBAAgB,EAAE;YAC1C,SAAS,EAAE,YAAY,CAAC,WAAW,CAAC,EAAE;YACtC,IAAI,EAAE,qHAAqH;SAC9H,CAAC,CAAC;IACP,CAAC;IAED,gBAAgB,CAAC,QAAyB;QACtC,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,EAAE;YACzC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;YACrE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB;SAC/D,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,YAAY,EAAE;YAChD,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,kCAAS,CAAC,IAAI,CAAC,CAAC;YACrG,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB;SAC/D,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,qBAAqB,EAAE;YACzD,OAAO,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC;YACpE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB;SAC/D,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,EAAE;YACxC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;YACpE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB;SAC/D,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,YAAY,EAAE;YAChD,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,kCAAS,CAAC,IAAI,CAAC,CAAC;YACrG,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB;SAC/D,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,qBAAqB,EAAE;YACzD,OAAO,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC;YACpE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB;SAC/D,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,EAAE;YACxC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;YACpE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB;SAC/D,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,EAAE;YACzC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;YACrE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB;SAC/D,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,QAAQ,EAAE;YAC5C,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC;YACxE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB;SAC/D,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,eAAe,EAAE;YACnD,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;YACtE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB;SAC/D,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,YAAY,EAAE;YAChD,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAC1D,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB;SAC/D,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,EAAE;YAC7C,OAAO,EAAE,GAAG,EAAE;gBACV,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC;gBAC7D,IAAI,QAAQ,EAAE;oBACV,IAAI,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,KAAK,OAAO,EAAE;wBACzD,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;qBACvD;yBAAM;wBACH,MAAM,OAAO,GAAG,QAAQ,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC;6BACjE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,KAAK,sBAAa,CAAC,GAAG,CAAC;6BACrD,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;wBAC1C,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;qBAC3D;iBACJ;YAEL,CAAC;YACD,SAAS,EAAE,GAAG,EAAE;gBACZ,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC;gBAC7D,IAAI,CAAC,QAAQ,EAAE;oBAAE,OAAO,KAAK,CAAC;iBAAE;gBAChC,IAAI,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,KAAK,OAAO,EAAE;oBACzD,OAAO,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,MAAM,IAAI,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;iBACnF;qBAAM;oBACH,MAAM,cAAc,GAAG,CAAC,MAAqB,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,KAAK,sBAAa,CAAC,GAAG,CAAC;oBACtF,OAAO,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,MAAM,IAAI,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,CAAC;iBACjI;YACL,CAAC;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,WAAW,EAAE;YAC/C,OAAO,EAAE,GAAG,EAAE;gBACV,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC;gBAC7D,OAAO,QAAQ,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;YACtE,CAAC;YACD,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,mBAAmB;SACjE,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,WAAW,EAAE;YAC/C,OAAO,EAAE,GAAG,EAAE;gBACV,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC;gBAC7D,OAAO,QAAQ,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;YACtE,CAAC;YACD,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,mBAAmB;SACjE,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,EAAE;YAC7C,OAAO,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YACxC,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;YACtD,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;SACzD,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,YAAY,EAAE;YAChD,OAAO,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YAC3C,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC;YACzD,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC;SAC5D,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,EAAE;YACxC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAC/D,SAAS,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;YAC3C,SAAS,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;SAC9C,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,EAAE;YAC3C,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAClE,SAAS,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;YAC9C,SAAS,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;SACjD,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,EAAE;YACzC,SAAS,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM;YAC7C,OAAO,EAAE,CAAC,GAAY,EAAE,MAAe,EAAE,MAAe,EAAE,EAAE,CACxD,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC;SACvD,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,MAAM,EAAE;YAC1C,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACrD,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB;SAC/D,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,EAAE;YAC3C,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;SAC5E,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,mBAAmB,EAAE;YACvD,OAAO,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;YAC/D,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB;SAC/D,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,EAAE;YAC3C,OAAO,EAAE,CAAC,GAAG,GAAkB,EAAE,EAAE;gBAC/B,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAChF,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC;gBAC7D,OAAO,QAAQ,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;YAC5E,CAAC;YACD,SAAS,EAAE,CAAC,GAAG,GAAkB,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,mBAAmB;mBAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;SACpC,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,EAAE;YACzC,OAAO,EAAE,CAAC,GAAG,GAAkB,EAAE,EAAE;gBAC/B,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAChF,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC;gBAC7D,OAAO,QAAQ,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YAC1E,CAAC;YACD,SAAS,EAAE,CAAC,GAAG,GAAkB,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,mBAAmB;mBAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;SACpC,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,EAAE;YAC3C,OAAO,EAAE,CAAC,GAAG,GAAkB,EAAE,EAAE;gBAC/B,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAChF,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC;gBAC7D,OAAO,QAAQ,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;YAC5E,CAAC;YACD,SAAS,EAAE,CAAC,GAAG,GAAkB,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,mBAAmB;mBAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;SACpC,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,iBAAiB,EAAE;YACrD,OAAO,EAAE,CAAC,GAAG,GAAkB,EAAE,EAAE;gBAC/B,KAAK,MAAM,QAAQ,IAAI,GAAG,EAAE;oBACxB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;iBACnE;YACL,CAAC;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,EAAE;YACzC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE;YAC5C,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB;gBACxD,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,wBAAwB;gBACjD,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC;SACzE,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,WAAW,EAAE;YAC/C,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE;YACjD,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB;SAC/D,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,kBAAkB,EAAE;YACtD,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE;YACvD,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB;SAC/D,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,EAAE;YAC7C,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE;YAC/C,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB;SAC/D,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,gBAAgB,EAAE;YACpD,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE;YACrD,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB;SAC/D,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,UAAU,EAAE;YAC9C,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE;YAChD,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB;SAC/D,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,eAAe,EAAE;YACnD,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE;YACrD,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,IAAI,MAAM,YAAY,sBAAS,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,kBAAkB;YAC5I,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,IAAI,MAAM,YAAY,sBAAS,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,kBAAkB;SAC/I,CAAC,CAAC;IACP,CAAC;IACD,KAAK,CAAC,KAAK;QACP;YACI,MAAM,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC;YACpE,IAAI,CAAC,aAAa,EAAE;gBAChB,OAAO;aACV;YAED,IAAI;gBACA,MAAM,UAAU,GAAG,MAAM,aAAa,CAAC,QAAQ,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;gBAC7E,IAAI,UAAU,KAAK,SAAS,EAAE;oBAC1B,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG;wBACxB,IAAI,EAAE,6BAAiB,CAAC,KAAK;wBAC7B,OAAO,EAAE,SAAG,CAAC,QAAQ,CAAC,4BAA4B,EAAE,6BAA6B,CAAC;qBACrF,CAAC;oBACF,aAAa,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;oBAC5B,OAAO;iBACV;gBACD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,CAAC;gBACpE,MAAM,IAAI,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;aAC/C;YAAC,OAAO,CAAC,EAAE;gBACR,IAAI,CAAC,CAAC,CAAC,YAAY,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,KAAK,aAAa,EAAE;oBACtD,MAAM,CAAC,CAAC;iBACX;aACJ;SACJ;IACL,CAAC;IAES,YAAY,CAAI,IAAsB;QAC5C,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IAC9D,CAAC;IAED,oBAAoB,CAAC,QAA+B;QAChD,QAAQ,CAAC,YAAY,CAAC;YAClB,EAAE,EAAE,YAAY,CAAC,SAAS,CAAC,EAAE;YAC7B,OAAO,EAAE,YAAY,CAAC,SAAS,CAAC,EAAE;YAClC,OAAO,EAAE,YAAY,CAAC,SAAS,CAAC,KAAK;SACxC,CAAC,CAAC;QACH,QAAQ,CAAC,YAAY,CAAC;YAClB,EAAE,EAAE,YAAY,CAAC,YAAY,CAAC,EAAE;YAChC,OAAO,EAAE,YAAY,CAAC,YAAY,CAAC,EAAE;YACrC,OAAO,EAAE,YAAY,CAAC,YAAY,CAAC,KAAK;SAC3C,CAAC,CAAC;QACH,QAAQ,CAAC,YAAY,CAAC;YAClB,EAAE,EAAE,YAAY,CAAC,eAAe,CAAC,EAAE;YACnC,OAAO,EAAE,YAAY,CAAC,eAAe,CAAC,EAAE;YACxC,OAAO,EAAE,YAAY,CAAC,eAAe,CAAC,KAAK;SAC9C,CAAC,CAAC;QAEH,MAAM,YAAY,GAAG,CAAC,IAAgC,EAAE,EAAE;YACtD,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;YAC/B,MAAM,EAAE,GAAG,uBAAuB,GAAG,SAAS,CAAC;YAC/C,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;YACpD,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,OAAO,IAAI,OAAO,CAAC,SAAS,EAAE,EAAE;gBAC3E,OAAO,EAAE,CAAC,MAAM,EAAE,GAAG,IAAI,EAAE,EAAE,CAAC,MAAM,YAAY,sBAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC;gBAC7G,SAAS,EAAE,CAAC,MAAM,EAAE,GAAG,IAAI,EAAE,EAAE,CAAC,MAAM,YAAY,sBAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC;gBAC1G,SAAS,EAAE,CAAC,MAAM,EAAE,GAAG,IAAI,EAAE,EAAE,CAC3B,MAAM,YAAY,sBAAS;oBAC3B,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC;oBAC3C,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,kBAAkB;aACnD,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC,CAAC;QACF,YAAY,CAAC;YACT,EAAE,EAAE,YAAY,CAAC,MAAM,CAAC,EAAE;YAC1B,OAAO,EAAE,YAAY,CAAC,MAAM,CAAC,EAAE;YAC/B,OAAO,EAAE,YAAY,CAAC,MAAM,CAAC,KAAK;SACrC,CAAC,CAAC;QACH,YAAY,CAAC;YACT,EAAE,EAAE,YAAY,CAAC,OAAO,CAAC,EAAE;YAC3B,OAAO,EAAE,YAAY,CAAC,OAAO,CAAC,EAAE;YAChC,OAAO,EAAE,YAAY,CAAC,OAAO,CAAC,KAAK;SACtC,CAAC,CAAC;QACH,YAAY,CAAC;YACT,EAAE,EAAE,YAAY,CAAC,mBAAmB,CAAC,EAAE;YACvC,OAAO,EAAE,YAAY,CAAC,mBAAmB,CAAC,EAAE;YAC5C,OAAO,EAAE,YAAY,CAAC,mBAAmB,CAAC,KAAK;SAClD,CAAC,CAAC;QAEH,uBAAuB;QACvB,CAAC,YAAY,CAAC,qBAAqB,EAAE,YAAY,CAAC,qBAAqB,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAChG,YAAY,CAAC;YACT,EAAE,EAAE,OAAO,CAAC,EAAE,GAAG,MAAM;YACvB,OAAO,EAAE,OAAO,CAAC,EAAE;YACnB,OAAO,EAAE,OAAO,CAAC,KAAK;YACtB,KAAK,EAAE,SAAS,CAAC,SAAS;YAC1B,QAAQ,EAAE,GAAG,GAAG,KAAK;SACxB,CAAC,CACL,CAAC;QAEF,YAAY,CAAC;YACT,EAAE,EAAE,YAAY,CAAC,YAAY,CAAC,EAAE;YAChC,OAAO,EAAE,YAAY,CAAC,YAAY,CAAC,EAAE;YACrC,OAAO,EAAE,SAAG,CAAC,QAAQ,CAAC,8CAA8C,EAAE,gBAAgB,CAAC;YACvF,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,cAAc,CAAC;SACxD,CAAC,CAAC;QACH,YAAY,CAAC;YACT,EAAE,EAAE,YAAY,CAAC,eAAe,CAAC,EAAE;YACnC,OAAO,EAAE,YAAY,CAAC,eAAe,CAAC,EAAE;YACxC,OAAO,EAAE,SAAG,CAAC,QAAQ,CAAC,+CAA+C,EAAE,qBAAqB,CAAC;YAC7F,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,cAAc,CAAC;SACxD,CAAC,CAAC;QACH,CAAC,YAAY,CAAC,YAAY,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAC7D,YAAY,CAAC;YACT,EAAE,EAAE,OAAO,CAAC,EAAE;YACd,OAAO,EAAE,OAAO,CAAC,EAAE;YACnB,OAAO,EAAE,OAAO,CAAC,KAAK;YACtB,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,iBAAiB,CAAC;SAC3D,CAAC,CACL,CAAC;QACF,CAAC,YAAY,CAAC,YAAY,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAC7D,YAAY,CAAC;YACT,EAAE,EAAE,OAAO,CAAC,EAAE;YACd,OAAO,EAAE,OAAO,CAAC,EAAE;YACnB,OAAO,EAAE,OAAO,CAAC,KAAK;YACtB,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;SAC9D,CAAC,CACL,CAAC;QACF,YAAY,CAAC;YACT,EAAE,EAAE,YAAY,CAAC,KAAK,CAAC,EAAE;YACzB,OAAO,EAAE,YAAY,CAAC,KAAK,CAAC,EAAE;YAC9B,OAAO,EAAE,YAAY,CAAC,KAAK,CAAC,KAAK;YACjC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;SAC9D,CAAC,CAAC;QAEH;YACI,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,WAAW;YAC5C,YAAY,CAAC,kBAAkB,EAAE,YAAY,CAAC,SAAS;YACvD,YAAY,CAAC,gBAAgB,EAAE,YAAY,CAAC,UAAU;SACzD,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CACzB,YAAY,CAAC;YACT,EAAE,EAAE,OAAO,CAAC,EAAE;YACd,OAAO,EAAE,OAAO,CAAC,EAAE;YACnB,OAAO,EAAE,OAAO,CAAC,KAAK;YACtB,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,aAAa,CAAC;YACpD,QAAQ,EAAE,GAAG,GAAG,KAAK;SACxB,CAAC,CACL,CAAC;QACF,YAAY,CAAC;YACT,EAAE,EAAE,YAAY,CAAC,SAAS,CAAC,EAAE;YAC7B,OAAO,EAAE,YAAY,CAAC,SAAS,CAAC,EAAE;YAClC,OAAO,EAAE,YAAY,CAAC,SAAS,CAAC,KAAK;YACrC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,eAAe,CAAC;YACtD,QAAQ,EAAE,EAAE;SACf,CAAC,CAAC;QACH,YAAY,CAAC;YACT,EAAE,EAAE,YAAY,CAAC,WAAW,CAAC,EAAE;YAC/B,OAAO,EAAE,YAAY,CAAC,WAAW,CAAC,EAAE;YACpC,OAAO,EAAE,YAAY,CAAC,WAAW,CAAC,KAAK;YACvC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,eAAe,CAAC;YACtD,QAAQ,EAAE,EAAE;SACf,CAAC,CAAC;QACH,YAAY,CAAC;YACT,EAAE,EAAE,YAAY,CAAC,WAAW,CAAC,EAAE;YAC/B,OAAO,EAAE,YAAY,CAAC,WAAW,CAAC,EAAE;YACpC,OAAO,EAAE,YAAY,CAAC,WAAW,CAAC,KAAK;YACvC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,eAAe,CAAC;YACtD,QAAQ,EAAE,EAAE;SACf,CAAC,CAAC;QACH,YAAY,CAAC;YACT,EAAE,EAAE,YAAY,CAAC,KAAK,CAAC,EAAE;YACzB,OAAO,EAAE,YAAY,CAAC,KAAK,CAAC,EAAE;YAC9B,OAAO,EAAE,YAAY,CAAC,KAAK,CAAC,KAAK;YACjC,KAAK,EAAE,SAAS,CAAC,cAAc;SAClC,CAAC,CAAC;IACP,CAAC;IAES,eAAe,CAAC,OAAgE,EAAE,WAAmB,CAAC;QAC5G,OAAO,OAAO,CAAC,KAAK,GAAG,GAAG,GAAG,OAAO,CAAC,KAAK,GAAG,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IACpF,CAAC;IAES,YAAY,CAAC,OAAwB;QAC3C,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,sBAAa,CAAC,UAAU,CAAC,CAAC;IACpE,CAAC;IAES,SAAS,CAAC,OAAwB;QACxC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IACzC,CAAC;IAES,KAAK,CAAC,QAAQ,CAAC,MAAe;QACpC,MAAM,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;QAChD,OAAO,OAAO,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5E,CAAC;IAES,kBAAkB,CAAC,MAAe;QACxC,MAAM,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;QAC/D,IAAI,GAAG,YAAY,sBAAY,IAAI,kBAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;YACnE,MAAM,CAAC,EAAE,KAAK,CAAC,GAAG,kBAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAClD,MAAM,GAAG,GAAG,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YACrC,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;YACvC,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;SAClE;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,MAAe;QAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;QACnD,IAAI,OAAO,EAAE;YACT,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC;YAC7D,OAAO,QAAQ,IAAI,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3E;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAES,qBAAqB,CAAC,MAAe;QAC3C,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC;QAC7D,IAAI,CAAC,QAAQ,EAAE;YACX,OAAO,SAAS,CAAC;SACpB;QACD,MAAM,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;QAC/D,IAAI,GAAG,YAAY,sBAAY,IAAI,CAAC,kBAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;YACpE,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;YAC3B,MAAM,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YACxC,IAAI,MAAM,IAAI,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,KAAK,GAAG,CAAC,QAAQ,EAAE,EAAE;gBACvE,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;gBACvC,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;aACrE;SACJ;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAES,eAAe;QACrB,MAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC;QAChE,IAAI,CAAC,WAAW,EAAE;YACd,OAAO;SACV;QACD,MAAM,iBAAiB,GAAiB,EAAE,CAAC;QAE3C,MAAM,eAAe,GAAG,IAAI,CAAC,2BAA2B,EAAE,CAAC;QAC3D,IAAI,eAAe,EAAE;YACjB,iBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAC3C;QAED,MAAM,WAAW,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;QACnD,IAAI,WAAW,EAAE;YACb,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACvC;QACD,WAAW,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;IACtD,CAAC;IACS,2BAA2B;QACjC,MAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC;QAChE,IAAI,CAAC,WAAW,EAAE;YACd,OAAO,SAAS,CAAC;SACpB;QACD,MAAM,MAAM,GAAG,WAAW,CAAC,SAAS,EAAE,CAAC;QACvC,IAAI,CAAC,MAAM,EAAE;YACT,OAAO,SAAS,CAAC;SACpB;QACD,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QACnH,MAAM,OAAO,GAAG,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;cAC7D,CAAC,WAAW,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;cACjD,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACvD,OAAO;YACH,OAAO,EAAE,YAAY,CAAC,QAAQ,CAAC,EAAE;YACjC,KAAK,EAAE,6BAA6B,MAAM,GAAG,OAAO,EAAE;YACtD,OAAO,EAAE,GAAG,MAAM,GAAG,OAAO,EAAE;SACjC,CAAC;IACN,CAAC;IACS,uBAAuB;QAC7B,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,CAAC;QAC/D,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YAC3B,OAAO,SAAS,CAAC;SACpB;QACD,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,EAAE;YAC9B,OAAO;gBACH,KAAK,EAAE,sBAAsB;gBAC7B,OAAO,EAAE,SAAG,CAAC,QAAQ,CAAC,sCAAsC,EAAE,0BAA0B,CAAC;aAC5F,CAAC;SACL;QACD,MAAM,EAAE,cAAc,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC;QAC/C,IAAI,cAAc,EAAE;YAChB,OAAO;gBACH,KAAK,EAAE,iBAAiB,GAAG,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,MAAM,KAAK,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC/I,OAAO,EAAE,YAAY,CAAC,IAAI,CAAC,EAAE;gBAC7B,OAAO,EAAE,SAAG,CAAC,QAAQ,CAAC,oCAAoC,EAAE,qBAAqB,CAAC;aACrF,CAAC;SACL;QACD,OAAO;YACH,KAAK,EAAE,yBAAyB;YAChC,OAAO,EAAE,YAAY,CAAC,OAAO,CAAC,EAAE;YAChC,OAAO,EAAE,SAAG,CAAC,QAAQ,CAAC,sCAAsC,EAAE,iBAAiB,CAAC;SACnF,CAAC;IACN,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,UAAqD,EAAE;QAChE,MAAM,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC;QACpE,IAAI,CAAC,aAAa,EAAE;YAChB,OAAO;SACV;QACD,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;YACjB,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG;gBACxB,IAAI,EAAE,6BAAiB,CAAC,KAAK;gBAC7B,OAAO,EAAE,SAAG,CAAC,QAAQ,CAAC,2DAA2D,EAAE,iCAAiC,CAAC;aACxH,CAAC;YACF,aAAa,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YAC5B,OAAO;SACV;QACD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAE;YAC9C,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG;gBACxB,IAAI,EAAE,6BAAiB,CAAC,KAAK;gBAC7B,OAAO,EAAE,SAAG,CAAC,QAAQ,CAAC,gCAAgC,EAAE,4BAA4B,CAAC;aACxF,CAAC;YACF,aAAa,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YAC5B,OAAO;SACV;QACD,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,SAAS,CAAC;QACtC,IAAI;YACA,gFAAgF;YAChF,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YAC5B,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;YAC5E,MAAM,UAAU,GAAG,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC;YACrD,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;YAC/D,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;SAClC;QAAC,OAAO,KAAK,EAAE;YACZ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SAC3C;IACL,CAAC;IAED,KAAK,CAAC,UAAU;QACZ,MAAM,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC;QACpE,IAAI,CAAC,aAAa,EAAE;YAChB,OAAO;SACV;QACD,IAAI;YACA,MAAM,UAAU,GAAG,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC;YACrD,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,MAAM,OAAO,CAAC,GAAG,CAAC;gBACzC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;gBAClD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;aACtD,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;YAExC,MAAM,OAAO,GAAG,sBAAsB,QAAQ,KAAK,KAAK,GAAG,CAAC;YAC5D,MAAM,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC;YACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;gBACzB,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;aACjF;iBAAM;gBACH,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,KAAK,GAAG,OAAO,EAAE,CAAC;aACpD;YACD,aAAa,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;SAC/B;QAAC,OAAO,CAAC,EAAE;YACR,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG;gBACxB,IAAI,EAAE,6BAAiB,CAAC,OAAO;gBAC/B,OAAO,EAAE,SAAG,CAAC,QAAQ,CAAC,2BAA2B,EAAE,uEAAuE,CAAC;aAC9H,CAAC;SACL;IAEL,CAAC;IAED;;OAEG;IACH,cAAc,CAAC,MAAqB;QAChC,MAAM,CAAC,QAAQ,CAAC;YACZ,EAAE,EAAE,uCAAuC;YAC3C,WAAW,EAAE,4BAA4B;YACzC,QAAQ,EAAE;gBACN,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,SAAS;gBACjB,OAAO,EAAE,SAAS;aACrB;SACJ,EAAE;YACC,EAAE,EAAE,0CAA0C;YAC9C,WAAW,EAAE,+BAA+B;YAC5C,QAAQ,EAAE;gBACN,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,SAAS;gBACjB,OAAO,EAAE,SAAS;aACrB;SACJ,EAAE;YACC,EAAE,EAAE,yCAAyC;YAC7C,WAAW,EAAE,8BAA8B;YAC3C,QAAQ,EAAE;gBACN,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,SAAS;gBACjB,OAAO,EAAE,SAAS;aACrB;SACJ,EAAE;YACC,EAAE,EAAE,2CAA2C;YAC/C,WAAW,EAAE,gCAAgC;YAC7C,QAAQ,EAAE;gBACN,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,SAAS;gBACjB,OAAO,EAAE,SAAS;aACrB;SACJ,EAAE;YACC,EAAE,EAAE,6CAA6C;YACjD,WAAW,EAAE,qCAAqC;YAClD,QAAQ,EAAE;gBACN,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,SAAS;gBACjB,OAAO,EAAE,SAAS;aACrB;SACJ,EAAE;YACC,EAAE,EAAE,+BAA+B;YACnC,WAAW,EAAE,gEAAgE;YAC7E,QAAQ,EAAE;gBACN,IAAI,EAAE,WAAW;gBACjB,KAAK,EAAE,WAAW;gBAClB,MAAM,EAAE,WAAW;aACtB;SACJ,EAAE;YACC,EAAE,EAAE,+BAA+B;YACnC,WAAW,EAAE,gEAAgE;YAC7E,QAAQ,EAAE;gBACN,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,SAAS;aACpB;SACJ,EAAE;YACC,EAAE,EAAE,sCAAsC;YAC1C,WAAW,EAAE,uFAAuF;YACpG,QAAQ,EAAE;gBACN,IAAI,EAAE,WAAW;gBACjB,KAAK,EAAE,WAAW;gBAClB,MAAM,EAAE,WAAW;aACtB;SACJ,CAAC,CAAC;IACP,CAAC;CAEJ;AAhuBU,4BAAY,GAAG,cAAc,CAAC;AAC9B,+BAAe,GAAG,iBAAiB,CAAC;AAIpB;IAAtB,sBAAM,EAAC,uBAAa,CAAC;8BAAmC,uBAAa;sDAAC;AAC1C;IAA5B,sBAAM,EAAC,4CAAmB,CAAC;8BAAsC,4CAAmB;yDAAC;AACxD;IAA7B,sBAAM,EAAC,6CAAoB,CAAC;8BAAuC,6CAAoB;0DAAC;AACjE;IAAvB,sBAAM,EAAC,iCAAc,CAAC;8BAAiC,iCAAc;oDAAC;AAC7C;IAAzB,sBAAM,EAAC,0BAAgB,CAAC;8BAAsC,0BAAgB;yDAAC;AACjD;IAA9B,sBAAM,EAAC,+CAAqB,CAAC;8BAAwC,+CAAqB;2DAAC;AAC/E;IAAZ,sBAAM,EAAC,YAAG,CAAC;;4CAA6B;AAChB;IAAxB,sBAAM,EAAC,mCAAe,CAAC;8BAAqC,mCAAe;wDAAC;AACpD;IAAxB,sBAAM,EAAC,sBAAe,CAAC;8BAA8B,sBAAe;iDAAC;AAC7C;IAAxB,sBAAM,EAAC,kCAAe,CAAC;8BAAqC,kCAAe;wDAAC;AACrD;IAAvB,sBAAM,EAAC,gCAAc,CAAC;;uDAAmD;AAC9C;IAA3B,sBAAM,EAAC,wCAAkB,CAAC;;2DAA2D;AACvD;IAA9B,sBAAM,EAAC,+CAAqB,CAAC;8BAA2C,+CAAqB;8DAAC;AAnBtF,eAAe;IAD3B,0BAAU,GAAE;GACA,eAAe,CAkuB3B;AAluBY,0CAAe;;;;;;;;;;;;ACtQ5B,gFAAgF;AAChF,+CAA+C;AAC/C,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,oIAAiF;AACjF,uGAA+E;AAC/E,qHAA2E;AAE3E,wJAAgE;AAChE,oHAA6C;AAC7C,mIAAqE;AAIrE,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAAlC;QAQc,gBAAW,GAAG,IAAI,GAAG,EAAsB,CAAC;QAC5C,SAAI,GAAG,IAAI,GAAG,EAAU,CAAC;QAElB,kCAA6B,GAAG,IAAI,gBAAO,EAAS,CAAC;QAC7D,gBAAW,GAAiB,IAAI,CAAC,6BAA6B,CAAC,KAAK,CAAC;IAkFlF,CAAC;IA/Ea,IAAI;QACV,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,yBAAyB,CAAC,CAAC;QACtE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,CAAC;QAChE,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC,KAAuC,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QAC9G,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC,KAA8C,EAAE,EAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,CAAC;IACjI,CAAC;IAES,KAAK,CAAC,cAAc,CAAC,KAAuC;QAClE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACnC,CAAC;IAES,iBAAiB,CAAC,KAA4B;QACpD,IAAI,CAAC,KAAK,EAAE;YACR,OAAO;SACV;QACD,MAAM,cAAc,GAAG,IAAI,GAAG,EAAsB,CAAC;QACrD,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;QAEjE,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;QACrF,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC;IACtC,CAAC;IAES,qBAAqB,CAAC,OAAwB,EAAE,MAA+B;QACrF,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACrB,MAAM,KAAK,GAAG,sBAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;YACnE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE;gBACnB,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,KAAK,CAAC,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;gBACjE,OAAO,EAAE,sBAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC;gBAC9C,MAAM,EAAE,sBAAa,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC;aACrE,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kBAAkB,CAAC,GAAQ,EAAE,KAAwB;QACjD,IAAI,IAAI,CAAC,kBAAkB,EAAE;YACzB,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;YACxD,IAAI,UAAU,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;gBACnC,uCAAuC;gBACvC,OAAO;oBACH,GAAG,UAAU;oBACb,OAAO,EAAE,SAAS;iBACrB,CAAC;aACL;YACD,OAAO,UAAU,CAAC;SACrB;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAES,sBAAsB,CAAC,KAA8C;QAC3E,MAAM,EAAE,cAAc,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC;QAC3C,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAC9B,IAAI,cAAc,KAAK,yBAAyB,EAAE;YAC9C,iBAAiB,GAAG,IAAI,CAAC;YACzB,MAAM,kBAAkB,GAAG,CAAC,CAAC,QAAQ,CAAC;YACtC,IAAI,IAAI,CAAC,kBAAkB,KAAK,kBAAkB,EAAE;gBAChD,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;aAChD;SACJ;QACD,IAAI,cAAc,KAAK,wBAAwB,EAAE;YAC7C,iBAAiB,GAAG,IAAI,CAAC;YACzB,MAAM,aAAa,GAAG,CAAC,CAAC,QAAQ,CAAC;YACjC,IAAI,IAAI,CAAC,aAAa,KAAK,aAAa,EAAE;gBACtC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;aACtC;SACJ;QACD,IAAI,iBAAiB,EAAE;YACnB,IAAI,CAAC,uBAAuB,EAAE,CAAC;SAClC;IACL,CAAC;IAED;;OAEG;IACO,uBAAuB;QAC7B,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,aAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5F,CAAC;CAEJ;AA5F2B;IAAvB,sBAAM,EAAC,gCAAc,CAAC;;0DAAgD;AACzC;IAA7B,sBAAM,EAAC,6CAAoB,CAAC;8BAA0C,6CAAoB;mEAAC;AAY5F;IADC,6BAAa,GAAE;;;;iDAMf;AApBQ,qBAAqB;IADjC,0BAAU,GAAE;GACA,qBAAqB,CA8FjC;AA9FY,sDAAqB;;;;;;;;;;;;AC1BlC,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,oIAAkE;AAClE,wGAA6C;AAG7C,IAAa,eAAe,GAA5B,MAAa,eAAe;IAIxB,8DAA8D;IACvD,WAAW,CAAC,KAAU;QACzB,MAAM,OAAO,GAAG,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;QAC/D,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;SACtD;IACL,CAAC;CAEJ;AAV2B;IAAvB,sBAAM,EAAC,qBAAc,CAAC;8BAAoC,qBAAc;uDAAC;AAFjE,eAAe;IAD3B,0BAAU,GAAE;GACA,eAAe,CAY3B;AAZY,0CAAe;;;;;;;;;;;;ACpB5B,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAEhF,sHAA2C;AAE3C,oIAA2E;AAC3E,qHAAiG;AACjG,wHAGiC;AACjC,4KAA0F;AAC1F,uGAA4I;AAC5I,sIAAqD;AACrD,wKAAoE;AACpE,uLAA6E;AAC7E,qJAA8D;AAC9D,2JAAkE;AAClE,wJAA+D;AAC/D,mIAAuD;AACvD,+JAA+D;AAC/D,sIAAiD;AACjD,wJAAgE;AAChE,0KAA2E;AAC3E,sIAAoD;AACpD,yIAAsD;AACtD,sIAA2E;AAC3E,uMAA2F;AAC3F,6LAA4F;AAE5F,+JAAkE;AAClE,2JAAkE;AAElE,qBAAe,IAAI,2BAAe,CAAC,IAAI,CAAC,EAAE;IACtC,wCAAkB,EAAC,IAAI,CAAC,CAAC;IACzB,gDAAiB,EAAC,IAAI,CAAC,CAAC;IACxB,sDAAoB,EAAC,IAAI,CAAC,CAAC;IAC3B,qCAAa,EAAC,IAAI,CAAC,CAAC;IACpB,4BAAS,EAAC,IAAI,CAAC,CAAC;IAChB,IAAI,CAAC,6CAAoB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACvD,IAAI,CAAC,8BAAqB,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC,qCAA2B,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,EAAE,uBAAc,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACrJ,IAAI,CAAC,yBAAgB,CAAC,CAAC,EAAE,CAAC,qCAA4B,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAC3E,IAAI,CAAC,mBAAU,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAC7C,IAAI,CAAC,YAAG,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC,qCAA2B,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,EAAE,gBAAO,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAE5H,IAAI,CAAC,kCAAe,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAClD,IAAI,CAAC,4BAAmB,CAAC,CAAC,SAAS,CAAC,kCAAe,CAAC,CAAC;IACrD,IAAI,CAAC,yBAAgB,CAAC,CAAC,SAAS,CAAC,kCAAe,CAAC,CAAC;IAClD,IAAI,CAAC,yCAA+B,CAAC,CAAC,SAAS,CAAC,kCAAe,CAAC,CAAC;IACjE,IAAI,CAAC,2CAAyB,CAAC,CAAC,SAAS,CAAC,kCAAe,CAAC,CAAC;IAC3D,IAAI,CAAC,kDAAiB,CAAC,CAAC,SAAS,CAAC,kCAAe,CAAC,CAAC;IAEnD,IAAI,CAAC,2CAAmB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACtD,IAAI,CAAC,yBAAgB,CAAC,CAAC,SAAS,CAAC,2CAAmB,CAAC,CAAC;IAEtD,IAAI,CAAC,iCAAc,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,2BAA2B,CAAC,CAAC;IACpE,IAAI,CAAC,+CAAqB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACxD,IAAI,CAAC,+CAAqB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACxD,IAAI,CAAC,4CAAmB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAEtD,IAAI,CAAC,wDAAyB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAE5D,IAAI,CAAC,iCAAc,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACjD,IAAI,CAAC,mCAAe,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;AACtD,CAAC,CAAC,CAAC;AAEH,SAAgB,2BAA2B,CAAC,GAAuB;IAC/D,OAAO,CAAC,OAA8B,EAAE,EAAE;QACtC,MAAM,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QAC9C,SAAS,CAAC,IAAI,CAAC,wCAAqB,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAC/D,SAAS,CAAC,IAAI,CAAC,iCAAc,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;QAC3D,SAAS,CAAC,IAAI,CAAC,uCAAiB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;QAC9D,SAAS,CAAC,IAAI,CAAC,sCAAiB,CAAC,CAAC,SAAS,CAAC,uCAAiB,CAAC,CAAC;QAC/D,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,iCAAc,CAAC,CAAC;QAC/C,MAAM,cAAc,GAAG,SAAS,CAAC,GAAG,CAAC,uCAAiB,CAAC,CAAC;QACvD,QAA+B,CAAC,cAAc,GAAG,cAAc,CAAC;QACjE,OAAO,QAAQ,CAAC;IACpB,CAAC,CAAC;AACN,CAAC;AAZD,kEAYC;;;;;;;;;;;;AC3FD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAGhF,wHAA8I;AAC9I,oHAAiD;AAEjD,4BAA4B;AAEf,uBAAe,GAAqB;IAC7C,MAAM,EAAE,QAAQ;IAChB,YAAY,EAAE;QACV,yBAAyB,EAAE;YACvB,MAAM,EAAE,SAAS;YACjB,aAAa,EAAE,SAAG,CAAC,QAAQ,CAAC,+CAA+C,EAAE,wCAAwC,CAAC;YACtH,SAAS,EAAE,IAAI;SAClB;QACD,wBAAwB,EAAE;YACtB,MAAM,EAAE,SAAS;YACjB,aAAa,EAAE,SAAG,CAAC,QAAQ,CAAC,gCAAgC,EAAE,wCAAwC,CAAC;YACvG,SAAS,EAAE,IAAI;SAClB;QACD,gCAAgC,EAAE;YAC9B,MAAM,EAAE,SAAS;YACjB,aAAa,EAAE,SAAG,CAAC,QAAQ,CAAC,oCAAoC,EAAE,qCAAqC,CAAC;YACxG,SAAS,EAAE,IAAI;SAClB;QACD,iCAAiC,EAAE;YAC/B,MAAM,EAAE,QAAQ;YAChB,aAAa,EAAE,SAAG,CAAC,QAAQ,CAAC,+BAA+B,EAAE,iFAAiF,CAAC;YAC/I,SAAS,EAAE,IAAI;SAClB;QACD,mBAAmB,EAAE;YACjB,MAAM,EAAE,SAAS;YACjB,aAAa,EAAE,SAAG,CAAC,QAAQ,CAAC,yCAAyC,EAAE,0BAA0B,CAAC;YAClG,SAAS,EAAE,KAAK;SACnB;QACD,sBAAsB,EAAE;YACpB,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE;gBACF,SAAG,CAAC,QAAQ,CAAC,yCAAyC,EAAE,OAAO,CAAC;gBAChE,SAAG,CAAC,QAAQ,CAAC,4CAA4C,EAAE,UAAU,CAAC;gBACtE,SAAG,CAAC,QAAQ,CAAC,0CAA0C,EAAE,QAAQ,CAAC;aACrE;YACD,gBAAgB,EAAE;gBACd,SAAG,CAAC,QAAQ,CAAC,qDAAqD,EAAE,yEAAyE,CAAC;gBAC9I,SAAG,CAAC,QAAQ,CAAC,wDAAwD,EAAE,8GAA8G,CAAC;gBACtL,SAAG,CAAC,QAAQ,CAAC,sDAAsD,EAAE,iEAAiE,CAAC;aAC1I;YACD,WAAW,EAAE,SAAG,CAAC,QAAQ,CAAC,mCAAmC,EAAE,wCAAwC,CAAC;YACxG,OAAO,EAAE,OAAO;YAChB,KAAK,EAAE,UAAU;SACpB;KACJ;CACJ,CAAC;AAWW,iCAAyB,GAAG,MAAM,CAAC,2BAA2B,CAAC,CAAC;AAChE,sBAAc,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAGvD,SAAgB,oBAAoB,CAAC,WAA8B,EAAE,SAA2B,uBAAe;IAC3G,OAAO,mCAAqB,EAAC,WAAW,EAAE,MAAM,CAAC,CAAC;AACtD,CAAC;AAFD,oDAEC;AAED,SAAgB,kBAAkB,CAAC,IAAqB;IACpD,IAAI,CAAC,sBAAc,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;QACtC,MAAM,WAAW,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAoB,2BAAiB,CAAC,CAAC;QAC5E,MAAM,YAAY,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAyB,iCAAyB,CAAC,CAAC;QAC1F,OAAO,oBAAoB,CAAC,WAAW,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACtB,IAAI,CAAC,iCAAyB,CAAC,CAAC,eAAe,CAAC,EAAE,MAAM,EAAE,uBAAe,EAAE,CAAC,CAAC;IAC7E,IAAI,CAAC,gCAAsB,CAAC,CAAC,SAAS,CAAC,iCAAyB,CAAC,CAAC;AACtE,CAAC;AARD,gDAQC;;;;;;;;;;;;AC9FD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,oIAA4E;AAC5E,uGAAyF;AACzF,2JAAkE;AAClE,wJAAwE;AACxE,0KAAkF;AAClF,yIAAsD;AACtD,2JAA0E;AAC1E,oHAA6C;AAC7C,oHAAiD;AACjD,wHAAqG;AACrG,6JAAyE;AAGzE,IAAY,SAGX;AAHD,WAAY,SAAS;IACjB,yCAAI;IACJ,yCAAI;AACR,CAAC,EAHW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAGpB;AAED;;;;GAIG;AAEH,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAAhC;QAgFY,4BAAuB,GAAG,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QA4czD,qBAAgB,GAAG,CAAU,EAAmC,EAAE,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;IAIxH,CAAC;IAnhBG,KAAK,CAAC,KAAK,CAAC,GAAY,EAAE,MAAe,EAAE,MAAe;QACtD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;;YAChC,IAAI,CAAC,MAAM,EAAE;gBACT,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;gBAChD,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;aACzC;YAED,IAAI,GAAG,EAAE;gBACL,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,CAC7B,GAAG,EACH;oBACI,QAAQ,EAAE,MAAM,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,GAAG,CAAC;oBACzD,MAAM,EAAE,MAAM;iBACjB,CAAC,CAAC;gBACP,OAAO,IAAI,CAAC,QAAQ,CAAC;aACxB;YAED,UAAI,CAAC,iBAAiB,0CAAE,aAAa,CACjC;gBACI,IAAI,gBAAgB,CAChB,SAAG,CAAC,QAAQ,CAAC,gCAAgC,EAAE,+FAA+F,CAAC,CAClJ;aACJ,EACD;gBACI,WAAW,EAAE,SAAG,CAAC,QAAQ,CAAC,uCAAuC,EAAE,4BAA4B,CAAC;gBAChG,gBAAgB,EAAE,CAAC,SAAmC,EAAE,MAAc,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC;aACnH,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8DAA8D;IACtD,KAAK,CAAC,SAAc,EAAE,MAAc,EAAE,MAAW;QACrD,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;QACtB,MAAM,EAAE,GAAG,EAAE,uBAAuB,EAAE,eAAe,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC;QAEjF,IAAI;YACA,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC7C,SAAS,CAAC,KAAK,GAAG;oBACd,IAAI,gBAAgB,CAChB,SAAG,CAAC,QAAQ,CAAC,gCAAgC,EAAE,+FAA+F,CAAC,CAClJ;iBACJ,CAAC;aACL;iBAAM;gBACH,SAAS,CAAC,KAAK,GAAG;oBACd,IAAI,gBAAgB,CAChB,SAAG,CAAC,QAAQ,CACR,2BAA2B,EAC3B,oFAAoF,EACpF,MAAM,CACT,EACD,gBAAgB,CAAC,KAAK,IAAI,EAAE;wBACxB,IAAI;4BACA,MAAM,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;yBACxF;wBAAC,OAAO,KAAK,EAAE;4BACZ,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;yBACtC;oBACL,CAAC,CAAC,CAAC;iBACV,CAAC;aACL;SACJ;QAAC,OAAO,GAAG,EAAE;YACV,SAAS,CAAC,KAAK,GAAG,CAAC,IAAI,gBAAgB,CAAC,WAAW,GAAG,SAAG,CAAC,iBAAiB,CAAC,YAAY,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACzG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACtB;gBAAS;YACN,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC;SAC1B;IACL,CAAC;IAGO,KAAK,CAAC,yBAAyB,CAAC,UAAkB,EAAE,MAAc;QACtE,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,aAAG,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;YACvD,mEAAmE;YACnE,OAAO,UAAU,CAAC;SACrB;QACD,MAAM,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtC,IAAI,WAAW,GAAG,UAAU,GAAG,GAAG,GAAG,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,WAAW,CAAC,GAAG,EAAE,CAAC,CAAC;QAC9E,IAAI,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YAC9B,WAAW,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE,WAAW,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;SAC9E;QACD,OAAO,WAAW,CAAC;IACvB,CAAC;IAED,KAAK,CAAC,KAAK;QACP,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,IAAI,CAAC,UAAU,EAAE;YACb,OAAO;SACV;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;;YAChC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;YACxC,MAAM,OAAO,GAAG,KAAK,EAAE,IAA8B,EAAE,EAAE;gBACrD,IAAI;oBACA,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,GAAI,CAAC,IAAI,EAAE,CAAC,CAAC;iBAChE;gBAAC,OAAO,KAAK,EAAE;oBACZ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;iBAC3C;YACL,CAAC,CAAC;YACF,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,gBAAgB,CAAS,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YAC9G,UAAI,CAAC,iBAAiB,0CAAE,aAAa,CAAC,KAAK,EAAE,EAAE,WAAW,EAAE,SAAG,CAAC,QAAQ,CAAC,2BAA2B,EAAE,8BAA8B,CAAC,EAAE,CAAC,CAAC;QAC7I,CAAC,CAAC,CAAC;IACP,CAAC;IAED,KAAK,CAAC,uBAAuB,CAAC,MAAiB;;QAC3C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;QACvC,MAAM,aAAa,GAAG,YAAM,CAAC,CAAC,CAAC,0CAAE,IAAI,CAAC;QACtC,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,IAAI,CAAC,UAAU,EAAE;YACb,OAAO;SACV;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;YAChC,IAAI;gBACA,IAAI,MAAM,KAAK,SAAS,CAAC,IAAI,EAAE;oBAC3B,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC,CAAC;oBAC3D,OAAO,CAAC,GAAG,CAAC,yCAAyC,aAAa,GAAG,CAAC,CAAC;iBAC1E;qBAAM,IAAI,MAAM,KAAK,SAAS,CAAC,IAAI,EAAE;oBAClC,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;oBAC9E,OAAO,CAAC,GAAG,CAAC,uCAAuC,aAAa,GAAG,CAAC,CAAC;iBACxE;aACJ;YAAC,OAAO,KAAK,EAAE;gBACZ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aAC3C;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,KAAK,CAAC,IAAI;QACN,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,IAAI,CAAC,UAAU,EAAE;YACb,OAAO;SACV;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;;YAChC,MAAM,CAAC,OAAO,EAAE,aAAa,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;YACjG,MAAM,OAAO,GAAG,KAAK,EAAE,IAA8B,EAAE,EAAE;gBACrD,IAAI;oBACA,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;iBAC9E;gBAAC,OAAO,KAAK,EAAE;oBACZ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;iBAC3C;YACL,CAAC,CAAC;YACF,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,gBAAgB,CAAS,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAC7G,MAAM,UAAU,GAAG,aAAa,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;YACnE,UAAI,CAAC,iBAAiB,0CAAE,aAAa,CAAC,KAAK,EAAE;gBACzC,WAAW,EAAE,SAAG,CAAC,QAAQ,CAAC,sCAAsC,EAAE,+CAA+C,EAAE,UAAU,CAAC;aACjI,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,KAAK,CAAC,IAAI;QACN,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,IAAI,CAAC,UAAU,EAAE;YACb,OAAO;SACV;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;;YAChC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;YACxC,MAAM,aAAa,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,6DAA6D;YACpG,MAAM,aAAa,GAAG,KAAK,EAAE,UAAoC,EAAE,EAAE;;gBACjE,mCAAmC;gBACnC,IAAI,UAAU,CAAC,GAAI,CAAC,IAAI,KAAK,aAAa,EAAE;oBACxC,IAAI;wBACA,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC;qBACjE;oBAAC,OAAO,KAAK,EAAE;wBACZ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;qBAC3C;iBACJ;qBAAM;oBACH,iDAAiD;oBACjD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;oBAC1C,MAAM,aAAa,GAAG,KAAK,EAAE,UAAoC,EAAE,EAAE;wBACjE,IAAI;4BACA,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,UAAU,CAAC,GAAI,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC,GAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;yBAChH;wBAAC,OAAO,KAAK,EAAE;4BACZ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;yBAC3C;oBACL,CAAC,CAAC;oBACF,MAAM,WAAW,GAAG,QAAQ;yBACvB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,KAAK,mBAAU,CAAC,MAAM,CAAC;yBACnD,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC;yBACxE,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,gBAAgB,CAAC,MAAM,CAAC,IAAI,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC,CAAC;oBAE7E,UAAI,CAAC,iBAAiB,0CAAE,aAAa,CAAC,WAAW,EAAE;wBAC/C,WAAW,EAAE,SAAG,CAAC,QAAQ,CAAC,2CAA2C,EAAE,4BAA4B,CAAC;qBACvG,CAAC,CAAC;iBACN;YACL,CAAC,CAAC;YACF,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,gBAAgB,CAAC,MAAM,CAAC,IAAI,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YAClH,UAAI,CAAC,iBAAiB,0CAAE,aAAa,CAAC,WAAW,EAAE;gBAC/C,WAAW,EAAE,SAAG,CAAC,QAAQ,CAAC,gDAAgD,EAAE,uCAAuC,CAAC;aACvH,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,KAAK,CAAC,KAAK;QACP,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,IAAI,CAAC,UAAU,EAAE;YACb,OAAO;SACV;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;;YAChC,MAAM,CAAC,QAAQ,EAAE,aAAa,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;YACnG,MAAM,OAAO,GAAG,KAAK,EAAE,IAA8B,EAAE,EAAE;gBACrD,IAAI;oBACA,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;iBAC5D;gBAAC,OAAO,KAAK,EAAE;oBACZ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;iBAC3C;YACL,CAAC,CAAC;YACF,MAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,gBAAgB,CAAS,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;YACjG,MAAM,UAAU,GAAG,aAAa,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;YACnE,UAAI,CAAC,iBAAiB,0CAAE,aAAa,CACjC,KAAK,EACL;gBACI,WAAW,EAAE,SAAG,CAAC,QAAQ,CAAC,qCAAqC,EAAE,8DAA8D,EAAE,UAAU,CAAC;aAC/I,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAED,KAAK,CAAC,QAAQ;QACV,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,IAAI,CAAC,UAAU,EAAE;YACb,OAAO;SACV;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;;YAChC,MAAM,CAAC,QAAQ,EAAE,aAAa,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;YACnG,IAAI,aAAa,EAAE;gBACf,qCAAqC;gBACrC,MAAM,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,aAAa,CAAC,IAAI,CAAC,CAAC;gBACzF,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAC7B;YACD,MAAM,YAAY,GAAG,KAAK,EAAE,IAA8B,EAAE,EAAE;gBAC1D,IAAI;oBACA,MAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,GAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;iBAChF;gBAAC,OAAO,KAAK,EAAE;oBACZ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;iBAC3C;YACL,CAAC,CAAC;YAEF,MAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,gBAAgB,CACrD,MAAM,CAAC,IAAI,KAAK,mBAAU,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,iBAAiB,EAAE,YAAY,EACxF,MAAM,EACN,MAAM,CAAC,IAAI,KAAK,mBAAU,CAAC,MAAM;gBAC7B,CAAC,CAAC,SAAG,CAAC,QAAQ,CAAC,2CAA2C,EAAE,sBAAsB,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACxJ,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAEhF,MAAM,gBAAgB,GAAG,KAAK,IAAO,EAAE;;gBACnC,MAAM,EAAE,GAAG,EAAE,eAAe,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC;gBACxD,MAAM,QAAQ,GAAG,CAAC,OAAgB,EAAE,EAAE;oBAClC,MAAM,YAAY,GAA0B,EAAE,CAAC;oBAC/C,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;wBAC/C,YAAY,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAClC,SAAG,CAAC,QAAQ,CAAC,qCAAqC,EAAE,gCAAgC,CAAC,EACrF,GAAG,EAAE,GAAG,CAAC,CAAC,CACb,CAAC;qBACL;yBAAM;wBACH,YAAY,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAClC,SAAG,CAAC,QAAQ,CACR,6CAA6C,EAC7C,2FAA2F,EAC3F,OAAO,CACV,EACD,gBAAgB,CAAC,KAAK,IAAI,EAAE;4BACxB,IAAI;gCACA,MAAM,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC;gCACpD,MAAM,GAAG,CAAC,QAAQ,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;6BACvD;4BAAC,OAAO,KAAK,EAAE;gCACZ,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;6BACtC;wBACL,CAAC,CAAC,CACL,CAAC,CAAC;qBACN;oBACD,OAAO,YAAY,CAAC;gBACxB,CAAC,CAAC;gBACF,UAAI,CAAC,iBAAiB,0CAAE,aAAa,CAAC,QAAQ,EAAE,EAAE;oBAC9C,WAAW,EAAE,SAAG,CAAC,QAAQ,CAAC,sCAAsC,EAAE,aAAa,CAAC;oBAChF,gBAAgB,EAAE,CAAC,SAAmC,EAAE,MAAc,EAAE,EAAE;wBACtE,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;oBACvC,CAAC;iBACJ,CAAC,CAAC;YACP,CAAC,CAAC;YAEF,KAAK,CAAC,OAAO,CAAC,IAAI,gBAAgB,CAAC,SAAG,CAAC,QAAQ,CAAC,wCAAwC,EAAE,sBAAsB,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC;YACtI,UAAI,CAAC,iBAAiB,0CAAE,aAAa,CAAC,KAAK,EAAE,EAAE,WAAW,EAAE,SAAG,CAAC,QAAQ,CAAC,6BAA6B,EAAE,wDAAwD,CAAC,EAAE,CAAC,CAAC;QACzK,CAAC,CAAC,CAAC;IACP,CAAC;IAED,KAAK,CAAC,qBAAqB,CAAC,QAAiE,EAAE,aAAqC,IAAI,CAAC,aAAa,EAAE;QACpJ,IAAI,CAAC,UAAU,EAAE;YACb,OAAO;SACV;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;;YAChC,MAAM,CAAC,QAAQ,EAAE,IAAI,EAAE,aAAa,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACvJ,MAAM,OAAO,GAAG,KAAK,EAAE,IAAoC,EAAE,EAAE;gBAC3D,QAAQ,CAAC,IAAI,CAAC,GAAI,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACtE,CAAC,CAAC;YACF,MAAM,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,gBAAgB,CAAS,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;YACvG,MAAM,UAAU,GAAG,aAAa,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;YACnE,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,gBAAgB,CAAM,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;YAEpF,UAAI,CAAC,iBAAiB,0CAAE,aAAa,CAAC,CAAC,GAAG,WAAW,EAAE,GAAG,QAAQ,CAAC,EAC/D,EAAE,WAAW,EAAE,SAAG,CAAC,QAAQ,CAAC,kCAAkC,EAAE,uEAAuE,EAAE,UAAU,CAAC,EAAE,CAAC,CAAC;QAChK,CAAC,CAAC,CAAC;IACP,CAAC;IAED,KAAK,CAAC,qBAAqB;QACvB,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,IAAI,CAAC,UAAU,EAAE;YACb,MAAM,IAAI,KAAK,CAAC,SAAG,CAAC,QAAQ,CAAC,kCAAkC,EAAE,gCAAgC,CAAC,CAAC,CAAC;SACvG;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;YAChC,MAAM,WAAW,GAAG,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YACvG,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC1B,MAAM,IAAI,KAAK,CAAC,SAAG,CAAC,QAAQ,CAAC,oCAAoC,EAAE,wCAAwC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;aACtI;YACD,MAAM,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;YACrD,MAAM,MAAM,GAAG,MAAM,IAAI,OAAO,CAAS,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;;gBAC/D,MAAM,QAAQ,GAAG,CAAC,OAAgB,EAAE,EAAE;oBAClC,MAAM,KAAK,GAAG,EAAE,CAAC;oBACjB,IAAI,CAAC,OAAO,EAAE;wBACV,MAAM,KAAK,GAAG,SAAG,CAAC,QAAQ,CAAC,4BAA4B,EAAE,wEAAwE,CAAC,CAAC;wBACnI,KAAK,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;qBAC9E;yBAAM;wBACH,KAAK,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAC3B,SAAG,CAAC,QAAQ,CAAC,wBAAwB,EAAE,kFAAkF,CAAC,EAC1H,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAC1B,CAAC;qBACL;oBACD,OAAO,KAAK,CAAC;gBACjB,CAAC,CAAC;gBACF,MAAM,WAAW,GAAG,CAAC,SAAmC,EAAE,MAAc,EAAE,EAAE;oBACxE,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACvC,CAAC,CAAC;gBACF,UAAI,CAAC,iBAAiB,0CAAE,aAAa,CAAC,QAAQ,EAAE,EAAE,EAAE,WAAW,EAAE,OAAO,EAAE,gBAAgB,EAAE,WAAW,EAAE,CAAC,CAAC;YAC/G,CAAC,CAAC,CAAC;YACH,OAAO,MAAM,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,KAAK,CAAC,KAAK;QACP,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,IAAI,CAAC,UAAU,EAAE;YACb,OAAO;SACV;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;;YAChC,MAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,OAAe,EAAE,EAAE;gBAC5D,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC;YACH,MAAM,QAAQ,GAAG,CAAC,OAAgB,EAAE,EAAE;gBAClC,MAAM,KAAK,GAAG,EAAE,CAAC;gBACjB,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC/C,KAAK,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAAC,SAAG,CAAC,QAAQ,CAAC,wBAAwB,EAAE,gEAAgE,CAAC,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;iBACjK;qBAAM;oBACH,KAAK,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAC3B,SAAG,CAAC,QAAQ,CAAC,mCAAmC,EAAE,kFAAkF,EAAE,OAAO,CAAC,EAC9I,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAC1B,CAAC;iBACL;gBACD,OAAO,KAAK,CAAC;YACjB,CAAC,CAAC;YACF,MAAM,WAAW,GAAG,CAAC,SAAmC,EAAE,MAAc,EAAE,EAAE;gBACxE,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;YACvC,CAAC,CAAC;YACF,UAAI,CAAC,iBAAiB,0CAAE,aAAa,CAAC,QAAQ,EAAE,EAAE;gBAC9C,WAAW,EAAE,SAAG,CAAC,QAAQ,CAAC,wCAAwC,EAAE,eAAe,CAAC,EAAE,gBAAgB,EAAE,WAAW;aACtH,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAES,KAAK,CAAC,aAAa,CAAC,MAAgC,EAAE,IAAY,EAAE,UAAkC;QAC5G,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,IAAI,CAAC,UAAU,EAAE;YACb,OAAO;SACV;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;;YAChC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;YAClE,IAAI,IAAI,EAAE;gBACN,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,gBAAgB,CAAa,KAAK,CAAC,OAAO,EAC1E,IAAI,CAAC,gBAAgB,CAAC,KAAK,IAAI,EAAE;oBAC7B,IAAI;wBACA,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;wBAC3D,IAAI,UAAU,EAAE;4BACZ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,UAAU,EAAE,CAAC,CAAC;yBAChD;qBACJ;oBAAC,OAAO,KAAK,EAAE;wBACZ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;qBAC3C;gBACL,CAAC,CAAC,CAAC,CAAC,CAAC;gBACT,UAAI,CAAC,iBAAiB,0CAAE,aAAa,CAAC,KAAK,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;aACvE;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,KAAK,CAAC,UAAU;QACZ,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,SAAG,CAAC,QAAQ,CAAC,8CAA8C,EAAE,uBAAuB,CAAC,CAAC,CAAC;IACvH,CAAC;IAED,KAAK,CAAC,QAAQ;QACV,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,SAAG,CAAC,QAAQ,CAAC,4CAA4C,EAAE,qBAAqB,CAAC,CAAC,CAAC;IACjH,CAAC;IAED,KAAK,CAAC,SAAS;QACX,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,IAAI,CAAC,UAAU,EAAE;YACb,OAAO;SACV;QACD,IAAI,CAAC,aAAa,CACd,MAAM,EACN,SAAG,CAAC,QAAQ,CAAC,6CAA6C,EAAE,sBAAsB,CAAC,EACnF,KAAK,IAAI,EAAE,CAAC,SAAG,CAAC,QAAQ,CAAC,4BAA4B,EAAE,6BAA6B,CAAC,CACxF,CAAC;IACN,CAAC;IAED,KAAK,CAAC,gBAAgB;QAClB,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,IAAI,CAAC,UAAU,EAAE;YACb,OAAO;SACV;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;YAChC,IAAI;gBACA,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE;oBAC7B,MAAM,EAAE,OAAO;iBAClB,CAAC,CAAC;aACN;YAAC,OAAO,KAAK,EAAE;gBACZ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aAC3C;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,KAAK,CAAC,cAAc;QAChB,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,IAAI,CAAC,UAAU,EAAE;YACb,OAAO;SACV;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;YAChC,IAAI;gBACA,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE;oBAC7B,MAAM,EAAE,KAAK;iBAChB,CAAC,CAAC;aACN;YAAC,OAAO,KAAK,EAAE;gBACZ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aAC3C;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,KAAK,CAAC,cAAc;;QAChB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;QAClD,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/B,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAwB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,CAAC,CAAC;YACnG,UAAI,CAAC,iBAAiB,0CAAE,aAAa,CAAC,KAAK,EAAE,EAAE,WAAW,EAAE,SAAG,CAAC,QAAQ,CAAC,+BAA+B,EAAE,iDAAiD,CAAC,EAAE,CAAC,CAAC;SACnK;aAAM;YACH,MAAM,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YACpC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;SAC7C;IACL,CAAC;IAEO,KAAK,CAAC,gBAAgB,CAAC,GAAW;QACtC,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9E,CAAC;IAEO,6BAA6B,CAAC,IAAc;QAChD,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,MAAM,OAAO,GAAG,KAAK,EAAE,IAA2B,EAAE,EAAE;YAClD,MAAM,MAAM,GAAG,IAAI,CAAC,GAAI,CAAC,QAAQ,EAAE,CAAC;YACpC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAClC,CAAC,CAAC;QACF,OAAO,IAAI,gBAAgB,CAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IAC5I,CAAC;IAEO,aAAa;QACjB,OAAO,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC;IACtD,CAAC;IAEO,KAAK,CAAC,UAAU;QACpB,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,IAAI,CAAC,UAAU,EAAE;YACb,OAAO,EAAE,CAAC;SACb;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;YAChC,IAAI;gBACA,OAAO,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;aAC/D;YAAC,OAAO,KAAK,EAAE;gBACZ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC;aACb;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,KAAK,CAAC,OAAO,CAAC,aAAqC,IAAI,CAAC,aAAa,EAAE;QAC3E,IAAI,CAAC,UAAU,EAAE;YACb,OAAO,EAAE,CAAC;SACb;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;YAChC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,KAAK,EAAE,qBAAqB,CAAC,CAAC,CAAC;YAC/E,OAAO,MAAM,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACpG,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,KAAK,CAAC,WAAW,CAAC,aAAqC,IAAI,CAAC,aAAa,EAAE;QAC/E,IAAI,CAAC,UAAU,EAAE;YACb,OAAO,EAAE,CAAC;SACb;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;YAChC,IAAI;gBACA,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;oBACtC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;oBAC9C,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;iBAClD,CAAC,CAAC;gBACH,OAAO,CAAC,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC,CAAC;aAChC;YAAC,OAAO,KAAK,EAAE;gBACZ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC;aACb;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,KAAK,CAAC,gBAAgB,CAAC,aAAqC,IAAI,CAAC,aAAa,EAAE;QACpF,IAAI,CAAC,UAAU,EAAE;YACb,OAAO,SAAS,CAAC;SACpB;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;YAChC,IAAI;gBACA,OAAO,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;aACjE;YAAC,OAAO,KAAK,EAAE;gBACZ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACxC,OAAO,SAAS,CAAC;aACpB;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAES,YAAY,CAAU,EAAkC;QAC9D,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IAC5D,CAAC;IAGS,kBAAkB,CAAU,EAAmC;QACrE,OAAO,CAAC,GAAG,IAAU,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IACnE,CAAC;CACJ;AA9hB4B;IAAxB,sBAAM,EAAC,mCAAe,CAAC;8BAAqC,mCAAe;4DAAC;AACpD;IAAxB,sBAAM,EAAC,kCAAe,CAAC;8BAAqC,kCAAe;4DAAC;AACtD;IAAtB,sBAAM,EAAC,uBAAa,CAAC;8BAAmC,uBAAa;0DAAC;AAE1D;IAAZ,sBAAM,EAAC,YAAG,CAAC;;gDAA6B;AACV;IAA9B,sBAAM,EAAC,+CAAqB,CAAC;8BAAwC,+CAAqB;+DAAC;AACrD;IAAtC,sBAAM,EAAC,2BAAiB,CAAC;IAAE,wBAAQ,GAAE;;8DAAyD;AACvE;IAAvB,sBAAM,EAAC,gCAAc,CAAC;8BAAoC,gCAAc;2DAAC;AAChD;IAAzB,sBAAM,EAAC,oCAAgB,CAAC;8BAAsC,oCAAgB;6DAAC;AAC3D;IAApB,sBAAM,EAAC,0BAAW,CAAC;8BAAiC,0BAAW;wDAAC;AAXxD,mBAAmB;IAD/B,0BAAU,GAAE;GACA,mBAAmB,CAgiB/B;AAhiBY,kDAAmB;AAkiBhC,MAAM,gBAAgB;IAElB,YACW,KAAa,EACpB,OAAuC,EACvB,GAAO,EAChB,WAAoB,EACpB,aAAa,IAAI,EACjB,cAAc,KAAK;QALnB,UAAK,GAAL,KAAK,CAAQ;QAEJ,QAAG,GAAH,GAAG,CAAI;QAChB,gBAAW,GAAX,WAAW,CAAS;QACpB,eAAU,GAAV,UAAU,CAAO;QACjB,gBAAW,GAAX,WAAW,CAAQ;QAC1B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,kBAAkB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAC3E,CAAC;CACJ;AAED,SAAS,kBAAkB,CAAC,CAAgC,EAAE,IAAmB;IAC7E,OAAO,GAAG,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC;;;;;;;;;;;;ACzlBD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,6IAAgE;AAEhE,oIAAiF;AACjF,0KAAkF;AAClF,0HAA8D;AAC9D,0JAAyE;AACzE,uGAA4C;AAC5C,0KAA2E;AAC3E,sIAAoD;AACpD,4IAAgE;AAEhE,6JAAyE;AAOzE,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAAlC;QAEuB,iCAA4B,GAAG,IAAI,eAAO,EAA0B,CAAC;QACrE,2BAAsB,GAAG,+BAA+B,CAAC;QACzD,sBAAiB,GAAG,4BAA4B,CAAC;QAuC1D,gBAAW,GAAoC,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;IA+HlG,CAAC;IArJa,IAAI;QACV,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAES,KAAK,CAAC,MAAM;QAClB,MAAM,CAAC,kBAAkB,EAAE,eAAe,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;YAC5D,IAAI,CAAC,cAAc,CAAC,OAAO,CAAyB,IAAI,CAAC,sBAAsB,CAAC;YAChF,IAAI,CAAC,cAAc,CAAC,OAAO,CAAe,IAAI,CAAC,iBAAiB,CAAC;SACpE,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,6BAA6B,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QAClI,IAAI,eAAe,EAAE;YACjB,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;SAC5C;aAAM;YACH,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;SACvC;QACD,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAE7C,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;IAC/D,CAAC;IAID;;;;OAIG;IACH,IAAI,kBAAkB;QAClB,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;IACpE,CAAC;IAED;;;;OAIG;IACH,IAAI,kBAAkB,CAAC,UAAkC;QACrD,MAAM,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACvD,IAAI,aAAa,EAAE;YACf,IAAI,CAAC,UAAU,CAAC,kBAAkB,GAAG,aAAa,CAAC;SACtD;IACL,CAAC;IAED,IAAI,qBAAqB;QACrB,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;IACvE,CAAC;IAED,IAAI,mBAAmB;QACnB,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;IACrE,CAAC;IAED,IAAI,qBAAqB;QACrB,OAAO,IAAI,CAAC,4BAA4B,CAAC,KAAK,CAAC;IACnD,CAAC;IACS,uBAAuB,CAAC,UAAkC;QAChE,IAAI,CAAC,cAAc,CAAC,OAAO,CAAyB,IAAI,CAAC,sBAAsB,EAAE,UAAU,CAAC,CAAC;QAC7F,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC;IAED;;OAEG;IACH,IAAI,eAAe;QACf,MAAM,YAAY,GAAG,EAAE,CAAC;QACxB,KAAK,MAAM,aAAa,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE;YACtD,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;YACvD,IAAI,UAAU,EAAE;gBACZ,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACjC;SACJ;QACD,OAAO,YAAY,CAAC;IACxB,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,OAA2B;QACrC,MAAM,YAAY,GAAiB,EAAE,CAAC;QACtC,MAAM,UAAU,GAAoB,EAAE,CAAC;QACvC,KAAK,MAAM,IAAI,IAAI,MAAM,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE;YAClD,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC,IAAI,CAChF,MAAM,CAAC,EAAE,GAAG,YAAY,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,EAC3C,GAAG,EAAE,GAAc,CAAC,CACvB,CAAC,CAAC;SACN;QACD,MAAM,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9B,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;IAC1C,CAAC;IAES,kBAAkB,CAAC,YAA0B;QACnD,IAAI,CAAC,cAAc,CAAC,OAAO,CAAe,IAAI,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC;QAEhF,MAAM,UAAU,GAAG,IAAI,GAAG,EAAU,CAAC;QACrC,MAAM,YAAY,GAAG,IAAI,GAAG,EAAyB,CAAC;QACtD,KAAK,MAAM,aAAa,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE;YACtD,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;YACvD,IAAI,UAAU,EAAE;gBACZ,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBACpC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;aACxD;SACJ;QAED,KAAK,MAAM,UAAU,IAAI,YAAY,EAAE;YACnC,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACzC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;gBACtC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBACpC,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;aACxC;SACJ;QAED,KAAK,MAAM,CAAC,EAAE,aAAa,CAAC,IAAI,YAAY,EAAE;YAC1C,aAAa,CAAC,OAAO,EAAE,CAAC;SAC3B;IACL,CAAC;IAES,mBAAmB,CAAC,UAAsB;QAChD,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;QACzD,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,QAAQ,EAAE;YAChE,KAAK,EAAE;gBACH,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,KAAK,EAAC,KAAK,EAAC,EAAE;oBACrB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAChE,OAAO,KAAK,IAAI;wBACZ,OAAO,EAAE,KAAK,CAAC,OAAO;wBACtB,IAAI,EAAE,KAAK,CAAC,MAAM;qBACrB,CAAC;gBACN,CAAC;aACJ;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC;IACzC,CAAC;IAES,eAAe,CAAC,UAAkC;QACxD,OAAO,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,mBAAU,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;IAC/I,CAAC;IAES,eAAe,CAAC,aAAwC;QAC9D,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;QACtD,OAAO,QAAQ,IAAI,QAAQ,CAAC,UAAU,CAAC;IAC3C,CAAC;IAES,gBAAgB,CAAC,aAAwC;QAC/D,MAAM,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;QAChE,OAAO,gBAAgB,IAAI,gBAAgB,CAAC,QAAQ,CAAC;IACzD,CAAC;IAES,kBAAkB,CAAC,aAAwC;QACjE,OAAO,gBAAgB,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC;IAC1E,CAAC;CAEJ;AAnKG;IADC,sBAAM,EAAC,iCAAc,CAAC,OAAO,CAAC;;iEAC+B;AAG9D;IADC,sBAAM,EAAC,wDAAyB,CAAC;8BACS,wDAAyB;qEAAC;AAExD;IAAZ,sBAAM,EAAC,YAAG,CAAC;;kDAA6B;AACf;IAAzB,sBAAM,EAAC,oCAAgB,CAAC;8BAAsC,oCAAgB;+DAAC;AAC5D;IAAnB,sBAAM,EAAC,wBAAU,CAAC;8BAAgC,wBAAU;yDAAC;AACtC;IAAvB,sBAAM,EAAC,gCAAc,CAAC;;6DAAmD;AAG1E;IADC,sBAAM,EAAC,0BAAW,CAAC;8BACY,0BAAW;0DAAC;AAG5C;IADC,6BAAa,GAAE;;;;iDAGf;AAvBQ,qBAAqB;IADjC,0BAAU,GAAE;GACA,qBAAqB,CA0KjC;AA1KY,sDAAqB;AA+KlC,IAAiB,gBAAgB,CAIhC;AAJD,WAAiB,gBAAgB;IAC7B,SAAgB,EAAE,CAAC,aAAwC;QACvD,OAAO,CAAC,CAAC,aAAa,IAAI,aAAa,CAAC,QAAQ,YAAY,iCAAc,CAAC;IAC/E,CAAC;IAFe,mBAAE,KAEjB;AACL,CAAC,EAJgB,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAIhC;;;;;;;;;;;;ACrND,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;;;;AAEhF,oIAAiF;AACjF,uGAAoE;AACpE,wGAA2H;AAC3H,2JAAkE;AAClE,8HAAyE;AACzE,oHAA6C;AAE7C,6IAAgE;AAEhE;;GAEG;AAEH,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAM7B,YACoC,GAAQ,EACU,kBAAyC,EACpD,UAAsB;QAF7B,QAAG,GAAH,GAAG,CAAK;QACU,uBAAkB,GAAlB,kBAAkB,CAAuB;QACpD,eAAU,GAAV,UAAU,CAAY;QAPvD,cAAS,GAAG,IAAI,2BAAoB,EAAE,CAAC;QAE9B,sBAAiB,GAAG,IAAI,cAAO,EAAoC,CAAC;QAkB7E,iBAAY,GAAG,QAAQ,CAAC,KAAK,IAAmB,EAAE;YACxD,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;YACzB,MAAM,WAAW,GAAG,IAAI,8BAAuB,EAAE,CAAC;YAClD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACnE,MAAM,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;YAChC,MAAM,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC;YACvC,IAAI,MAAM,EAAE;gBACR,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBAC7C,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC;gBAC1C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;oBACnD,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,EAAE;wBAC3C,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;qBAChC;gBACL,CAAC,CAAC,CAAC,CAAC;gBACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;aACtE;iBAAM;gBACH,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;aACpC;QACL,CAAC,EAAE,EAAE,CAAC,CAAC;IA9BH,CAAC;IAGK,IAAI;QACV,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAES,KAAK,CAAC,MAAM;QAClB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;IAC7E,CAAC;IAsBS,SAAS,CAAC,KAAuC,EAAE,KAAwB;QACjF,MAAM,MAAM,GAAG,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC;QACrC,MAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC;QAChE,IAAI,WAAW,EAAE;YACb,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SACjC;QACD,IAAI,CAAC,sBAAsB,GAAG,MAAM,CAAC;QACrC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC;IAED;;OAEG;IACH,IAAI,kBAAkB;QAClB,OAAO,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC;IACtD,CAAC;IAED;;OAEG;IACH,IAAI,eAAe;QACf,OAAO,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC;IACnD,CAAC;IAED;;OAEG;IACH,IAAI,wBAAwB;QACxB,OAAO,IAAI,CAAC,sBAAsB,CAAC;IACvC,CAAC;IAED;;OAEG;IACH,IAAI,qBAAqB;QACrB,OAAO,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC;IACzD,CAAC;IAED;;OAEG;IACH,IAAI,UAAU;QACV,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;IACxC,CAAC;IAED,OAAO,CAAC,GAAQ;QACZ,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC;QAC/B,MAAM,YAAY,GAAG,aAAa,IAAI,mBAAU,CAAC,YAAY,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;QAClF,OAAO,YAAY,IAAI,YAAY,CAAC,QAAQ,EAAE,CAAC;IACnD,CAAC;IAED,MAAM,CAAC,IAAY;QACf,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC;QAC/B,OAAO,aAAa,IAAI,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACxD,CAAC;IAED,IAAI,aAAa;QACb,MAAM,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAC3C,OAAO,UAAU,IAAI,IAAI,aAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IACtD,CAAC;CAEJ;AA1FG;IADC,6BAAa,GAAE;;;;gDAGf;AAfQ,oBAAoB;IADhC,0BAAU,GAAE;IAQJ,iCAAM,EAAC,YAAG,CAAC;IACX,iCAAM,EAAC,+CAAqB,CAAC;IAC7B,iCAAM,EAAC,wBAAU,CAAC;6CADmD,+CAAqB;QACxC,wBAAU;GATxD,oBAAoB,CAuGhC;AAvGY,oDAAoB;;;;;;;;;;;;AC7BjC,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;;;;AAEhF,oIAAkE;AAClE,uGAA4C;AAE5C,oHAA6C;AAC7C,2JAAkE;AAClE,0HAAkE;AAGlE,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAE5B,YACoC,GAAQ,EACU,kBAAyC;QAD3D,QAAG,GAAH,GAAG,CAAK;QACU,uBAAkB,GAAlB,kBAAkB,CAAuB;IAC3F,CAAC;IAEL,OAAO,CAAC,GAAQ;QACZ,IAAI,GAAG,CAAC,MAAM,KAAK,kCAAmB,EAAE;YACpC,MAAM,IAAI,KAAK,CAAC,uBAAuB,kCAAmB,iBAAiB,GAAG,GAAG,CAAC,CAAC;SACtF;QACD,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,GAAQ;QACtB,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACjD,OAAO,IAAI,0BAAW,CAAC,GAAG,EAAE,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,GAAQ;QACxB,MAAM,OAAO,GAAG,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACvC,MAAM,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC;QAC7D,uEAAuE;QACvE,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3B,iFAAiF;YACjF,MAAM,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;YACxC,YAAY,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;SACjE;QACD,oEAAoE;QACpE,kEAAkE;QAClE,wEAAwE;QACxE,MAAM,kBAAkB,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9F,KAAK,MAAM,UAAU,IAAI,kBAAkB,EAAE;YACzC,MAAM,QAAQ,GAAG,IAAI,aAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAC9C,yDAAyD;YACzD,MAAM,WAAW,GAAG,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;YAC3D,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE;gBAC5C,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC;aACpC;SACJ;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;CACJ;AA1CY,mBAAmB;IAD/B,0BAAU,GAAE;IAIJ,iCAAM,EAAC,YAAG,CAAC;IACX,iCAAM,EAAC,+CAAqB,CAAC;6CAAwC,+CAAqB;GAJtF,mBAAmB,CA0C/B;AA1CY,kDAAmB;;;;;;;;;;;;ACxBhC,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAMnE,2BAAmB,GAAG,QAAQ,CAAC;AAE5C,MAAa,WAAW;IAEpB,YAAqB,GAAQ,EAAqB,UAAkC,EAAqB,GAAQ;QAA5F,QAAG,GAAH,GAAG,CAAK;QAAqB,eAAU,GAAV,UAAU,CAAwB;QAAqB,QAAG,GAAH,GAAG,CAAK;IAAI,CAAC;IAEtH,KAAK,CAAC,YAAY,CAAC,OAA+B;QAC9C,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACjC,IAAI,QAAsC,CAAC;YAC3C,IAAI,QAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,MAAK,MAAM,IAAI,QAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,MAAK,QAAQ,EAAE;gBAChE,QAAQ,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,CAAC;aAChC;YACD,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;SACvF;QACD,OAAO,EAAE,CAAC;IACd,CAAC;IAED,OAAO,KAAW,CAAC;CACtB;AAjBD,kCAiBC;;;;;;;;;;;;ACvCD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;;AAEhF,oIAAiF;AACjF,oHAA6C;AAC7C,wIAA6D;AAC7D,wGAAsC;AACtC,yIAAyE;AACzE,gIAAgE;AAChE,kIAAgE;AAChE,2JAA8F;AAC9F,kIAAiE;AACjE,uGAAqH;AACrH,0HAAqD;AACrD,yIAAsD;AAItD,uJAAuE;AAEvE,6JAAyE;AAEzE,oHAAiD;AACjD,mIAAmD;AAGnD,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;CAEjC;AAFY,qBAAqB;IADjC,0BAAU,GAAE;GACA,qBAAqB,CAEjC;AAFY,sDAAqB;AAKlC,IAAa,cAAc,sBAA3B,MAAa,cAAc;IAA3B;QAIuB,uBAAkB,GAAG,IAAI,cAAO,EAAQ,CAAC;QACnD,gBAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;QAKpC,qCAAgC,GAAG,IAAI,cAAO,EAAU,CAAC;QACjE,8BAAyB,GAAG,IAAI,CAAC,gCAAgC,CAAC,KAAK,CAAC;QAEhE,wCAAmC,GAAG,IAAI,cAAO,EAA4B,CAAC;QACtF,iCAA4B,GAAG,IAAI,CAAC,mCAAmC,CAAC,KAAK,CAAC;QAEtE,cAAS,GAAG,IAAI,iCAAoB,CACjD,IAAI,CAAC,kBAAkB,EACvB,IAAI,CAAC,gCAAgC,EACrC,IAAI,CAAC,mCAAmC,CAC3C,CAAC;QA0BO,OAAE,GAAG,KAAK,CAAC;QACX,UAAK,GAAG,SAAG,CAAC,QAAQ,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QA6C7D,UAAK,GAAG,gBAAc,CAAC,SAAS,EAAE,CAAC;IAuXjD,CAAC;IA7ca,aAAa;QACnB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5C,CAAC;IAyCD,OAAO;QACH,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAGS,IAAI;QACV,IAAI,CAAC,aAAa,GAAG,IAAI,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1E,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE;YAC5D,IAAI,CAAC,CAAC,cAAc,KAAK,sBAAsB,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACxE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;aACpC;QACL,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,IAAI,UAAU;QACV,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;IACnC,CAAC;IACD,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;IACpC,CAAC;IAGD,IAAI,YAAY;QACZ,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAED,IAAI,kBAAkB;QAClB,OAAO;YACH,OAAO,EAAE,gBAAgB;YACzB,OAAO,EAAE,SAAG,CAAC,QAAQ,CAAC,sCAAsC,EAAE,+BAA+B,CAAC;YAC9F,KAAK,EAAE,SAAG,CAAC,QAAQ,CAAC,mCAAmC,EAAE,QAAQ,CAAC;SACrE,CAAC;IACN,CAAC;IAGD,IAAI,iBAAiB;QACjB,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACnC,CAAC;IACD,IAAI,iBAAiB,CAAC,iBAA2C;QAC7D,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;QAC5C,IAAI,CAAC,mCAAmC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACrE,CAAC;IAID,IAAI,MAAM;QACN,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC7B,CAAC;IACD,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;IACpC,CAAC;IACD,IAAI,eAAe;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;IACtC,CAAC;IACD,IAAI,YAAY;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;IACnC,CAAC;IAED,SAAS;QACL,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC7B,CAAC;IACD,SAAS,CAAC,MAA0C;QAChD,MAAM,KAAK,GAAG,gBAAc,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC/C,IAAI,MAAM,EAAE;YACR,KAAK,MAAM,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE;gBACjC,IAAI,sBAAa,CAAC,sBAAa,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,KAAK,sBAAa,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;oBACpF,IAAI,MAAM,CAAC,MAAM,EAAE;wBACf,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACpC;yBAAM;wBACH,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACtC;iBACJ;qBAAM;oBACH,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;wBAChB,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACnC;iBACJ;aACJ;SACJ;QACD,MAAM,0BAA0B,GAAG,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,CAAC;QAC/E,MAAM,cAAc,GAAG,0BAA0B,KAAK,OAAO;YACzD,CAAC,CAAC,KAAK,CAAC,eAAe;YACvB,CAAC,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,KAAK,sBAAa,CAAC,GAAG,CAAC,CAAC;QAClF,MAAM,YAAY,GAAG,0BAA0B,KAAK,UAAU;YAC1D,CAAC,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,KAAK,sBAAa,CAAC,GAAG,CAAC;YAC7E,CAAC,CAAC,EAAE,CAAC;QACT,MAAM,kBAAkB,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;QACnD,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,SAAG,CAAC,QAAQ,CAAC,qCAAqC,EAAE,eAAe,CAAC,EAAE,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;QAC7I,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,SAAG,CAAC,QAAQ,CAAC,sCAAsC,EAAE,gBAAgB,CAAC,EAAE,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC;QAChJ,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,SAAG,CAAC,QAAQ,CAAC,+BAA+B,EAAE,SAAS,CAAC,EAAE,cAAc,EAAE,kBAAkB,CAAC,CAAC,CAAC;QACjJ,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,SAAG,CAAC,QAAQ,CAAC,yCAAyC,EAAE,mBAAmB,CAAC,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;QAC1J,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE;YACzB,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,SAAG,CAAC,QAAQ,CAAC,kDAAkD,EAAE,sCAAsC,EAAE,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;SAC3J;aAAM;YACH,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,SAAG,CAAC,QAAQ,CAAC,qCAAqC,EAAE,+BAA+B,CAAC,CAAC;SACjH;QAED,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAES,WAAW,CAAC,EAAU,EAAE,KAAa,EAAE,OAAwB,EAAE,aAAuB;QAC9F,MAAM,KAAK,GAAqB;YAC5B,EAAE;YACF,KAAK;YACL,aAAa;YACb,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC;SACrB,CAAC;QACF,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;YAC1B,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SACtC;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAES,cAAc,CAAC,KAAuB,EAAE,MAAqB;QACnE,MAAM,SAAS,GAAG,IAAI,aAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACtC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;YACjB,KAAK;YACL,SAAS;YACT,WAAW,EAAE;gBACT,MAAM,EAAE,sBAAa,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC;gBAClE,KAAK,EAAE,sBAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC;gBAC3D,OAAO,EAAE,sBAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC;gBAC9C,aAAa,EAAE,sBAAa,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC;aAC9D;YACD,IAAI,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;SAC1D,CAAC,CAAC;IACP,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,MAAqB,EAAE,OAA6B;QAC3D,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC5C,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IACtD,CAAC;IAED,YAAY,CAAC,MAAqB;QAC9B,MAAM,SAAS,GAAQ,IAAI,aAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC3C,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,aAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,mCAAmC;QAC3G,IAAI,MAAM,CAAC,MAAM,KAAK,sBAAa,CAAC,OAAO,EAAE;YACzC,IAAI,MAAM,CAAC,MAAM,EAAE;gBACf,OAAO,SAAS,CAAC,UAAU,CAAC,kCAAmB,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;aACtE;iBAAM;gBACH,OAAO,SAAS,CAAC,UAAU,CAAC,kCAAmB,CAAC,CAAC;aACpD;SACJ;QACD,IAAI,MAAM,CAAC,MAAM,KAAK,sBAAa,CAAC,GAAG,EAAE;YACrC,IAAI,MAAM,CAAC,MAAM,EAAE;gBACf,OAAO,oBAAQ,CAAC,MAAM,CAClB,WAAW,CAAC,UAAU,CAAC,kCAAmB,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAC7D,SAAS,CAAC,UAAU,CAAC,kCAAmB,CAAC,EACzC,SAAG,CAAC,QAAQ,CACR,yBAAyB,EACzB,aAAa,EACb,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,CACxC,CAAC,CAAC;aACV;YACD,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,CAAC,EAAE;gBACpD,OAAO,oBAAQ,CAAC,MAAM,CAClB,WAAW,CAAC,UAAU,CAAC,kCAAmB,CAAC,EAC3C,SAAS,EACT,SAAG,CAAC,QAAQ,CACR,+BAA+B,EAC/B,oBAAoB,EACpB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,CACxC,CAAC,CAAC;aACV;YACD,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,CAAC,EAAE;gBACnD,OAAO,SAAS,CAAC;aACpB;YACD,OAAO,oBAAQ,CAAC,MAAM,CAClB,WAAW,CAAC,UAAU,CAAC,kCAAmB,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAC7D,SAAS,EACT,SAAG,CAAC,QAAQ,CACR,+BAA+B,EAC/B,oBAAoB,EACpB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,CACxC,CAAC,CAAC;SACV;QACD,IAAI,MAAM,CAAC,MAAM,EAAE;YACf,OAAO,SAAS,CAAC,UAAU,CAAC,kCAAmB,CAAC,CAAC;SACpD;QACD,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,CAAC,EAAE;YACpD,OAAO,oBAAQ,CAAC,MAAM,CAClB,SAAS,CAAC,UAAU,CAAC,kCAAmB,CAAC,EACzC,SAAS,EACT,SAAG,CAAC,QAAQ,CACR,+BAA+B,EAC/B,oBAAoB,EACpB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,CACxC,CAAC,CAAC;SACV;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,MAAqB,EAAE,OAA6B;QACjE,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC5C,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IACvD,CAAC;IAED,UAAU,CAAC,GAAQ;QACf,MAAM,SAAS,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QACjC,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,SAAS,CAAC,CAAC;QAC1E,IAAI,KAAK,EAAE;YACP,OAAO,KAAK,CAAC;SAChB;QACD,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,SAAS,CAAC,CAAC;QAChF,IAAI,QAAQ,EAAE;YACV,OAAO,QAAQ,CAAC;SACnB;QACD,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,SAAS,CAAC,CAAC;IACxE,CAAC;IAED,KAAK,CAAC,QAAQ;QACV,IAAI;YACA,kCAAkC;YAClC,wCAAwC;YACxC,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;SAC3C;QAAC,OAAO,KAAK,EAAE;YACZ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SAC3C;IACL,CAAC;IACD,KAAK,CAAC,KAAK,CAAC,MAAyB;QACjC,IAAI;YACA,MAAM,EAAE,UAAU,EAAE,eAAe,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC;YAC3D,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YACvD,MAAM,YAAY,GAAG,IAAI;iBACpB,MAAM,CAAC,GAAG,CAAC,EAAE;gBACV,MAAM,WAAW,GAAG,IAAI,aAAG,CAAC,GAAG,CAAC,CAAC;gBACjC,OAAO,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,aAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;uBAChF,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,aAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACzF,CAAC,CAAC,CAAC;YACP,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC3B,kCAAkC;gBAClC,4CAA4C;gBAC5C,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;aACxC;SACJ;QAAC,OAAO,KAAK,EAAE;YACZ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SAC3C;IACL,CAAC;IAED,KAAK,CAAC,UAAU;QACZ,IAAI;YACA,MAAM,EAAE,UAAU,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC;YAC3C,MAAM,IAAI,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAC3C,MAAM,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;SAChE;QAAC,OAAO,KAAK,EAAE;YACZ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SAC3C;IACL,CAAC;IACD,KAAK,CAAC,OAAO,CAAC,MAAyB;QACnC,IAAI;YACA,MAAM,EAAE,UAAU,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC;YAC3C,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YACvD,MAAM,UAAU,GAAG,IAAI;iBAClB,MAAM,CAAC,GAAG,CAAC,EAAE;gBACV,MAAM,WAAW,GAAG,IAAI,aAAG,CAAC,GAAG,CAAC,CAAC;gBACjC,OAAO,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,aAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1F,CAAC,CACA,CAAC;YACN,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;gBACzB,MAAM,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;aAChE;SACJ;QAAC,OAAO,KAAK,EAAE;YACZ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SAC3C;IACL,CAAC;IAED,KAAK,CAAC,UAAU;QACZ,IAAI,MAAM,IAAI,CAAC,UAAU,EAAE,EAAE;YACzB,IAAI;gBACA,oBAAoB;gBACpB,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,sBAAa,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACjG,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;gBAC9B,kBAAkB;gBAClB,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,sBAAa,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC9F,MAAM,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC,CAAC;aAC7F;YAAC,OAAO,KAAK,EAAE;gBACZ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aAC3C;SACJ;IACL,CAAC;IACD,KAAK,CAAC,OAAO,CAAC,MAAyB;QACnC,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;QAC5B,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAEvD,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,IAAI,CAAC,MAAM,EAAE;YACT,OAAO;SACV;QAED,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,GAAG,CAC3B,IAAI;aACC,MAAM,CAAC,GAAG,CAAC,EAAE;YACV,MAAM,QAAQ,GAAG,IAAI,aAAG,CAAC,GAAG,CAAC,CAAC;YAC9B,OAAO,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,aAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACxF,CAAC,CAAC;aACD,GAAG,CAAC,GAAG,CAAC,EAAE;YACP,MAAM,gBAAgB,GAAG,KAAK,IAAI,EAAE;gBAChC,sEAAsE;gBACtE,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,GAAG,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;gBAClF,OAAO,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC;YAC9B,CAAC,CAAC;YACF,OAAO,gBAAgB,EAAE,CAAC;QAC9B,CAAC,CAAC,CACT,CAAC;QAEF,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/E,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;YAC1B,IAAI,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;gBAClC,OAAO;aACV;SACJ;QAED,MAAM,OAAO,CAAC,GAAG,CACb,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACb,MAAM,aAAa,GAAG,KAAK,IAAI,EAAE;gBAC7B,IAAI,IAAI,CAAC,SAAS,EAAE;oBAChB,IAAI;wBACA,MAAM,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC,CAAC;qBAC5F;oBAAC,OAAO,KAAK,EAAE;wBACZ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;qBAC3C;iBACJ;qBAAM;oBACH,MAAM,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,2BAAiB,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,IAAI,aAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBAC7F;YACL,CAAC,CAAC;YACF,OAAO,aAAa,EAAE,CAAC;QAC3B,CAAC,CAAC,CACL,CAAC;IACN,CAAC;IAES,OAAO,CAAC,KAAe;QAC7B,IAAI,QAAgB,CAAC;QACrB,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;YACnB,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,aAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACtF;aAAM;YACH,QAAQ,GAAG,GAAG,KAAK,CAAC,MAAM,QAAQ,CAAC;SACtC;QACD,OAAO,IAAI,uBAAa,CAAC;YACrB,KAAK,EAAE,SAAG,CAAC,QAAQ,CAAC,kCAAkC,EAAE,iBAAiB,CAAC;YAC1E,GAAG,EAAE,SAAG,CAAC,QAAQ,CAAC,qCAAqC,EAAE,+CAA+C,EAAE,QAAQ,CAAC;SACtH,CAAC,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAES,UAAU;QAChB,OAAO,IAAI,uBAAa,CAAC;YACrB,KAAK,EAAE,SAAG,CAAC,QAAQ,CAAC,qCAAqC,EAAE,qBAAqB,CAAC;YACjF,GAAG,EAAE,SAAG,CAAC,QAAQ,CAAC,yCAAyC,EAAE,4CAA4C,CAAC;SAC7G,CAAC,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAES,KAAK,CAAC,MAAM,CAAC,GAAQ;QAC3B,IAAI;YACA,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;SAC3D;QAAC,OAAO,CAAC,EAAE;YACR,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACpB;IACL,CAAC;IAES,KAAK,CAAC,SAAS,CAAC,IAAc;QACpC,MAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,aAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC;IAEM,eAAe,CAAC,SAA4B;QAC/C,MAAM,SAAS,GAAc;YACzB,EAAE,EAAE,SAAS,CAAC,GAAG;YACjB,OAAO,EAAE,SAAS,CAAC,OAAO;YAC1B,UAAU,EAAE,SAAS,CAAC,MAAM,CAAC,IAAI;YACjC,WAAW,EAAE,SAAS,CAAC,MAAM,CAAC,KAAK;YACnC,kBAAkB,EAAE,SAAS,CAAC,kBAAkB;SACnD,CAAC;QACF,OAAO,SAAS,CAAC;IACrB,CAAC;IAEM,sBAAsB,CAAC,SAA4B;QACtD,MAAM,KAAK,GAAG;YACV,YAAY,EAAE,SAAS,CAAC,GAAG,GAAG,IAAI;YAClC,UAAU,EAAE,SAAS,CAAC,GAAG;SAC5B,CAAC;QAEF,MAAM,SAAS,GAAiB;YAC5B,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC;YAClC,eAAe,EAAE,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC;YACtD,WAAW,EAAE,IAAI;YACjB,cAAc,EAAE,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,gBAAgB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAC9F,IAAI,WAAW;gBACX,OAAO,IAAI,CAAC,cAAc,CAAC;YAC/B,CAAC;YACD,IAAI,mBAAmB;gBACnB,OAAO;oBACH,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO;oBACjC,SAAS,EAAE,SAAS,CAAC,GAAG;oBACxB,aAAa,EAAE,SAAS,CAAC,OAAO;oBAChC,WAAW,EAAE,SAAS,CAAC,IAAI;oBAC3B,UAAU,EAAE,SAAS,CAAC,MAAM,CAAC,IAAI;oBACjC,WAAW,EAAE,SAAS,CAAC,MAAM,CAAC,KAAK;oBACnC,UAAU,EAAE,SAAS,CAAC,MAAM,CAAC,SAAS;oBACtC,kBAAkB,EAAE,SAAS,CAAC,kBAAkB;iBACnD,CAAC;YACN,CAAC;SACJ,CAAC;QACF,OAAO,SAAS,CAAC;IACrB,CAAC;IAEM,YAAY,CAAC,GAAW;QAC3B,MAAM,SAAS,GAAG,IAAI,aAAG,CAAC,GAAG,CAAC,CAAC;QAC/B,MAAM,OAAO,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;QAC3C,MAAM,YAAY,GAAG,mBAAU,CAAC,YAAY,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QACjE,IAAI,YAAY,EAAE;YACd,OAAO,YAAY,CAAC,QAAQ,EAAE,CAAC;SAClC;QACD,OAAO,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACrD,CAAC;IAES,iBAAiB,CAAC,SAAiB;QACzC,OAAO,IAAI,aAAG,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,gBAAc,CAAC,iBAAiB,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;IAC5F,CAAC;CACJ;AA5bG;IADC,sBAAM,EAAC,8BAAa,CAAC;8BACY,8BAAa;qDAAC;AAGhD;IADC,sBAAM,EAAC,mCAAe,CAAC;8BACY,mCAAe;uDAAC;AAGpD;IADC,sBAAM,EAAC,0BAAW,CAAC;8BACY,0BAAW;mDAAC;AAG5C;IADC,sBAAM,EAAC,YAAG,CAAC;;2CACgB;AAG5B;IADC,sBAAM,EAAC,wBAAc,CAAC;;gDACqB;AAG5C;IADC,sBAAM,EAAC,qBAAqB,CAAC;8BACF,qBAAqB;+CAAC;AAGlD;IADC,sBAAM,EAAC,8BAAa,CAAC;8BACY,8BAAa;qDAAC;AAGhD;IADC,sBAAM,EAAC,gCAAc,CAAC;;sDAC2B;AAUlD;IADC,6BAAa,GAAE;;;;0CAQf;AA7DQ,cAAc;IAD1B,0BAAU,GAAE;GACA,cAAc,CAmd1B;AAndY,wCAAc;AAqd3B,WAAiB,cAAc;IACd,gCAAiB,GAAG,0BAA0B,CAAC;IAS5D,SAAgB,SAAS,CAAC,MAA+B;QACrD,OAAO;YACH,MAAM;YACN,aAAa,EAAE,EAAE;YACjB,eAAe,EAAE,EAAE;YACnB,YAAY,EAAE,EAAE;YAChB,MAAM,EAAE,EAAE;SACb,CAAC;IACN,CAAC;IARe,wBAAS,YAQxB;IAEY,sBAAO,GAAG,MAAM,CAAC,wBAAwB,CAAC,CAAC;AAE5D,CAAC,EAtBgB,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAsB9B;AA3eY,wCAAc;AA6e3B,MAAa,eAAe;IAExB,YAA+B,QAAwB,EAAqB,UAAsB,EAAqB,GAAQ;QAAhG,aAAQ,GAAR,QAAQ,CAAgB;QAAqB,eAAU,GAAV,UAAU,CAAY;QAAqB,QAAG,GAAH,GAAG,CAAK;IAAI,CAAC;IAE7H,KAAK,CAAC,yBAAyB,CAAC,qBAA6B,EAAE,eAAmC;QACrG,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAC9B,IAAI,CAAC,UAAU,EACf;YACI,KAAK,EAAE,EAAE,UAAU,EAAE,qBAAqB,EAAE,YAAY,EAAE,eAAe,EAAE;YAC3E,QAAQ,EAAE,EAAE;SACf,CACJ,CAAC;QAEF,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;IACxE,CAAC;IAEM,KAAK,CAAC,UAAU,CAAC,MAAc;QAClC,OAAO,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IAC3G,CAAC;IAEM,KAAK,CAAC,KAAK,CAAC,MAAc;QAC7B,IAAI,MAAM,KAAK,OAAO,IAAI,MAAM,IAAI,CAAC,mBAAmB,EAAE,EAAE;YACxD,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,YAAY,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;SACtE;aAAM;YACH,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;SACrE;IACL,CAAC;IAES,KAAK,CAAC,mBAAmB;QAC/B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC;QAC1E,OAAO,CAAC,MAAM,CAAC;IACnB,CAAC;IAEM,KAAK,CAAC,aAAa;QACtB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;QACrE,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACpB,OAAO,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;SACpD;IACL,CAAC;CACJ;AAvCD,0CAuCC;AAOD,MAAa,gBAAgB;IAEzB,YACuB,UAAyB,EACzB,WAA2B,EAC3B,KAAyB;QAFzB,eAAU,GAAV,UAAU,CAAe;QACzB,gBAAW,GAAX,WAAW,CAAgB;QAC3B,UAAK,GAAL,KAAK,CAAoB;IAC5C,CAAC;IAEL,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED,IAAI,GAAG;QACH,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;IAC/B,CAAC;IAED,UAAU;QACN,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;QAClC,IAAI,MAAM,GAAG,GAAG,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,sBAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC;QACvH,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;YACxB,MAAM,GAAG,GAAG,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,MAAM,EAAE,CAAC;SAC5E;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,gBAAgB;QACZ,OAAO,sBAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAChE,CAAC;IAED,qBAAqB;QACjB,OAAO,sBAAa,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IACxF,CAAC;IAED,qBAAqB;QACjB,OAAO,oBAAoB,GAAG,sBAAa,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;IACtF,CAAC;IAED,YAAY;QACR,MAAM,GAAG,GAAQ,IAAI,aAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QAC9C,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,aAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,mCAAmC;QACvH,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACb,OAAO,GAAG,CAAC;SACd;QACD,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY;YACnC,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,kCAAmB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;YAC3F,CAAC,CAAC,WAAW,CAAC;QAClB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU;YAC/B,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,kCAAmB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;YACjF,CAAC,CAAC,GAAG,CAAC;QACV,IAAI,SAAS,GAAG,GAAG,CAAC;QACpB,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,sBAAa,CAAC,OAAO,EAAE;YAClD,SAAS,GAAG,OAAO,CAAC;SACvB;aAAM,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,sBAAa,CAAC,GAAG,EAAE;YACrD,SAAS,GAAG,KAAK,CAAC;SACrB;aAAM;YACH,SAAS,GAAG,oBAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;SAC/C;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;CACJ;AA3DD,4CA2DC;;;;;;;;;;;;ACloBD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,oIAA4E;AAC5E,wGAA6D;AAC7D,wHAA2E;AAC3E,wJAAgE;AAChE,uGAAoE;AACpE,yIAAsD;AAGtD,IAAa,cAAc,GAA3B,MAAa,cAAc;IAA3B;QAiBuB,uBAAkB,GAAG,IAAI,cAAO,EAAQ,CAAC;QACnD,gBAAW,GAAgB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;QAMxD,YAAO,GAAG,KAAK,CAAC;IAqI9B,CAAC;IAzIa,aAAa;QACnB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5C,CAAC;IAGD,SAAS;QACL,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IACD,UAAU,CAAC,OAAgB;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAED,OAAO;QACH,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;YAClB,OAAO,KAAK,CAAC;SAChB;QACD,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,CAAC;QAC/D,OAAO,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC;IAClE,CAAC;IACD,KAAK,CAAC,IAAI;QACN,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC;QAC7D,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE;YAChC,OAAO;SACV;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACtB,IAAI;YACA,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YACjC,IAAI,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAC/C,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAEvB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAChD,IAAI,MAAM,KAAK,SAAS,EAAE;gBACtB,OAAO;aACV;YACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,MAAM,KAAK,WAAW,IAAI,MAAM,KAAK,aAAa,EAAE;gBACpD,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE;oBAC5B,MAAM,EAAE,MAAM,KAAK,aAAa;iBACnC,CAAC,CAAC;gBACH,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;aAC9C;YACD,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACzB,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE;oBAC5B,KAAK,EAAE,MAAM,KAAK,YAAY;iBACjC,CAAC,CAAC;aACN;SACJ;QAAC,OAAO,KAAK,EAAE;YACZ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SAC3C;gBAAS;YACN,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SAC1B;IACL,CAAC;IACS,KAAK,CAAC,aAAa,CAAC,MAA8B;;QACxD,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YAC1C,OAAO,SAAS,CAAC;SACpB;QACD,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,GAAG,MAAM,CAAC;QAC1C,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACtD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,MAAM,4BAA4B,cAAc,EAAE,CAAC,CAAC;YAChF,OAAO,SAAS,CAAC;SACpB;QACD,MAAM,OAAO,GAIP,CAAC;gBACH,KAAK,EAAE,sCAAsC,cAAc,GAAG;gBAC9D,OAAO,EAAE,uDAAuD,cAAc,IAAI;gBAClF,MAAM,EAAE,WAAW;aACtB,EAAE;gBACC,KAAK,EAAE,+CAA+C,cAAc,GAAG;gBACvE,OAAO,EAAE,gEAAgE,cAAc,IAAI;gBAC3F,MAAM,EAAE,aAAa;aACxB,EAAE;gBACC,KAAK,EAAE,0BAA0B,cAAc,GAAG;gBAClD,OAAO,EAAE,yCAAyC,cAAc,IAAI;gBACpE,MAAM,EAAE,YAAY;aACvB,CAAC,CAAC;QAEH,MAAM,WAAW,GAAG,MAAM,WAAI,CAAC,iBAAiB,0CAAE,aAAa,CAAC,OAAO,EAAE,EAAE,WAAW,EAAE,mDAAmD,EAAE,CAAC,EAAC;QAC/I,IAAI,WAAW,IAAI,MAAM,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,MAAM,KAAK,WAAW,CAAC,MAAM,CAAE,CAAC,OAAO,CAAC,EAAE;YAChI,OAAQ,WAAW,CAAC,MAAoC,CAAC;SAC5D;aAAM;YACH,OAAO,CAAC,SAAS,CAAC,CAAC;SACtB;IACL,CAAC;IAED,UAAU;QACN,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;YAClB,OAAO,KAAK,CAAC;SAChB;QACD,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,CAAC;QAC/D,OAAO,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC;IACjE,CAAC;IACD,KAAK,CAAC,OAAO;QACT,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC;QAC7D,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,CAAC;QAC/D,MAAM,WAAW,GAAG,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC;QAC5C,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE;YACnD,OAAO;SACV;QACD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;QAC7D,IAAI,MAAM;YACN,MAAM,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,qCAAqC,MAAM,IAAI,WAAW,uCAAuC,CAAC,EAC1I;YACE,IAAI;gBACA,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE;oBAC5B,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,IAAI;iBACzC,CAAC,CAAC;aACN;YAAC,OAAO,KAAK,EAAE;gBACZ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aAC3C;SACJ;IACL,CAAC;IACS,KAAK,CAAC,SAAS,CAAC,UAAsB,EAAE,MAAc;;QAC5D,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAClD,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,0DAA0D,CAAC,CAAC;SACxF;QAED,MAAM,cAAc,GAAG,MAAM,WAAI,CAAC,iBAAiB,0CAAE,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,EACzG,EAAE,WAAW,EAAE,uCAAuC,MAAM,MAAM,EAAE,CAAC,EAAC;QAC1E,OAAO,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,KAAK,CAAC;IACjC,CAAC;IAES,UAAU,CAAC,MAA8B;QAC/C,OAAO,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACpE,CAAC;IACS,UAAU,CAAC,MAA8B;QAC/C,OAAO,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACrE,CAAC;IAES,KAAK,CAAC,OAAO,CAAC,KAAa,EAAE,GAAW;QAC9C,OAAO,CAAC,CAAC,MAAM,IAAI,uBAAa,CAAC,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;IAC7D,CAAC;CAEJ;AA1JG;IADC,sBAAM,EAAC,YAAG,CAAC;;2CACgB;AAG5B;IADC,sBAAM,EAAC,6CAAoB,CAAC;8BACS,6CAAoB;yDAAC;AAG3D;IADC,sBAAM,EAAC,qBAAc,CAAC;8BACY,qBAAc;sDAAC;AAGlD;IADC,sBAAM,EAAC,mCAAe,CAAC;8BACY,mCAAe;uDAAC;AAGpD;IADC,sBAAM,EAAC,2BAAiB,CAAC;IAAE,wBAAQ,GAAE;;yDACkB;AAf/C,cAAc;IAD1B,0BAAU,GAAE;GACA,cAAc,CA6J1B;AA7JY,wCAAc;;;;;;;;;;;;ACxB3B,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;;;;AAEhF,oIAAiF;AACjF,iKAA6E;AAC7E,8LAAkF;AAClF,wHAAmF;AAEnF,sHAAkD;AAGlD,IAAa,2BAA2B,GAAxC,MAAa,2BAA4B,SAAQ,qBAAW;IASxD,YAC6D,mBAAiD;QAE1G,KAAK,EAAE,CAAC;QAFiD,wBAAmB,GAAnB,mBAAmB,CAA8B;QAG1G,IAAI,CAAC,EAAE,GAAG,eAAe,GAAG,mBAAmB,CAAC,SAAS,CAAC;QAC1D,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,mBAAmB,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,OAAO,GAAG;YACX,KAAK,EAAE;gBACH,YAAY,EAAE,mBAAmB,CAAC,SAAS,GAAG,IAAI;gBAClD,UAAU,EAAE,mBAAmB,CAAC,SAAS;aAC5C;SACJ,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,qBAAO,EAAC,YAAY,CAAC,CAAC;IACjD,CAAC;IAGS,IAAI;QACV,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAES,KAAK,CAAC,MAAM;QAClB,IAAI,CAAC,YAAY,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;IACjG,CAAC;IAES,MAAM;QACZ,OAAO,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,yBAAyB,EAAE,EAAE,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;IACrG,CAAC;IAES,yBAAyB;QAC/B,OAAO;YACH,KAAK,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE;SACzB,CAAC;IACN,CAAC;IAES,oBAAoB;QAC1B,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC;QACzD,MAAM,OAAO,GAAG,6BAAK,SAAS,EAAC,SAAS,IAAE,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAO,CAAC;QACxF,MAAM,IAAI,GAAG,6BAAK,SAAS,EAAC,MAAM,IAAE,IAAI,CAAC,mBAAmB,CAAC,WAAW,IAAI,EAAE,CAAO,CAAC;QACtF,MAAM,UAAU,GAAG,6BAAK,SAAS,EAAC,YAAY;YAAC,6BAAK,SAAS,EAAC,kBAAkB;gBAAE,OAAO;gBAAE,IAAI,CAAO,CAAM,CAAC;QAC7G,MAAM,MAAM,GAAG,6BAAK,SAAS,EAAC,gCAAgC,IAAE,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAO,CAAC;QAC3G,MAAM,IAAI,GAAG,6BAAK,SAAS,EAAC,8BAA8B,IAAE,IAAI,WAAW,GAAG,CAAO,CAAC;QACtF,MAAM,SAAS,GAAG,6BAAK,SAAS,EAAC,uBAAuB;YAAC,6BAAK,SAAS,EAAC,cAAc,eAAe;YAAC,MAAM,CAAO,CAAC;QACpH,MAAM,OAAO,GAAG,6BAAK,SAAS,EAAC,uBAAuB;YAAC,6BAAK,SAAS,EAAC,cAAc,eAAe;YAAC,IAAI,CAAO,CAAC;QAChH,MAAM,UAAU,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;QACjE,MAAM,OAAO,GAAG,UAAU,CAAC,kBAAkB,CAAC,IAAI,EAAE;YAChD,KAAK,EAAE,OAAO;YACd,GAAG,EAAE,SAAS;YACd,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,SAAS;SACpB,CAAC,CAAC;QACH,MAAM,IAAI,GAAG,6BAAK,SAAS,EAAC,8BAA8B,IAAE,OAAO,CAAO,CAAC;QAC3E,MAAM,OAAO,GAAG,6BAAK,SAAS,EAAC,uBAAuB;YAAC,6BAAK,SAAS,EAAC,cAAc,aAAa;YAAC,IAAI,CAAO,CAAC;QAC9G,MAAM,WAAW,GAAG,6BAAK,SAAS,EAAC,uBAAuB;YACtD,6BAAK,SAAS,EAAC,cAAc,iBAAiB;YAC9C,6BAAK,SAAS,EAAC,yBAAyB,IAAE,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAO,CACjF,CAAC;QACP,MAAM,QAAQ,GAAG,6BAAK,SAAS,EAAC,iBAAiB;YAC7C,6BAAK,SAAS,EAAC,UAAU,EAAC,GAAG,EAAE,IAAI,CAAC,YAAY,GAAQ,CAAM,CAAC;QACnE,MAAM,UAAU,GAAG,6BAAK,SAAS,EAAC,4BAA4B;YAAE,QAAQ;YAAC,6BAAK,SAAS,EAAC,aAAa;gBAAE,SAAS;gBAAE,OAAO;gBAAE,OAAO;gBAAE,WAAW,CAAO,CAAM,CAAC;QAE7J,OAAO,6BAAK,SAAS,EAAC,aAAa;YAAE,UAAU;YAAE,UAAU,CAAO,CAAC;IACvE,CAAC;CACJ;AAxE+B;IAA3B,sBAAM,EAAC,4BAAkB,CAAC;8BAAiC,4BAAkB;gEAAC;AACrD;IAAzB,sBAAM,EAAC,qCAAgB,CAAC;8BAAmC,qCAAgB;kEAAC;AAuB7E;IADC,6BAAa,GAAE;;;;uDAGf;AA5BQ,2BAA2B;IADvC,0BAAU,GAAE;IAWJ,iCAAM,EAAC,+DAA4B,CAAC;;GAVhC,2BAA2B,CA0EvC;AA1EY,kEAA2B;;;;;;;;;;;;ACxBxC,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;AAEhF,oIAA0D;AAC1D,wHAAiF;AAIjF,uIAAqD;AAErD,IAAiB,kBAAkB,CAQlC;AARD,WAAiB,kBAAkB;IAClB,yBAAM,GAAG,iCAAc,CAAC,iBAAiB,CAAC;IACvD,SAAgB,WAAW,CAAC,GAAQ;QAChC,IAAI,GAAG,CAAC,MAAM,KAAK,yBAAM,EAAE;YACvB,OAAO,GAAG,CAAC,QAAQ,CAAC;SACvB;QACD,MAAM,IAAI,KAAK,CAAC,kDAAkD,GAAG,GAAG,CAAC,CAAC;IAC9E,CAAC;IALe,8BAAW,cAK1B;AACL,CAAC,EARgB,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAQlC;AAKD,IAAa,0BAA0B,GAAvC,MAAa,0BAA2B,SAAQ,2BAAwC;IAAxF;;QACa,OAAE,GAAG,iCAAc,CAAC,iBAAiB,CAAC;IAmBnD,CAAC;IAjBG,SAAS,CAAC,GAAQ;QACd,IAAI;YACA,kBAAkB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACpC,OAAO,GAAG,CAAC;SACd;QAAC,MAAM;YACJ,OAAO,CAAC,CAAC;SACZ;IACL,CAAC;IAEkB,KAAK,CAAC,MAAM,CAAC,MAA6B,EAAE,OAAqC;QAChG,MAAM,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IACxC,CAAC;IAES,mBAAmB,CAAC,GAAQ,EAAE,MAAoC;QACxE,OAAO,MAAM,CAAC;IAClB,CAAC;CAEJ;AApBY,0BAA0B;IADtC,0BAAU,GAAE;GACA,0BAA0B,CAoBtC;AApBY,gEAA0B;;;;;;;;;;;;ACpCvC,gFAAgF;AAChF,qCAAqC;AACrC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAEnE,oCAA4B,GAAG,MAAM,CAAC,8BAA8B,CAAC,CAAC;;;;;;;;;;;;AChBnF,gFAAgF;AAChF,qCAAqC;AACrC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;;;;AAKhF,oIAAiF;AACjF,wHAEiC;AACjC,8LAAkF;AAClF,2LAAgF;AAChF,4IAAgE;AAChE,0JAA+D;AAC/D,wJAAuE;AACvE,wJAAwE;AAGxE,IAAa,qBAAqB,GAAlC,MAAa,qBAAsB,SAAQ,oBAAU;IAiBjD,YAC6D,OAAqC;QAE9F,KAAK,EAAE,CAAC;QAFiD,YAAO,GAAP,OAAO,CAA8B;QAG9F,IAAI,CAAC,EAAE,GAAG,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC;QACvC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,qBAAO,EAAC,YAAY,CAAC,CAAC;QAE7C,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC;IACxC,CAAC;IAnBD,IAAI,QAAQ,CAAC,IAAqB;QAC9B,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC;IACxC,CAAC;IACD,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;IACxC,CAAC;IAiBS,IAAI;QACV,MAAM,MAAM,GAAG,IAAI,qBAAW,EAAE,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,IAAI,eAAK,CAAC;YACnB,MAAM,EAAE,IAAI,qBAAW,CAAC,EACvB,CAAC;SACL,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;QACzD,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE7B,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QAC9D,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAEpD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE;YAC5D,IAAI,CAAC,CAAC,cAAc,KAAK,qBAAqB,EAAE;gBAC5C,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;aACnC;QACL,CAAC,CAAC,CAAC,CAAC;QAEJ,MAAM,WAAW,GAAG;YAChB,KAAK,EAAE;gBACH,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI;gBAC3C,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS;aACrC;SACJ,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,WAAW,EAAE,CAAC,CAAC;IAC1E,CAAC;IAED,IAAI,eAAe;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,MAAqB,CAAC;IAC5C,CAAC;IAED;;;OAGG;IACO,cAAc,CAAC,UAA2B;QAChD,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;IAC/B,CAAC;IAES,iBAAiB;QACvB,IAAI,CAAC,eAAe,CAAC,gBAAM,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IACnD,CAAC;IAEkB,eAAe,CAAC,GAAY;QAC3C,qBAAW,CAAC,WAAW,CAAC,IAAI,CAAC,wBAAwB,EAAE,GAAG,CAAC,CAAC;QAC5D,qBAAW,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;QAClD,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAEkB,aAAa,CAAC,GAAY;QACzC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAEhD,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,UAAU;QACN,MAAM,KAAK,GAAW;YAClB,gBAAgB,EAAE,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE;SACrD,CAAC;QACF,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,YAAY,CAAC,QAAa;QACtB,MAAM,EAAE,gBAAgB,EAAE,GAAG,QAAQ,CAAC;QACtC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;IACvD,CAAC;CAEJ;AApGuB;IAAnB,sBAAM,EAAC,wBAAU,CAAC;8BAAgC,wBAAU;yDAAC;AACzB;IAApC,sBAAM,EAAC,6DAA2B,CAAC;8BAA8C,6DAA2B;uEAAC;AACvF;IAAtB,sBAAM,EAAC,+BAAa,CAAC;8BAAoC,+BAAa;6DAAC;AAC9C;IAAzB,sBAAM,EAAC,sCAAgB,CAAC;8BAA2B,sCAAgB;oDAAC;AAC7C;IAAvB,sBAAM,EAAC,gCAAc,CAAC;;6DAAmD;AAwB1E;IADC,6BAAa,GAAE;;;;iDA6Bf;AA5DQ,qBAAqB;IADjC,0BAAU,GAAE;IAmBJ,iCAAM,EAAC,+DAA4B,CAAC;;GAlBhC,qBAAqB,CAwGjC;AAxGY,sDAAqB;;;;;;;;;;;;AC/BlC,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAGhF,wHAAgF;AAChF,8LAAkF;AAClF,sKAAmE;AACnE,2LAAgF;AAChF,0JAA+D;AAC/D,wLAA8E;AAC9E,uIAAqD;AACrD,oKAAoF;AACpF,0JAAgE;AAChE,kLAA0E;AAC1E,iIAAkD;AAElD,SAAgB,oBAAoB,CAAC,IAAqB;IAEtD,IAAI,CAAC,uBAAa,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACvC,EAAE,EAAE,iCAAc,CAAC,iBAAiB;QACpC,YAAY,EAAE,CAAC,OAAqC,EAAE,EAAE;YACpD,MAAM,KAAK,GAAG,oCAAoC,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;YAC3E,OAAO,KAAK,CAAC,GAAG,CAAC,gDAAqB,CAAC,CAAC;QAC5C,CAAC;KACJ,CAAC,CAAC,CAAC;IAEJ,IAAI,CAAC,2DAA0B,CAAC,CAAC,MAAM,EAAE,CAAC;IAC1C,IAAI,CAAC,qBAAW,CAAC,CAAC,SAAS,CAAC,2DAA0B,CAAC,CAAC;AAE5D,CAAC;AAbD,oDAaC;AAED,SAAgB,oCAAoC,CAAC,MAA4B,EAAE,OAAqC;IACpH,MAAM,KAAK,GAAG,gDAAsB,EAAC,MAAM,CAAC,CAAC;IAC7C,KAAK,CAAC,IAAI,CAAC,gDAAqB,CAAC,CAAC,MAAM,EAAE,CAAC;IAC3C,KAAK,CAAC,IAAI,CAAC,6DAA2B,CAAC,CAAC,MAAM,EAAE,CAAC;IACjD,KAAK,CAAC,IAAI,CAAC,sCAAgB,CAAC,CAAC,MAAM,EAAE,CAAC;IACtC,KAAK,CAAC,IAAI,CAAC,mBAAS,CAAC,CAAC,SAAS,CAAC,sCAAgB,CAAC,CAAC;IAClD,KAAK,CAAC,IAAI,CAAC,uDAAwB,CAAC,CAAC,MAAM,EAAE,CAAC;IAC9C,KAAK,CAAC,IAAI,CAAC,uCAAiB,CAAC,CAAC,SAAS,CAAC,uDAAwB,CAAC,CAAC;IAClE,KAAK,CAAC,IAAI,CAAC,+DAA4B,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;IAElE,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,uDAAwB,CAAC,CAAC;IACnD,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,gDAAqB,CAAC,CAAC;IAChD,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAE5B,OAAO,KAAK,CAAC;AACjB,CAAC;AAfD,oFAeC;;;;;;;;;;;;AC3DD,gFAAgF;AAChF,qCAAqC;AACrC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,oIAAkE;AAClE,wGAAkD;AAClD,0GAAmC;AAGnC,uIAAqD;AACrD,yJAAiE;AAGjE,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAA9B;QA4BuB,8BAAyB,GAAG,IAAI,cAAO,CAAO;YAC7D,kBAAkB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,kBAAkB,EAAE;YACnD,oBAAoB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,oBAAoB,EAAE;SAC1D,CAAC,CAAC;QACM,uBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC;IAwBvE,CAAC;IAlDG,KAAK,CAAC,gBAAgB,CAAC,OAA8B;QACjD,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;QAC5C,MAAM,UAAU,GAAoB;YAChC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS;YACtC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS;YAChD,KAAK,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK;YACrB,QAAQ,EAAE,IAAI;SACjB,CAAC;QAEF,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;QAC3D,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACpB,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,CAAC;SAC9E;aAAM;YACH,MAAM,yBAAyB,GAAG,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,MAAM,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,GAAG,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;YACtI,IAAI,CAAC,yBAAyB,EAAE;gBAC5B,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;aACvD;iBAAM;gBACH,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;aACtD;SACJ;IACL,CAAC;IASS,kBAAkB;QACxB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;YAClE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,KAAK,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC;YACnF,IAAI,eAAe,GAAG,KAAK,CAAC;YAC5B,IAAI,eAAe,GAAG,KAAK,CAAC;YAC5B,IAAI,SAAS,EAAE;gBACX,eAAe,GAAG,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,CAAC,MAAM,CAAC;gBACjE,eAAe,GAAG,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,WAAW,KAAK,SAAS,CAAC,WAAW,CAAC;aAC9E;YACD,IAAI,eAAe,IAAI,eAAe,IAAI,SAAS,KAAK,SAAS,EAAE;gBAC/D,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAClD;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAES,oBAAoB;QAC1B,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC3B,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC;YACpC,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC;SACzC;IACL,CAAC;CACJ;AAtD2B;IAAvB,sBAAM,EAAC,iCAAc,CAAC;8BAA8B,iCAAc;mDAAC;AACvD;IAAZ,sBAAM,EAAC,YAAG,CAAC;;8CAA6B;AACX;IAA7B,sBAAM,EAAC,6CAAoB,CAAC;8BAAuC,6CAAoB;4DAAC;AAJhF,iBAAiB;IAD7B,0BAAU,GAAE;GACA,iBAAiB,CAwD7B;AAxDY,8CAAiB;;;;;;;;;;;;ACzB9B,gFAAgF;AAChF,qCAAqC;AACrC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,oIAAkE;AAClE,kJAA8D;AAC9D,2JAAyE;AAKzE,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAIjC,YAAY,CAAC,SAAiB;QAC1B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;IAGD,KAAK,CAAC,IAAI,CAAC,SAAc;QACrB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACrB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE;YACpD,IAAI,EAAE,QAAQ;YACd,aAAa,EAAE,GAAG,CAAC,CAAC;gBAChB,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC;gBAC1C,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,EAAE;SACjE,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,GAAG,MAAM,YAAY,gBAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;QACzD,IAAI,IAAI,CAAC,GAAG,EAAE;YACV,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE;gBAC3B,IAAI,IAAI,CAAC,GAAG,KAAK,MAAM,EAAE;oBACrB,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;iBACxB;YACL,CAAC,CAAC,CAAC;SACN;IACL,CAAC;CAEJ;AA1B0B;IAAtB,sBAAM,EAAC,8BAAa,CAAC;8BAAmC,8BAAa;+DAAC;AAD9D,wBAAwB;IADpC,0BAAU,GAAE;GACA,wBAAwB,CA2BpC;AA3BY,4DAAwB;;;;;;;;;;;;ACvBrC,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAEhF,oHAA6C;AAC7C,wGAAkD;AAyClD,IAAiB,sBAAsB,CAqBtC;AArBD,WAAiB,sBAAsB;IAEnC;;OAEG;IACH,SAAgB,MAAM,CAAC,IAAwC,EAAE,KAAyC;QACtG,IAAI,IAAI,IAAI,KAAK,EAAE;YACf,OAAO,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM;mBAC5B,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM;mBAC5B,IAAI,CAAC,cAAc,KAAK,KAAK,CAAC,cAAc;mBAC5C,IAAI,CAAC,WAAW,KAAK,KAAK,CAAC,WAAW;mBACtC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;mBACvG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;mBACzG,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,KAAK,CAAC,OAAO,CAAC,MAAM;mBAC5C,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,CAAC,CAAC,KAAK,CAAC,UAAU;mBACxC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACzD;aAAM;YACH,OAAO,IAAI,KAAK,KAAK,CAAC;SACzB;IACL,CAAC;IAde,6BAAM,SAcrB;AAEL,CAAC,EArBgB,sBAAsB,GAAtB,8BAAsB,KAAtB,8BAAsB,QAqBtC;AAED;;GAEG;AACH,IAAY,aAOX;AAPD,WAAY,aAAa;IACrB,+CAAK;IACL,qDAAQ;IACR,yDAAU;IACV,uDAAS;IACT,uDAAS;IACT,6DAAY;AAChB,CAAC,EAPW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAOxB;AAED,WAAiB,aAAa;IAE1B;;OAEG;IACU,2BAAa,GAAG,CAAC,IAAmB,EAAE,KAAoB,EAAU,EAAE,CAAC,IAAI,GAAG,KAAK,CAAC;IAEjG;;;OAGG;IACU,sBAAQ,GAAG,CAAC,MAAqB,EAAE,MAAgB,EAAU,EAAE;QACxE,QAAQ,MAAM,EAAE;YACZ,KAAK,aAAa,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,UAAG,CAAC,QAAQ,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,UAAG,CAAC,QAAQ,CAAC,oBAAoB,EAAE,UAAU,CAAC,CAAC;YACpI,KAAK,aAAa,CAAC,OAAO,CAAC,CAAC,OAAO,UAAG,CAAC,QAAQ,CAAC,mBAAmB,EAAE,SAAS,CAAC,CAAC;YAChF,KAAK,aAAa,CAAC,MAAM,CAAC,CAAC,OAAO,UAAG,CAAC,QAAQ,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;YAC7E,qDAAqD;YACrD,KAAK,aAAa,CAAC,QAAQ,CAAC,CAAC,OAAO,UAAG,CAAC,QAAQ,CAAC,gCAAgC,EAAE,UAAU,CAAC,CAAC;YAC/F,qDAAqD;YACrD,KAAK,aAAa,CAAC,OAAO,CAAC,CAAC,OAAO,UAAG,CAAC,QAAQ,CAAC,+BAA+B,EAAE,SAAS,CAAC,CAAC;YAC5F,KAAK,aAAa,CAAC,UAAU,CAAC,CAAC,OAAO,UAAG,CAAC,QAAQ,CAAC,sBAAsB,EAAE,YAAY,CAAC,CAAC;YACzF,OAAO,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,8BAA8B,MAAM,GAAG,CAAC,CAAC;SACrE;IACL,CAAC,CAAC;IAEF;;OAEG;IACU,4BAAc,GAAG,CAAC,MAAqB,EAAE,MAAgB,EAAU,EAAE;QAC9E,QAAQ,MAAM,EAAE;YACZ,KAAK,aAAa,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;YACpD,KAAK,aAAa,CAAC,OAAO,CAAC,CAAC,OAAO,GAAG,CAAC;YACvC,KAAK,aAAa,CAAC,MAAM,CAAC,CAAC,OAAO,GAAG,CAAC;YACtC,KAAK,aAAa,CAAC,QAAQ,CAAC,CAAC,OAAO,GAAG,CAAC;YACxC,KAAK,aAAa,CAAC,OAAO,CAAC,CAAC,OAAO,GAAG,CAAC;YACvC,KAAK,aAAa,CAAC,UAAU,CAAC,CAAC,OAAO,GAAG,CAAC;YAC1C,OAAO,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,8BAA8B,MAAM,GAAG,CAAC,CAAC;SACrE;IACL,CAAC,CAAC;IAEF;;OAEG;IACH,SAAgB,QAAQ,CAAC,MAAqB,EAAE,MAAgB;QAC5D,QAAQ,MAAM,EAAE;YACZ,KAAK,aAAa,CAAC,GAAG,CAAC,CAAC;gBACpB,IAAI,CAAC,MAAM,EAAE;oBACT,OAAO,wDAAwD,CAAC;iBACnE;gBACD,OAAO,oDAAoD,CAAC;aAC/D;YACD,KAAK,aAAa,CAAC,OAAO,CAAC,CAAC,OAAO,wDAAwD,CAAC;YAC5F,KAAK,aAAa,CAAC,MAAM,CAAC,CAAC,gBAAgB;YAC3C,KAAK,aAAa,CAAC,QAAQ,CAAC,CAAC,OAAO,uDAAuD,CAAC;YAC5F,KAAK,aAAa,CAAC,OAAO,CAAC,CAAC,OAAO,sDAAsD,CAAC;YAC1F,KAAK,aAAa,CAAC,UAAU,CAAC,CAAC,OAAO,0DAA0D,CAAC;SACpG;IACL,CAAC;IAde,sBAAQ,WAcvB;IAED,SAAgB,eAAe,CAAC,MAAqB;QACjD,OAAO,MAAM,KAAK,aAAa,CAAC,OAAO,CAAC;IAC5C,CAAC;IAFe,6BAAe,kBAE9B;AAEL,CAAC,EA/DgB,aAAa,GAAb,qBAAa,KAAb,qBAAa,QA+D7B;AAuDD,IAAiB,UAAU,CAc1B;AAdD,WAAiB,UAAU;IACvB,SAAgB,KAAK,CAAC,UAAkC,EAAE,WAAmC;QACzF,IAAI,UAAU,IAAI,WAAW,EAAE;YAC3B,OAAO,UAAU,CAAC,QAAQ,KAAK,WAAW,CAAC,QAAQ,CAAC;SACvD;QACD,OAAO,UAAU,KAAK,WAAW,CAAC;IACtC,CAAC;IALe,gBAAK,QAKpB;IACD,SAAgB,EAAE,CAAC,UAAmB;QAClC,OAAO,mBAAQ,EAAC,UAAU,CAAC,IAAI,UAAU,IAAI,UAAU,CAAC;IAC5D,CAAC;IAFe,aAAE,KAEjB;IACD,SAAgB,YAAY,CAAC,UAA4B,EAAE,GAAiB;QACxE,MAAM,aAAa,GAAG,IAAI,aAAG,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;QACpG,OAAO,aAAa,CAAC,QAAQ,CAAC,IAAI,aAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAHe,uBAAY,eAG3B;AACL,CAAC,EAdgB,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAc1B;AAwBD;;;GAGG;AACH,IAAY,UAYX;AAZD,WAAY,UAAU;IAElB;;OAEG;IACH,6CAAS;IAET;;OAEG;IACH,+CAAU;AAEd,CAAC,EAZW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAYrB;AA4JD;;GAEG;AACH,IAAY,QA6DX;AA7DD,WAAY,QAAQ;IAChB,yEAAyB;IACzB,6EAA2B;IAC3B,qEAAuB;IACvB,iFAA6B;IAC7B,qEAAuB;IACvB,+CAAY;IACZ,6DAAmB;IACnB,2DAAkB;IAClB,6EAA2B;IAC3B,yEAAyB;IACzB,oEAAuB;IACvB,wEAAyB;IACzB,sFAAgC;IAChC,8DAAoB;IACpB,gEAAqB;IACrB,4EAA2B;IAC3B,4EAA2B;IAC3B,8DAAoB;IACpB,oEAAuB;IACvB,8FAAoC;IACpC,sEAAwB;IACxB,0EAA0B;IAC1B,wDAAiB;IACjB,0DAAkB;IAClB,gGAAqC;IACrC,kEAAsB;IACtB,sEAAwB;IACxB,sDAAgB;IAChB,kEAAsB;IACtB,0FAAkC;IAClC,gFAA6B;IAC7B,oEAAuB;IACvB,gEAAqB;IACrB,kEAAsB;IACtB,kEAAsB;IACtB,0EAA0B;IAC1B,4DAAmB;IACnB,8EAA4B;IAC5B,sEAAwB;IACxB,sEAAwB;IACxB,0FAAkC;IAClC,8BAA8B;IAC9B,4FAAmC;IACnC,0EAA0B;IAC1B,kEAAsB;IACtB,gEAAqB;IACrB,0FAAkC;IAClC,gFAA6B;IAC7B,0FAAkC;IAClC,0FAAkC;IAClC,wEAAyB;IACzB,qCAAqC;IACrC,sFAAgC;IAChC,sEAAwB;IACxB,gEAAqB;IACrB,0EAA0B;IAC1B,4EAA2B;IAC3B,sFAAgC;IAChC,8DAAoB;IACpB,0EAA0B;AAC9B,CAAC,EA7DW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QA6DnB;;;;;;;;;;;;ACreD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;;;;AAEhF,oIAAkE;AAClE,wGAA4D;AAE5D,qHAA0F;AAwB1F,IAAiB,oBAAoB,CAUpC;AAVD,WAAiB,oBAAoB;IAEjC;;;OAGG;IACH,SAAgB,EAAE,CAAC,KAAc;QAC7B,OAAO,mBAAQ,EAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,CAAC;IACzE,CAAC;IAFe,uBAAE,KAEjB;AAEL,CAAC,EAVgB,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAUpC;AAcD;;GAEG;AACU,wBAAgB,GAAG,MAAM,CAAC,kBAAkB,CAAC,CAAC;AAoB9C,6BAAqB,GAAG,MAAM,CAAC,uBAAuB,CAAC,CAAC;AAIrE,IAAa,4BAA4B,GAAzC,MAAa,4BAA4B;IAMrC,YACoD,KAA4B;QAA5B,UAAK,GAAL,KAAK,CAAuB;QALxE,oBAAe,GAAG,CAAC,CAAC;QACX,gBAAW,GAAG,IAAI,GAAG,EAAsB,CAAC;QAC5C,yBAAoB,GAAG,IAAI,GAAG,EAAkB,CAAC;QAK9D,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,UAAsB;QACxC,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACvC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAC1C,OAAO,IAAI,CAAC,iBAAiB,CAAC,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,KAAK,CAAC,iBAAiB,CAAC,OAAe;QACnC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACjC,MAAM,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACtD,IAAI,MAAM,EAAE;YACR,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACzC,OAAO,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;SAC/C;aAAM;YACH,MAAM,IAAI,KAAK,CAAC,4CAA4C,OAAO,GAAG,CAAC,CAAC;SAC3E;IACL,CAAC;IAED,OAAO;QACH,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;IAED,SAAS,CAAC,MAAwB;QAC9B,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IAEO,SAAS;QACb,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;IACpF,CAAC;IAEO,KAAK,CAAC,iBAAiB,CAAC,KAA2B;QACvD,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,KAAK,CAAC;QACpC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC5D,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAC/C,OAAO,OAAO,CAAC;IACnB,CAAC;CACJ;AA/CY,4BAA4B;IADxC,0BAAU,GAAE;IAQJ,iCAAM,EAAC,6BAAqB,CAAC;;GAPzB,4BAA4B,CA+CxC;AA/CY,oEAA4B;AAiDzC;;GAEG;AACU,sBAAc,GAAG,uBAAuB,CAAC;AAGtD,IAAa,UAAU,GAAvB,MAAa,UAAU;IAKnB,YAC+C,MAAwB;QAAxB,WAAM,GAAN,MAAM,CAAkB;QAEnE,IAAI,CAAC,SAAS,GAAG,IAAI,6BAAoB,EAAE,CAAC;QAC5C,IAAI,CAAC,iBAAiB,GAAG,IAAI,gBAAO,EAAwB,CAAC;QAE7D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC5C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACvE,CAAC;IAED,OAAO;QACH,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED,IAAI,UAAU;QACV,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;IACxC,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,KAA2B;QAC1C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,UAAsB;QACxC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC9D,MAAM,SAAS,GAAG,IAAI,6BAAoB,EAAE,CAAC;QAC7C,SAAS,CAAC,IAAI,CAAC,mBAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAChF,OAAO,SAAS,CAAC;IACrB,CAAC;CAEJ;AAlCY,UAAU;IADtB,0BAAU,GAAE;IAOJ,iCAAM,EAAC,wBAAgB,CAAC;;GANpB,UAAU,CAkCtB;AAlCY,gCAAU;;;;;;;;;;;;ACrJvB,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAGhF,wGAAmD;AACnD,gHAGqB;AAErB;;GAEG;AACU,eAAO,GAAG,eAAe,CAAC;AAEvC;;GAEG;AACU,WAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AAgzBjC;;GAEG;AACH,IAAiB,QAAQ,CAwGxB;AAxGD,WAAiB,QAAQ;IAErB;;OAEG;IACH,SAAgB,cAAc,CAAC,GAAY;QACvC,OAAO,mBAAQ,EAAC,GAAG,CAAC,IAAI,SAAS,IAAI,GAAG,CAAC;IAC7C,CAAC;IAFe,uBAAc,iBAE7B;IAED;;OAEG;IACH,SAAgB,cAAc,CAAC,GAAY;QACvC,OAAO,mBAAQ,EAAC,GAAG,CAAC,IAAI,UAAU,IAAI,GAAG,CAAC;IAC9C,CAAC;IAFe,uBAAc,iBAE7B;IAED;;OAEG;IACH,SAAgB,cAAc,CAAC,GAAY;QACvC,OAAO,mBAAQ,EAAC,GAAG,CAAC,IAAI,UAAU,IAAI,GAAG,CAAC;IAC9C,CAAC;IAFe,uBAAc,iBAE7B;IAED;;OAEG;IACH,SAAgB,YAAY,CAAC,GAAY;QACrC,OAAO,mBAAQ,EAAC,GAAG,CAAC,IAAI,MAAM,IAAI,GAAG,CAAC;IAC1C,CAAC;IAFe,qBAAY,eAE3B;IAED;;OAEG;IACH,SAAgB,gBAAgB,CAAC,GAAY;QACzC,OAAO,mBAAQ,EAAC,GAAG,CAAC,IAAI,QAAQ,IAAI,GAAG,CAAC;IAC5C,CAAC;IAFe,yBAAgB,mBAE/B;IAED;;OAEG;IACH,SAAgB,yBAAyB,CAAC,GAAY;QAClD,OAAO,mBAAQ,EAAC,GAAG,CAAC,IAAI,OAAO,IAAI,GAAG,CAAC;IAC3C,CAAC;IAFe,kCAAyB,4BAExC;IAED;;OAEG;IACH,MAAM,+BAA+B,GAAG,iCAAiC,CAAC;IAE1E;;;OAGG;IACH,SAAgB,6BAA6B,CAAC,KAAc;QACxD,iHAAiH;QACjH,mEAAmE;QACnE,IAAI,KAAK,YAAY,KAAK,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,EAAE;YAC7C,OAAQ,KAA0B,CAAC,IAAI,KAAK,+BAA+B,CAAC;SAC/E;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAPe,sCAA6B,gCAO5C;IAED;;OAEG;IACH,SAAgB,SAAS,CAAC,SAAiB;QACvC,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC;QAEhC,IAAI,MAAM,KAAK,GAAG,EAAE;YAChB,OAAO,yBAAa,CAAC,QAAQ,CAAC;SACjC,CAAC,WAAW;QACb,IAAI,MAAM,KAAK,GAAG,EAAE;YAChB,OAAO,yBAAa,CAAC,GAAG,CAAC;SAC5B,CAAC,QAAQ;QACV,IAAI,MAAM,KAAK,GAAG,EAAE;YAChB,OAAO,yBAAa,CAAC,OAAO,CAAC;SAChC,CAAC,UAAU;QACZ,IAAI,MAAM,KAAK,GAAG,EAAE;YAChB,OAAO,yBAAa,CAAC,OAAO,CAAC;SAChC,CAAC,UAAU;QACZ,IAAI,MAAM,KAAK,GAAG,EAAE;YAChB,OAAO,yBAAa,CAAC,MAAM,CAAC;SAC/B,CAAC,SAAS;QAEX,0EAA0E;QAC1E,IAAI,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;YACzB,OAAO,yBAAa,CAAC,OAAO,CAAC;SAChC;QAED,0EAA0E;QAC1E,IAAI,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;YACzB,OAAO,yBAAa,CAAC,MAAM,CAAC;SAC/B;QAED,OAAO,yBAAa,CAAC,QAAQ,CAAC;IAClC,CAAC;IA9Be,kBAAS,YA8BxB;IAED;;OAEG;IACH,SAAgB,kBAAkB,CAAC,SAAiB;QAChD,OAAO,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;IAC1F,CAAC;IAFe,2BAAkB,qBAEjC;AAEL,CAAC,EAxGgB,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAwGxB;;;;;;;;;;;;AC17BD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;;;;;;;;;AAEhF,uGAAsB;AACtB,mHAA4B;AAC5B,uHAA8B;;;;;;;;;;;;;;;;;;AClB0D;AACxF,YAAqF;;AAErF;;AAEA;AACA;;AAEA,aAAa,6FAAG,CAAC,wEAAO;;;;AAIxB,iEAAe,wEAAO,aAAa;;;;;;;;;;;;;;;;;ACZqD;AACxF,YAA0F;;AAE1F;;AAEA;AACA;;AAEA,aAAa,6FAAG,CAAC,6EAAO;;;;AAIxB,iEAAe,6EAAO,aAAa;;;;;;;;;;;;;;;;;ACZqD;AACxF,YAAsF;;AAEtF;;AAEA;AACA;;AAEA,aAAa,6FAAG,CAAC,yEAAO;;;;AAIxB,iEAAe,yEAAO,aAAa","sources":["webpack:///./node_modules/@theia/git/src/browser/style/diff.css?./node_modules/css-loader/dist/cjs.js","webpack:///./node_modules/@theia/git/src/browser/style/git-icons.css?./node_modules/css-loader/dist/cjs.js","webpack:///./node_modules/@theia/git/src/browser/style/index.css?./node_modules/css-loader/dist/cjs.js","webpack:///./node_modules/@theia/git/src/browser/blame/blame-contribution.ts?","webpack:///./node_modules/@theia/git/src/browser/blame/blame-decorator.ts?","webpack:///./node_modules/@theia/git/src/browser/blame/blame-manager.ts?","webpack:///./node_modules/@theia/git/src/browser/blame/blame-module.ts?","webpack:///./node_modules/@theia/git/src/browser/diff/git-diff-contribution.ts?","webpack:///./node_modules/@theia/git/src/browser/diff/git-diff-frontend-module.ts?","webpack:///./node_modules/@theia/git/src/browser/diff/git-diff-header-widget.tsx?","webpack:///./node_modules/@theia/git/src/browser/diff/git-diff-tree-model.tsx?","webpack:///./node_modules/@theia/git/src/browser/diff/git-diff-widget.tsx?","webpack:///./node_modules/@theia/git/src/browser/diff/git-opener-in-primary-area.ts?","webpack:///./node_modules/@theia/git/src/browser/diff/git-resource-opener.ts?","webpack:///./node_modules/@theia/git/src/browser/dirty-diff/dirty-diff-contribution.ts?","webpack:///./node_modules/@theia/git/src/browser/dirty-diff/dirty-diff-manager.ts?","webpack:///./node_modules/@theia/git/src/browser/dirty-diff/dirty-diff-module.ts?","webpack:///./node_modules/@theia/git/src/browser/git-commit-message-validator.ts?","webpack:///./node_modules/@theia/git/src/browser/git-contribution.ts?","webpack:///./node_modules/@theia/git/src/browser/git-decoration-provider.ts?","webpack:///./node_modules/@theia/git/src/browser/git-error-handler.ts?","webpack:///./node_modules/@theia/git/src/browser/git-frontend-module.ts?","webpack:///./node_modules/@theia/git/src/browser/git-preferences.ts?","webpack:///./node_modules/@theia/git/src/browser/git-quick-open-service.ts?","webpack:///./node_modules/@theia/git/src/browser/git-repository-provider.ts?","webpack:///./node_modules/@theia/git/src/browser/git-repository-tracker.ts?","webpack:///./node_modules/@theia/git/src/browser/git-resource-resolver.ts?","webpack:///./node_modules/@theia/git/src/browser/git-resource.ts?","webpack:///./node_modules/@theia/git/src/browser/git-scm-provider.ts?","webpack:///./node_modules/@theia/git/src/browser/git-sync-service.ts?","webpack:///./node_modules/@theia/git/src/browser/history/git-commit-detail-header-widget.tsx?","webpack:///./node_modules/@theia/git/src/browser/history/git-commit-detail-open-handler.ts?","webpack:///./node_modules/@theia/git/src/browser/history/git-commit-detail-widget-options.ts?","webpack:///./node_modules/@theia/git/src/browser/history/git-commit-detail-widget.tsx?","webpack:///./node_modules/@theia/git/src/browser/history/git-history-frontend-module.ts?","webpack:///./node_modules/@theia/git/src/browser/history/git-history-support.ts?","webpack:///./node_modules/@theia/git/src/browser/history/git-opener-in-secondary-area.ts?","webpack:///./node_modules/@theia/git/src/common/git-model.ts?","webpack:///./node_modules/@theia/git/src/common/git-watcher.ts?","webpack:///./node_modules/@theia/git/src/common/git.ts?","webpack:///./node_modules/@theia/git/src/common/index.ts?","webpack:///./node_modules/@theia/git/src/browser/style/diff.css?","webpack:///./node_modules/@theia/git/src/browser/style/git-icons.css?","webpack:///./node_modules/@theia/git/src/browser/style/index.css?"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.theia-git.git-diff-container {\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  height: 100%;\n}\n\n.theia-git.git-diff-container .noWrapInfo {\n  width: 100%;\n}\n\n.theia-git .listContainer {\n  flex: 1;\n  position: relative;\n}\n\n.theia-git .listContainer .commitList {\n  height: 100%;\n}\n\n.theia-git .subject {\n  font-size: var(--theia-ui-font-size2);\n  font-weight: bold;\n}\n\n.theia-git .revision .row-title {\n  width: 35px;\n  display: inline-block;\n}\n\n.theia-git .diff-header {\n  flex-shrink: 0;\n}\n\n.theia-git .header-row {\n  display: flex;\n  flex-direction: row;\n}\n\n.theia-git .header-row.diff-header,\n.theia-git .header-row.diff-nav {\n  margin-bottom: 10px;\n}\n\n.theia-git .header-value {\n  margin: 9px 0px 5px 5px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.theia-git .diff-header .header-value {\n  align-self: center;\n  margin: 0px;\n}\n\n.theia-git .diff-header .theia-header {\n  align-self: center;\n  padding-right: 5px;\n}\n\n.theia-git .diff-header .subject {\n  font-size: var(--theia-ui-font-size2);\n  font-weight: bold;\n}\n\n.theia-git .commit-info {\n  padding-left: 10px;\n  box-sizing: border-box;\n  overflow: hidden;\n}\n\n.theia-git .commit-info-row {\n  align-items: center;\n  margin-top: 10px;\n}\n\n.theia-git .commit-info .header-row {\n  margin: 4px 0;\n}\n\n.theia-git .commit-info .header-row .theia-header {\n  margin: 1px 0;\n}\n\n.theia-git .commit-info .header-row .header-value {\n  margin: 0 0 0 5px;\n}\n\n.theia-git .commit-info-row .image-container {\n  display: flex;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@theia/git/src/browser/style/diff.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,aAAa;EACb,sBAAsB;EACtB,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,OAAO;EACP,kBAAkB;AACpB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,qCAAqC;EACrC,iBAAiB;AACnB;;AAEA;EACE,WAAW;EACX,qBAAqB;AACvB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;;EAEE,mBAAmB;AACrB;;AAEA;EACE,uBAAuB;EACvB,gBAAgB;EAChB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,WAAW;AACb;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,qCAAqC;EACrC,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,sBAAsB;EACtB,gBAAgB;AAClB;;AAEA;EACE,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,aAAa;AACf\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2018 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-git.git-diff-container {\\n  display: flex;\\n  flex-direction: column;\\n  position: relative;\\n  height: 100%;\\n}\\n\\n.theia-git.git-diff-container .noWrapInfo {\\n  width: 100%;\\n}\\n\\n.theia-git .listContainer {\\n  flex: 1;\\n  position: relative;\\n}\\n\\n.theia-git .listContainer .commitList {\\n  height: 100%;\\n}\\n\\n.theia-git .subject {\\n  font-size: var(--theia-ui-font-size2);\\n  font-weight: bold;\\n}\\n\\n.theia-git .revision .row-title {\\n  width: 35px;\\n  display: inline-block;\\n}\\n\\n.theia-git .diff-header {\\n  flex-shrink: 0;\\n}\\n\\n.theia-git .header-row {\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.theia-git .header-row.diff-header,\\n.theia-git .header-row.diff-nav {\\n  margin-bottom: 10px;\\n}\\n\\n.theia-git .header-value {\\n  margin: 9px 0px 5px 5px;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n\\n.theia-git .diff-header .header-value {\\n  align-self: center;\\n  margin: 0px;\\n}\\n\\n.theia-git .diff-header .theia-header {\\n  align-self: center;\\n  padding-right: 5px;\\n}\\n\\n.theia-git .diff-header .subject {\\n  font-size: var(--theia-ui-font-size2);\\n  font-weight: bold;\\n}\\n\\n.theia-git .commit-info {\\n  padding-left: 10px;\\n  box-sizing: border-box;\\n  overflow: hidden;\\n}\\n\\n.theia-git .commit-info-row {\\n  align-items: center;\\n  margin-top: 10px;\\n}\\n\\n.theia-git .commit-info .header-row {\\n  margin: 4px 0;\\n}\\n\\n.theia-git .commit-info .header-row .theia-header {\\n  margin: 1px 0;\\n}\\n\\n.theia-git .commit-info .header-row .header-value {\\n  margin: 0 0 0 5px;\\n}\\n\\n.theia-git .commit-info-row .image-container {\\n  display: flex;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../../../css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"octicons/build/svg/git-commit.svg\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.icon-git-commit {\n  mask-repeat: no-repeat;\n  mask-position: center;\n  -webkit-mask-repeat: no-repeat;\n  -webkit-mask-position: center;\n  mask-image: url(${___CSS_LOADER_URL_REPLACEMENT_0___});\n  -webkit-mask-image: url(${___CSS_LOADER_URL_REPLACEMENT_0___});\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@theia/git/src/browser/style/git-icons.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,sBAAsB;EACtB,qBAAqB;EACrB,8BAA8B;EAC9B,6BAA6B;EAC7B,mDAAqD;EACrD,2DAA6D;AAC/D\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2018 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.icon-git-commit {\\n  mask-repeat: no-repeat;\\n  mask-position: center;\\n  -webkit-mask-repeat: no-repeat;\\n  -webkit-mask-position: center;\\n  mask-image: url(\\\"~octicons/build/svg/git-commit.svg\\\");\\n  -webkit-mask-image: url(\\\"~octicons/build/svg/git-commit.svg\\\");\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.theia-git {\n  padding: 5px;\n  box-sizing: border-box;\n}\n\n.theia-side-panel .theia-git {\n  padding-left: 19px;\n}\n\n.theia-git .space-between {\n  justify-content: space-between;\n}\n\n.theia-scm .scmItem .git-status.new {\n  color: var(--theia-gitDecoration-untrackedResourceForeground);\n}\n\n.theia-scm .scmItem .git-status.new.staged {\n  color: var(--theia-gitDecoration-addedResourceForeground);\n}\n\n.theia-scm .scmItem .git-status.modified {\n  color: var(--theia-gitDecoration-modifiedResourceForeground);\n}\n\n.theia-scm .scmItem .git-status.deleted {\n  color: var(--theia-gitDecoration-deletedResourceForeground);\n}\n\n.theia-scm .scmItem .git-status.renamed {\n  color: var(--theia-gitDecoration-untrackedResourceForeground);\n}\n\n.theia-scm .scmItem .git-status.conflicted {\n  color: var(--theia-gitDecoration-conflictingResourceForeground);\n}\n\n.theia-scm .scmItem .git-status.copied {\n  color: var(--theia-gitDecoration-modifiedResourceForeground);\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@theia/git/src/browser/style/index.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,YAAY;EACZ,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,6DAA6D;AAC/D;;AAEA;EACE,yDAAyD;AAC3D;;AAEA;EACE,4DAA4D;AAC9D;;AAEA;EACE,2DAA2D;AAC7D;;AAEA;EACE,6DAA6D;AAC/D;;AAEA;EACE,+DAA+D;AACjE;;AAEA;EACE,4DAA4D;AAC9D\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2018 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-git {\\n  padding: 5px;\\n  box-sizing: border-box;\\n}\\n\\n.theia-side-panel .theia-git {\\n  padding-left: 19px;\\n}\\n\\n.theia-git .space-between {\\n  justify-content: space-between;\\n}\\n\\n.theia-scm .scmItem .git-status.new {\\n  color: var(--theia-gitDecoration-untrackedResourceForeground);\\n}\\n\\n.theia-scm .scmItem .git-status.new.staged {\\n  color: var(--theia-gitDecoration-addedResourceForeground);\\n}\\n\\n.theia-scm .scmItem .git-status.modified {\\n  color: var(--theia-gitDecoration-modifiedResourceForeground);\\n}\\n\\n.theia-scm .scmItem .git-status.deleted {\\n  color: var(--theia-gitDecoration-deletedResourceForeground);\\n}\\n\\n.theia-scm .scmItem .git-status.renamed {\\n  color: var(--theia-gitDecoration-untrackedResourceForeground);\\n}\\n\\n.theia-scm .scmItem .git-status.conflicted {\\n  color: var(--theia-gitDecoration-conflictingResourceForeground);\\n}\\n\\n.theia-scm .scmItem .git-status.copied {\\n  color: var(--theia-gitDecoration-modifiedResourceForeground);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { KeybindingContribution, KeybindingRegistry } from '@theia/core/lib/browser';\nimport { CommandContribution, CommandRegistry, Command, MenuContribution, MenuModelRegistry, DisposableCollection } from '@theia/core/lib/common';\nimport { BlameDecorator } from './blame-decorator';\nimport { EditorManager, EditorWidget } from '@theia/editor/lib/browser';\nimport { BlameManager } from './blame-manager';\nimport URI from '@theia/core/lib/common/uri';\nimport { EDITOR_CONTEXT_MENU_SCM } from '@theia/scm-extra/lib/browser/scm-extra-contribution';\nimport { ContextKey, ContextKeyService } from '@theia/core/lib/browser/context-key-service';\n\nimport debounce = require('@theia/core/shared/lodash.debounce');\n\nexport namespace BlameCommands {\n    export const TOGGLE_GIT_ANNOTATIONS = Command.toLocalizedCommand({\n        id: 'git.editor.toggle.annotations',\n        category: 'Git',\n        label: 'Toggle Blame Annotations'\n    }, 'theia/git/toggleBlameAnnotations', 'vscode.git/package/displayName');\n    export const CLEAR_GIT_ANNOTATIONS: Command = {\n        id: 'git.editor.clear.annotations'\n    };\n}\n\n@injectable()\nexport class BlameContribution implements CommandContribution, KeybindingContribution, MenuContribution {\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    @inject(BlameDecorator)\n    protected readonly decorator: BlameDecorator;\n\n    @inject(BlameManager)\n    protected readonly blameManager: BlameManager;\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    protected _visibleBlameAnnotations: ContextKey<boolean>;\n\n    @postConstruct()\n    protected init(): void {\n        this._visibleBlameAnnotations = this.contextKeyService.createKey<boolean>('showsBlameAnnotations', this.visibleBlameAnnotations());\n        this.editorManager.onActiveEditorChanged(() => this.updateContext());\n    }\n\n    protected updateContext(): void {\n        this._visibleBlameAnnotations.set(this.visibleBlameAnnotations());\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(BlameCommands.TOGGLE_GIT_ANNOTATIONS, {\n            execute: () => {\n                const editorWidget = this.currentFileEditorWidget;\n                if (editorWidget) {\n                    if (this.showsBlameAnnotations(editorWidget.editor.uri)) {\n                        this.clearBlame(editorWidget.editor.uri);\n                    } else {\n                        this.showBlame(editorWidget);\n                    }\n                }\n            },\n            isVisible: () => !!this.currentFileEditorWidget,\n            isEnabled: () => {\n                const editorWidget = this.currentFileEditorWidget;\n                return !!editorWidget && this.isBlameable(editorWidget.editor.uri);\n            }\n        });\n        commands.registerCommand(BlameCommands.CLEAR_GIT_ANNOTATIONS, {\n            execute: () => {\n                const editorWidget = this.currentFileEditorWidget;\n                if (editorWidget) {\n                    this.clearBlame(editorWidget.editor.uri);\n                }\n            },\n            isVisible: () => !!this.currentFileEditorWidget,\n            isEnabled: () => {\n                const editorWidget = this.currentFileEditorWidget;\n                const enabled = !!editorWidget && this.showsBlameAnnotations(editorWidget.editor.uri);\n                return enabled;\n            }\n        });\n    }\n\n    showsBlameAnnotations(uri: string | URI): boolean {\n        return this.appliedDecorations.get(uri.toString())?.disposed === false;\n    }\n\n    protected get currentFileEditorWidget(): EditorWidget | undefined {\n        const editorWidget = this.editorManager.currentEditor;\n        if (editorWidget) {\n            if (editorWidget.editor.uri.scheme === 'file') {\n                return editorWidget;\n            }\n        }\n        return undefined;\n    }\n\n    protected isBlameable(uri: string | URI): boolean {\n        return this.blameManager.isBlameable(uri.toString());\n    }\n\n    protected visibleBlameAnnotations(): boolean {\n        const widget = this.editorManager.activeEditor;\n        if (widget && widget.editor.isFocused() && this.showsBlameAnnotations(widget.editor.uri)) {\n            return true;\n        }\n        return false;\n    }\n\n    protected appliedDecorations = new Map<string, DisposableCollection>();\n\n    protected async showBlame(editorWidget: EditorWidget): Promise<void> {\n        const uri = editorWidget.editor.uri.toString();\n        if (this.appliedDecorations.get(uri)) {\n            return;\n        }\n        const toDispose = new DisposableCollection();\n        this.appliedDecorations.set(uri, toDispose);\n        try {\n            const editor = editorWidget.editor;\n            const document = editor.document;\n            const content = document.dirty ? document.getText() : undefined;\n            const blame = await this.blameManager.getBlame(uri, content);\n            if (blame) {\n                toDispose.push(this.decorator.decorate(blame, editor, editor.cursor.line));\n                toDispose.push(editor.onDocumentContentChanged(() => this.clearBlame(uri)));\n                toDispose.push(editor.onCursorPositionChanged(debounce(_position => {\n                    if (!toDispose.disposed) {\n                        this.decorator.decorate(blame, editor, editor.cursor.line);\n                    }\n                }, 50)));\n                editorWidget.disposed.connect(() => this.clearBlame(uri));\n            }\n        } finally {\n            if (toDispose.disposed) {\n                this.appliedDecorations.delete(uri);\n            };\n            this.updateContext();\n        }\n    }\n\n    protected clearBlame(uri: string | URI): void {\n        const decorations = this.appliedDecorations.get(uri.toString());\n        if (decorations) {\n            this.appliedDecorations.delete(uri.toString());\n            decorations.dispose();\n            this.updateContext();\n        }\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction(EDITOR_CONTEXT_MENU_SCM, {\n            commandId: BlameCommands.TOGGLE_GIT_ANNOTATIONS.id,\n        });\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        keybindings.registerKeybinding({\n            command: BlameCommands.TOGGLE_GIT_ANNOTATIONS.id,\n            when: 'editorTextFocus',\n            keybinding: 'alt+b'\n        });\n        keybindings.registerKeybinding({\n            command: BlameCommands.CLEAR_GIT_ANNOTATIONS.id,\n            when: 'showsBlameAnnotations',\n            keybinding: 'esc'\n        });\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { EditorManager, TextEditor, EditorDecoration, EditorDecorationOptions, Range, Position, EditorDecorationStyle } from '@theia/editor/lib/browser';\nimport { GitFileBlame } from '../../common';\nimport { Disposable, DisposableCollection, nls } from '@theia/core';\nimport { DateTime } from 'luxon';\nimport URI from '@theia/core/lib/common/uri';\nimport { DecorationStyle } from '@theia/core/lib/browser';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { LanguageSelector } from '@theia/monaco-editor-core/esm/vs/editor/common/languageSelector';\n\n@injectable()\nexport class BlameDecorator implements monaco.languages.HoverProvider {\n\n    constructor(\n        protected blameDecorationsStyleSheet: CSSStyleSheet = DecorationStyle.createStyleSheet('gitBlameDecorationsStyle')\n    ) {\n        DecorationStyle.getOrCreateStyleRule(`.${BlameDecorator.GIT_BLAME_HIGHLIGHT}`,\n            this.blameDecorationsStyleSheet).style.backgroundColor = 'var(--theia-gitlens-lineHighlightBackgroundColor)';\n        DecorationStyle.getOrCreateStyleRule(`.${BlameDecorator.GIT_BLAME_CONTINUATION_LINE}::before`, this.blameDecorationsStyleSheet).style.content = \"'\\u2007'\"; // blank\n        DecorationStyle.getOrCreateStyleRule(`.${BlameDecorator.GIT_BLAME_CONTINUATION_LINE}::after`, this.blameDecorationsStyleSheet).style.content = \"'\\u2007'\"; // blank;\n    }\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    protected registerHoverProvider(uri: string): Disposable {\n        // The public typedef of this method only accepts strings, but it immediately delegates to a method that accepts LanguageSelectors.\n        return (monaco.languages.registerHoverProvider as (languageId: LanguageSelector, provider: monaco.languages.HoverProvider) => Disposable)\n            ([{ pattern: new URI(uri).path.toString() }], this);\n    }\n\n    protected emptyHover: monaco.languages.Hover = {\n        contents: [{\n            value: ''\n        }]\n    };\n\n    async provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken): Promise<monaco.languages.Hover> {\n        const line = position.lineNumber - 1;\n        const uri = model.uri.toString();\n        const applications = this.appliedDecorations.get(uri);\n        if (!applications) {\n            return this.emptyHover;\n        }\n        const blame = applications.blame;\n        if (!blame) {\n            return this.emptyHover;\n        }\n        const commitLine = blame.lines.find(l => l.line === line);\n        if (!commitLine) {\n            return this.emptyHover;\n        }\n        const sha = commitLine.sha;\n        const commit = blame.commits.find(c => c.sha === sha)!;\n        const date = new Date(commit.author.timestamp);\n        let commitMessage = commit.summary + '\\n' + (commit.body || '');\n        commitMessage = commitMessage.replace(/[`\\>\\#\\*\\_\\-\\+]/g, '\\\\$&').replace(/\\n/g, '  \\n');\n        const value = `${commit.sha}\\n \\n ${commit.author.name}, ${date.toString()}\\n \\n> ${commitMessage}`;\n\n        const hover = {\n            contents: [{ value }],\n            range: monaco.Range.fromPositions(new monaco.Position(position.lineNumber, 1), new monaco.Position(position.lineNumber, 10 ^ 10))\n        };\n        return hover;\n    }\n\n    protected appliedDecorations = new Map<string, AppliedBlameDecorations>();\n\n    decorate(blame: GitFileBlame, editor: TextEditor, highlightLine: number): Disposable {\n        const uri = editor.uri.toString();\n        let applications = this.appliedDecorations.get(uri);\n        if (!applications) {\n            const that = applications = new AppliedBlameDecorations();\n            this.appliedDecorations.set(uri, applications);\n            applications.toDispose.push(this.registerHoverProvider(uri));\n            applications.toDispose.push(Disposable.create(() => {\n                this.appliedDecorations.delete(uri);\n            }));\n            applications.toDispose.push(Disposable.create(() => {\n                editor.deltaDecorations({ oldDecorations: that.previousDecorations, newDecorations: [] });\n            }));\n        }\n        if (applications.highlightedSha) {\n            const sha = this.getShaForLine(blame, highlightLine);\n            if (applications.highlightedSha === sha) {\n                return applications;\n            }\n            applications.highlightedSha = sha;\n        }\n        applications.previousStyles.dispose();\n        const blameDecorations = this.toDecorations(blame, highlightLine);\n        applications.previousStyles.pushAll(blameDecorations.styles);\n        const newDecorations = blameDecorations.editorDecorations;\n        const oldDecorations = applications.previousDecorations;\n        const appliedDecorations = editor.deltaDecorations({ oldDecorations, newDecorations });\n        applications.previousDecorations.length = 0;\n        applications.previousDecorations.push(...appliedDecorations);\n        applications.blame = blame;\n        return applications;\n    }\n\n    protected getShaForLine(blame: GitFileBlame, line: number): string | undefined {\n        const commitLines = blame.lines;\n        const commitLine = commitLines.find(c => c.line === line);\n        return commitLine ? commitLine.sha : undefined;\n    }\n\n    protected toDecorations(blame: GitFileBlame, highlightLine: number): BlameDecorations {\n        const beforeContentStyles = new Map<string, EditorDecorationStyle>();\n        const commits = blame.commits;\n        for (const commit of commits) {\n            const sha = commit.sha;\n            const commitTime = DateTime.fromISO(commit.author.timestamp);\n            const heat = this.getHeatColor(commitTime);\n            const content = commit.summary.replace('\\n', '↩︎').replace(/'/g, \"\\\\'\");\n            const short = sha.substring(0, 7);\n            new EditorDecorationStyle('.git-' + short, style => {\n                Object.assign(style, BlameDecorator.defaultGutterStyles);\n                style.borderColor = heat;\n            }, this.blameDecorationsStyleSheet);\n            beforeContentStyles.set(sha, new EditorDecorationStyle('.git-' + short + '::before', style => {\n                Object.assign(style, BlameDecorator.defaultGutterBeforeStyles);\n                style.content = `'${content}'`;\n            }, this.blameDecorationsStyleSheet));\n            new EditorDecorationStyle('.git-' + short + '::after', style => {\n                Object.assign(style, BlameDecorator.defaultGutterAfterStyles);\n                style.content = (this.now.diff(commitTime, 'seconds').toObject().seconds ?? 0) < 60\n                    ? `'${nls.localize('theia/git/aFewSecondsAgo', 'a few seconds ago')}'`\n                    : `'${commitTime.toRelative({ locale: nls.locale })}'`;\n            }, this.blameDecorationsStyleSheet);\n        }\n        const commitLines = blame.lines;\n        const highlightedSha = this.getShaForLine(blame, highlightLine) || '';\n        let previousLineSha = '';\n        const editorDecorations: EditorDecoration[] = [];\n\n        for (const commitLine of commitLines) {\n            const { line, sha } = commitLine;\n            const beforeContentClassName = beforeContentStyles.get(sha)!.className;\n            const options = <EditorDecorationOptions>{\n                beforeContentClassName,\n            };\n            if (sha === highlightedSha) {\n                options.beforeContentClassName += ' ' + BlameDecorator.GIT_BLAME_HIGHLIGHT;\n            }\n            if (sha === previousLineSha) {\n                options.beforeContentClassName += ' ' + BlameDecorator.GIT_BLAME_CONTINUATION_LINE + ' ' + BlameDecorator.GIT_BLAME_CONTINUATION_LINE;\n            }\n            previousLineSha = sha;\n            const range = Range.create(Position.create(line, 0), Position.create(line, 0));\n            editorDecorations.push(<EditorDecoration>{ range, options });\n        }\n        const styles = [...beforeContentStyles.values()];\n        return { editorDecorations, styles };\n    }\n\n    protected now = DateTime.now();\n    protected getHeatColor(commitTime: DateTime): string {\n        const daysFromNow = this.now.diff(commitTime, 'days').toObject().days ?? 0;\n        if (daysFromNow <= 2) {\n            return 'var(--md-orange-50)';\n        }\n        if (daysFromNow <= 5) {\n            return 'var(--md-orange-100)';\n        }\n        if (daysFromNow <= 10) {\n            return 'var(--md-orange-200)';\n        }\n        if (daysFromNow <= 15) {\n            return 'var(--md-orange-300)';\n        }\n        if (daysFromNow <= 60) {\n            return 'var(--md-orange-400)';\n        }\n        if (daysFromNow <= 180) {\n            return 'var(--md-deep-orange-600)';\n        }\n        if (daysFromNow <= 365) {\n            return 'var(--md-deep-orange-700)';\n        }\n        if (daysFromNow <= 720) {\n            return 'var(--md-deep-orange-800)';\n        }\n        return 'var(--md-deep-orange-900)';\n    }\n\n}\n\nexport namespace BlameDecorator {\n\n    export const GIT_BLAME_HIGHLIGHT = 'git-blame-highlight';\n    export const GIT_BLAME_CONTINUATION_LINE = 'git-blame-continuation-line';\n\n    export const defaultGutterStyles = <CSSStyleDeclaration>{\n        display: 'inline-flex',\n        width: '50ch',\n        marginRight: '26px',\n        justifyContent: 'space-between',\n        backgroundColor: 'var(--theia-gitlens-gutterBackgroundColor)',\n        borderRight: '2px solid',\n        height: '100%',\n        overflow: 'hidden'\n    };\n\n    export const defaultGutterBeforeStyles = <CSSStyleDeclaration>{\n        color: 'var(--theia-gitlens-gutterForegroundColor)',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    };\n\n    export const defaultGutterAfterStyles = <CSSStyleDeclaration>{\n        color: 'var(--theia-gitlens-gutterForegroundColor)',\n        marginLeft: '12px'\n    };\n}\n\nexport interface BlameDecorations {\n    editorDecorations: EditorDecoration[]\n    styles: EditorDecorationStyle[]\n}\n\nexport class AppliedBlameDecorations implements Disposable {\n    readonly toDispose = new DisposableCollection();\n    readonly previousStyles = new DisposableCollection();\n    readonly previousDecorations: string[] = [];\n    blame: GitFileBlame | undefined;\n    highlightedSha: string | undefined;\n\n    dispose(): void {\n        this.previousStyles.dispose();\n        this.toDispose.dispose();\n        this.blame = undefined;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { Git, GitFileBlame } from '../../common';\nimport { GitRepositoryTracker } from '../git-repository-tracker';\nimport URI from '@theia/core/lib/common/uri';\n\n@injectable()\nexport class BlameManager {\n\n    @inject(Git)\n    protected readonly git: Git;\n\n    @inject(GitRepositoryTracker)\n    protected readonly repositoryTracker: GitRepositoryTracker;\n\n    isBlameable(uri: string): boolean {\n        return !!this.repositoryTracker.getPath(new URI(uri));\n    }\n\n    async getBlame(uri: string, content?: string): Promise<GitFileBlame | undefined> {\n        const repository = this.repositoryTracker.selectedRepository;\n        if (!repository) {\n            return undefined;\n        }\n        return this.git.blame(repository, uri, { content });\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { KeybindingContribution } from '@theia/core/lib/browser';\nimport { CommandContribution, MenuContribution } from '@theia/core/lib/common';\nimport { BlameContribution } from './blame-contribution';\nimport { BlameDecorator } from './blame-decorator';\nimport { BlameManager } from './blame-manager';\n\nexport function bindBlame(bind: interfaces.Bind): void {\n    bind(BlameContribution).toSelf().inSingletonScope();\n    bind(BlameManager).toSelf().inSingletonScope();\n    bind(BlameDecorator).toSelf().inSingletonScope();\n    for (const serviceIdentifier of [CommandContribution, KeybindingContribution, MenuContribution]) {\n        bind(serviceIdentifier).toService(BlameContribution);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { CommandRegistry, Command, MenuModelRegistry, SelectionService, MessageService } from '@theia/core/lib/common';\nimport { FrontendApplication, AbstractViewContribution, codicon, open, OpenerService } from '@theia/core/lib/browser';\nimport { WidgetManager } from '@theia/core/lib/browser/widget-manager';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { GitDiffWidget, GIT_DIFF } from './git-diff-widget';\nimport { GitCommitDetailWidget } from '../history/git-commit-detail-widget';\nimport { GitDiffTreeModel } from './git-diff-tree-model';\nimport { ScmService } from '@theia/scm/lib/browser/scm-service';\nimport { NavigatorContextMenu, FileNavigatorContribution } from '@theia/navigator/lib/browser/navigator-contribution';\nimport { UriCommandHandler } from '@theia/core/lib/common/uri-command-handler';\nimport { GitQuickOpenService } from '../git-quick-open-service';\nimport { DiffUris } from '@theia/core/lib/browser/diff-uris';\nimport URI from '@theia/core/lib/common/uri';\nimport { GIT_RESOURCE_SCHEME } from '../git-resource';\nimport { Git, Repository } from '../../common';\nimport { WorkspaceRootUriAwareCommandHandler } from '@theia/workspace/lib/browser/workspace-commands';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry, TabBarToolbarItem } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { Emitter } from '@theia/core/lib/common/event';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport namespace GitDiffCommands {\n    export const OPEN_FILE_DIFF = Command.toLocalizedCommand({\n        id: 'git-diff:open-file-diff',\n        category: 'Git Diff',\n        label: 'Compare With...'\n    }, 'theia/git/compareWith');\n    export const TREE_VIEW_MODE = {\n        id: 'git.viewmode.tree',\n        tooltip: nls.localizeByDefault('View as Tree'),\n        iconClass: codicon('list-tree'),\n        originalLabel: 'View as Tree',\n        label: nls.localizeByDefault('View as Tree')\n    };\n    export const LIST_VIEW_MODE = {\n        id: 'git.viewmode.list',\n        tooltip: nls.localizeByDefault('View as List'),\n        iconClass: codicon('list-flat'),\n        originalLabel: 'View as List',\n        label: nls.localizeByDefault('View as List')\n    };\n    export const PREVIOUS_CHANGE = {\n        id: 'git.navigate-changes.previous',\n        tooltip: nls.localizeByDefault('Previous Change'),\n        iconClass: codicon('arrow-left'),\n        originalLabel: 'Previous Change',\n        label: nls.localizeByDefault('Previous Change')\n    };\n    export const NEXT_CHANGE = {\n        id: 'git.navigate-changes.next',\n        tooltip: nls.localizeByDefault('Next Change'),\n        iconClass: codicon('arrow-right'),\n        originalLabel: 'Next Change',\n        label: nls.localizeByDefault('Next Change')\n    };\n}\n\nexport namespace ScmNavigatorMoreToolbarGroups {\n    export const SCM = '3_navigator_scm';\n}\n\n@injectable()\nexport class GitDiffContribution extends AbstractViewContribution<GitDiffWidget> implements TabBarToolbarContribution {\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    @inject(CommandRegistry)\n    protected readonly commandRegistry: CommandRegistry;\n\n    @inject(FileNavigatorContribution)\n    protected readonly fileNavigatorContribution: FileNavigatorContribution;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    constructor(\n        @inject(SelectionService) protected readonly selectionService: SelectionService,\n        @inject(WidgetManager) protected override readonly widgetManager: WidgetManager,\n        @inject(FrontendApplication) protected readonly app: FrontendApplication,\n        @inject(GitQuickOpenService) protected readonly quickOpenService: GitQuickOpenService,\n        @inject(FileService) protected readonly fileService: FileService,\n        @inject(OpenerService) protected openerService: OpenerService,\n        @inject(MessageService) protected readonly notifications: MessageService,\n        @inject(ScmService) protected readonly scmService: ScmService\n    ) {\n        super({\n            widgetId: GIT_DIFF,\n            widgetName: 'Git diff',\n            defaultWidgetOptions: {\n                area: 'left',\n                rank: 500\n            }\n        });\n    }\n\n    override registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction(NavigatorContextMenu.COMPARE, {\n            commandId: GitDiffCommands.OPEN_FILE_DIFF.id\n        });\n    }\n\n    override registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(GitDiffCommands.OPEN_FILE_DIFF, this.newWorkspaceRootUriAwareCommandHandler({\n            isVisible: uri => !!this.findGitRepository(uri),\n            isEnabled: uri => !!this.findGitRepository(uri),\n            execute: async fileUri => {\n                const repository = this.findGitRepository(fileUri);\n                if (repository) {\n                    await this.quickOpenService.chooseTagsAndBranches(\n                        async (fromRevision, toRevision) => {\n                            const uri = fileUri.toString();\n                            const fileStat = await this.fileService.resolve(fileUri);\n                            const diffOptions: Git.Options.Diff = {\n                                uri,\n                                range: {\n                                    fromRevision\n                                }\n                            };\n                            if (fileStat.isDirectory) {\n                                this.showWidget({ rootUri: repository.localUri, diffOptions });\n                            } else {\n                                const fromURI = fileUri.withScheme(GIT_RESOURCE_SCHEME).withQuery(fromRevision);\n                                const toURI = fileUri;\n                                const diffUri = DiffUris.encode(fromURI, toURI);\n                                if (diffUri) {\n                                    open(this.openerService, diffUri).catch(e => {\n                                        this.notifications.error(e.message);\n                                    });\n                                }\n                            }\n                        }, repository);\n                }\n            }\n        }));\n        commands.registerCommand(GitDiffCommands.PREVIOUS_CHANGE, {\n            execute: widget => {\n                if (widget instanceof GitDiffWidget) {\n                    widget.goToPreviousChange();\n                }\n            },\n            isVisible: widget => widget instanceof GitDiffWidget,\n        });\n        commands.registerCommand(GitDiffCommands.NEXT_CHANGE, {\n            execute: widget => {\n                if (widget instanceof GitDiffWidget) {\n                    widget.goToNextChange();\n                }\n            },\n            isVisible: widget => widget instanceof GitDiffWidget,\n        });\n    }\n\n    registerToolbarItems(registry: TabBarToolbarRegistry): void {\n        this.fileNavigatorContribution.registerMoreToolbarItem({\n            id: GitDiffCommands.OPEN_FILE_DIFF.id,\n            command: GitDiffCommands.OPEN_FILE_DIFF.id,\n            tooltip: GitDiffCommands.OPEN_FILE_DIFF.label,\n            group: ScmNavigatorMoreToolbarGroups.SCM,\n        });\n\n        const viewModeEmitter = new Emitter<void>();\n        const extractDiffWidget = (widget: unknown) => {\n            if (widget instanceof GitDiffWidget) {\n                return widget;\n            }\n        };\n        const extractCommitDetailWidget = (widget: unknown) => {\n            const ref = widget ? widget : this.editorManager.currentEditor;\n            if (ref instanceof GitCommitDetailWidget) {\n                return ref;\n            }\n            return undefined;\n        };\n        const registerToggleViewItem = (command: Command, mode: 'tree' | 'list') => {\n            const id = command.id;\n            const item: TabBarToolbarItem = {\n                id,\n                command: id,\n                tooltip: command.label,\n                onDidChange: viewModeEmitter.event\n            };\n\n            this.commandRegistry.registerCommand({ id, iconClass: command && command.iconClass }, {\n                execute: widget => {\n                    const widgetWithChanges = extractDiffWidget(widget) || extractCommitDetailWidget(widget);\n                    if (widgetWithChanges) {\n                        widgetWithChanges.viewMode = mode;\n                        viewModeEmitter.fire();\n                    }\n                },\n                isVisible: widget => {\n                    const widgetWithChanges = extractDiffWidget(widget) || extractCommitDetailWidget(widget);\n                    if (widgetWithChanges) {\n                        return widgetWithChanges.viewMode !== mode;\n                    }\n                    return false;\n                },\n            });\n            registry.registerItem(item);\n        };\n        registerToggleViewItem(GitDiffCommands.TREE_VIEW_MODE, 'tree');\n        registerToggleViewItem(GitDiffCommands.LIST_VIEW_MODE, 'list');\n\n        registry.registerItem({\n            id: GitDiffCommands.PREVIOUS_CHANGE.id,\n            command: GitDiffCommands.PREVIOUS_CHANGE.id,\n            tooltip: GitDiffCommands.PREVIOUS_CHANGE.label,\n        });\n        registry.registerItem({\n            id: GitDiffCommands.NEXT_CHANGE.id,\n            command: GitDiffCommands.NEXT_CHANGE.id,\n            tooltip: GitDiffCommands.NEXT_CHANGE.label,\n        });\n    }\n\n    protected findGitRepository(uri: URI): Repository | undefined {\n        const repo = this.scmService.findRepository(uri);\n        if (repo && repo.provider.id === 'git') {\n            return { localUri: repo.provider.rootUri };\n        }\n        return undefined;\n    }\n\n    async showWidget(options: GitDiffTreeModel.Options): Promise<GitDiffWidget> {\n        const widget = await this.widget;\n        await widget.setContent(options);\n        return this.openView({\n            activate: true\n        });\n    }\n\n    protected newWorkspaceRootUriAwareCommandHandler(handler: UriCommandHandler<URI>): WorkspaceRootUriAwareCommandHandler {\n        return new WorkspaceRootUriAwareCommandHandler(this.workspaceService, this.selectionService, handler);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces, Container } from '@theia/core/shared/inversify';\nimport { GitDiffContribution } from './git-diff-contribution';\nimport { WidgetFactory, bindViewContribution, TreeModel } from '@theia/core/lib/browser';\nimport { GitDiffWidget, GIT_DIFF } from './git-diff-widget';\nimport { GitDiffHeaderWidget } from './git-diff-header-widget';\nimport { GitDiffTreeModel } from './git-diff-tree-model';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { createScmTreeContainer } from '@theia/scm/lib/browser/scm-frontend-module';\nimport { GitResourceOpener } from './git-resource-opener';\nimport { GitOpenerInPrimaryArea } from './git-opener-in-primary-area';\nimport '../../../src/browser/style/diff.css';\n\nexport function bindGitDiffModule(bind: interfaces.Bind): void {\n\n    bind(GitDiffWidget).toSelf();\n    bind(WidgetFactory).toDynamicValue(ctx => ({\n        id: GIT_DIFF,\n        createWidget: () => {\n            const child = createGitDiffWidgetContainer(ctx.container);\n            return child.get(GitDiffWidget);\n        }\n    })).inSingletonScope();\n\n    bindViewContribution(bind, GitDiffContribution);\n    bind(TabBarToolbarContribution).toService(GitDiffContribution);\n\n}\n\nexport function createGitDiffWidgetContainer(parent: interfaces.Container): Container {\n    const child = createScmTreeContainer(parent);\n\n    child.bind(GitDiffHeaderWidget).toSelf();\n    child.bind(GitDiffTreeModel).toSelf();\n    child.bind(TreeModel).toService(GitDiffTreeModel);\n    child.bind(GitResourceOpener).to(GitOpenerInPrimaryArea);\n    return child;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { ScmService } from '@theia/scm/lib/browser/scm-service';\nimport { LabelProvider } from '@theia/core/lib/browser/label-provider';\nimport { ScmFileChangeLabelProvider } from '@theia/scm-extra/lib/browser/scm-file-change-label-provider';\nimport { ReactWidget, StatefulWidget, KeybindingRegistry, codicon } from '@theia/core/lib/browser';\nimport { Git } from '../../common';\nimport * as React from '@theia/core/shared/react';\n\n/* eslint-disable no-null/no-null */\n\n@injectable()\nexport class GitDiffHeaderWidget extends ReactWidget implements StatefulWidget {\n\n    @inject(KeybindingRegistry) protected readonly keybindings: KeybindingRegistry;\n    @inject(ScmService) protected readonly scmService: ScmService;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(ScmFileChangeLabelProvider) protected readonly scmLabelProvider: ScmFileChangeLabelProvider;\n\n    protected options: Git.Options.Diff;\n\n    protected authorAvatar: string;\n\n    constructor(\n    ) {\n        super();\n        this.id = 'git-diff-header';\n        this.title.closable = true;\n        this.title.iconClass = codicon('git-commit');\n    }\n\n    async setContent(options: Git.Options.Diff): Promise<void> {\n        this.options = options;\n        this.update();\n    }\n\n    protected render(): React.ReactNode {\n        return React.createElement('div', this.createContainerAttributes(), this.renderDiffListHeader());\n    }\n\n    /**\n     * Create the container attributes for the widget.\n     */\n    protected createContainerAttributes(): React.HTMLAttributes<HTMLElement> {\n        return {\n            style: { flexGrow: 0 }\n        };\n    }\n\n    protected renderDiffListHeader(): React.ReactNode {\n        return this.doRenderDiffListHeader(\n            this.renderRepositoryHeader(),\n            this.renderPathHeader(),\n            this.renderRevisionHeader(),\n        );\n    }\n\n    protected doRenderDiffListHeader(...children: React.ReactNode[]): React.ReactNode {\n        return <div className='diff-header'>{...children}</div>;\n    }\n\n    protected renderRepositoryHeader(): React.ReactNode {\n        if (this.options && this.options.uri) {\n            return this.renderHeaderRow({ name: 'repository', value: this.getRepositoryLabel(this.options.uri) });\n        }\n        return undefined;\n    }\n\n    protected getRepositoryLabel(uri: string): string | undefined {\n        const repository = this.scmService.findRepository(new URI(uri));\n        const isSelectedRepo = this.scmService.selectedRepository && repository && this.scmService.selectedRepository.provider.rootUri === repository.provider.rootUri;\n        return repository && !isSelectedRepo ? this.labelProvider.getLongName(new URI(repository.provider.rootUri)) : undefined;\n    }\n\n    protected renderPathHeader(): React.ReactNode {\n        return this.renderHeaderRow({\n            classNames: ['diff-header'],\n            name: 'path',\n            value: this.renderPath()\n        });\n    }\n    protected renderPath(): React.ReactNode {\n        if (this.options.uri) {\n            const path = this.scmLabelProvider.relativePath(this.options.uri);\n            if (path.length > 0) {\n                return '/' + path;\n            } else {\n                return this.labelProvider.getLongName(new URI(this.options.uri));\n            }\n        }\n        return null;\n    }\n\n    protected renderRevisionHeader(): React.ReactNode {\n        return this.renderHeaderRow({\n            classNames: ['diff-header'],\n            name: 'revision: ',\n            value: this.renderRevision()\n        });\n    }\n    protected renderRevision(): React.ReactNode {\n        if (!this.fromRevision) {\n            return null;\n        }\n        if (typeof this.fromRevision === 'string') {\n            return this.fromRevision;\n        }\n        return (this.toRevision || 'HEAD') + '~' + this.fromRevision;\n    }\n\n    protected renderHeaderRow({ name, value, classNames, title }: { name: string, value: React.ReactNode, classNames?: string[], title?: string }): React.ReactNode {\n        if (!value) {\n            return;\n        }\n        const className = ['header-row', ...(classNames || [])].join(' ');\n        return <div key={name} className={className} title={title}>\n            <div className='theia-header'>{name}</div>\n            <div className='header-value'>{value}</div>\n        </div>;\n    }\n\n    protected get toRevision(): string | undefined {\n        return this.options.range && this.options.range.toRevision;\n    }\n\n    protected get fromRevision(): string | number | undefined {\n        return this.options.range && this.options.range.fromRevision;\n    }\n\n    storeState(): object {\n        const { options } = this;\n        return {\n            options\n        };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    restoreState(oldState: any): void {\n        const options = oldState['options'];\n        this.setContent(options);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Arm and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { DisposableCollection } from '@theia/core/lib/common';\nimport URI from '@theia/core/lib/common/uri';\nimport { ScmTreeModel } from '@theia/scm/lib/browser/scm-tree-model';\nimport { Git, GitFileStatus } from '../../common';\nimport { ScmService } from '@theia/scm/lib/browser/scm-service';\nimport { GitScmProvider, GitScmFileChange } from '../git-scm-provider';\nimport { ScmResourceGroup, ScmResource } from '@theia/scm/lib/browser/scm-provider';\nimport { ScmFileChange } from '@theia/scm-extra/lib/browser/scm-file-change-node';\nimport { GitResourceOpener } from './git-resource-opener';\n\n@injectable()\nexport class GitDiffTreeModel extends ScmTreeModel {\n\n    @inject(Git) protected readonly git: Git;\n    @inject(ScmService) protected readonly scmService: ScmService;\n    @inject(GitResourceOpener) protected readonly resourceOpener: GitResourceOpener;\n\n    protected diffOptions: Git.Options.Diff;\n\n    protected _groups: ScmResourceGroup[] = [];\n\n    protected readonly toDisposeOnContentChange = new DisposableCollection();\n\n    constructor() {\n        super();\n        this.toDispose.push(this.toDisposeOnContentChange);\n    }\n\n    async setContent(options: GitDiffTreeModel.Options): Promise<void> {\n        const { rootUri, diffOptions } = options;\n        this.toDisposeOnContentChange.dispose();\n        const scmRepository = this.scmService.findRepository(new URI(rootUri));\n        if (scmRepository && scmRepository.provider.id === 'git') {\n            const provider = scmRepository.provider as GitScmProvider;\n            this.provider = provider;\n            this.diffOptions = diffOptions;\n\n            this.refreshRepository(provider);\n            this.toDisposeOnContentChange.push(provider.onDidChange(() => {\n                this.refreshRepository(provider);\n            }));\n\n        }\n    }\n\n    protected async refreshRepository(provider: GitScmProvider): Promise<void> {\n        const repository = { localUri: provider.rootUri };\n\n        const gitFileChanges = await this.git.diff(repository, this.diffOptions);\n\n        const group: ScmResourceGroup = { id: 'changes', label: 'Files Changed', resources: [], provider, dispose: () => {} };\n        const resources: ScmResource[] = gitFileChanges\n            .map(change => new GitScmFileChange(change, provider, this.diffOptions.range))\n            .map(change => ({\n                sourceUri: new URI(change.uri),\n                decorations: {\n                    letter: GitFileStatus.toAbbreviation(change.gitFileChange.status, true),\n                    color: GitFileStatus.getColor(change.gitFileChange.status, true),\n                    tooltip: GitFileStatus.toString(change.gitFileChange.status, true)\n                },\n                open: async () => this.open(change),\n                group,\n            }));\n        const changesGroup = { ...group, resources };\n        this._groups = [ changesGroup ];\n\n        this.root = this.createTree();\n    }\n\n    get rootUri(): string | undefined {\n        if (this.provider) {\n            return this.provider.rootUri;\n        }\n    };\n\n    canTabToWidget(): boolean {\n        return true;\n    }\n\n    get groups(): ScmResourceGroup[] {\n        return this._groups;\n    };\n\n    async open(change: ScmFileChange): Promise<void> {\n        const uriToOpen = change.getUriToOpen();\n        await this.resourceOpener.open(uriToOpen);\n    }\n\n    override storeState(): GitDiffTreeModel.Options {\n        if (this.provider) {\n            return {\n                ...super.storeState(),\n                rootUri: this.provider.rootUri,\n                diffOptions: this.diffOptions,\n            };\n        } else {\n            return super.storeState();\n        }\n    }\n\n    override restoreState(oldState: GitDiffTreeModel.Options): void {\n        super.restoreState(oldState);\n        if (oldState.rootUri && oldState.diffOptions) {\n            this.setContent(oldState);\n        }\n    }\n}\n\nexport namespace GitDiffTreeModel {\n    export interface Options {\n        rootUri: string,\n        diffOptions: Git.Options.Diff,\n    };\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport {\n    BaseWidget, Widget, StatefulWidget, Panel, PanelLayout, Message, MessageLoop, codicon\n} from '@theia/core/lib/browser';\nimport { EditorManager, DiffNavigatorProvider } from '@theia/editor/lib/browser';\nimport { GitDiffTreeModel } from './git-diff-tree-model';\nimport { GitWatcher } from '../../common';\nimport { GitDiffHeaderWidget } from './git-diff-header-widget';\nimport { ScmService } from '@theia/scm/lib/browser/scm-service';\nimport { GitRepositoryProvider } from '../git-repository-provider';\nimport { ScmTreeWidget } from '@theia/scm/lib/browser/scm-tree-widget';\nimport { ScmPreferences } from '@theia/scm/lib/browser/scm-preferences';\nimport { nls } from '@theia/core';\n\nexport const GIT_DIFF = 'git-diff';\n@injectable()\nexport class GitDiffWidget extends BaseWidget implements StatefulWidget {\n\n    protected readonly GIT_DIFF_TITLE = nls.localize('theia/git/diff', 'Diff');\n\n    @inject(GitRepositoryProvider) protected readonly repositoryProvider: GitRepositoryProvider;\n    @inject(DiffNavigatorProvider) protected readonly diffNavigatorProvider: DiffNavigatorProvider;\n    @inject(EditorManager) protected readonly editorManager: EditorManager;\n    @inject(GitWatcher) protected readonly gitWatcher: GitWatcher;\n    @inject(GitDiffHeaderWidget) protected readonly diffHeaderWidget: GitDiffHeaderWidget;\n    @inject(ScmTreeWidget) protected readonly resourceWidget: ScmTreeWidget;\n    @inject(GitDiffTreeModel) protected readonly model: GitDiffTreeModel;\n    @inject(ScmService) protected readonly scmService: ScmService;\n    @inject(ScmPreferences) protected readonly scmPreferences: ScmPreferences;\n\n    protected panel: Panel;\n\n    constructor() {\n        super();\n        this.id = GIT_DIFF;\n        this.title.label = this.GIT_DIFF_TITLE;\n        this.title.caption = this.GIT_DIFF_TITLE;\n        this.title.closable = true;\n        this.title.iconClass = codicon('git-compare');\n\n        this.addClass('theia-scm');\n        this.addClass('theia-git');\n        this.addClass('git-diff-container');\n    }\n\n    @postConstruct()\n    protected init(): void {\n        const layout = new PanelLayout();\n        this.layout = layout;\n        this.panel = new Panel({\n            layout: new PanelLayout({\n            })\n        });\n        this.panel.node.tabIndex = -1;\n        this.panel.node.setAttribute('class', 'theia-scm-panel');\n        layout.addWidget(this.panel);\n\n        this.containerLayout.addWidget(this.diffHeaderWidget);\n        this.containerLayout.addWidget(this.resourceWidget);\n\n        this.updateViewMode(this.scmPreferences.get('scm.defaultViewMode'));\n        this.toDispose.push(this.scmPreferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'scm.defaultViewMode') {\n                this.updateViewMode(e.newValue);\n            }\n        }));\n    }\n\n    set viewMode(mode: 'tree' | 'list') {\n        this.resourceWidget.viewMode = mode;\n    }\n    get viewMode(): 'tree' | 'list' {\n        return this.resourceWidget.viewMode;\n    }\n\n    async setContent(options: GitDiffTreeModel.Options): Promise<void> {\n        this.model.setContent(options);\n        this.diffHeaderWidget.setContent(options.diffOptions);\n        this.update();\n    }\n\n    get containerLayout(): PanelLayout {\n        return this.panel.layout as PanelLayout;\n    }\n\n    /**\n     * Updates the view mode based on the preference value.\n     * @param preference the view mode preference.\n     */\n    protected updateViewMode(preference: 'tree' | 'list'): void {\n        this.viewMode = preference;\n    }\n\n    protected updateImmediately(): void {\n        this.onUpdateRequest(Widget.Msg.UpdateRequest);\n    }\n\n    protected override onUpdateRequest(msg: Message): void {\n        MessageLoop.sendMessage(this.diffHeaderWidget, msg);\n        MessageLoop.sendMessage(this.resourceWidget, msg);\n        super.onUpdateRequest(msg);\n    }\n\n    protected override onAfterAttach(msg: Message): void {\n        this.node.appendChild(this.diffHeaderWidget.node);\n        this.node.appendChild(this.resourceWidget.node);\n\n        super.onAfterAttach(msg);\n        this.update();\n    }\n\n    goToPreviousChange(): void {\n        this.resourceWidget.goToPreviousChange();\n    }\n\n    goToNextChange(): void {\n        this.resourceWidget.goToNextChange();\n    }\n\n    storeState(): object {\n        const state = {\n            commitState: this.diffHeaderWidget.storeState(),\n            changesTreeState: this.resourceWidget.storeState(),\n        };\n        return state;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    restoreState(oldState: any): void {\n        const { commitState, changesTreeState } = oldState;\n        this.diffHeaderWidget.restoreState(commitState);\n        this.resourceWidget.restoreState(changesTreeState);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Arm and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { EditorManager } from '@theia/editor/lib/browser/editor-manager';\nimport { GitResourceOpener } from './git-resource-opener';\nimport URI from '@theia/core/lib/common/uri';\n\n@injectable()\nexport class GitOpenerInPrimaryArea implements GitResourceOpener {\n    @inject(EditorManager) protected readonly editorManager: EditorManager;\n\n    async open(changeUri: URI): Promise<void> {\n        await this.editorManager.open(changeUri, { mode: 'reveal' });\n\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Arm and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport URI from '@theia/core/lib/common/uri';\n\nexport const GitResourceOpener = Symbol('GitResourceOpener');\nexport interface GitResourceOpener {\n    open(changeUri: URI): Promise<void>;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { DirtyDiffDecorator } from '@theia/scm/lib/browser/dirty-diff/dirty-diff-decorator';\nimport { FrontendApplicationContribution, FrontendApplication } from '@theia/core/lib/browser';\nimport { DirtyDiffManager } from './dirty-diff-manager';\n\n@injectable()\nexport class DirtyDiffContribution implements FrontendApplicationContribution {\n\n    constructor(\n        @inject(DirtyDiffManager) protected readonly dirtyDiffManager: DirtyDiffManager,\n        @inject(DirtyDiffDecorator) protected readonly dirtyDiffDecorator: DirtyDiffDecorator,\n    ) { }\n\n    onStart(app: FrontendApplication): void {\n        this.dirtyDiffManager.onDirtyDiffUpdate(update => this.dirtyDiffDecorator.applyDecorations(update));\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { EditorManager, EditorWidget, TextEditor, TextEditorDocument, TextDocumentChangeEvent } from '@theia/editor/lib/browser';\nimport URI from '@theia/core/lib/common/uri';\nimport { Emitter, Event, Disposable, DisposableCollection } from '@theia/core';\nimport { ContentLines } from '@theia/scm/lib/browser/dirty-diff/content-lines';\nimport { DirtyDiffUpdate } from '@theia/scm/lib/browser/dirty-diff/dirty-diff-decorator';\nimport { DiffComputer, DirtyDiff } from '@theia/scm/lib/browser/dirty-diff/diff-computer';\nimport { GitPreferences, GitConfiguration } from '../git-preferences';\nimport { PreferenceChangeEvent } from '@theia/core/lib/browser';\nimport { GIT_RESOURCE_SCHEME } from '../git-resource';\nimport { GitResourceResolver } from '../git-resource-resolver';\nimport { WorkingDirectoryStatus, GitFileStatus, GitFileChange, Repository, Git, GitStatusChangeEvent } from '../../common';\nimport { GitRepositoryTracker } from '../git-repository-tracker';\n\nimport throttle = require('@theia/core/shared/lodash.throttle');\n\n@injectable()\nexport class DirtyDiffManager {\n\n    protected readonly models = new Map<string, DirtyDiffModel>();\n\n    protected readonly onDirtyDiffUpdateEmitter = new Emitter<DirtyDiffUpdate>();\n    readonly onDirtyDiffUpdate: Event<DirtyDiffUpdate> = this.onDirtyDiffUpdateEmitter.event;\n\n    @inject(Git)\n    protected readonly git: Git;\n\n    @inject(GitRepositoryTracker)\n    protected readonly repositoryTracker: GitRepositoryTracker;\n\n    @inject(GitResourceResolver)\n    protected readonly gitResourceResolver: GitResourceResolver;\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    @inject(GitPreferences)\n    protected readonly preferences: GitPreferences;\n\n    @postConstruct()\n    protected init(): void {\n        this.doInit();\n    }\n\n    protected async doInit(): Promise<void> {\n        this.editorManager.onCreated(async e => this.handleEditorCreated(e));\n        this.repositoryTracker.onGitEvent(throttle(async (event: GitStatusChangeEvent | undefined) =>\n            this.handleGitStatusUpdate(event && event.source, event && event.status), 500));\n        const gitStatus = this.repositoryTracker.selectedRepositoryStatus;\n        const repository = this.repositoryTracker.selectedRepository;\n        if (gitStatus && repository) {\n            await this.handleGitStatusUpdate(repository, gitStatus);\n        }\n    }\n\n    protected async handleEditorCreated(editorWidget: EditorWidget): Promise<void> {\n        const editor = editorWidget.editor;\n        const uri = editor.uri.toString();\n        if (editor.uri.scheme !== 'file') {\n            return;\n        }\n        const toDispose = new DisposableCollection();\n        const model = this.createNewModel(editor);\n        toDispose.push(model);\n        this.models.set(uri, model);\n        toDispose.push(editor.onDocumentContentChanged(throttle((event: TextDocumentChangeEvent) => model.handleDocumentChanged(event.document), 1000)));\n        editorWidget.disposed.connect(() => {\n            this.models.delete(uri);\n            toDispose.dispose();\n        });\n        const gitStatus = this.repositoryTracker.selectedRepositoryStatus;\n        const repository = this.repositoryTracker.selectedRepository;\n        if (gitStatus && repository) {\n            const changes = gitStatus.changes.filter(c => c.uri === uri);\n            await model.handleGitStatusUpdate(repository, changes);\n        }\n        model.handleDocumentChanged(editor.document);\n    }\n\n    protected createNewModel(editor: TextEditor): DirtyDiffModel {\n        const previousRevision = this.createPreviousFileRevision(editor.uri);\n        const model = new DirtyDiffModel(editor, this.preferences, previousRevision);\n        model.onDirtyDiffUpdate(e => this.onDirtyDiffUpdateEmitter.fire(e));\n        return model;\n    }\n\n    protected createPreviousFileRevision(fileUri: URI): DirtyDiffModel.PreviousFileRevision {\n        return <DirtyDiffModel.PreviousFileRevision>{\n            fileUri,\n            getContents: async (staged: boolean) => {\n                const query = staged ? '' : 'HEAD';\n                const uri = fileUri.withScheme(GIT_RESOURCE_SCHEME).withQuery(query);\n                const gitResource = await this.gitResourceResolver.getResource(uri);\n                return gitResource.readContents();\n            },\n            isVersionControlled: async () => {\n                const repository = this.repositoryTracker.selectedRepository;\n                if (repository) {\n                    return this.git.lsFiles(repository, fileUri.toString(), { errorUnmatch: true });\n                }\n                return false;\n            }\n        };\n    }\n\n    protected async handleGitStatusUpdate(repository: Repository | undefined, status: WorkingDirectoryStatus | undefined): Promise<void> {\n        const uris = new Set(this.models.keys());\n        const relevantChanges = status ? status.changes.filter(c => uris.has(c.uri)) : [];\n        for (const model of this.models.values()) {\n            const uri = model.editor.uri.toString();\n            const changes = relevantChanges.filter(c => c.uri === uri);\n            await model.handleGitStatusUpdate(repository, changes);\n        }\n    }\n\n}\n\nexport class DirtyDiffModel implements Disposable {\n\n    protected toDispose = new DisposableCollection();\n\n    protected enabled = true;\n    protected staged: boolean;\n    protected previousContent: ContentLines | undefined;\n    protected currentContent: ContentLines | undefined;\n\n    protected readonly onDirtyDiffUpdateEmitter = new Emitter<DirtyDiffUpdate>();\n    readonly onDirtyDiffUpdate: Event<DirtyDiffUpdate> = this.onDirtyDiffUpdateEmitter.event;\n\n    constructor(\n        readonly editor: TextEditor,\n        readonly preferences: GitPreferences,\n        protected readonly previousRevision: DirtyDiffModel.PreviousFileRevision\n    ) {\n        this.toDispose.push(this.preferences.onPreferenceChanged(e => this.handlePreferenceChange(e)));\n    }\n\n    protected async handlePreferenceChange(event: PreferenceChangeEvent<GitConfiguration>): Promise<void> {\n        const { preferenceName, newValue } = event;\n        if (preferenceName === 'git.editor.decorations.enabled') {\n            const enabled = !!newValue;\n            this.enabled = enabled;\n            this.update();\n        }\n        if (preferenceName === 'git.editor.dirtyDiff.linesLimit') {\n            this.update();\n        }\n    }\n\n    protected get linesLimit(): number {\n        const limit = this.preferences['git.editor.dirtyDiff.linesLimit'];\n        return limit > 0 ? limit : Number.MAX_SAFE_INTEGER;\n    }\n\n    protected updateTimeout: number | undefined;\n\n    protected shouldRender(): boolean {\n        if (!this.enabled || !this.previousContent || !this.currentContent) {\n            return false;\n        }\n        const limit = this.linesLimit;\n        return this.previousContent.length < limit && this.currentContent.length < limit;\n    }\n\n    update(): void {\n        const editor = this.editor;\n        if (!this.shouldRender()) {\n            this.onDirtyDiffUpdateEmitter.fire({ editor, added: [], removed: [], modified: [] });\n            return;\n        }\n        if (this.updateTimeout) {\n            window.clearTimeout(this.updateTimeout);\n        }\n        this.updateTimeout = window.setTimeout(() => {\n            const previous = this.previousContent;\n            const current = this.currentContent;\n            if (!previous || !current) {\n                return;\n            }\n            this.updateTimeout = undefined;\n            const dirtyDiff = DirtyDiffModel.computeDirtyDiff(previous, current);\n            if (!dirtyDiff) {\n                // if the computation fails, it might be because of changes in the editor, in that case\n                // a new update task should be scheduled anyway.\n                return;\n            }\n            const dirtyDiffUpdate = <DirtyDiffUpdate>{ editor, ...dirtyDiff };\n            this.onDirtyDiffUpdateEmitter.fire(dirtyDiffUpdate);\n        }, 100);\n    }\n\n    handleDocumentChanged(document: TextEditorDocument): void {\n        if (this.toDispose.disposed) {\n            return;\n        }\n        this.currentContent = DirtyDiffModel.documentContentLines(document);\n        this.update();\n    }\n\n    async handleGitStatusUpdate(repository: Repository | undefined, relevantChanges: GitFileChange[]): Promise<void> {\n        const noRelevantChanges = relevantChanges.length === 0;\n        const isNewAndStaged = relevantChanges.some(c => c.status === GitFileStatus.New && !!c.staged);\n        const isNewAndUnstaged = relevantChanges.some(c => c.status === GitFileStatus.New && !c.staged);\n        const modifiedChange = relevantChanges.find(c => c.status === GitFileStatus.Modified);\n        const isModified = !!modifiedChange;\n        const readPreviousRevisionContent = async () => {\n            try {\n                this.previousContent = await this.getPreviousRevisionContent();\n            } catch {\n                this.previousContent = undefined;\n            }\n        };\n        if (isModified || isNewAndStaged) {\n            this.staged = isNewAndStaged || modifiedChange!.staged || false;\n            await readPreviousRevisionContent();\n        }\n        if (isNewAndUnstaged && !isNewAndStaged) {\n            this.previousContent = undefined;\n        }\n        if (noRelevantChanges) {\n            const inGitRepository = await this.isInGitRepository(repository);\n            if (inGitRepository) {\n                await readPreviousRevisionContent();\n            }\n        }\n        this.update();\n    }\n\n    protected async isInGitRepository(repository: Repository | undefined): Promise<boolean> {\n        if (!repository) {\n            return false;\n        }\n        const modelUri = this.editor.uri.withScheme('file').toString();\n        const repoUri = new URI(repository.localUri).withScheme('file').toString();\n        return modelUri.startsWith(repoUri) && this.previousRevision.isVersionControlled();\n    }\n\n    protected async getPreviousRevisionContent(): Promise<ContentLines | undefined> {\n        const contents = await this.previousRevision.getContents(this.staged);\n        return contents ? ContentLines.fromString(contents) : undefined;\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n        this.onDirtyDiffUpdateEmitter.dispose();\n    }\n}\n\nexport namespace DirtyDiffModel {\n\n    const diffComputer = new DiffComputer();\n\n    /**\n     * Returns an eventually consistent result. E.g. it can happen, that lines are deleted during the computation,\n     * which will internally produce 'line out of bound' errors, then it will return `undefined`.\n     *\n     * `ContentLines` are to avoid copying contents which improves the performance, therefore handling of the `undefined`\n     * result, and rescheduling of the computation should be done by caller.\n     */\n    export function computeDirtyDiff(previous: ContentLines, current: ContentLines): DirtyDiff | undefined {\n        try {\n            return diffComputer.computeDirtyDiff(ContentLines.arrayLike(previous), ContentLines.arrayLike(current));\n        } catch {\n            return undefined;\n        }\n    }\n\n    export function documentContentLines(document: TextEditorDocument): ContentLines {\n        return {\n            length: document.lineCount,\n            getLineContent: line => document.getLineContent(line + 1),\n        };\n    }\n\n    export interface PreviousFileRevision {\n        readonly fileUri: URI;\n        getContents(staged: boolean): Promise<string>;\n        isVersionControlled(): Promise<boolean>;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { FrontendApplicationContribution } from '@theia/core/lib/browser';\nimport { DirtyDiffContribution } from './dirty-diff-contribution';\nimport { DirtyDiffManager } from './dirty-diff-manager';\n\nexport function bindDirtyDiff(bind: interfaces.Bind): void {\n    bind(DirtyDiffManager).toSelf().inSingletonScope();\n    bind(DirtyDiffContribution).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).toService(DirtyDiffContribution);\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { MaybePromise } from '@theia/core/lib/common/types';\nimport { ScmInputIssueType } from '@theia/scm/lib/browser/scm-input';\n\n@injectable()\nexport class GitCommitMessageValidator {\n\n    static readonly MAX_CHARS_PER_LINE = 72;\n\n    /**\n     * Validates the input and returns with either a validation result with the status and message, or `undefined` if everything went fine.\n     */\n    validate(input: string | undefined): MaybePromise<GitCommitMessageValidator.Result | undefined> {\n        if (input) {\n            const lines = input.split(/\\r?\\n/);\n            for (let i = 0; i < lines.length; i++) {\n                const line = lines[i];\n                const result = this.isLineValid(line, i);\n                if (!!result) {\n                    return result;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    protected isLineValid(line: string, index: number): GitCommitMessageValidator.Result | undefined {\n        if (index === 1 && line.length !== 0) {\n            return {\n                status: ScmInputIssueType.Warning,\n                message: 'The second line should be empty to separate the commit message from the body'\n            };\n        }\n        const diff = line.length - this.maxCharsPerLine();\n        if (diff > 0) {\n            return {\n                status: ScmInputIssueType.Warning,\n                message: `${diff} characters over ${this.maxCharsPerLine()} in current line`\n            };\n        }\n        return undefined;\n    }\n\n    protected maxCharsPerLine(): number {\n        return GitCommitMessageValidator.MAX_CHARS_PER_LINE;\n    }\n\n}\n\nexport namespace GitCommitMessageValidator {\n\n    /**\n     * Type for the validation result with a status and a corresponding message.\n     */\n    export type Result = Readonly<{ message: string, status: ScmInputIssueType }>;\n\n    export namespace Result {\n\n        /**\n         * `true` if the `message` and the `status` properties are the same on both `left` and `right`. Or both arguments are `undefined`. Otherwise, `false`.\n         */\n        export function equal(left: Result | undefined, right: Result | undefined): boolean {\n            if (left && right) {\n                return left.message === right.message && left.status === right.status;\n            }\n            return left === right;\n        }\n\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport {\n    Command,\n    CommandContribution,\n    CommandRegistry,\n    DisposableCollection,\n    MenuAction,\n    MenuContribution,\n    MenuModelRegistry,\n    Mutable\n} from '@theia/core';\nimport { codicon, DiffUris, Widget } from '@theia/core/lib/browser';\nimport {\n    TabBarToolbarContribution,\n    TabBarToolbarItem,\n    TabBarToolbarRegistry\n} from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { EditorContextMenu, EditorManager, EditorOpenerOptions, EditorWidget } from '@theia/editor/lib/browser';\nimport { Git, GitFileChange, GitFileStatus } from '../common';\nimport { GitRepositoryTracker } from './git-repository-tracker';\nimport { GitAction, GitQuickOpenService } from './git-quick-open-service';\nimport { GitSyncService } from './git-sync-service';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { GitRepositoryProvider } from './git-repository-provider';\nimport { GitErrorHandler } from '../browser/git-error-handler';\nimport { ScmWidget } from '@theia/scm/lib/browser/scm-widget';\nimport { ScmTreeWidget } from '@theia/scm/lib/browser/scm-tree-widget';\nimport { ScmCommand, ScmResource } from '@theia/scm/lib/browser/scm-provider';\nimport { ProgressService } from '@theia/core/lib/common/progress-service';\nimport { GitPreferences } from './git-preferences';\nimport { ColorContribution } from '@theia/core/lib/browser/color-application-contribution';\nimport { ColorRegistry } from '@theia/core/lib/browser/color-registry';\nimport { ScmInputIssueType } from '@theia/scm/lib/browser/scm-input';\nimport { DecorationsService } from '@theia/core/lib/browser/decorations-service';\nimport { GitDecorationProvider } from './git-decoration-provider';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport namespace GIT_COMMANDS {\n\n    const GIT_CATEGORY_KEY = 'vscode.git/package/displayName';\n    const GIT_CATEGORY = 'Git';\n\n    export const CLONE = Command.toLocalizedCommand({\n        id: 'git.clone',\n        category: GIT_CATEGORY,\n        label: 'Clone...'\n    }, 'vscode.git/package/command.clone', GIT_CATEGORY_KEY);\n    export const FETCH = Command.toLocalizedCommand({\n        id: 'git.fetch',\n        category: GIT_CATEGORY,\n        label: 'Fetch...'\n    }, 'vscode.git/package/command.fetch', GIT_CATEGORY_KEY);\n    export const PULL_DEFAULT = Command.toLocalizedCommand({\n        id: 'git.pull.default',\n        category: GIT_CATEGORY,\n        label: 'Pull'\n    }, 'vscode.git/package/command.pull', GIT_CATEGORY_KEY);\n    export const PULL_DEFAULT_FAVORITE: Command = {\n        id: PULL_DEFAULT.id + '.favorite',\n        label: PULL_DEFAULT.label,\n        originalLabel: PULL_DEFAULT.originalLabel\n    };\n    export const PULL = Command.toLocalizedCommand({\n        id: 'git.pull',\n        category: GIT_CATEGORY,\n        label: 'Pull from...'\n    }, 'vscode.git/package/command.pullFrom', GIT_CATEGORY_KEY);\n    export const PUSH_DEFAULT = Command.toLocalizedCommand({\n        id: 'git.push.default',\n        category: GIT_CATEGORY,\n        label: 'Push'\n    }, 'vscode.git/package/command.push', GIT_CATEGORY_KEY);\n    export const PUSH_DEFAULT_FAVORITE: Command = {\n        id: PUSH_DEFAULT.id + '.favorite',\n        label: PUSH_DEFAULT.label,\n        originalLabel: PUSH_DEFAULT.originalLabel\n    };\n    export const PUSH = Command.toLocalizedCommand({\n        id: 'git.push',\n        category: GIT_CATEGORY,\n        label: 'Push to...'\n    }, 'vscode.git/package/command.pushTo', GIT_CATEGORY_KEY);\n    export const MERGE = Command.toLocalizedCommand({\n        id: 'git.merge',\n        category: GIT_CATEGORY,\n        label: 'Merge...'\n    }, 'vscode.git/package/command.merge', GIT_CATEGORY_KEY);\n    export const CHECKOUT = Command.toLocalizedCommand({\n        id: 'git.checkout',\n        category: GIT_CATEGORY,\n        label: 'Checkout'\n    }, 'vscode.git/package/command.checkout', GIT_CATEGORY_KEY);\n    export const COMMIT = {\n        ...Command.toLocalizedCommand({\n            id: 'git.commit.all',\n            label: 'Commit',\n            iconClass: codicon('check')\n        }, 'vscode.git/package/command.commit'),\n        tooltip: 'Commit all the staged changes',\n    };\n    export const COMMIT_ADD_SIGN_OFF = Command.toLocalizedCommand({\n        id: 'git-commit-add-sign-off',\n        label: 'Add Signed-off-by',\n        category: GIT_CATEGORY,\n        iconClass: codicon('edit')\n    }, 'theia/git/addSignedOff', GIT_CATEGORY_KEY);\n    export const COMMIT_AMEND = {\n        id: 'git.commit.amend'\n    };\n    export const COMMIT_SIGN_OFF = {\n        id: 'git.commit.signOff'\n    };\n    export const OPEN_FILE = Command.toLocalizedCommand({\n        id: 'git.open.file',\n        category: GIT_CATEGORY,\n        label: 'Open File',\n        iconClass: codicon('go-to-file')\n    }, 'vscode.git/package/command.openFile', GIT_CATEGORY_KEY);\n    export const OPEN_CHANGED_FILE = Command.toLocalizedCommand({\n        id: 'git.open.changed.file',\n        category: GIT_CATEGORY,\n        label: 'Open File',\n        iconClass: codicon('go-to-file')\n    }, 'vscode.git/package/command.openFile', GIT_CATEGORY_KEY);\n    export const OPEN_CHANGES = Command.toLocalizedCommand({\n        id: 'git.open.changes',\n        category: GIT_CATEGORY,\n        label: 'Open Changes',\n        iconClass: codicon('git-compare')\n    }, 'vscode.git/package/command.openChange', GIT_CATEGORY_KEY);\n    export const SYNC = Command.toLocalizedCommand({\n        id: 'git.sync',\n        category: GIT_CATEGORY,\n        label: 'Sync'\n    }, 'vscode.git/package/command.sync', GIT_CATEGORY_KEY);\n    export const PUBLISH = Command.toLocalizedCommand({\n        id: 'git.publish',\n        category: GIT_CATEGORY,\n        label: 'Publish Branch'\n    }, 'vscode.git/package/command.publish', GIT_CATEGORY_KEY);\n    export const STAGE = Command.toLocalizedCommand({\n        id: 'git.stage',\n        category: GIT_CATEGORY,\n        label: 'Stage Changes',\n        iconClass: codicon('add')\n    }, 'vscode.git/package/command.stage', GIT_CATEGORY_KEY);\n    export const STAGE_ALL = Command.toLocalizedCommand({\n        id: 'git.stage.all',\n        category: GIT_CATEGORY,\n        label: 'Stage All Changes',\n        iconClass: codicon('add')\n    }, 'vscode.git/package/command.stageAll', GIT_CATEGORY_KEY);\n    export const UNSTAGE = Command.toLocalizedCommand({\n        id: 'git.unstage',\n        category: GIT_CATEGORY,\n        label: 'Unstage Changes',\n        iconClass: codicon('dash')\n    }, 'vscode.git/package/command.unstage', GIT_CATEGORY_KEY);\n    export const UNSTAGE_ALL = Command.toLocalizedCommand({\n        id: 'git.unstage.all',\n        category: GIT_CATEGORY,\n        label: 'Unstage All',\n        iconClass: codicon('dash')\n    }, 'vscode.git/package/command.unstageAll', GIT_CATEGORY_KEY);\n    export const DISCARD = Command.toLocalizedCommand({\n        id: 'git.discard',\n        iconClass: codicon('discard'),\n        category: GIT_CATEGORY,\n        label: 'Discard Changes'\n    }, 'vscode.git/package/command.clean', GIT_CATEGORY_KEY);\n    export const DISCARD_ALL = Command.toLocalizedCommand({\n        id: 'git.discard.all',\n        category: GIT_CATEGORY,\n        label: 'Discard All Changes',\n        iconClass: codicon('discard')\n    }, 'vscode.git/package/command.cleanAll', GIT_CATEGORY_KEY);\n    export const STASH = Command.toLocalizedCommand({\n        id: 'git.stash',\n        category: GIT_CATEGORY,\n        label: 'Stash...'\n    }, 'vscode.git/package/command.stash', GIT_CATEGORY_KEY);\n    export const APPLY_STASH = Command.toLocalizedCommand({\n        id: 'git.stash.apply',\n        category: GIT_CATEGORY,\n        label: 'Apply Stash...'\n    }, 'vscode.git/package/command.stashApply', GIT_CATEGORY_KEY);\n    export const APPLY_LATEST_STASH = Command.toLocalizedCommand({\n        id: 'git.stash.apply.latest',\n        category: GIT_CATEGORY,\n        label: 'Apply Latest Stash'\n    }, 'vscode.git/package/command.stashApplyLatest', GIT_CATEGORY_KEY);\n    export const POP_STASH = Command.toLocalizedCommand({\n        id: 'git.stash.pop',\n        category: GIT_CATEGORY,\n        label: 'Pop Stash...'\n    }, 'vscode.git/package/command.stashPop', GIT_CATEGORY_KEY);\n    export const POP_LATEST_STASH = Command.toLocalizedCommand({\n        id: 'git.stash.pop.latest',\n        category: GIT_CATEGORY,\n        label: 'Pop Latest Stash'\n    }, 'vscode.git/package/command.stashPopLatest', GIT_CATEGORY_KEY);\n    export const DROP_STASH = Command.toLocalizedCommand({\n        id: 'git.stash.drop',\n        category: GIT_CATEGORY,\n        label: 'Drop Stash...'\n    }, 'vscode.git/package/command.stashDrop', GIT_CATEGORY_KEY);\n    export const REFRESH = Command.toLocalizedCommand({\n        id: 'git-refresh',\n        label: 'Refresh',\n        category: GIT_CATEGORY,\n        iconClass: codicon('refresh')\n    }, 'vscode.git/package/command.refresh', GIT_CATEGORY_KEY);\n    export const INIT_REPOSITORY = Command.toLocalizedCommand({\n        id: 'git-init',\n        label: 'Initialize Repository',\n        category: GIT_CATEGORY,\n        iconClass: codicon('add')\n    }, 'vscode.git/package/command.init', GIT_CATEGORY_KEY);\n}\nexport namespace GIT_MENUS {\n    // Top level Groups\n    export const FAV_GROUP = '2_favorites';\n    export const COMMANDS_GROUP = '3_commands';\n\n    export const SUBMENU_COMMIT = {\n        group: COMMANDS_GROUP,\n        label: nls.localize('vscode.git/package/submenu.commit', 'Commit'),\n        menuGroups: ['1_commit'],\n    };\n    export const SUBMENU_CHANGES = {\n        group: COMMANDS_GROUP,\n        label: nls.localize('vscode.git/package/submenu.changes', 'Changes'),\n        menuGroups: ['1_changes']\n    };\n    export const SUBMENU_PULL_PUSH = {\n        group: COMMANDS_GROUP,\n        label: nls.localize('vscode.git/package/submenu.pullpush', 'Pull, Push'),\n        menuGroups: ['2_pull', '3_push', '4_fetch']\n    };\n    export const SUBMENU_STASH = {\n        group: COMMANDS_GROUP,\n        label: nls.localize('vscode.git/package/submenu.stash', 'Stash'),\n        menuGroups: ['1_stash']\n    };\n}\n@injectable()\nexport class GitContribution implements CommandContribution, MenuContribution, TabBarToolbarContribution, ColorContribution {\n\n    static GIT_CHECKOUT = 'git.checkout';\n    static GIT_SYNC_STATUS = 'git-sync-status';\n\n    protected toDispose = new DisposableCollection();\n\n    @inject(EditorManager) protected readonly editorManager: EditorManager;\n    @inject(GitQuickOpenService) protected readonly quickOpenService: GitQuickOpenService;\n    @inject(GitRepositoryTracker) protected readonly repositoryTracker: GitRepositoryTracker;\n    @inject(GitSyncService) protected readonly syncService: GitSyncService;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(GitRepositoryProvider) protected readonly repositoryProvider: GitRepositoryProvider;\n    @inject(Git) protected readonly git: Git;\n    @inject(GitErrorHandler) protected readonly gitErrorHandler: GitErrorHandler;\n    @inject(CommandRegistry) protected readonly commands: CommandRegistry;\n    @inject(ProgressService) protected readonly progressService: ProgressService;\n    @inject(GitPreferences) protected readonly gitPreferences: GitPreferences;\n    @inject(DecorationsService) protected readonly decorationsService: DecorationsService;\n    @inject(GitDecorationProvider) protected readonly gitDecorationProvider: GitDecorationProvider;\n\n    onStart(): void {\n        this.updateStatusBar();\n        this.repositoryTracker.onGitEvent(() => this.updateStatusBar());\n        this.syncService.onDidChange(() => this.updateStatusBar());\n        this.decorationsService.registerDecorationsProvider(this.gitDecorationProvider);\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction(EditorContextMenu.NAVIGATION, {\n            commandId: GIT_COMMANDS.OPEN_FILE.id\n        });\n        menus.registerMenuAction(EditorContextMenu.NAVIGATION, {\n            commandId: GIT_COMMANDS.OPEN_CHANGES.id\n        });\n\n        const registerResourceAction = (group: string, action: MenuAction) => {\n            menus.registerMenuAction(ScmTreeWidget.RESOURCE_INLINE_MENU, action);\n            menus.registerMenuAction([...ScmTreeWidget.RESOURCE_CONTEXT_MENU, group], action);\n        };\n\n        registerResourceAction('navigation', {\n            commandId: GIT_COMMANDS.OPEN_CHANGED_FILE.id,\n            when: 'scmProvider == git && scmResourceGroup == workingTree || scmProvider == git && scmResourceGroup == untrackedChanges'\n        });\n        registerResourceAction('1_modification', {\n            commandId: GIT_COMMANDS.DISCARD.id,\n            when: 'scmProvider == git && scmResourceGroup == workingTree || scmProvider == git && scmResourceGroup == untrackedChanges'\n        });\n        registerResourceAction('1_modification', {\n            commandId: GIT_COMMANDS.STAGE.id,\n            when: 'scmProvider == git && scmResourceGroup == workingTree || scmProvider == git && scmResourceGroup == untrackedChanges'\n        });\n\n        registerResourceAction('navigation', {\n            commandId: GIT_COMMANDS.OPEN_CHANGED_FILE.id,\n            when: 'scmProvider == git && scmResourceGroup == index'\n        });\n        registerResourceAction('1_modification', {\n            commandId: GIT_COMMANDS.UNSTAGE.id,\n            when: 'scmProvider == git && scmResourceGroup == index'\n        });\n\n        registerResourceAction('navigation', {\n            commandId: GIT_COMMANDS.OPEN_CHANGED_FILE.id,\n            when: 'scmProvider == git && scmResourceGroup == merge'\n        });\n        registerResourceAction('1_modification', {\n            commandId: GIT_COMMANDS.DISCARD.id,\n            when: 'scmProvider == git && scmResourceGroup == merge'\n        });\n        registerResourceAction('1_modification', {\n            commandId: GIT_COMMANDS.STAGE.id,\n            when: 'scmProvider == git && scmResourceGroup == merge'\n        });\n\n        const registerResourceFolderAction = (group: string, action: MenuAction) => {\n            menus.registerMenuAction(ScmTreeWidget.RESOURCE_FOLDER_INLINE_MENU, action);\n            menus.registerMenuAction([...ScmTreeWidget.RESOURCE_FOLDER_CONTEXT_MENU, group], action);\n        };\n\n        registerResourceFolderAction('1_modification', {\n            commandId: GIT_COMMANDS.DISCARD.id,\n            when: 'scmProvider == git && scmResourceGroup == workingTree || scmProvider == git && scmResourceGroup == untrackedChanges'\n        });\n        registerResourceFolderAction('1_modification', {\n            commandId: GIT_COMMANDS.STAGE.id,\n            when: 'scmProvider == git && scmResourceGroup == workingTree || scmProvider == git && scmResourceGroup == untrackedChanges'\n        });\n\n        registerResourceFolderAction('1_modification', {\n            commandId: GIT_COMMANDS.UNSTAGE.id,\n            when: 'scmProvider == git && scmResourceGroup == index'\n        });\n\n        registerResourceFolderAction('1_modification', {\n            commandId: GIT_COMMANDS.DISCARD.id,\n            when: 'scmProvider == git && scmResourceGroup == merge'\n        });\n        registerResourceFolderAction('1_modification', {\n            commandId: GIT_COMMANDS.STAGE.id,\n            when: 'scmProvider == git && scmResourceGroup == merge'\n        });\n\n        const registerResourceGroupAction = (group: string, action: MenuAction) => {\n            menus.registerMenuAction(ScmTreeWidget.RESOURCE_GROUP_INLINE_MENU, action);\n            menus.registerMenuAction([...ScmTreeWidget.RESOURCE_GROUP_CONTEXT_MENU, group], action);\n        };\n\n        registerResourceGroupAction('1_modification', {\n            commandId: GIT_COMMANDS.STAGE_ALL.id,\n            when: 'scmProvider == git && scmResourceGroup == merge',\n        });\n        registerResourceGroupAction('1_modification', {\n            commandId: GIT_COMMANDS.UNSTAGE_ALL.id,\n            when: 'scmProvider == git && scmResourceGroup == index',\n        });\n        registerResourceGroupAction('1_modification', {\n            commandId: GIT_COMMANDS.STAGE_ALL.id,\n            when: 'scmProvider == git && scmResourceGroup == workingTree || scmProvider == git && scmResourceGroup == untrackedChanges',\n        });\n        registerResourceGroupAction('1_modification', {\n            commandId: GIT_COMMANDS.DISCARD_ALL.id,\n            when: 'scmProvider == git && scmResourceGroup == workingTree || scmProvider == git && scmResourceGroup == untrackedChanges',\n        });\n    }\n\n    registerCommands(registry: CommandRegistry): void {\n        registry.registerCommand(GIT_COMMANDS.FETCH, {\n            execute: () => this.withProgress(() => this.quickOpenService.fetch()),\n            isEnabled: () => !!this.repositoryTracker.selectedRepository\n        });\n        registry.registerCommand(GIT_COMMANDS.PULL_DEFAULT, {\n            execute: () => this.withProgress(() => this.quickOpenService.performDefaultGitAction(GitAction.PULL)),\n            isEnabled: () => !!this.repositoryTracker.selectedRepository\n        });\n        registry.registerCommand(GIT_COMMANDS.PULL_DEFAULT_FAVORITE, {\n            execute: () => registry.executeCommand(GIT_COMMANDS.PULL_DEFAULT.id),\n            isEnabled: () => !!this.repositoryTracker.selectedRepository\n        });\n        registry.registerCommand(GIT_COMMANDS.PULL, {\n            execute: () => this.withProgress(() => this.quickOpenService.pull()),\n            isEnabled: () => !!this.repositoryTracker.selectedRepository\n        });\n        registry.registerCommand(GIT_COMMANDS.PUSH_DEFAULT, {\n            execute: () => this.withProgress(() => this.quickOpenService.performDefaultGitAction(GitAction.PUSH)),\n            isEnabled: () => !!this.repositoryTracker.selectedRepository\n        });\n        registry.registerCommand(GIT_COMMANDS.PUSH_DEFAULT_FAVORITE, {\n            execute: () => registry.executeCommand(GIT_COMMANDS.PUSH_DEFAULT.id),\n            isEnabled: () => !!this.repositoryTracker.selectedRepository\n        });\n        registry.registerCommand(GIT_COMMANDS.PUSH, {\n            execute: () => this.withProgress(() => this.quickOpenService.push()),\n            isEnabled: () => !!this.repositoryTracker.selectedRepository\n        });\n        registry.registerCommand(GIT_COMMANDS.MERGE, {\n            execute: () => this.withProgress(() => this.quickOpenService.merge()),\n            isEnabled: () => !!this.repositoryTracker.selectedRepository\n        });\n        registry.registerCommand(GIT_COMMANDS.CHECKOUT, {\n            execute: () => this.withProgress(() => this.quickOpenService.checkout()),\n            isEnabled: () => !!this.repositoryTracker.selectedRepository\n        });\n        registry.registerCommand(GIT_COMMANDS.COMMIT_SIGN_OFF, {\n            execute: () => this.withProgress(() => this.commit({ signOff: true })),\n            isEnabled: () => !!this.repositoryTracker.selectedRepository\n        });\n        registry.registerCommand(GIT_COMMANDS.COMMIT_AMEND, {\n            execute: () => this.withProgress(async () => this.amend()),\n            isEnabled: () => !!this.repositoryTracker.selectedRepository\n        });\n        registry.registerCommand(GIT_COMMANDS.STAGE_ALL, {\n            execute: () => {\n                const provider = this.repositoryProvider.selectedScmProvider;\n                if (provider) {\n                    if (this.gitPreferences['git.untrackedChanges'] === 'mixed') {\n                        return this.withProgress(() => provider.stageAll());\n                    } else {\n                        const toStage = provider.unstagedChanges.concat(provider.mergeChanges)\n                            .filter(change => change.status !== GitFileStatus.New)\n                            .map(change => change.uri.toString());\n                        return this.withProgress(() => provider.stage(toStage));\n                    }\n                }\n\n            },\n            isEnabled: () => {\n                const provider = this.repositoryProvider.selectedScmProvider;\n                if (!provider) { return false; }\n                if (this.gitPreferences['git.untrackedChanges'] === 'mixed') {\n                    return Boolean(provider.unstagedChanges.length || provider.mergeChanges.length);\n                } else {\n                    const isNotUntracked = (change: GitFileChange) => change.status !== GitFileStatus.New;\n                    return Boolean(provider.unstagedChanges.filter(isNotUntracked).length || provider.mergeChanges.filter(isNotUntracked).length);\n                }\n            }\n        });\n        registry.registerCommand(GIT_COMMANDS.UNSTAGE_ALL, {\n            execute: () => {\n                const provider = this.repositoryProvider.selectedScmProvider;\n                return provider && this.withProgress(() => provider.unstageAll());\n            },\n            isEnabled: () => !!this.repositoryProvider.selectedScmProvider\n        });\n        registry.registerCommand(GIT_COMMANDS.DISCARD_ALL, {\n            execute: () => {\n                const provider = this.repositoryProvider.selectedScmProvider;\n                return provider && this.withProgress(() => provider.discardAll());\n            },\n            isEnabled: () => !!this.repositoryProvider.selectedScmProvider\n        });\n        registry.registerCommand(GIT_COMMANDS.OPEN_FILE, {\n            execute: widget => this.openFile(widget),\n            isEnabled: widget => !!this.getOpenFileOptions(widget),\n            isVisible: widget => !!this.getOpenFileOptions(widget)\n        });\n        registry.registerCommand(GIT_COMMANDS.OPEN_CHANGES, {\n            execute: widget => this.openChanges(widget),\n            isEnabled: widget => !!this.getOpenChangesOptions(widget),\n            isVisible: widget => !!this.getOpenChangesOptions(widget)\n        });\n        registry.registerCommand(GIT_COMMANDS.SYNC, {\n            execute: () => this.withProgress(() => this.syncService.sync()),\n            isEnabled: () => this.syncService.canSync(),\n            isVisible: () => this.syncService.canSync()\n        });\n        registry.registerCommand(GIT_COMMANDS.PUBLISH, {\n            execute: () => this.withProgress(() => this.syncService.publish()),\n            isEnabled: () => this.syncService.canPublish(),\n            isVisible: () => this.syncService.canPublish()\n        });\n        registry.registerCommand(GIT_COMMANDS.CLONE, {\n            isEnabled: () => this.workspaceService.opened,\n            execute: (url?: string, folder?: string, branch?: string) =>\n                this.quickOpenService.clone(url, folder, branch)\n        });\n        registry.registerCommand(GIT_COMMANDS.COMMIT, {\n            execute: () => this.withProgress(() => this.commit()),\n            isEnabled: () => !!this.repositoryTracker.selectedRepository\n        });\n        registry.registerCommand(GIT_COMMANDS.REFRESH, {\n            execute: () => this.withProgress(() => this.repositoryProvider.refresh())\n        });\n        registry.registerCommand(GIT_COMMANDS.COMMIT_ADD_SIGN_OFF, {\n            execute: async () => this.withProgress(() => this.addSignOff()),\n            isEnabled: () => !!this.repositoryTracker.selectedRepository\n        });\n        registry.registerCommand(GIT_COMMANDS.UNSTAGE, {\n            execute: (...arg: ScmResource[]) => {\n                const resources = arg.filter(r => r.sourceUri).map(r => r.sourceUri.toString());\n                const provider = this.repositoryProvider.selectedScmProvider;\n                return provider && this.withProgress(() => provider.unstage(resources));\n            },\n            isEnabled: (...arg: ScmResource[]) => !!this.repositoryProvider.selectedScmProvider\n                && arg.some(r => r.sourceUri)\n        });\n        registry.registerCommand(GIT_COMMANDS.STAGE, {\n            execute: (...arg: ScmResource[]) => {\n                const resources = arg.filter(r => r.sourceUri).map(r => r.sourceUri.toString());\n                const provider = this.repositoryProvider.selectedScmProvider;\n                return provider && this.withProgress(() => provider.stage(resources));\n            },\n            isEnabled: (...arg: ScmResource[]) => !!this.repositoryProvider.selectedScmProvider\n                && arg.some(r => r.sourceUri)\n        });\n        registry.registerCommand(GIT_COMMANDS.DISCARD, {\n            execute: (...arg: ScmResource[]) => {\n                const resources = arg.filter(r => r.sourceUri).map(r => r.sourceUri.toString());\n                const provider = this.repositoryProvider.selectedScmProvider;\n                return provider && this.withProgress(() => provider.discard(resources));\n            },\n            isEnabled: (...arg: ScmResource[]) => !!this.repositoryProvider.selectedScmProvider\n                && arg.some(r => r.sourceUri)\n        });\n        registry.registerCommand(GIT_COMMANDS.OPEN_CHANGED_FILE, {\n            execute: (...arg: ScmResource[]) => {\n                for (const resource of arg) {\n                    this.editorManager.open(resource.sourceUri, { mode: 'reveal' });\n                }\n            }\n        });\n        registry.registerCommand(GIT_COMMANDS.STASH, {\n            execute: () => this.quickOpenService.stash(),\n            isEnabled: () => !!this.repositoryTracker.selectedRepository &&\n                !!this.repositoryTracker.selectedRepositoryStatus &&\n                this.repositoryTracker.selectedRepositoryStatus.changes.length > 0\n        });\n        registry.registerCommand(GIT_COMMANDS.APPLY_STASH, {\n            execute: () => this.quickOpenService.applyStash(),\n            isEnabled: () => !!this.repositoryTracker.selectedRepository\n        });\n        registry.registerCommand(GIT_COMMANDS.APPLY_LATEST_STASH, {\n            execute: () => this.quickOpenService.applyLatestStash(),\n            isEnabled: () => !!this.repositoryTracker.selectedRepository\n        });\n        registry.registerCommand(GIT_COMMANDS.POP_STASH, {\n            execute: () => this.quickOpenService.popStash(),\n            isEnabled: () => !!this.repositoryTracker.selectedRepository\n        });\n        registry.registerCommand(GIT_COMMANDS.POP_LATEST_STASH, {\n            execute: () => this.quickOpenService.popLatestStash(),\n            isEnabled: () => !!this.repositoryTracker.selectedRepository\n        });\n        registry.registerCommand(GIT_COMMANDS.DROP_STASH, {\n            execute: () => this.quickOpenService.dropStash(),\n            isEnabled: () => !!this.repositoryTracker.selectedRepository\n        });\n        registry.registerCommand(GIT_COMMANDS.INIT_REPOSITORY, {\n            execute: () => this.quickOpenService.initRepository(),\n            isEnabled: widget => this.workspaceService.opened && (!widget || widget instanceof ScmWidget) && !this.repositoryProvider.selectedRepository,\n            isVisible: widget => this.workspaceService.opened && (!widget || widget instanceof ScmWidget) && !this.repositoryProvider.selectedRepository\n        });\n    }\n    async amend(): Promise<void> {\n        {\n            const scmRepository = this.repositoryProvider.selectedScmRepository;\n            if (!scmRepository) {\n                return;\n            }\n\n            try {\n                const lastCommit = await scmRepository.provider.amendSupport.getLastCommit();\n                if (lastCommit === undefined) {\n                    scmRepository.input.issue = {\n                        type: ScmInputIssueType.Error,\n                        message: nls.localize('theia/git/noPreviousCommit', 'No previous commit to amend')\n                    };\n                    scmRepository.input.focus();\n                    return;\n                }\n                const message = await this.quickOpenService.commitMessageForAmend();\n                await this.commit({ message, amend: true });\n            } catch (e) {\n                if (!(e instanceof Error) || e.message !== 'User abort.') {\n                    throw e;\n                }\n            }\n        }\n    }\n\n    protected withProgress<T>(task: () => Promise<T>): Promise<T> {\n        return this.progressService.withProgress('', 'scm', task);\n    }\n\n    registerToolbarItems(registry: TabBarToolbarRegistry): void {\n        registry.registerItem({\n            id: GIT_COMMANDS.OPEN_FILE.id,\n            command: GIT_COMMANDS.OPEN_FILE.id,\n            tooltip: GIT_COMMANDS.OPEN_FILE.label\n        });\n        registry.registerItem({\n            id: GIT_COMMANDS.OPEN_CHANGES.id,\n            command: GIT_COMMANDS.OPEN_CHANGES.id,\n            tooltip: GIT_COMMANDS.OPEN_CHANGES.label\n        });\n        registry.registerItem({\n            id: GIT_COMMANDS.INIT_REPOSITORY.id,\n            command: GIT_COMMANDS.INIT_REPOSITORY.id,\n            tooltip: GIT_COMMANDS.INIT_REPOSITORY.label\n        });\n\n        const registerItem = (item: Mutable<TabBarToolbarItem>) => {\n            const commandId = item.command;\n            const id = '__git.tabbar.toolbar.' + commandId;\n            const command = this.commands.getCommand(commandId);\n            this.commands.registerCommand({ id, iconClass: command && command.iconClass }, {\n                execute: (widget, ...args) => widget instanceof ScmWidget && this.commands.executeCommand(commandId, ...args),\n                isEnabled: (widget, ...args) => widget instanceof ScmWidget && this.commands.isEnabled(commandId, ...args),\n                isVisible: (widget, ...args) =>\n                    widget instanceof ScmWidget &&\n                    this.commands.isVisible(commandId, ...args) &&\n                    !!this.repositoryProvider.selectedRepository\n            });\n            item.command = id;\n            registry.registerItem(item);\n        };\n        registerItem({\n            id: GIT_COMMANDS.COMMIT.id,\n            command: GIT_COMMANDS.COMMIT.id,\n            tooltip: GIT_COMMANDS.COMMIT.label\n        });\n        registerItem({\n            id: GIT_COMMANDS.REFRESH.id,\n            command: GIT_COMMANDS.REFRESH.id,\n            tooltip: GIT_COMMANDS.REFRESH.label\n        });\n        registerItem({\n            id: GIT_COMMANDS.COMMIT_ADD_SIGN_OFF.id,\n            command: GIT_COMMANDS.COMMIT_ADD_SIGN_OFF.id,\n            tooltip: GIT_COMMANDS.COMMIT_ADD_SIGN_OFF.label\n        });\n\n        // Favorites menu group\n        [GIT_COMMANDS.PULL_DEFAULT_FAVORITE, GIT_COMMANDS.PUSH_DEFAULT_FAVORITE].forEach((command, index) =>\n            registerItem({\n                id: command.id + '_fav',\n                command: command.id,\n                tooltip: command.label,\n                group: GIT_MENUS.FAV_GROUP,\n                priority: 100 - index\n            })\n        );\n\n        registerItem({\n            id: GIT_COMMANDS.COMMIT_AMEND.id,\n            command: GIT_COMMANDS.COMMIT_AMEND.id,\n            tooltip: nls.localize('vscode.git/package/command.commitStagedAmend', 'Commit (Amend)'),\n            group: this.asSubMenuItemOf(GIT_MENUS.SUBMENU_COMMIT)\n        });\n        registerItem({\n            id: GIT_COMMANDS.COMMIT_SIGN_OFF.id,\n            command: GIT_COMMANDS.COMMIT_SIGN_OFF.id,\n            tooltip: nls.localize('vscode.git/package/command.commitStagedSigned', 'Commit (Signed Off)'),\n            group: this.asSubMenuItemOf(GIT_MENUS.SUBMENU_COMMIT)\n        });\n        [GIT_COMMANDS.PULL_DEFAULT, GIT_COMMANDS.PULL].forEach(command =>\n            registerItem({\n                id: command.id,\n                command: command.id,\n                tooltip: command.label,\n                group: this.asSubMenuItemOf(GIT_MENUS.SUBMENU_PULL_PUSH)\n            })\n        );\n        [GIT_COMMANDS.PUSH_DEFAULT, GIT_COMMANDS.PUSH].forEach(command =>\n            registerItem({\n                id: command.id,\n                command: command.id,\n                tooltip: command.label,\n                group: this.asSubMenuItemOf(GIT_MENUS.SUBMENU_PULL_PUSH, 1)\n            })\n        );\n        registerItem({\n            id: GIT_COMMANDS.FETCH.id,\n            command: GIT_COMMANDS.FETCH.id,\n            tooltip: GIT_COMMANDS.FETCH.label,\n            group: this.asSubMenuItemOf(GIT_MENUS.SUBMENU_PULL_PUSH, 2)\n        });\n\n        [\n            GIT_COMMANDS.STASH, GIT_COMMANDS.APPLY_STASH,\n            GIT_COMMANDS.APPLY_LATEST_STASH, GIT_COMMANDS.POP_STASH,\n            GIT_COMMANDS.POP_LATEST_STASH, GIT_COMMANDS.DROP_STASH\n        ].forEach((command, index) =>\n            registerItem({\n                id: command.id,\n                command: command.id,\n                tooltip: command.label,\n                group: this.asSubMenuItemOf(GIT_MENUS.SUBMENU_STASH),\n                priority: 100 - index\n            })\n        );\n        registerItem({\n            id: GIT_COMMANDS.STAGE_ALL.id,\n            command: GIT_COMMANDS.STAGE_ALL.id,\n            tooltip: GIT_COMMANDS.STAGE_ALL.label,\n            group: this.asSubMenuItemOf(GIT_MENUS.SUBMENU_CHANGES),\n            priority: 30\n        });\n        registerItem({\n            id: GIT_COMMANDS.UNSTAGE_ALL.id,\n            command: GIT_COMMANDS.UNSTAGE_ALL.id,\n            tooltip: GIT_COMMANDS.UNSTAGE_ALL.label,\n            group: this.asSubMenuItemOf(GIT_MENUS.SUBMENU_CHANGES),\n            priority: 20\n        });\n        registerItem({\n            id: GIT_COMMANDS.DISCARD_ALL.id,\n            command: GIT_COMMANDS.DISCARD_ALL.id,\n            tooltip: GIT_COMMANDS.DISCARD_ALL.label,\n            group: this.asSubMenuItemOf(GIT_MENUS.SUBMENU_CHANGES),\n            priority: 10\n        });\n        registerItem({\n            id: GIT_COMMANDS.MERGE.id,\n            command: GIT_COMMANDS.MERGE.id,\n            tooltip: GIT_COMMANDS.MERGE.label,\n            group: GIT_MENUS.COMMANDS_GROUP\n        });\n    }\n\n    protected asSubMenuItemOf(submenu: { group: string; label: string; menuGroups: string[]; }, groupIdx: number = 0): string {\n        return submenu.group + '/' + submenu.label + '/' + submenu.menuGroups[groupIdx];\n    }\n\n    protected hasConflicts(changes: GitFileChange[]): boolean {\n        return changes.some(c => c.status === GitFileStatus.Conflicted);\n    }\n\n    protected allStaged(changes: GitFileChange[]): boolean {\n        return !changes.some(c => !c.staged);\n    }\n\n    protected async openFile(widget?: Widget): Promise<EditorWidget | undefined> {\n        const options = this.getOpenFileOptions(widget);\n        return options && this.editorManager.open(options.uri, options.options);\n    }\n\n    protected getOpenFileOptions(widget?: Widget): GitOpenFileOptions | undefined {\n        const ref = widget ? widget : this.editorManager.currentEditor;\n        if (ref instanceof EditorWidget && DiffUris.isDiffUri(ref.editor.uri)) {\n            const [, right] = DiffUris.decode(ref.editor.uri);\n            const uri = right.withScheme('file');\n            const selection = ref.editor.selection;\n            return { uri, options: { selection, widgetOptions: { ref } } };\n        }\n        return undefined;\n    }\n\n    async openChanges(widget?: Widget): Promise<EditorWidget | undefined> {\n        const options = this.getOpenChangesOptions(widget);\n        if (options) {\n            const provider = this.repositoryProvider.selectedScmProvider;\n            return provider && provider.openChange(options.change, options.options);\n        }\n        return undefined;\n    }\n\n    protected getOpenChangesOptions(widget?: Widget): GitOpenChangesOptions | undefined {\n        const provider = this.repositoryProvider.selectedScmProvider;\n        if (!provider) {\n            return undefined;\n        }\n        const ref = widget ? widget : this.editorManager.currentEditor;\n        if (ref instanceof EditorWidget && !DiffUris.isDiffUri(ref.editor.uri)) {\n            const uri = ref.editor.uri;\n            const change = provider.findChange(uri);\n            if (change && provider.getUriToOpen(change).toString() !== uri.toString()) {\n                const selection = ref.editor.selection;\n                return { change, options: { selection, widgetOptions: { ref } } };\n            }\n        }\n        return undefined;\n    }\n\n    protected updateStatusBar(): void {\n        const scmProvider = this.repositoryProvider.selectedScmProvider;\n        if (!scmProvider) {\n            return;\n        }\n        const statusBarCommands: ScmCommand[] = [];\n\n        const checkoutCommand = this.getCheckoutStatusBarCommand();\n        if (checkoutCommand) {\n            statusBarCommands.push(checkoutCommand);\n        }\n\n        const syncCommand = this.getSyncStatusBarCommand();\n        if (syncCommand) {\n            statusBarCommands.push(syncCommand);\n        }\n        scmProvider.statusBarCommands = statusBarCommands;\n    }\n    protected getCheckoutStatusBarCommand(): ScmCommand | undefined {\n        const scmProvider = this.repositoryProvider.selectedScmProvider;\n        if (!scmProvider) {\n            return undefined;\n        }\n        const status = scmProvider.getStatus();\n        if (!status) {\n            return undefined;\n        }\n        const branch = status.branch ? status.branch : status.currentHead ? status.currentHead.substring(0, 8) : 'NO-HEAD';\n        const changes = (scmProvider.unstagedChanges.length > 0 ? '*' : '')\n            + (scmProvider.stagedChanges.length > 0 ? '+' : '')\n            + (scmProvider.mergeChanges.length > 0 ? '!' : '');\n        return {\n            command: GIT_COMMANDS.CHECKOUT.id,\n            title: `$(codicon-source-control) ${branch}${changes}`,\n            tooltip: `${branch}${changes}`\n        };\n    }\n    protected getSyncStatusBarCommand(): ScmCommand | undefined {\n        const status = this.repositoryTracker.selectedRepositoryStatus;\n        if (!status || !status.branch) {\n            return undefined;\n        }\n        if (this.syncService.isSyncing()) {\n            return {\n                title: '$(codicon-sync~spin)',\n                tooltip: nls.localize('vscode.git/statusbar/syncing changes', 'Synchronizing Changes...')\n            };\n        }\n        const { upstreamBranch, aheadBehind } = status;\n        if (upstreamBranch) {\n            return {\n                title: '$(codicon-sync)' + (aheadBehind && (aheadBehind.ahead + aheadBehind.behind) > 0 ? ` ${aheadBehind.behind}↓ ${aheadBehind.ahead}↑` : ''),\n                command: GIT_COMMANDS.SYNC.id,\n                tooltip: nls.localize('vscode.git/repository/sync changes', 'Synchronize Changes')\n            };\n        }\n        return {\n            title: '$(codicon-cloud-upload)',\n            command: GIT_COMMANDS.PUBLISH.id,\n            tooltip: nls.localize('vscode.git/statusbar/publish changes', 'Publish Changes')\n        };\n    }\n\n    async commit(options: Git.Options.Commit & { message?: string } = {}): Promise<void> {\n        const scmRepository = this.repositoryProvider.selectedScmRepository;\n        if (!scmRepository) {\n            return;\n        }\n        const message = options.message || scmRepository.input.value;\n        if (!message.trim()) {\n            scmRepository.input.issue = {\n                type: ScmInputIssueType.Error,\n                message: nls.localize('vscode.git/repository/commitMessageWhitespacesOnlyWarning', 'Please provide a commit message')\n            };\n            scmRepository.input.focus();\n            return;\n        }\n        if (!scmRepository.provider.stagedChanges.length) {\n            scmRepository.input.issue = {\n                type: ScmInputIssueType.Error,\n                message: nls.localize('vscode.git/commands/no changes', 'No changes added to commit')\n            };\n            scmRepository.input.focus();\n            return;\n        }\n        scmRepository.input.issue = undefined;\n        try {\n            // We can make sure, repository exists, otherwise we would not have this button.\n            const amend = options.amend;\n            const signOff = options.signOff || this.gitPreferences['git.alwaysSignOff'];\n            const repository = scmRepository.provider.repository;\n            await this.git.commit(repository, message, { signOff, amend });\n            scmRepository.input.value = '';\n        } catch (error) {\n            this.gitErrorHandler.handleError(error);\n        }\n    }\n\n    async addSignOff(): Promise<void> {\n        const scmRepository = this.repositoryProvider.selectedScmRepository;\n        if (!scmRepository) {\n            return;\n        }\n        try {\n            const repository = scmRepository.provider.repository;\n            const [username, email] = (await Promise.all([\n                this.git.exec(repository, ['config', 'user.name']),\n                this.git.exec(repository, ['config', 'user.email'])\n            ])).map(result => result.stdout.trim());\n\n            const signOff = `\\n\\nSigned-off-by: ${username} <${email}>`;\n            const value = scmRepository.input.value;\n            if (value.endsWith(signOff)) {\n                scmRepository.input.value = value.substring(0, value.length - signOff.length);\n            } else {\n                scmRepository.input.value = `${value}${signOff}`;\n            }\n            scmRepository.input.focus();\n        } catch (e) {\n            scmRepository.input.issue = {\n                type: ScmInputIssueType.Warning,\n                message: nls.localize('theia/git/missingUserInfo', 'Make sure you configure your \\'user.name\\' and \\'user.email\\' in git.')\n            };\n        }\n\n    }\n\n    /**\n     * It should be aligned with https://code.visualstudio.com/api/references/theme-color#git-colors\n     */\n    registerColors(colors: ColorRegistry): void {\n        colors.register({\n            id: 'gitDecoration.addedResourceForeground',\n            description: 'Color for added resources.',\n            defaults: {\n                light: '#587c0c',\n                dark: '#81b88b',\n                hcDark: '#a1e3ad',\n                hcLight: '#374e06'\n            }\n        }, {\n            id: 'gitDecoration.modifiedResourceForeground',\n            description: 'Color for modified resources.',\n            defaults: {\n                light: '#895503',\n                dark: '#E2C08D',\n                hcDark: '#E2C08D',\n                hcLight: '#895503'\n            }\n        }, {\n            id: 'gitDecoration.deletedResourceForeground',\n            description: 'Color for deleted resources.',\n            defaults: {\n                light: '#ad0707',\n                dark: '#c74e39',\n                hcDark: '#c74e39',\n                hcLight: '#ad0707'\n            }\n        }, {\n            id: 'gitDecoration.untrackedResourceForeground',\n            description: 'Color for untracked resources.',\n            defaults: {\n                light: '#007100',\n                dark: '#73C991',\n                hcDark: '#73C991',\n                hcLight: '#007100'\n            }\n        }, {\n            id: 'gitDecoration.conflictingResourceForeground',\n            description: 'Color for resources with conflicts.',\n            defaults: {\n                light: '#6c6cc4',\n                dark: '#6c6cc4',\n                hcDark: '#c74e39',\n                hcLight: '#ad0707'\n            }\n        }, {\n            id: 'gitlens.gutterBackgroundColor',\n            description: 'Specifies the background color of the gutter blame annotations',\n            defaults: {\n                dark: '#FFFFFF13',\n                light: '#0000000C',\n                hcDark: '#FFFFFF13'\n            }\n        }, {\n            id: 'gitlens.gutterForegroundColor',\n            description: 'Specifies the foreground color of the gutter blame annotations',\n            defaults: {\n                dark: '#BEBEBE',\n                light: '#747474',\n                hcDark: '#BEBEBE'\n            }\n        }, {\n            id: 'gitlens.lineHighlightBackgroundColor',\n            description: 'Specifies the background color of the associated line highlights in blame annotations',\n            defaults: {\n                dark: '#00BCF233',\n                light: '#00BCF233',\n                hcDark: '#00BCF233'\n            }\n        });\n    }\n\n}\nexport interface GitOpenFileOptions {\n    readonly uri: URI\n    readonly options?: EditorOpenerOptions\n}\nexport interface GitOpenChangesOptions {\n    readonly change: GitFileChange\n    readonly options?: EditorOpenerOptions\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { GitFileChange, GitFileStatus, GitStatusChangeEvent } from '../common';\nimport { CancellationToken, Emitter, Event } from '@theia/core/lib/common';\nimport { Decoration, DecorationsProvider } from '@theia/core/lib/browser/decorations-service';\nimport { GitRepositoryTracker } from './git-repository-tracker';\nimport URI from '@theia/core/lib/common/uri';\nimport { GitConfiguration, GitPreferences } from './git-preferences';\nimport { PreferenceChangeEvent } from '@theia/core/lib/browser';\n\n@injectable()\nexport class GitDecorationProvider implements DecorationsProvider {\n\n    @inject(GitPreferences) protected readonly preferences: GitPreferences;\n    @inject(GitRepositoryTracker) protected readonly gitRepositoryTracker: GitRepositoryTracker;\n\n    protected decorationsEnabled: boolean;\n    protected colorsEnabled: boolean;\n\n    protected decorations = new Map<string, Decoration>();\n    protected uris = new Set<string>();\n\n    private readonly onDidChangeDecorationsEmitter = new Emitter<URI[]>();\n    readonly onDidChange: Event<URI[]> = this.onDidChangeDecorationsEmitter.event;\n\n    @postConstruct()\n    protected init(): void {\n        this.decorationsEnabled = this.preferences['git.decorations.enabled'];\n        this.colorsEnabled = this.preferences['git.decorations.colors'];\n        this.gitRepositoryTracker.onGitEvent((event: GitStatusChangeEvent | undefined) => this.handleGitEvent(event));\n        this.preferences.onPreferenceChanged((event: PreferenceChangeEvent<GitConfiguration>) => this.handlePreferenceChange(event));\n    }\n\n    protected async handleGitEvent(event: GitStatusChangeEvent | undefined): Promise<void> {\n        this.updateDecorations(event);\n        this.triggerDecorationChange();\n    }\n\n    protected updateDecorations(event?: GitStatusChangeEvent): void {\n        if (!event) {\n            return;\n        }\n        const newDecorations = new Map<string, Decoration>();\n        this.collectDecorationData(event.status.changes, newDecorations);\n\n        this.uris = new Set([...this.decorations.keys()].concat([...newDecorations.keys()]));\n        this.decorations = newDecorations;\n    }\n\n    protected collectDecorationData(changes: GitFileChange[], bucket: Map<string, Decoration>): void {\n        changes.forEach(change => {\n            const color = GitFileStatus.getColor(change.status, change.staged);\n            bucket.set(change.uri, {\n                bubble: true,\n                colorId: color.substring(12, color.length - 1).replace(/-/g, '.'),\n                tooltip: GitFileStatus.toString(change.status),\n                letter: GitFileStatus.toAbbreviation(change.status, change.staged)\n            });\n        });\n    }\n\n    provideDecorations(uri: URI, token: CancellationToken): Decoration | Promise<Decoration | undefined> | undefined {\n        if (this.decorationsEnabled) {\n            const decoration = this.decorations.get(uri.toString());\n            if (decoration && !this.colorsEnabled) {\n                // Remove decoration color if disabled.\n                return {\n                    ...decoration,\n                    colorId: undefined\n                };\n            }\n            return decoration;\n        }\n        return undefined;\n    }\n\n    protected handlePreferenceChange(event: PreferenceChangeEvent<GitConfiguration>): void {\n        const { preferenceName, newValue } = event;\n        let updateDecorations = false;\n        if (preferenceName === 'git.decorations.enabled') {\n            updateDecorations = true;\n            const decorationsEnabled = !!newValue;\n            if (this.decorationsEnabled !== decorationsEnabled) {\n                this.decorationsEnabled = decorationsEnabled;\n            }\n        }\n        if (preferenceName === 'git.decorations.colors') {\n            updateDecorations = true;\n            const colorsEnabled = !!newValue;\n            if (this.colorsEnabled !== colorsEnabled) {\n                this.colorsEnabled = colorsEnabled;\n            }\n        }\n        if (updateDecorations) {\n            this.triggerDecorationChange();\n        }\n    }\n\n    /**\n     * Notify that the provider has been updated to trigger a re-render of decorations.\n     */\n    protected triggerDecorationChange(): void {\n        this.onDidChangeDecorationsEmitter.fire(Array.from(this.uris, value => new URI(value)));\n    }\n\n}\n\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { MessageService } from '@theia/core';\n\n@injectable()\nexport class GitErrorHandler {\n\n    @inject(MessageService) protected readonly messageService: MessageService;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public handleError(error: any): void {\n        const message = error instanceof Error ? error.message : error;\n        if (message) {\n            this.messageService.error(message, { timeout: 0 });\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport '../../src/browser/style/index.css';\n\nimport { ContainerModule, interfaces } from '@theia/core/shared/inversify';\nimport { CommandContribution, MenuContribution, ResourceResolver } from '@theia/core/lib/common';\nimport {\n    WebSocketConnectionProvider,\n    FrontendApplicationContribution,\n} from '@theia/core/lib/browser';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { Git, GitPath, GitWatcher, GitWatcherPath, GitWatcherServer, GitWatcherServerProxy, ReconnectingGitWatcherServer } from '../common';\nimport { GitContribution } from './git-contribution';\nimport { bindGitDiffModule } from './diff/git-diff-frontend-module';\nimport { bindGitHistoryModule } from './history/git-history-frontend-module';\nimport { GitResourceResolver } from './git-resource-resolver';\nimport { GitRepositoryProvider } from './git-repository-provider';\nimport { GitQuickOpenService } from './git-quick-open-service';\nimport { bindGitPreferences } from './git-preferences';\nimport { bindDirtyDiff } from './dirty-diff/dirty-diff-module';\nimport { bindBlame } from './blame/blame-module';\nimport { GitRepositoryTracker } from './git-repository-tracker';\nimport { GitCommitMessageValidator } from './git-commit-message-validator';\nimport { GitSyncService } from './git-sync-service';\nimport { GitErrorHandler } from './git-error-handler';\nimport { GitScmProvider, GitScmProviderOptions } from './git-scm-provider';\nimport { ColorContribution } from '@theia/core/lib/browser/color-application-contribution';\nimport { ScmHistorySupport } from '@theia/scm-extra/lib/browser/history/scm-history-widget';\nimport { ScmHistoryProvider } from '@theia/scm-extra/lib/browser/history';\nimport { GitHistorySupport } from './history/git-history-support';\nimport { GitDecorationProvider } from './git-decoration-provider';\n\nexport default new ContainerModule(bind => {\n    bindGitPreferences(bind);\n    bindGitDiffModule(bind);\n    bindGitHistoryModule(bind);\n    bindDirtyDiff(bind);\n    bindBlame(bind);\n    bind(GitRepositoryTracker).toSelf().inSingletonScope();\n    bind(GitWatcherServerProxy).toDynamicValue(context => WebSocketConnectionProvider.createProxy(context.container, GitWatcherPath)).inSingletonScope();\n    bind(GitWatcherServer).to(ReconnectingGitWatcherServer).inSingletonScope();\n    bind(GitWatcher).toSelf().inSingletonScope();\n    bind(Git).toDynamicValue(context => WebSocketConnectionProvider.createProxy(context.container, GitPath)).inSingletonScope();\n\n    bind(GitContribution).toSelf().inSingletonScope();\n    bind(CommandContribution).toService(GitContribution);\n    bind(MenuContribution).toService(GitContribution);\n    bind(FrontendApplicationContribution).toService(GitContribution);\n    bind(TabBarToolbarContribution).toService(GitContribution);\n    bind(ColorContribution).toService(GitContribution);\n\n    bind(GitResourceResolver).toSelf().inSingletonScope();\n    bind(ResourceResolver).toService(GitResourceResolver);\n\n    bind(GitScmProvider.Factory).toFactory(createGitScmProviderFactory);\n    bind(GitRepositoryProvider).toSelf().inSingletonScope();\n    bind(GitDecorationProvider).toSelf().inSingletonScope();\n    bind(GitQuickOpenService).toSelf().inSingletonScope();\n\n    bind(GitCommitMessageValidator).toSelf().inSingletonScope();\n\n    bind(GitSyncService).toSelf().inSingletonScope();\n    bind(GitErrorHandler).toSelf().inSingletonScope();\n});\n\nexport function createGitScmProviderFactory(ctx: interfaces.Context): GitScmProvider.Factory {\n    return (options: GitScmProviderOptions) => {\n        const container = ctx.container.createChild();\n        container.bind(GitScmProviderOptions).toConstantValue(options);\n        container.bind(GitScmProvider).toSelf().inSingletonScope();\n        container.bind(GitHistorySupport).toSelf().inSingletonScope();\n        container.bind(ScmHistorySupport).toService(GitHistorySupport);\n        const provider = container.get(GitScmProvider);\n        const historySupport = container.get(GitHistorySupport);\n        (provider as ScmHistoryProvider).historySupport = historySupport;\n        return provider;\n    };\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { createPreferenceProxy, PreferenceProxy, PreferenceService, PreferenceContribution, PreferenceSchema } from '@theia/core/lib/browser';\nimport { nls } from '@theia/core/lib/common/nls';\n\n/* eslint-disable max-len */\n\nexport const GitConfigSchema: PreferenceSchema = {\n    'type': 'object',\n    'properties': {\n        'git.decorations.enabled': {\n            'type': 'boolean',\n            'description': nls.localize('vscode.git/package/config.decorations.enabled', 'Show Git file status in the navigator.'),\n            'default': true\n        },\n        'git.decorations.colors': {\n            'type': 'boolean',\n            'description': nls.localize('theia/git/gitDecorationsColors', 'Use color decoration in the navigator.'),\n            'default': true\n        },\n        'git.editor.decorations.enabled': {\n            'type': 'boolean',\n            'description': nls.localize('theia/git/editorDecorationsEnabled', 'Show git decorations in the editor.'),\n            'default': true\n        },\n        'git.editor.dirtyDiff.linesLimit': {\n            'type': 'number',\n            'description': nls.localize('theia/git/dirtyDiffLinesLimit', 'Do not show dirty diff decorations, if editor\\'s line count exceeds this limit.'),\n            'default': 1000\n        },\n        'git.alwaysSignOff': {\n            'type': 'boolean',\n            'description': nls.localize('vscode.git/package/config.alwaysSignOff', 'Always sign off commits.'),\n            'default': false\n        },\n        'git.untrackedChanges': {\n            type: 'string',\n            enum: [\n                nls.localize('theia/scm/config.untrackedChanges.mixed', 'mixed'),\n                nls.localize('theia/scm/config.untrackedChanges.separate', 'separate'),\n                nls.localize('theia/scm/config.untrackedChanges.hidden', 'hidden')\n            ],\n            enumDescriptions: [\n                nls.localize('theia/scm/config.untrackedChanges.mixed/description', 'All changes, tracked and untracked, appear together and behave equally.'),\n                nls.localize('theia/scm/config.untrackedChanges.separate/description', 'Untracked changes appear separately in the Source Control view. They are also excluded from several actions.'),\n                nls.localize('theia/scm/config.untrackedChanges.hidden/description', 'Untracked changes are hidden and excluded from several actions.'),\n            ],\n            description: nls.localize('theia/scm/config.untrackedChanges', 'Controls how untracked changes behave.'),\n            default: 'mixed',\n            scope: 'resource',\n        }\n    }\n};\n\nexport interface GitConfiguration {\n    'git.decorations.enabled': boolean,\n    'git.decorations.colors': boolean,\n    'git.editor.decorations.enabled': boolean,\n    'git.editor.dirtyDiff.linesLimit': number,\n    'git.alwaysSignOff': boolean,\n    'git.untrackedChanges': 'mixed' | 'separate' | 'hidden';\n}\n\nexport const GitPreferenceContribution = Symbol('GitPreferenceContribution');\nexport const GitPreferences = Symbol('GitPreferences');\nexport type GitPreferences = PreferenceProxy<GitConfiguration>;\n\nexport function createGitPreferences(preferences: PreferenceService, schema: PreferenceSchema = GitConfigSchema): GitPreferences {\n    return createPreferenceProxy(preferences, schema);\n}\n\nexport function bindGitPreferences(bind: interfaces.Bind): void {\n    bind(GitPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        const contribution = ctx.container.get<PreferenceContribution>(GitPreferenceContribution);\n        return createGitPreferences(preferences, contribution.schema);\n    }).inSingletonScope();\n    bind(GitPreferenceContribution).toConstantValue({ schema: GitConfigSchema });\n    bind(PreferenceContribution).toService(GitPreferenceContribution);\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, optional } from '@theia/core/shared/inversify';\nimport { Git, Repository, Branch, BranchType, Tag, Remote, StashEntry } from '../common';\nimport { GitRepositoryProvider } from './git-repository-provider';\nimport { MessageService } from '@theia/core/lib/common/message-service';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\nimport { GitErrorHandler } from './git-error-handler';\nimport { ProgressService } from '@theia/core/lib/common/progress-service';\nimport URI from '@theia/core/lib/common/uri';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { LabelProvider, QuickInputService, QuickPick, QuickPickItem } from '@theia/core/lib/browser';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\n\nexport enum GitAction {\n    PULL,\n    PUSH\n}\n\n/**\n * Service delegating into the `Quick Input Service`, so that the Git commands can be further refined.\n * For instance, the `remote` can be specified for `pull`, `push`, and `fetch`. And the branch can be\n * specified for `git merge`.\n */\n@injectable()\nexport class GitQuickOpenService {\n\n    @inject(GitErrorHandler) protected readonly gitErrorHandler: GitErrorHandler;\n    @inject(ProgressService) protected readonly progressService: ProgressService;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n\n    @inject(Git) protected readonly git: Git;\n    @inject(GitRepositoryProvider) protected readonly repositoryProvider: GitRepositoryProvider;\n    @inject(QuickInputService) @optional() protected readonly quickInputService: QuickInputService;\n    @inject(MessageService) protected readonly messageService: MessageService;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(FileService) protected readonly fileService: FileService;\n\n    async clone(url?: string, folder?: string, branch?: string): Promise<string | undefined> {\n        return this.withProgress(async () => {\n            if (!folder) {\n                const roots = await this.workspaceService.roots;\n                folder = roots[0].resource.toString();\n            }\n\n            if (url) {\n                const repo = await this.git.clone(\n                    url,\n                    {\n                        localUri: await this.buildDefaultProjectPath(folder, url),\n                        branch: branch\n                    });\n                return repo.localUri;\n            }\n\n            this.quickInputService?.showQuickPick(\n                [\n                    new GitQuickPickItem(\n                        nls.localize('theia/git/cloneQuickInputLabel', 'Please provide a Git repository location. Press \\'Enter\\' to confirm or \\'Escape\\' to cancel.')\n                    )\n                ],\n                {\n                    placeholder: nls.localize('vscode.git/dist/commands/selectFolder', 'Select Repository Location'),\n                    onDidChangeValue: (quickPick: QuickPick<QuickPickItem>, filter: string) => this.query(quickPick, filter, folder)\n                });\n        });\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private query(quickPick: any, filter: string, folder: any): void {\n        quickPick.busy = true;\n        const { git, buildDefaultProjectPath, gitErrorHandler, wrapWithProgress } = this;\n\n        try {\n            if (filter === undefined || filter.length === 0) {\n                quickPick.items = [\n                    new GitQuickPickItem(\n                        nls.localize('theia/git/cloneQuickInputLabel', 'Please provide a Git repository location. Press \\'Enter\\' to confirm or \\'Escape\\' to cancel.')\n                    )\n                ];\n            } else {\n                quickPick.items = [\n                    new GitQuickPickItem(\n                        nls.localize(\n                            'theia/git/cloneRepository',\n                            'Clone the Git repository: {0}. Press \\'Enter\\' to confirm or \\'Escape\\' to cancel.',\n                            filter\n                        ),\n                        wrapWithProgress(async () => {\n                            try {\n                                await git.clone(filter, { localUri: await buildDefaultProjectPath(folder, filter) });\n                            } catch (error) {\n                                gitErrorHandler.handleError(error);\n                            }\n                        }))\n                ];\n            }\n        } catch (err) {\n            quickPick.items = [new GitQuickPickItem('$(error) ' + nls.localizeByDefault('Error: {0}', err.message))];\n            console.error(err);\n        } finally {\n            quickPick.busy = false;\n        }\n    }\n\n    private buildDefaultProjectPath = this.doBuildDefaultProjectPath.bind(this);\n    private async doBuildDefaultProjectPath(folderPath: string, gitURI: string): Promise<string> {\n        if (!(await this.fileService.exists(new URI(folderPath)))) {\n            // user specifies its own project path, doesn't want us to guess it\n            return folderPath;\n        }\n        const uriSplitted = gitURI.split('/');\n        let projectPath = folderPath + '/' + (uriSplitted.pop() || uriSplitted.pop());\n        if (projectPath.endsWith('.git')) {\n            projectPath = projectPath.substring(0, projectPath.length - '.git'.length);\n        }\n        return projectPath;\n    }\n\n    async fetch(): Promise<void> {\n        const repository = this.getRepository();\n        if (!repository) {\n            return;\n        }\n        return this.withProgress(async () => {\n            const remotes = await this.getRemotes();\n            const execute = async (item: GitQuickPickItem<Remote>) => {\n                try {\n                    await this.git.fetch(repository, { remote: item.ref!.name });\n                } catch (error) {\n                    this.gitErrorHandler.handleError(error);\n                }\n            };\n            const items = remotes.map(remote => new GitQuickPickItem<Remote>(remote.name, execute, remote, remote.fetch));\n            this.quickInputService?.showQuickPick(items, { placeholder: nls.localize('theia/git/fetchPickRemote', 'Pick a remote to fetch from:') });\n        });\n    }\n\n    async performDefaultGitAction(action: GitAction): Promise<void> {\n        const remote = await this.getRemotes();\n        const defaultRemote = remote[0]?.name;\n        const repository = this.getRepository();\n        if (!repository) {\n            return;\n        }\n        return this.withProgress(async () => {\n            try {\n                if (action === GitAction.PULL) {\n                    await this.git.pull(repository, { remote: defaultRemote });\n                    console.log(`Git Pull: successfully completed from ${defaultRemote}.`);\n                } else if (action === GitAction.PUSH) {\n                    await this.git.push(repository, { remote: defaultRemote, setUpstream: true });\n                    console.log(`Git Push: successfully completed to ${defaultRemote}.`);\n                }\n            } catch (error) {\n                this.gitErrorHandler.handleError(error);\n            }\n        });\n    }\n\n    async push(): Promise<void> {\n        const repository = this.getRepository();\n        if (!repository) {\n            return;\n        }\n        return this.withProgress(async () => {\n            const [remotes, currentBranch] = await Promise.all([this.getRemotes(), this.getCurrentBranch()]);\n            const execute = async (item: GitQuickPickItem<Remote>) => {\n                try {\n                    await this.git.push(repository, { remote: item.label, setUpstream: true });\n                } catch (error) {\n                    this.gitErrorHandler.handleError(error);\n                }\n            };\n            const items = remotes.map(remote => new GitQuickPickItem<Remote>(remote.name, execute, remote, remote.push));\n            const branchName = currentBranch ? `'${currentBranch.name}' ` : '';\n            this.quickInputService?.showQuickPick(items, {\n                placeholder: nls.localize('vscode.git/dist/commands/pick remote', \"Pick a remote to publish the branch '{0}' to:\", branchName)\n            });\n        });\n    }\n\n    async pull(): Promise<void> {\n        const repository = this.getRepository();\n        if (!repository) {\n            return;\n        }\n        return this.withProgress(async () => {\n            const remotes = await this.getRemotes();\n            const defaultRemote = remotes[0].name; // I wish I could use assignment destructuring here. (GH-413)\n            const executeRemote = async (remoteItem: GitQuickPickItem<Remote>) => {\n                // The first remote is the default.\n                if (remoteItem.ref!.name === defaultRemote) {\n                    try {\n                        await this.git.pull(repository, { remote: remoteItem.label });\n                    } catch (error) {\n                        this.gitErrorHandler.handleError(error);\n                    }\n                } else {\n                    // Otherwise we need to propose the branches from\n                    const branches = await this.getBranches();\n                    const executeBranch = async (branchItem: GitQuickPickItem<Branch>) => {\n                        try {\n                            await this.git.pull(repository, { remote: remoteItem.ref!.name, branch: branchItem.ref!.nameWithoutRemote });\n                        } catch (error) {\n                            this.gitErrorHandler.handleError(error);\n                        }\n                    };\n                    const branchItems = branches\n                        .filter(branch => branch.type === BranchType.Remote)\n                        .filter(branch => (branch.name || '').startsWith(`${remoteItem.label}/`))\n                        .map(branch => new GitQuickPickItem(branch.name, executeBranch, branch));\n\n                    this.quickInputService?.showQuickPick(branchItems, {\n                        placeholder: nls.localize('vscode.git/dist/commands/pick branch pull', 'Pick a branch to pull from')\n                    });\n                }\n            };\n            const remoteItems = remotes.map(remote => new GitQuickPickItem(remote.name, executeRemote, remote, remote.fetch));\n            this.quickInputService?.showQuickPick(remoteItems, {\n                placeholder: nls.localize('vscode.git/dist/commands/pick remote pull repo', 'Pick a remote to pull the branch from')\n            });\n        });\n    }\n\n    async merge(): Promise<void> {\n        const repository = this.getRepository();\n        if (!repository) {\n            return;\n        }\n        return this.withProgress(async () => {\n            const [branches, currentBranch] = await Promise.all([this.getBranches(), this.getCurrentBranch()]);\n            const execute = async (item: GitQuickPickItem<Branch>) => {\n                try {\n                    await this.git.merge(repository, { branch: item.label });\n                } catch (error) {\n                    this.gitErrorHandler.handleError(error);\n                }\n            };\n            const items = branches.map(branch => new GitQuickPickItem<Branch>(branch.name, execute, branch));\n            const branchName = currentBranch ? `'${currentBranch.name}' ` : '';\n            this.quickInputService?.showQuickPick(\n                items,\n                {\n                    placeholder: nls.localize('theia/git/mergeQuickPickPlaceholder', 'Pick a branch to merge into the currently active {0} branch:', branchName)\n                }\n            );\n        });\n    }\n\n    async checkout(): Promise<void> {\n        const repository = this.getRepository();\n        if (!repository) {\n            return;\n        }\n        return this.withProgress(async () => {\n            const [branches, currentBranch] = await Promise.all([this.getBranches(), this.getCurrentBranch()]);\n            if (currentBranch) {\n                // We do not show the current branch.\n                const index = branches.findIndex(branch => branch && branch.name === currentBranch.name);\n                branches.splice(index, 1);\n            }\n            const switchBranch = async (item: GitQuickPickItem<Branch>) => {\n                try {\n                    await this.git.checkout(repository, { branch: item.ref!.nameWithoutRemote });\n                } catch (error) {\n                    this.gitErrorHandler.handleError(error);\n                }\n            };\n\n            const items = branches.map(branch => new GitQuickPickItem<Branch>(\n                branch.type === BranchType.Remote ? branch.name : branch.nameWithoutRemote, switchBranch,\n                branch,\n                branch.type === BranchType.Remote\n                    ? nls.localize('vscode.git/dist/commands/remote branch at', 'Remote branch at {0}', (branch.tip.sha.length > 8 ? ` ${branch.tip.sha.slice(0, 7)}` : ''))\n                    : (branch.tip.sha.length > 8 ? ` ${branch.tip.sha.slice(0, 7)}` : '')));\n\n            const createBranchItem = async <T>() => {\n                const { git, gitErrorHandler, wrapWithProgress } = this;\n                const getItems = (lookFor?: string) => {\n                    const dynamicItems: GitQuickPickItem<T>[] = [];\n                    if (lookFor === undefined || lookFor.length === 0) {\n                        dynamicItems.push(new GitQuickPickItem(\n                            nls.localize('theia/git/checkoutProvideBranchName', 'Please provide a branch name. '),\n                            () => { })\n                        );\n                    } else {\n                        dynamicItems.push(new GitQuickPickItem(\n                            nls.localize(\n                                'theia/git/checkoutCreateLocalBranchWithName',\n                                \"Create a new local branch with name: {0}. Press 'Enter' to confirm or 'Escape' to cancel.\",\n                                lookFor\n                            ),\n                            wrapWithProgress(async () => {\n                                try {\n                                    await git.branch(repository, { toCreate: lookFor });\n                                    await git.checkout(repository, { branch: lookFor });\n                                } catch (error) {\n                                    gitErrorHandler.handleError(error);\n                                }\n                            })\n                        ));\n                    }\n                    return dynamicItems;\n                };\n                this.quickInputService?.showQuickPick(getItems(), {\n                    placeholder: nls.localize('vscode.git/dist/commands/branch name', 'Branch name'),\n                    onDidChangeValue: (quickPick: QuickPick<QuickPickItem>, filter: string) => {\n                        quickPick.items = getItems(filter);\n                    }\n                });\n            };\n\n            items.unshift(new GitQuickPickItem(nls.localize('vscode.git/dist/commands/create branch', 'Create new branch...'), createBranchItem));\n            this.quickInputService?.showQuickPick(items, { placeholder: nls.localize('theia/git/checkoutSelectRef', 'Select a ref to checkout or create a new local branch:') });\n        });\n    }\n\n    async chooseTagsAndBranches(execFunc: (branchName: string, currentBranchName: string) => void, repository: Repository | undefined = this.getRepository()): Promise<void> {\n        if (!repository) {\n            return;\n        }\n        return this.withProgress(async () => {\n            const [branches, tags, currentBranch] = await Promise.all([this.getBranches(repository), this.getTags(repository), this.getCurrentBranch(repository)]);\n            const execute = async (item: GitQuickPickItem<Branch | Tag>) => {\n                execFunc(item.ref!.name, currentBranch ? currentBranch.name : '');\n            };\n            const branchItems = branches.map(branch => new GitQuickPickItem<Branch>(branch.name, execute, branch));\n            const branchName = currentBranch ? `'${currentBranch.name}' ` : '';\n            const tagItems = tags.map(tag => new GitQuickPickItem<Tag>(tag.name, execute, tag));\n\n            this.quickInputService?.showQuickPick([...branchItems, ...tagItems],\n                { placeholder: nls.localize('theia/git/compareWithBranchOrTag', 'Pick a branch or tag to compare with the currently active {0} branch:', branchName) });\n        });\n    }\n\n    async commitMessageForAmend(): Promise<string> {\n        const repository = this.getRepository();\n        if (!repository) {\n            throw new Error(nls.localize('theia/git/noRepositoriesSelected', 'No repositories were selected.'));\n        }\n        return this.withProgress(async () => {\n            const lastMessage = (await this.git.exec(repository, ['log', '--format=%B', '-n', '1'])).stdout.trim();\n            if (lastMessage.length === 0) {\n                throw new Error(nls.localize('theia/git/repositoryNotInitialized', 'Repository {0} is not yet initialized.', repository.localUri));\n            }\n            const message = lastMessage.replace(/[\\r\\n]+/g, ' ');\n            const result = await new Promise<string>(async (resolve, reject) => {\n                const getItems = (lookFor?: string) => {\n                    const items = [];\n                    if (!lookFor) {\n                        const label = nls.localize('theia/git/amendReuseMessag', \"To reuse the last commit message, press 'Enter' or 'Escape' to cancel.\");\n                        items.push(new GitQuickPickItem(label, () => resolve(lastMessage), label));\n                    } else {\n                        items.push(new GitQuickPickItem(\n                            nls.localize('theia/git/amendRewrite', \"Rewrite previous commit message. Press 'Enter' to confirm or 'Escape' to cancel.\"),\n                            () => resolve(lookFor))\n                        );\n                    }\n                    return items;\n                };\n                const updateItems = (quickPick: QuickPick<QuickPickItem>, filter: string) => {\n                    quickPick.items = getItems(filter);\n                };\n                this.quickInputService?.showQuickPick(getItems(), { placeholder: message, onDidChangeValue: updateItems });\n            });\n            return result;\n        });\n    }\n\n    async stash(): Promise<void> {\n        const repository = this.getRepository();\n        if (!repository) {\n            return;\n        }\n        return this.withProgress(async () => {\n            const doStash = this.wrapWithProgress(async (message: string) => {\n                this.git.stash(repository, { message });\n            });\n            const getItems = (lookFor?: string) => {\n                const items = [];\n                if (lookFor === undefined || lookFor.length === 0) {\n                    items.push(new GitQuickPickItem(nls.localize('theia/git/stashChanges', \"Stash changes. Press 'Enter' to confirm or 'Escape' to cancel.\"), () => doStash('')));\n                } else {\n                    items.push(new GitQuickPickItem(\n                        nls.localize('theia/git/stashChangesWithMessage', \"Stash changes with message: {0}. Press 'Enter' to confirm or 'Escape' to cancel.\", lookFor),\n                        () => doStash(lookFor))\n                    );\n                }\n                return items;\n            };\n            const updateItems = (quickPick: QuickPick<QuickPickItem>, filter: string) => {\n                quickPick.items = getItems(filter);\n            };\n            this.quickInputService?.showQuickPick(getItems(), {\n                placeholder: nls.localize('vscode.git/dist/commands/stash message', 'Stash message'), onDidChangeValue: updateItems\n            });\n        });\n    }\n\n    protected async doStashAction(action: 'pop' | 'apply' | 'drop', text: string, getMessage?: () => Promise<string>): Promise<void> {\n        const repository = this.getRepository();\n        if (!repository) {\n            return;\n        }\n        return this.withProgress(async () => {\n            const list = await this.git.stash(repository, { action: 'list' });\n            if (list) {\n                const items = list.map(stash => new GitQuickPickItem<StashEntry>(stash.message,\n                    this.wrapWithProgress(async () => {\n                        try {\n                            await this.git.stash(repository, { action, id: stash.id });\n                            if (getMessage) {\n                                this.messageService.info(await getMessage());\n                            }\n                        } catch (error) {\n                            this.gitErrorHandler.handleError(error);\n                        }\n                    })));\n                this.quickInputService?.showQuickPick(items, { placeholder: text });\n            }\n        });\n    }\n\n    async applyStash(): Promise<void> {\n        this.doStashAction('apply', nls.localize('vscode.git/dist/commands/pick stash to apply', 'Pick a stash to apply'));\n    }\n\n    async popStash(): Promise<void> {\n        this.doStashAction('pop', nls.localize('vscode.git/dist/commands/pick stash to pop', 'Pick a stash to pop'));\n    }\n\n    async dropStash(): Promise<void> {\n        const repository = this.getRepository();\n        if (!repository) {\n            return;\n        }\n        this.doStashAction(\n            'drop',\n            nls.localize('vscode.git/dist/commands/pick stash to drop', 'Pick a stash to drop'),\n            async () => nls.localize('theia/git/dropStashMessage', 'Stash successfully removed.')\n        );\n    }\n\n    async applyLatestStash(): Promise<void> {\n        const repository = this.getRepository();\n        if (!repository) {\n            return;\n        }\n        return this.withProgress(async () => {\n            try {\n                await this.git.stash(repository, {\n                    action: 'apply'\n                });\n            } catch (error) {\n                this.gitErrorHandler.handleError(error);\n            }\n        });\n    }\n\n    async popLatestStash(): Promise<void> {\n        const repository = this.getRepository();\n        if (!repository) {\n            return;\n        }\n        return this.withProgress(async () => {\n            try {\n                await this.git.stash(repository, {\n                    action: 'pop'\n                });\n            } catch (error) {\n                this.gitErrorHandler.handleError(error);\n            }\n        });\n    }\n\n    async initRepository(): Promise<void> {\n        const wsRoots = await this.workspaceService.roots;\n        if (wsRoots && wsRoots.length > 1) {\n            const items = wsRoots.map<GitQuickPickItem<URI>>(root => this.toRepositoryPathQuickOpenItem(root));\n            this.quickInputService?.showQuickPick(items, { placeholder: nls.localize('vscode.git/dist/commands/init', 'Pick workspace folder to initialize git repo in') });\n        } else {\n            const rootUri = wsRoots[0].resource;\n            this.doInitRepository(rootUri.toString());\n        }\n    }\n\n    private async doInitRepository(uri: string): Promise<void> {\n        this.withProgress(async () => this.git.exec({ localUri: uri }, ['init']));\n    }\n\n    private toRepositoryPathQuickOpenItem(root: FileStat): GitQuickPickItem<URI> {\n        const rootUri = root.resource;\n        const execute = async (item: GitQuickPickItem<URI>) => {\n            const wsRoot = item.ref!.toString();\n            this.doInitRepository(wsRoot);\n        };\n        return new GitQuickPickItem<URI>(this.labelProvider.getName(rootUri), execute, rootUri, this.labelProvider.getLongName(rootUri.parent));\n    }\n\n    private getRepository(): Repository | undefined {\n        return this.repositoryProvider.selectedRepository;\n    }\n\n    private async getRemotes(): Promise<Remote[]> {\n        const repository = this.getRepository();\n        if (!repository) {\n            return [];\n        }\n        return this.withProgress(async () => {\n            try {\n                return await this.git.remote(repository, { verbose: true });\n            } catch (error) {\n                this.gitErrorHandler.handleError(error);\n                return [];\n            }\n        });\n    }\n\n    private async getTags(repository: Repository | undefined = this.getRepository()): Promise<Tag[]> {\n        if (!repository) {\n            return [];\n        }\n        return this.withProgress(async () => {\n            const result = await this.git.exec(repository, ['tag', '--sort=-creatordate']);\n            return result.stdout !== '' ? result.stdout.trim().split('\\n').map(tag => ({ name: tag })) : [];\n        });\n    }\n\n    private async getBranches(repository: Repository | undefined = this.getRepository()): Promise<Branch[]> {\n        if (!repository) {\n            return [];\n        }\n        return this.withProgress(async () => {\n            try {\n                const [local, remote] = await Promise.all([\n                    this.git.branch(repository, { type: 'local' }),\n                    this.git.branch(repository, { type: 'remote' })\n                ]);\n                return [...local, ...remote];\n            } catch (error) {\n                this.gitErrorHandler.handleError(error);\n                return [];\n            }\n        });\n    }\n\n    private async getCurrentBranch(repository: Repository | undefined = this.getRepository()): Promise<Branch | undefined> {\n        if (!repository) {\n            return undefined;\n        }\n        return this.withProgress(async () => {\n            try {\n                return await this.git.branch(repository, { type: 'current' });\n            } catch (error) {\n                this.gitErrorHandler.handleError(error);\n                return undefined;\n            }\n        });\n    }\n\n    protected withProgress<In, Out>(fn: (...arg: In[]) => Promise<Out>): Promise<Out> {\n        return this.progressService.withProgress('', 'scm', fn);\n    }\n\n    protected readonly wrapWithProgress = <In, Out>(fn: (...args: In[]) => Promise<Out>) => this.doWrapWithProgress(fn);\n    protected doWrapWithProgress<In, Out>(fn: (...args: In[]) => Promise<Out>): (...args: In[]) => Promise<Out> {\n        return (...args: In[]) => this.withProgress(() => fn(...args));\n    }\n}\n\nclass GitQuickPickItem<T> implements QuickPickItem {\n    readonly execute?: () => void;\n    constructor(\n        public label: string,\n        execute?: (item: QuickPickItem) => void,\n        public readonly ref?: T,\n        public description?: string,\n        public alwaysShow = true,\n        public sortByLabel = false) {\n        this.execute = execute ? createExecFunction(execute, this) : undefined;\n    }\n}\n\nfunction createExecFunction(f: (item: QuickPickItem) => void, item: QuickPickItem): () => void {\n    return () => { f(item); };\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport debounce = require('@theia/core/shared/lodash.debounce');\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { StorageService } from '@theia/core/lib/browser/storage-service';\nimport { Git, Repository } from '../common';\nimport { GitCommitMessageValidator } from './git-commit-message-validator';\nimport { GitScmProvider } from './git-scm-provider';\nimport { ScmService } from '@theia/scm/lib/browser/scm-service';\nimport { ScmRepository } from '@theia/scm/lib/browser/scm-repository';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\n\nexport interface GitRefreshOptions {\n    readonly maxCount: number\n}\n\n@injectable()\nexport class GitRepositoryProvider {\n\n    protected readonly onDidChangeRepositoryEmitter = new Emitter<Repository | undefined>();\n    protected readonly selectedRepoStorageKey = 'theia-git-selected-repository';\n    protected readonly allRepoStorageKey = 'theia-git-all-repositories';\n\n    @inject(GitScmProvider.Factory)\n    protected readonly scmProviderFactory: GitScmProvider.Factory;\n\n    @inject(GitCommitMessageValidator)\n    protected readonly commitMessageValidator: GitCommitMessageValidator;\n\n    @inject(Git) protected readonly git: Git;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(ScmService) protected readonly scmService: ScmService;\n    @inject(StorageService) protected readonly storageService: StorageService;\n\n    @inject(FileService)\n    protected readonly fileService: FileService;\n\n    @postConstruct()\n    protected init(): void {\n        this.doInit();\n    }\n\n    protected async doInit(): Promise<void> {\n        const [selectedRepository, allRepositories] = await Promise.all([\n            this.storageService.getData<Repository | undefined>(this.selectedRepoStorageKey),\n            this.storageService.getData<Repository[]>(this.allRepoStorageKey)\n        ]);\n\n        this.scmService.onDidChangeSelectedRepository(scmRepository => this.fireDidChangeRepository(this.toGitRepository(scmRepository)));\n        if (allRepositories) {\n            this.updateRepositories(allRepositories);\n        } else {\n            await this.refresh({ maxCount: 1 });\n        }\n        this.selectedRepository = selectedRepository;\n\n        await this.refresh();\n        this.fileService.onDidFilesChange(_ => this.lazyRefresh());\n    }\n\n    protected lazyRefresh: () => Promise<void> | undefined = debounce(() => this.refresh(), 1000);\n\n    /**\n     * Returns with the previously selected repository, or if no repository has been selected yet,\n     * it picks the first available repository from the backend and sets it as the selected one and returns with that.\n     * If no repositories are available, returns `undefined`.\n     */\n    get selectedRepository(): Repository | undefined {\n        return this.toGitRepository(this.scmService.selectedRepository);\n    }\n\n    /**\n     * Sets the selected repository, but do nothing if the given repository is not a Git repository\n     * registered with the SCM service.  We must be sure not to clear the selection if the selected\n     * repository is managed by an SCM other than Git.\n     */\n    set selectedRepository(repository: Repository | undefined) {\n        const scmRepository = this.toScmRepository(repository);\n        if (scmRepository) {\n            this.scmService.selectedRepository = scmRepository;\n        }\n    }\n\n    get selectedScmRepository(): GitScmRepository | undefined {\n        return this.toGitScmRepository(this.scmService.selectedRepository);\n    }\n\n    get selectedScmProvider(): GitScmProvider | undefined {\n        return this.toGitScmProvider(this.scmService.selectedRepository);\n    }\n\n    get onDidChangeRepository(): Event<Repository | undefined> {\n        return this.onDidChangeRepositoryEmitter.event;\n    }\n    protected fireDidChangeRepository(repository: Repository | undefined): void {\n        this.storageService.setData<Repository | undefined>(this.selectedRepoStorageKey, repository);\n        this.onDidChangeRepositoryEmitter.fire(repository);\n    }\n\n    /**\n     * Returns with all know repositories.\n     */\n    get allRepositories(): Repository[] {\n        const repositories = [];\n        for (const scmRepository of this.scmService.repositories) {\n            const repository = this.toGitRepository(scmRepository);\n            if (repository) {\n                repositories.push(repository);\n            }\n        }\n        return repositories;\n    }\n\n    async refresh(options?: GitRefreshOptions): Promise<void> {\n        const repositories: Repository[] = [];\n        const refreshing: Promise<void>[] = [];\n        for (const root of await this.workspaceService.roots) {\n            refreshing.push(this.git.repositories(root.resource.toString(), { ...options }).then(\n                result => { repositories.push(...result); },\n                () => { /* no-op*/ }\n            ));\n        }\n        await Promise.all(refreshing);\n        this.updateRepositories(repositories);\n    }\n\n    protected updateRepositories(repositories: Repository[]): void {\n        this.storageService.setData<Repository[]>(this.allRepoStorageKey, repositories);\n\n        const registered = new Set<string>();\n        const toUnregister = new Map<string, ScmRepository>();\n        for (const scmRepository of this.scmService.repositories) {\n            const repository = this.toGitRepository(scmRepository);\n            if (repository) {\n                registered.add(repository.localUri);\n                toUnregister.set(repository.localUri, scmRepository);\n            }\n        }\n\n        for (const repository of repositories) {\n            toUnregister.delete(repository.localUri);\n            if (!registered.has(repository.localUri)) {\n                registered.add(repository.localUri);\n                this.registerScmProvider(repository);\n            }\n        }\n\n        for (const [, scmRepository] of toUnregister) {\n            scmRepository.dispose();\n        }\n    }\n\n    protected registerScmProvider(repository: Repository): void {\n        const provider = this.scmProviderFactory({ repository });\n        const scmRepository = this.scmService.registerScmProvider(provider, {\n            input: {\n                placeholder: 'Message (press {0} to commit)',\n                validator: async value => {\n                    const issue = await this.commitMessageValidator.validate(value);\n                    return issue && {\n                        message: issue.message,\n                        type: issue.status\n                    };\n                }\n            }\n        });\n        provider.input = scmRepository.input;\n    }\n\n    protected toScmRepository(repository: Repository | undefined): ScmRepository | undefined {\n        return repository && this.scmService.repositories.find(scmRepository => Repository.equal(this.toGitRepository(scmRepository), repository));\n    }\n\n    protected toGitRepository(scmRepository: ScmRepository | undefined): Repository | undefined {\n        const provider = this.toGitScmProvider(scmRepository);\n        return provider && provider.repository;\n    }\n\n    protected toGitScmProvider(scmRepository: ScmRepository | undefined): GitScmProvider | undefined {\n        const gitScmRepository = this.toGitScmRepository(scmRepository);\n        return gitScmRepository && gitScmRepository.provider;\n    }\n\n    protected toGitScmRepository(scmRepository: ScmRepository | undefined): GitScmRepository | undefined {\n        return GitScmRepository.is(scmRepository) ? scmRepository : undefined;\n    }\n\n}\n\nexport interface GitScmRepository extends ScmRepository {\n    readonly provider: GitScmProvider;\n}\nexport namespace GitScmRepository {\n    export function is(scmRepository: ScmRepository | undefined): scmRepository is GitScmRepository {\n        return !!scmRepository && scmRepository.provider instanceof GitScmProvider;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { Git, Repository, WorkingDirectoryStatus } from '../common';\nimport { Event, Emitter, Disposable, DisposableCollection, CancellationToken, CancellationTokenSource } from '@theia/core';\nimport { GitRepositoryProvider } from './git-repository-provider';\nimport { GitWatcher, GitStatusChangeEvent } from '../common/git-watcher';\nimport URI from '@theia/core/lib/common/uri';\n\nimport debounce = require('@theia/core/shared/lodash.debounce');\n\n/**\n * The repository tracker watches the selected repository for status changes. It provides a convenient way to listen on status updates.\n */\n@injectable()\nexport class GitRepositoryTracker {\n\n    protected toDispose = new DisposableCollection();\n    protected workingDirectoryStatus: WorkingDirectoryStatus | undefined;\n    protected readonly onGitEventEmitter = new Emitter<GitStatusChangeEvent | undefined>();\n\n    constructor(\n        @inject(Git) protected readonly git: Git,\n        @inject(GitRepositoryProvider) protected readonly repositoryProvider: GitRepositoryProvider,\n        @inject(GitWatcher) protected readonly gitWatcher: GitWatcher,\n    ) { }\n\n    @postConstruct()\n    protected init(): void {\n        this.doInit();\n    }\n\n    protected async doInit(): Promise<void> {\n        this.updateStatus();\n        this.repositoryProvider.onDidChangeRepository(() => this.updateStatus());\n    }\n\n    protected updateStatus = debounce(async (): Promise<void> => {\n        this.toDispose.dispose();\n        const tokenSource = new CancellationTokenSource();\n        this.toDispose.push(Disposable.create(() => tokenSource.cancel()));\n        const token = tokenSource.token;\n        const source = this.selectedRepository;\n        if (source) {\n            const status = await this.git.status(source);\n            this.setStatus({ source, status }, token);\n            this.toDispose.push(this.gitWatcher.onGitEvent(event => {\n                if (event.source.localUri === source.localUri) {\n                    this.setStatus(event, token);\n                }\n            }));\n            this.toDispose.push(await this.gitWatcher.watchGitChanges(source));\n        } else {\n            this.setStatus(undefined, token);\n        }\n    }, 50);\n\n    protected setStatus(event: GitStatusChangeEvent | undefined, token: CancellationToken): void {\n        const status = event && event.status;\n        const scmProvider = this.repositoryProvider.selectedScmProvider;\n        if (scmProvider) {\n            scmProvider.setStatus(status);\n        }\n        this.workingDirectoryStatus = status;\n        this.onGitEventEmitter.fire(event);\n    }\n\n    /**\n     * Returns the selected repository, or `undefined` if no repositories are available.\n     */\n    get selectedRepository(): Repository | undefined {\n        return this.repositoryProvider.selectedRepository;\n    }\n\n    /**\n     * Returns all known repositories.\n     */\n    get allRepositories(): Repository[] {\n        return this.repositoryProvider.allRepositories;\n    }\n\n    /**\n     * Returns the last known status of the selected repository, or `undefined` if no repositories are available.\n     */\n    get selectedRepositoryStatus(): WorkingDirectoryStatus | undefined {\n        return this.workingDirectoryStatus;\n    }\n\n    /**\n     * Emits when the selected repository has changed.\n     */\n    get onDidChangeRepository(): Event<Repository | undefined> {\n        return this.repositoryProvider.onDidChangeRepository;\n    }\n\n    /**\n     * Emits when status has changed in the selected repository.\n     */\n    get onGitEvent(): Event<GitStatusChangeEvent | undefined> {\n        return this.onGitEventEmitter.event;\n    }\n\n    getPath(uri: URI): string | undefined {\n        const { repositoryUri } = this;\n        const relativePath = repositoryUri && Repository.relativePath(repositoryUri, uri);\n        return relativePath && relativePath.toString();\n    }\n\n    getUri(path: string): URI | undefined {\n        const { repositoryUri } = this;\n        return repositoryUri && repositoryUri.resolve(path);\n    }\n\n    get repositoryUri(): URI | undefined {\n        const repository = this.selectedRepository;\n        return repository && new URI(repository.localUri);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { Git, Repository } from '../common';\nimport { Resource, ResourceResolver } from '@theia/core';\nimport URI from '@theia/core/lib/common/uri';\nimport { GitRepositoryProvider } from './git-repository-provider';\nimport { GIT_RESOURCE_SCHEME, GitResource } from './git-resource';\n\n@injectable()\nexport class GitResourceResolver implements ResourceResolver {\n\n    constructor(\n        @inject(Git) protected readonly git: Git,\n        @inject(GitRepositoryProvider) protected readonly repositoryProvider: GitRepositoryProvider\n    ) { }\n\n    resolve(uri: URI): Resource | Promise<Resource> {\n        if (uri.scheme !== GIT_RESOURCE_SCHEME) {\n            throw new Error(`Expected a URI with ${GIT_RESOURCE_SCHEME} scheme. Was: ${uri}.`);\n        }\n        return this.getResource(uri);\n    }\n\n    async getResource(uri: URI): Promise<GitResource> {\n        const repository = await this.getRepository(uri);\n        return new GitResource(uri, repository, this.git);\n    }\n\n    async getRepository(uri: URI): Promise<Repository | undefined> {\n        const fileUri = uri.withScheme('file');\n        const repositories = this.repositoryProvider.allRepositories;\n        // The layout restorer might ask for the known repositories this point.\n        if (repositories.length === 0) {\n            // So let's make sure, the repository provider state is in sync with the backend.\n            await this.repositoryProvider.refresh();\n            repositories.push(...this.repositoryProvider.allRepositories);\n        }\n        // We sort by length so that we visit the nested repositories first.\n        // We do not want to get the repository A instead of B if we have:\n        // repository A, another repository B inside A and a resource A/B/C.ext.\n        const sortedRepositories = repositories.sort((a, b) => b.localUri.length - a.localUri.length);\n        for (const repository of sortedRepositories) {\n            const localUri = new URI(repository.localUri);\n            // make sure that localUri of repository has file scheme.\n            const localUriStr = localUri.withScheme('file').toString();\n            if (fileUri.toString().startsWith(localUriStr)) {\n                return { localUri: localUriStr };\n            }\n        }\n        return undefined;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Git, Repository } from '../common';\nimport { Resource } from '@theia/core';\nimport URI from '@theia/core/lib/common/uri';\n\nexport const GIT_RESOURCE_SCHEME = 'gitrev';\n\nexport class GitResource implements Resource {\n\n    constructor(readonly uri: URI, protected readonly repository: Repository | undefined, protected readonly git: Git) { }\n\n    async readContents(options?: { encoding?: string }): Promise<string> {\n        if (this.repository) {\n            const commitish = this.uri.query;\n            let encoding: Git.Options.Show['encoding'];\n            if (options?.encoding === 'utf8' || options?.encoding === 'binary') {\n                encoding = options?.encoding;\n            }\n            return this.git.show(this.repository, this.uri.toString(), { commitish, encoding });\n        }\n        return '';\n    }\n\n    dispose(): void { }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { DiffUris } from '@theia/core/lib/browser/diff-uris';\nimport { Emitter } from '@theia/core';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { CommandService } from '@theia/core/lib/common/command';\nimport { ConfirmDialog } from '@theia/core/lib/browser/dialogs';\nimport { EditorOpenerOptions, EditorManager } from '@theia/editor/lib/browser/editor-manager';\nimport { WorkspaceCommands } from '@theia/workspace/lib/browser';\nimport { Repository, Git, CommitWithChanges, GitFileChange, WorkingDirectoryStatus, GitFileStatus } from '../common';\nimport { GIT_RESOURCE_SCHEME } from './git-resource';\nimport { GitErrorHandler } from './git-error-handler';\nimport { EditorWidget } from '@theia/editor/lib/browser';\nimport { ScmProvider, ScmCommand, ScmResourceGroup, ScmAmendSupport, ScmCommit } from '@theia/scm/lib/browser/scm-provider';\nimport { ScmHistoryCommit, ScmFileChange } from '@theia/scm-extra/lib/browser/scm-file-change-node';\nimport { LabelProvider } from '@theia/core/lib/browser/label-provider';\nimport { GitCommitDetailWidgetOptions } from './history/git-commit-detail-widget-options';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { ScmInput } from '@theia/scm/lib/browser/scm-input';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { GitPreferences } from './git-preferences';\n\n@injectable()\nexport class GitScmProviderOptions {\n    repository: Repository;\n}\n\n@injectable()\nexport class GitScmProvider implements ScmProvider {\n\n    public input: ScmInput;\n\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n    readonly onDidChange = this.onDidChangeEmitter.event;\n    protected fireDidChange(): void {\n        this.onDidChangeEmitter.fire(undefined);\n    }\n\n    private readonly onDidChangeCommitTemplateEmitter = new Emitter<string>();\n    readonly onDidChangeCommitTemplate = this.onDidChangeCommitTemplateEmitter.event;\n\n    private readonly onDidChangeStatusBarCommandsEmitter = new Emitter<ScmCommand[] | undefined>();\n    readonly onDidChangeStatusBarCommands = this.onDidChangeStatusBarCommandsEmitter.event;\n\n    private readonly toDispose = new DisposableCollection(\n        this.onDidChangeEmitter,\n        this.onDidChangeCommitTemplateEmitter,\n        this.onDidChangeStatusBarCommandsEmitter\n    );\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    @inject(GitErrorHandler)\n    protected readonly gitErrorHandler: GitErrorHandler;\n\n    @inject(FileService)\n    protected readonly fileService: FileService;\n\n    @inject(Git)\n    protected readonly git: Git;\n\n    @inject(CommandService)\n    protected readonly commands: CommandService;\n\n    @inject(GitScmProviderOptions)\n    protected readonly options: GitScmProviderOptions;\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(GitPreferences)\n    protected readonly gitPreferences: GitPreferences;\n\n    readonly id = 'git';\n    readonly label = nls.localize('vscode.git/package/displayName', 'Git');\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this._amendSupport = new GitAmendSupport(this, this.repository, this.git);\n        this.toDispose.push(this.gitPreferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'git.untrackedChanges' && e.affects(this.rootUri)) {\n                this.setStatus(this.getStatus());\n            }\n        }));\n    }\n\n    get repository(): Repository {\n        return this.options.repository;\n    }\n    get rootUri(): string {\n        return this.repository.localUri;\n    }\n\n    protected _amendSupport: GitAmendSupport;\n    get amendSupport(): GitAmendSupport {\n        return this._amendSupport;\n    }\n\n    get acceptInputCommand(): ScmCommand | undefined {\n        return {\n            command: 'git.commit.all',\n            tooltip: nls.localize('vscode.git/package/command.commitAll', 'Commit all the staged changes'),\n            title: nls.localize('vscode.git/package/command.commit', 'Commit')\n        };\n    }\n\n    protected _statusBarCommands: ScmCommand[] | undefined;\n    get statusBarCommands(): ScmCommand[] | undefined {\n        return this._statusBarCommands;\n    }\n    set statusBarCommands(statusBarCommands: ScmCommand[] | undefined) {\n        this._statusBarCommands = statusBarCommands;\n        this.onDidChangeStatusBarCommandsEmitter.fire(statusBarCommands);\n    }\n\n    protected state = GitScmProvider.initState();\n\n    get groups(): ScmResourceGroup[] {\n        return this.state.groups;\n    }\n    get stagedChanges(): GitFileChange[] {\n        return this.state.stagedChanges;\n    }\n    get unstagedChanges(): GitFileChange[] {\n        return this.state.unstagedChanges;\n    }\n    get mergeChanges(): GitFileChange[] {\n        return this.state.mergeChanges;\n    }\n\n    getStatus(): WorkingDirectoryStatus | undefined {\n        return this.state.status;\n    }\n    setStatus(status: WorkingDirectoryStatus | undefined): void {\n        const state = GitScmProvider.initState(status);\n        if (status) {\n            for (const change of status.changes) {\n                if (GitFileStatus[GitFileStatus.Conflicted.valueOf()] !== GitFileStatus[change.status]) {\n                    if (change.staged) {\n                        state.stagedChanges.push(change);\n                    } else {\n                        state.unstagedChanges.push(change);\n                    }\n                } else {\n                    if (!change.staged) {\n                        state.mergeChanges.push(change);\n                    }\n                }\n            }\n        }\n        const untrackedChangesPreference = this.gitPreferences['git.untrackedChanges'];\n        const forWorkingTree = untrackedChangesPreference === 'mixed'\n            ? state.unstagedChanges\n            : state.unstagedChanges.filter(change => change.status !== GitFileStatus.New);\n        const forUntracked = untrackedChangesPreference === 'separate'\n            ? state.unstagedChanges.filter(change => change.status === GitFileStatus.New)\n            : [];\n        const hideWorkingIfEmpty = forUntracked.length > 0;\n        state.groups.push(this.createGroup('merge', nls.localize('vscode.git/repository/merge changes', 'Merge Changes'), state.mergeChanges, true));\n        state.groups.push(this.createGroup('index', nls.localize('vscode.git/repository/staged changes', 'Staged changes'), state.stagedChanges, true));\n        state.groups.push(this.createGroup('workingTree', nls.localize('vscode.git/repository/changes', 'Changes'), forWorkingTree, hideWorkingIfEmpty));\n        state.groups.push(this.createGroup('untrackedChanges', nls.localize('vscode.git/repository/untracked changes', 'Untracked Changes'), forUntracked, true));\n        this.state = state;\n        if (status && status.branch) {\n            this.input.placeholder = nls.localize('vscode.git/repository/commitMessageWithHeadLabel', 'Message (press {0} to commit on {1})', '{0}', status.branch);\n        } else {\n            this.input.placeholder = nls.localize('vscode.git/repository/commitMessage', 'Message (press {0} to commit)');\n        }\n\n        this.fireDidChange();\n    }\n\n    protected createGroup(id: string, label: string, changes: GitFileChange[], hideWhenEmpty?: boolean): ScmResourceGroup {\n        const group: ScmResourceGroup = {\n            id,\n            label,\n            hideWhenEmpty,\n            provider: this,\n            resources: [],\n            dispose: () => { }\n        };\n        for (const change of changes) {\n            this.addScmResource(group, change);\n        }\n        return group;\n    }\n\n    protected addScmResource(group: ScmResourceGroup, change: GitFileChange): void {\n        const sourceUri = new URI(change.uri);\n        group.resources.push({\n            group,\n            sourceUri,\n            decorations: {\n                letter: GitFileStatus.toAbbreviation(change.status, change.staged),\n                color: GitFileStatus.getColor(change.status, change.staged),\n                tooltip: GitFileStatus.toString(change.status),\n                strikeThrough: GitFileStatus.toStrikethrough(change.status)\n            },\n            open: async () => this.open(change, { mode: 'reveal' })\n        });\n    }\n\n    async open(change: GitFileChange, options?: EditorOpenerOptions): Promise<void> {\n        const uriToOpen = this.getUriToOpen(change);\n        await this.editorManager.open(uriToOpen, options);\n    }\n\n    getUriToOpen(change: GitFileChange): URI {\n        const changeUri: URI = new URI(change.uri);\n        const fromFileUri = change.oldUri ? new URI(change.oldUri) : changeUri; // set oldUri on renamed and copied\n        if (change.status === GitFileStatus.Deleted) {\n            if (change.staged) {\n                return changeUri.withScheme(GIT_RESOURCE_SCHEME).withQuery('HEAD');\n            } else {\n                return changeUri.withScheme(GIT_RESOURCE_SCHEME);\n            }\n        }\n        if (change.status !== GitFileStatus.New) {\n            if (change.staged) {\n                return DiffUris.encode(\n                    fromFileUri.withScheme(GIT_RESOURCE_SCHEME).withQuery('HEAD'),\n                    changeUri.withScheme(GIT_RESOURCE_SCHEME),\n                    nls.localize(\n                        'theia/git/tabTitleIndex',\n                        '{0} (Index)',\n                        this.labelProvider.getName(changeUri)\n                    ));\n            }\n            if (this.stagedChanges.find(c => c.uri === change.uri)) {\n                return DiffUris.encode(\n                    fromFileUri.withScheme(GIT_RESOURCE_SCHEME),\n                    changeUri,\n                    nls.localize(\n                        'theia/git/tabTitleWorkingTree',\n                        '{0} (Working tree)',\n                        this.labelProvider.getName(changeUri)\n                    ));\n            }\n            if (this.mergeChanges.find(c => c.uri === change.uri)) {\n                return changeUri;\n            }\n            return DiffUris.encode(\n                fromFileUri.withScheme(GIT_RESOURCE_SCHEME).withQuery('HEAD'),\n                changeUri,\n                nls.localize(\n                    'theia/git/tabTitleWorkingTree',\n                    '{0} (Working tree)',\n                    this.labelProvider.getName(changeUri)\n                ));\n        }\n        if (change.staged) {\n            return changeUri.withScheme(GIT_RESOURCE_SCHEME);\n        }\n        if (this.stagedChanges.find(c => c.uri === change.uri)) {\n            return DiffUris.encode(\n                changeUri.withScheme(GIT_RESOURCE_SCHEME),\n                changeUri,\n                nls.localize(\n                    'theia/git/tabTitleWorkingTree',\n                    '{0} (Working tree)',\n                    this.labelProvider.getName(changeUri)\n                ));\n        }\n        return changeUri;\n    }\n\n    async openChange(change: GitFileChange, options?: EditorOpenerOptions): Promise<EditorWidget> {\n        const uriToOpen = this.getUriToOpen(change);\n        return this.editorManager.open(uriToOpen, options);\n    }\n\n    findChange(uri: URI): GitFileChange | undefined {\n        const stringUri = uri.toString();\n        const merge = this.mergeChanges.find(c => c.uri.toString() === stringUri);\n        if (merge) {\n            return merge;\n        }\n        const unstaged = this.unstagedChanges.find(c => c.uri.toString() === stringUri);\n        if (unstaged) {\n            return unstaged;\n        }\n        return this.stagedChanges.find(c => c.uri.toString() === stringUri);\n    }\n\n    async stageAll(): Promise<void> {\n        try {\n            // TODO resolve deletion conflicts\n            // TODO confirm staging unresolved files\n            await this.git.add(this.repository, []);\n        } catch (error) {\n            this.gitErrorHandler.handleError(error);\n        }\n    }\n    async stage(uriArg: string | string[]): Promise<void> {\n        try {\n            const { repository, unstagedChanges, mergeChanges } = this;\n            const uris = Array.isArray(uriArg) ? uriArg : [uriArg];\n            const unstagedUris = uris\n                .filter(uri => {\n                    const resourceUri = new URI(uri);\n                    return unstagedChanges.some(change => resourceUri.isEqualOrParent(new URI(change.uri)))\n                        || mergeChanges.some(change => resourceUri.isEqualOrParent(new URI(change.uri)));\n                });\n            if (unstagedUris.length !== 0) {\n                // TODO resolve deletion conflicts\n                // TODO confirm staging of a unresolved file\n                await this.git.add(repository, uris);\n            }\n        } catch (error) {\n            this.gitErrorHandler.handleError(error);\n        }\n    }\n\n    async unstageAll(): Promise<void> {\n        try {\n            const { repository, stagedChanges } = this;\n            const uris = stagedChanges.map(c => c.uri);\n            await this.git.unstage(repository, uris, { reset: 'index' });\n        } catch (error) {\n            this.gitErrorHandler.handleError(error);\n        }\n    }\n    async unstage(uriArg: string | string[]): Promise<void> {\n        try {\n            const { repository, stagedChanges } = this;\n            const uris = Array.isArray(uriArg) ? uriArg : [uriArg];\n            const stagedUris = uris\n                .filter(uri => {\n                    const resourceUri = new URI(uri);\n                    return stagedChanges.some(change => resourceUri.isEqualOrParent(new URI(change.uri)));\n                }\n                );\n            if (stagedUris.length !== 0) {\n                await this.git.unstage(repository, uris, { reset: 'index' });\n            }\n        } catch (error) {\n            this.gitErrorHandler.handleError(error);\n        }\n    }\n\n    async discardAll(): Promise<void> {\n        if (await this.confirmAll()) {\n            try {\n                // discard new files\n                const newUris = this.unstagedChanges.filter(c => c.status === GitFileStatus.New).map(c => c.uri);\n                await this.deleteAll(newUris);\n                // unstage changes\n                const uris = this.unstagedChanges.filter(c => c.status !== GitFileStatus.New).map(c => c.uri);\n                await this.git.unstage(this.repository, uris, { treeish: 'HEAD', reset: 'working-tree' });\n            } catch (error) {\n                this.gitErrorHandler.handleError(error);\n            }\n        }\n    }\n    async discard(uriArg: string | string[]): Promise<void> {\n        const { repository } = this;\n        const uris = Array.isArray(uriArg) ? uriArg : [uriArg];\n\n        const status = this.getStatus();\n        if (!status) {\n            return;\n        }\n\n        const pairs = await Promise.all(\n            uris\n                .filter(uri => {\n                    const uriAsUri = new URI(uri);\n                    return status.changes.some(change => uriAsUri.isEqualOrParent(new URI(change.uri)));\n                })\n                .map(uri => {\n                    const includeIndexFlag = async () => {\n                        // Allow deletion, only iff the same file is not yet in the Git index.\n                        const isInIndex = await this.git.lsFiles(repository, uri, { errorUnmatch: true });\n                        return { uri, isInIndex };\n                    };\n                    return includeIndexFlag();\n                })\n        );\n\n        const urisInIndex = pairs.filter(pair => pair.isInIndex).map(pair => pair.uri);\n        if (urisInIndex.length !== 0) {\n            if (!await this.confirm(urisInIndex)) {\n                return;\n            }\n        }\n\n        await Promise.all(\n            pairs.map(pair => {\n                const discardSingle = async () => {\n                    if (pair.isInIndex) {\n                        try {\n                            await this.git.unstage(repository, pair.uri, { treeish: 'HEAD', reset: 'working-tree' });\n                        } catch (error) {\n                            this.gitErrorHandler.handleError(error);\n                        }\n                    } else {\n                        await this.commands.executeCommand(WorkspaceCommands.FILE_DELETE.id, [new URI(pair.uri)]);\n                    }\n                };\n                return discardSingle();\n            })\n        );\n    }\n\n    protected confirm(paths: string[]): Promise<boolean | undefined> {\n        let fileText: string;\n        if (paths.length <= 3) {\n            fileText = paths.map(path => this.labelProvider.getName(new URI(path))).join(', ');\n        } else {\n            fileText = `${paths.length} files`;\n        }\n        return new ConfirmDialog({\n            title: nls.localize('vscode.git/package/command.clean', 'Discard Changes'),\n            msg: nls.localize('vscode.git/commands/confirm discard', 'Do you really want to discard changes in {0}?', fileText)\n        }).open();\n    }\n\n    protected confirmAll(): Promise<boolean | undefined> {\n        return new ConfirmDialog({\n            title: nls.localize('vscode.git/package/command.cleanAll', 'Discard All Changes'),\n            msg: nls.localize('vscode.git/commands/confirm discard all', 'Do you really want to discard all changes?')\n        }).open();\n    }\n\n    protected async delete(uri: URI): Promise<void> {\n        try {\n            await this.fileService.delete(uri, { recursive: true });\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    protected async deleteAll(uris: string[]): Promise<void> {\n        await Promise.all(uris.map(uri => this.delete(new URI(uri))));\n    }\n\n    public createScmCommit(gitCommit: CommitWithChanges): ScmCommit {\n        const scmCommit: ScmCommit = {\n            id: gitCommit.sha,\n            summary: gitCommit.summary,\n            authorName: gitCommit.author.name,\n            authorEmail: gitCommit.author.email,\n            authorDateRelative: gitCommit.authorDateRelative,\n        };\n        return scmCommit;\n    }\n\n    public createScmHistoryCommit(gitCommit: CommitWithChanges): ScmHistoryCommit {\n        const range = {\n            fromRevision: gitCommit.sha + '~1',\n            toRevision: gitCommit.sha\n        };\n\n        const scmCommit: GitScmCommit = {\n            ...this.createScmCommit(gitCommit),\n            commitDetailUri: this.toCommitDetailUri(gitCommit.sha),\n            scmProvider: this,\n            gitFileChanges: gitCommit.fileChanges.map(change => new GitScmFileChange(change, this, range)),\n            get fileChanges(): ScmFileChange[] {\n                return this.gitFileChanges;\n            },\n            get commitDetailOptions(): GitCommitDetailWidgetOptions {\n                return {\n                    rootUri: this.scmProvider.rootUri,\n                    commitSha: gitCommit.sha,\n                    commitMessage: gitCommit.summary,\n                    messageBody: gitCommit.body,\n                    authorName: gitCommit.author.name,\n                    authorEmail: gitCommit.author.email,\n                    authorDate: gitCommit.author.timestamp,\n                    authorDateRelative: gitCommit.authorDateRelative,\n                };\n            }\n        };\n        return scmCommit;\n    }\n\n    public relativePath(uri: string): string {\n        const parsedUri = new URI(uri);\n        const gitRepo = { localUri: this.rootUri };\n        const relativePath = Repository.relativePath(gitRepo, parsedUri);\n        if (relativePath) {\n            return relativePath.toString();\n        }\n        return this.labelProvider.getLongName(parsedUri);\n    }\n\n    protected toCommitDetailUri(commitSha: string): URI {\n        return new URI('').withScheme(GitScmProvider.GIT_COMMIT_DETAIL).withFragment(commitSha);\n    }\n}\n\nexport namespace GitScmProvider {\n    export const GIT_COMMIT_DETAIL = 'git-commit-detail-widget';\n\n    export interface State {\n        status?: WorkingDirectoryStatus\n        stagedChanges: GitFileChange[]\n        unstagedChanges: GitFileChange[]\n        mergeChanges: GitFileChange[],\n        groups: ScmResourceGroup[]\n    }\n    export function initState(status?: WorkingDirectoryStatus): GitScmProvider.State {\n        return {\n            status,\n            stagedChanges: [],\n            unstagedChanges: [],\n            mergeChanges: [],\n            groups: []\n        };\n    }\n\n    export const Factory = Symbol('GitScmProvider.Factory');\n    export type Factory = (options: GitScmProviderOptions) => GitScmProvider;\n}\n\nexport class GitAmendSupport implements ScmAmendSupport {\n\n    constructor(protected readonly provider: GitScmProvider, protected readonly repository: Repository, protected readonly git: Git) { }\n\n    public async getInitialAmendingCommits(amendingHeadCommitSha: string, latestCommitSha: string | undefined): Promise<ScmCommit[]> {\n        const commits = await this.git.log(\n            this.repository,\n            {\n                range: { toRevision: amendingHeadCommitSha, fromRevision: latestCommitSha },\n                maxCount: 50\n            }\n        );\n\n        return commits.map(commit => this.provider.createScmCommit(commit));\n    }\n\n    public async getMessage(commit: string): Promise<string> {\n        return (await this.git.exec(this.repository, ['log', '-n', '1', '--format=%B', commit])).stdout.trim();\n    }\n\n    public async reset(commit: string): Promise<void> {\n        if (commit === 'HEAD~' && await this.isHeadInitialCommit()) {\n            await this.git.exec(this.repository, ['update-ref', '-d', 'HEAD']);\n        } else {\n            await this.git.exec(this.repository, ['reset', commit, '--soft']);\n        }\n    }\n\n    protected async isHeadInitialCommit(): Promise<boolean> {\n        const result = await this.git.revParse(this.repository, { ref: 'HEAD~' });\n        return !result;\n    }\n\n    public async getLastCommit(): Promise<ScmCommit | undefined> {\n        const commits = await this.git.log(this.repository, { maxCount: 1 });\n        if (commits.length > 0) {\n            return this.provider.createScmCommit(commits[0]);\n        }\n    }\n}\n\nexport interface GitScmCommit extends ScmHistoryCommit {\n    scmProvider: GitScmProvider;\n    gitFileChanges: GitScmFileChange[];\n}\n\nexport class GitScmFileChange implements ScmFileChange {\n\n    constructor(\n        protected readonly fileChange: GitFileChange,\n        protected readonly scmProvider: GitScmProvider,\n        protected readonly range?: Git.Options.Range\n    ) { }\n\n    get gitFileChange(): GitFileChange {\n        return this.fileChange;\n    }\n\n    get uri(): string {\n        return this.fileChange.uri;\n    }\n\n    getCaption(): string {\n        const provider = this.scmProvider;\n        let result = `${provider.relativePath(this.fileChange.uri)} - ${GitFileStatus.toString(this.fileChange.status, true)}`;\n        if (this.fileChange.oldUri) {\n            result = `${provider.relativePath(this.fileChange.oldUri)} -> ${result}`;\n        }\n        return result;\n    }\n\n    getStatusCaption(): string {\n        return GitFileStatus.toString(this.fileChange.status, true);\n    }\n\n    getStatusAbbreviation(): string {\n        return GitFileStatus.toAbbreviation(this.fileChange.status, this.fileChange.staged);\n    }\n\n    getClassNameForStatus(): string {\n        return 'git-status staged ' + GitFileStatus[this.fileChange.status].toLowerCase();\n    }\n\n    getUriToOpen(): URI {\n        const uri: URI = new URI(this.fileChange.uri);\n        const fromFileURI = this.fileChange.oldUri ? new URI(this.fileChange.oldUri) : uri; // set oldUri on renamed and copied\n        if (!this.range) {\n            return uri;\n        }\n        const fromURI = this.range.fromRevision\n            ? fromFileURI.withScheme(GIT_RESOURCE_SCHEME).withQuery(this.range.fromRevision.toString())\n            : fromFileURI;\n        const toURI = this.range.toRevision\n            ? uri.withScheme(GIT_RESOURCE_SCHEME).withQuery(this.range.toRevision.toString())\n            : uri;\n        let uriToOpen = uri;\n        if (this.fileChange.status === GitFileStatus.Deleted) {\n            uriToOpen = fromURI;\n        } else if (this.fileChange.status === GitFileStatus.New) {\n            uriToOpen = toURI;\n        } else {\n            uriToOpen = DiffUris.encode(fromURI, toURI);\n        }\n        return uriToOpen;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, optional } from '@theia/core/shared/inversify';\nimport { MessageService, Emitter, Event } from '@theia/core';\nimport { ConfirmDialog, QuickInputService } from '@theia/core/lib/browser';\nimport { GitRepositoryTracker } from './git-repository-tracker';\nimport { Git, Repository, WorkingDirectoryStatus } from '../common';\nimport { GitErrorHandler } from './git-error-handler';\n\n@injectable()\nexport class GitSyncService {\n\n    @inject(Git)\n    protected readonly git: Git;\n\n    @inject(GitRepositoryTracker)\n    protected readonly repositoryTracker: GitRepositoryTracker;\n\n    @inject(MessageService)\n    protected readonly messageService: MessageService;\n\n    @inject(GitErrorHandler)\n    protected readonly gitErrorHandler: GitErrorHandler;\n\n    @inject(QuickInputService) @optional()\n    protected readonly quickInputService: QuickInputService;\n\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n    readonly onDidChange: Event<void> = this.onDidChangeEmitter.event;\n\n    protected fireDidChange(): void {\n        this.onDidChangeEmitter.fire(undefined);\n    }\n\n    protected syncing = false;\n    isSyncing(): boolean {\n        return this.syncing;\n    }\n    setSyncing(syncing: boolean): void {\n        this.syncing = syncing;\n        this.fireDidChange();\n    }\n\n    canSync(): boolean {\n        if (this.isSyncing()) {\n            return false;\n        }\n        const status = this.repositoryTracker.selectedRepositoryStatus;\n        return !!status && !!status.branch && !!status.upstreamBranch;\n    }\n    async sync(): Promise<void> {\n        const repository = this.repositoryTracker.selectedRepository;\n        if (!this.canSync() || !repository) {\n            return;\n        }\n        this.setSyncing(true);\n        try {\n            await this.git.fetch(repository);\n            let status = await this.git.status(repository);\n            this.setSyncing(false);\n\n            const method = await this.getSyncMethod(status);\n            if (method === undefined) {\n                return;\n            }\n            this.setSyncing(true);\n            if (method === 'pull-push' || method === 'rebase-push') {\n                await this.git.pull(repository, {\n                    rebase: method === 'rebase-push'\n                });\n                status = await this.git.status(repository);\n            }\n            if (this.shouldPush(status)) {\n                await this.git.push(repository, {\n                    force: method === 'force-push'\n                });\n            }\n        } catch (error) {\n            this.gitErrorHandler.handleError(error);\n        } finally {\n            this.setSyncing(false);\n        }\n    }\n    protected async getSyncMethod(status: WorkingDirectoryStatus): Promise<GitSyncService.SyncMethod | undefined> {\n        if (!status.upstreamBranch || !status.branch) {\n            return undefined;\n        }\n        const { branch, upstreamBranch } = status;\n        if (!this.shouldPull(status) && !this.shouldPush(status)) {\n            this.messageService.info(`${branch} is already in sync with ${upstreamBranch}`);\n            return undefined;\n        }\n        const methods: {\n            label: string\n            warning: string\n            detail: GitSyncService.SyncMethod\n        }[] = [{\n            label: `Pull and push commits from and to '${upstreamBranch}'`,\n            warning: `This action will pull and push commits from and to '${upstreamBranch}'.`,\n            detail: 'pull-push'\n        }, {\n            label: `Fetch, rebase and push commits from and to '${upstreamBranch}'`,\n            warning: `This action will fetch, rebase and push commits from and to '${upstreamBranch}'.`,\n            detail: 'rebase-push'\n        }, {\n            label: `Force push commits to '${upstreamBranch}'`,\n            warning: `This action will override commits in '${upstreamBranch}'.`,\n            detail: 'force-push'\n        }];\n\n        const selectedCWD = await this.quickInputService?.showQuickPick(methods, { placeholder: 'Select current working directory for new terminal' });\n        if (selectedCWD && await this.confirm('Synchronize Changes', methods.find(({ detail }) => detail === selectedCWD.detail)!.warning)) {\n            return (selectedCWD.detail as GitSyncService.SyncMethod);\n        } else {\n            return (undefined);\n        }\n    }\n\n    canPublish(): boolean {\n        if (this.isSyncing()) {\n            return false;\n        }\n        const status = this.repositoryTracker.selectedRepositoryStatus;\n        return !!status && !!status.branch && !status.upstreamBranch;\n    }\n    async publish(): Promise<void> {\n        const repository = this.repositoryTracker.selectedRepository;\n        const status = this.repositoryTracker.selectedRepositoryStatus;\n        const localBranch = status && status.branch;\n        if (!this.canPublish() || !repository || !localBranch) {\n            return;\n        }\n        const remote = await this.getRemote(repository, localBranch);\n        if (remote &&\n            await this.confirm('Publish changes', `This action will push commits to '${remote}/${localBranch}' and track it as an upstream branch.`)\n        ) {\n            try {\n                await this.git.push(repository, {\n                    remote, localBranch, setUpstream: true\n                });\n            } catch (error) {\n                this.gitErrorHandler.handleError(error);\n            }\n        }\n    }\n    protected async getRemote(repository: Repository, branch: string): Promise<string | undefined> {\n        const remotes = await this.git.remote(repository);\n        if (remotes.length === 0) {\n            this.messageService.warn('Your repository has no remotes configured to publish to.');\n        }\n\n        const selectedRemote = await this.quickInputService?.showQuickPick(remotes.map(remote => ({ label: remote })),\n            { placeholder: `Pick a remote to publish the branch ${branch} to:` });\n        return selectedRemote?.label;\n    }\n\n    protected shouldPush(status: WorkingDirectoryStatus): boolean {\n        return status.aheadBehind ? status.aheadBehind.ahead > 0 : true;\n    }\n    protected shouldPull(status: WorkingDirectoryStatus): boolean {\n        return status.aheadBehind ? status.aheadBehind.behind > 0 : true;\n    }\n\n    protected async confirm(title: string, msg: string): Promise<boolean> {\n        return !!await new ConfirmDialog({ title, msg, }).open();\n    }\n\n}\n\nexport namespace GitSyncService {\n    export type SyncMethod = 'pull-push' | 'rebase-push' | 'force-push';\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { ScmAvatarService } from '@theia/scm/lib/browser/scm-avatar-service';\nimport { GitCommitDetailWidgetOptions } from './git-commit-detail-widget-options';\nimport { ReactWidget, KeybindingRegistry, codicon } from '@theia/core/lib/browser';\nimport { Git } from '../../common';\nimport * as React from '@theia/core/shared/react';\n\n@injectable()\nexport class GitCommitDetailHeaderWidget extends ReactWidget {\n\n    @inject(KeybindingRegistry) protected readonly keybindings: KeybindingRegistry;\n    @inject(ScmAvatarService) protected readonly avatarService: ScmAvatarService;\n\n    protected options: Git.Options.Diff;\n\n    protected authorAvatar: string;\n\n    constructor(\n        @inject(GitCommitDetailWidgetOptions) protected readonly commitDetailOptions: GitCommitDetailWidgetOptions\n    ) {\n        super();\n        this.id = 'commit-header' + commitDetailOptions.commitSha;\n        this.title.label = commitDetailOptions.commitSha.substring(0, 8);\n        this.options = {\n            range: {\n                fromRevision: commitDetailOptions.commitSha + '~1',\n                toRevision: commitDetailOptions.commitSha\n            }\n        };\n        this.title.closable = true;\n        this.title.iconClass = codicon('git-commit');\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.doInit();\n    }\n\n    protected async doInit(): Promise<void> {\n        this.authorAvatar = await this.avatarService.getAvatar(this.commitDetailOptions.authorEmail);\n    }\n\n    protected render(): React.ReactNode {\n        return React.createElement('div', this.createContainerAttributes(), this.renderDiffListHeader());\n    }\n\n    protected createContainerAttributes(): React.HTMLAttributes<HTMLElement> {\n        return {\n            style: { flexGrow: 0 }\n        };\n    }\n\n    protected renderDiffListHeader(): React.ReactNode {\n        const authorEMail = this.commitDetailOptions.authorEmail;\n        const subject = <div className='subject'>{this.commitDetailOptions.commitMessage}</div>;\n        const body = <div className='body'>{this.commitDetailOptions.messageBody || ''}</div>;\n        const subjectRow = <div className='header-row'><div className='subjectContainer'>{subject}{body}</div></div>;\n        const author = <div className='author header-value noWrapInfo'>{this.commitDetailOptions.authorName}</div>;\n        const mail = <div className='mail header-value noWrapInfo'>{`<${authorEMail}>`}</div>;\n        const authorRow = <div className='header-row noWrapInfo'><div className='theia-header'>author: </div>{author}</div>;\n        const mailRow = <div className='header-row noWrapInfo'><div className='theia-header'>e-mail: </div>{mail}</div>;\n        const authorDate = new Date(this.commitDetailOptions.authorDate);\n        const dateStr = authorDate.toLocaleDateString('en', {\n            month: 'short',\n            day: 'numeric',\n            year: 'numeric',\n            hour12: true,\n            hour: 'numeric',\n            minute: 'numeric'\n        });\n        const date = <div className='date header-value noWrapInfo'>{dateStr}</div>;\n        const dateRow = <div className='header-row noWrapInfo'><div className='theia-header'>date: </div>{date}</div>;\n        const revisionRow = <div className='header-row noWrapInfo'>\n            <div className='theia-header'>revision: </div>\n            <div className='header-value noWrapInfo'>{this.commitDetailOptions.commitSha}</div>\n        </div>;\n        const gravatar = <div className='image-container'>\n            <img className='gravatar' src={this.authorAvatar}></img></div>;\n        const commitInfo = <div className='header-row commit-info-row'>{gravatar}<div className='commit-info'>{authorRow}{mailRow}{dateRow}{revisionRow}</div></div>;\n\n        return <div className='diff-header'>{subjectRow}{commitInfo}</div>;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { WidgetOpenHandler, WidgetOpenerOptions } from '@theia/core/lib/browser';\nimport URI from '@theia/core/lib/common/uri';\nimport { GitCommitDetailWidgetOptions } from './git-commit-detail-widget-options';\nimport { GitCommitDetailWidget } from './git-commit-detail-widget';\nimport { GitScmProvider } from '../git-scm-provider';\n\nexport namespace GitCommitDetailUri {\n    export const scheme = GitScmProvider.GIT_COMMIT_DETAIL;\n    export function toCommitSha(uri: URI): string {\n        if (uri.scheme === scheme) {\n            return uri.fragment;\n        }\n        throw new Error('The given uri is not an commit detail URI, uri: ' + uri);\n    }\n}\n\nexport type GitCommitDetailOpenerOptions = WidgetOpenerOptions & GitCommitDetailWidgetOptions;\n\n@injectable()\nexport class GitCommitDetailOpenHandler extends WidgetOpenHandler<GitCommitDetailWidget> {\n    readonly id = GitScmProvider.GIT_COMMIT_DETAIL;\n\n    canHandle(uri: URI): number {\n        try {\n            GitCommitDetailUri.toCommitSha(uri);\n            return 200;\n        } catch {\n            return 0;\n        }\n    }\n\n    protected override async doOpen(widget: GitCommitDetailWidget, options: GitCommitDetailOpenerOptions): Promise<void> {\n        await super.doOpen(widget, options);\n    }\n\n    protected createWidgetOptions(uri: URI, commit: GitCommitDetailOpenerOptions): GitCommitDetailWidgetOptions {\n        return commit;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Arm and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport const GitCommitDetailWidgetOptions = Symbol('GitCommitDetailWidgetOptions');\nexport interface GitCommitDetailWidgetOptions {\n    rootUri: string;\n    commitSha: string;\n    commitMessage: string;\n    messageBody?: string;\n    authorName: string;\n    authorEmail: string;\n    authorDate: string;\n    authorDateRelative: string;\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Arm and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Message } from '@theia/core/shared/@phosphor/messaging';\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport {\n    BaseWidget, Widget, StatefulWidget, Panel, PanelLayout, MessageLoop, codicon\n} from '@theia/core/lib/browser';\nimport { GitCommitDetailWidgetOptions } from './git-commit-detail-widget-options';\nimport { GitCommitDetailHeaderWidget } from './git-commit-detail-header-widget';\nimport { ScmService } from '@theia/scm/lib/browser/scm-service';\nimport { GitDiffTreeModel } from '../diff/git-diff-tree-model';\nimport { ScmTreeWidget } from '@theia/scm/lib/browser/scm-tree-widget';\nimport { ScmPreferences } from '@theia/scm/lib/browser/scm-preferences';\n\n@injectable()\nexport class GitCommitDetailWidget extends BaseWidget implements StatefulWidget {\n\n    protected panel: Panel;\n\n    @inject(ScmService) protected readonly scmService: ScmService;\n    @inject(GitCommitDetailHeaderWidget) protected readonly commitDetailHeaderWidget: GitCommitDetailHeaderWidget;\n    @inject(ScmTreeWidget) protected readonly resourceWidget: ScmTreeWidget;\n    @inject(GitDiffTreeModel) protected readonly model: GitDiffTreeModel;\n    @inject(ScmPreferences) protected readonly scmPreferences: ScmPreferences;\n\n    set viewMode(mode: 'tree' | 'list') {\n        this.resourceWidget.viewMode = mode;\n    }\n    get viewMode(): 'tree' | 'list' {\n        return this.resourceWidget.viewMode;\n    }\n\n    constructor(\n        @inject(GitCommitDetailWidgetOptions) protected readonly options: GitCommitDetailWidgetOptions\n    ) {\n        super();\n        this.id = 'commit' + options.commitSha;\n        this.title.label = options.commitSha.substring(0, 8);\n        this.title.closable = true;\n        this.title.iconClass = codicon('git-commit');\n\n        this.addClass('theia-scm');\n        this.addClass('theia-git');\n        this.addClass('git-diff-container');\n    }\n\n    @postConstruct()\n    protected init(): void {\n        const layout = new PanelLayout();\n        this.layout = layout;\n        this.panel = new Panel({\n            layout: new PanelLayout({\n            })\n        });\n        this.panel.node.tabIndex = -1;\n        this.panel.node.setAttribute('class', 'theia-scm-panel');\n        layout.addWidget(this.panel);\n\n        this.containerLayout.addWidget(this.commitDetailHeaderWidget);\n        this.containerLayout.addWidget(this.resourceWidget);\n\n        this.updateViewMode(this.scmPreferences.get('scm.defaultViewMode'));\n        this.toDispose.push(this.scmPreferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'scm.defaultViewMode') {\n                this.updateViewMode(e.newValue);\n            }\n        }));\n\n        const diffOptions = {\n            range: {\n                fromRevision: this.options.commitSha + '~1',\n                toRevision: this.options.commitSha\n            }\n        };\n        this.model.setContent({ rootUri: this.options.rootUri, diffOptions });\n    }\n\n    get containerLayout(): PanelLayout {\n        return this.panel.layout as PanelLayout;\n    }\n\n    /**\n     * Updates the view mode based on the preference value.\n     * @param preference the view mode preference.\n     */\n    protected updateViewMode(preference: 'tree' | 'list'): void {\n        this.viewMode = preference;\n    }\n\n    protected updateImmediately(): void {\n        this.onUpdateRequest(Widget.Msg.UpdateRequest);\n    }\n\n    protected override onUpdateRequest(msg: Message): void {\n        MessageLoop.sendMessage(this.commitDetailHeaderWidget, msg);\n        MessageLoop.sendMessage(this.resourceWidget, msg);\n        super.onUpdateRequest(msg);\n    }\n\n    protected override onAfterAttach(msg: Message): void {\n        this.node.appendChild(this.commitDetailHeaderWidget.node);\n        this.node.appendChild(this.resourceWidget.node);\n\n        super.onAfterAttach(msg);\n        this.update();\n    }\n\n    storeState(): any {\n        const state: object = {\n            changesTreeState: this.resourceWidget.storeState(),\n        };\n        return state;\n    }\n\n    restoreState(oldState: any): void {\n        const { changesTreeState } = oldState;\n        this.resourceWidget.restoreState(changesTreeState);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces, Container } from '@theia/core/shared/inversify';\nimport { WidgetFactory, OpenHandler, TreeModel } from '@theia/core/lib/browser';\nimport { GitCommitDetailWidgetOptions } from './git-commit-detail-widget-options';\nimport { GitCommitDetailWidget } from './git-commit-detail-widget';\nimport { GitCommitDetailHeaderWidget } from './git-commit-detail-header-widget';\nimport { GitDiffTreeModel } from '../diff/git-diff-tree-model';\nimport { GitCommitDetailOpenHandler } from './git-commit-detail-open-handler';\nimport { GitScmProvider } from '../git-scm-provider';\nimport { createScmTreeContainer } from '@theia/scm/lib/browser/scm-frontend-module';\nimport { GitResourceOpener } from '../diff/git-resource-opener';\nimport { GitOpenerInSecondaryArea } from './git-opener-in-secondary-area';\nimport '../../../src/browser/style/git-icons.css';\n\nexport function bindGitHistoryModule(bind: interfaces.Bind): void {\n\n    bind(WidgetFactory).toDynamicValue(ctx => ({\n        id: GitScmProvider.GIT_COMMIT_DETAIL,\n        createWidget: (options: GitCommitDetailWidgetOptions) => {\n            const child = createGitCommitDetailWidgetContainer(ctx.container, options);\n            return child.get(GitCommitDetailWidget);\n        }\n    }));\n\n    bind(GitCommitDetailOpenHandler).toSelf();\n    bind(OpenHandler).toService(GitCommitDetailOpenHandler);\n\n}\n\nexport function createGitCommitDetailWidgetContainer(parent: interfaces.Container, options: GitCommitDetailWidgetOptions): Container {\n    const child = createScmTreeContainer(parent);\n    child.bind(GitCommitDetailWidget).toSelf();\n    child.bind(GitCommitDetailHeaderWidget).toSelf();\n    child.bind(GitDiffTreeModel).toSelf();\n    child.bind(TreeModel).toService(GitDiffTreeModel);\n    child.bind(GitOpenerInSecondaryArea).toSelf();\n    child.bind(GitResourceOpener).toService(GitOpenerInSecondaryArea);\n    child.bind(GitCommitDetailWidgetOptions).toConstantValue(options);\n\n    const opener = child.get(GitOpenerInSecondaryArea);\n    const widget = child.get(GitCommitDetailWidget);\n    opener.setRefWidget(widget);\n\n    return child;\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Arm and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { Emitter, Disposable } from '@theia/core';\nimport { Git } from '../../common';\nimport { ScmHistorySupport, HistoryWidgetOptions } from '@theia/scm-extra/lib/browser/history/scm-history-widget';\nimport { ScmHistoryCommit } from '@theia/scm-extra/lib/browser/scm-file-change-node';\nimport { GitScmProvider } from '../git-scm-provider';\nimport { GitRepositoryTracker } from '../git-repository-tracker';\n\n@injectable()\nexport class GitHistorySupport implements ScmHistorySupport {\n\n    @inject(GitScmProvider) protected readonly provider: GitScmProvider;\n    @inject(Git) protected readonly git: Git;\n    @inject(GitRepositoryTracker) protected readonly repositoryTracker: GitRepositoryTracker;\n\n    async getCommitHistory(options?: HistoryWidgetOptions): Promise<ScmHistoryCommit[]> {\n        const repository = this.provider.repository;\n        const gitOptions: Git.Options.Log = {\n            uri: options ? options.uri : undefined,\n            maxCount: options ? options.maxCount : undefined,\n            range: options?.range,\n            shortSha: true\n        };\n\n        const commits = await this.git.log(repository, gitOptions);\n        if (commits.length > 0) {\n            return commits.map(commit => this.provider.createScmHistoryCommit(commit));\n        } else {\n            const pathIsUnderVersionControl = !options || !options.uri || await this.git.lsFiles(repository, options.uri, { errorUnmatch: true });\n            if (!pathIsUnderVersionControl) {\n                throw new Error('It is not under version control.');\n            } else {\n                throw new Error('No commits have been committed.');\n            }\n        }\n    }\n\n    protected readonly onDidChangeHistoryEmitter = new Emitter<void>({\n        onFirstListenerAdd: () => this.onFirstListenerAdd(),\n        onLastListenerRemove: () => this.onLastListenerRemove()\n    });\n    readonly onDidChangeHistory = this.onDidChangeHistoryEmitter.event;\n\n    protected onGitEventDisposable: Disposable | undefined;\n    protected onFirstListenerAdd(): void {\n        this.onGitEventDisposable = this.repositoryTracker.onGitEvent(event => {\n            const { status, oldStatus } = event || { status: undefined, oldStatus: undefined };\n            let isBranchChanged = false;\n            let isHeaderChanged = false;\n            if (oldStatus) {\n                isBranchChanged = !!status && status.branch !== oldStatus.branch;\n                isHeaderChanged = !!status && status.currentHead !== oldStatus.currentHead;\n            }\n            if (isBranchChanged || isHeaderChanged || oldStatus === undefined) {\n                this.onDidChangeHistoryEmitter.fire(undefined);\n            }\n        });\n    }\n\n    protected onLastListenerRemove(): void {\n        if (this.onGitEventDisposable) {\n            this.onGitEventDisposable.dispose();\n            this.onGitEventDisposable = undefined;\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Arm and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { Widget } from '@theia/core/shared/@phosphor/widgets';\nimport { EditorManager } from '@theia/editor/lib/browser/editor-manager';\nimport { GitResourceOpener } from '../diff/git-resource-opener';\nimport URI from '@theia/core/lib/common/uri';\n\n@injectable()\nexport class GitOpenerInSecondaryArea implements GitResourceOpener {\n    @inject(EditorManager) protected readonly editorManager: EditorManager;\n\n    protected refWidget: Widget;\n    setRefWidget(refWidget: Widget): void {\n        this.refWidget = refWidget;\n    }\n\n    protected ref: Widget | undefined;\n    async open(changeUri: URI): Promise<void> {\n        const ref = this.ref;\n        const widget = await this.editorManager.open(changeUri, {\n            mode: 'reveal',\n            widgetOptions: ref ?\n                { area: 'main', mode: 'tab-after', ref } :\n                { area: 'main', mode: 'split-right', ref: this.refWidget }\n        });\n        this.ref = widget instanceof Widget ? widget : undefined;\n        if (this.ref) {\n            this.ref.disposed.connect(() => {\n                if (this.ref === widget) {\n                    this.ref = undefined;\n                }\n            });\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport URI from '@theia/core/lib/common/uri';\nimport { Path, nls, isObject } from '@theia/core';\n\nexport interface WorkingDirectoryStatus {\n\n    /**\n     * `true` if the repository exists, otherwise `false`.\n     */\n    readonly exists: boolean;\n\n    /**\n     * An array of changed files.\n     */\n    readonly changes: GitFileChange[];\n\n    /**\n     * The optional name of the branch. Can be absent.\n     */\n    readonly branch?: string;\n\n    /**\n     * The name of the upstream branch. Optional.\n     */\n    readonly upstreamBranch?: string;\n\n    /**\n     * Wraps the `ahead` and `behind` numbers.\n     */\n    readonly aheadBehind?: { ahead: number, behind: number };\n\n    /**\n     * The hash string of the current HEAD.\n     */\n    readonly currentHead?: string;\n\n    /**\n     * `true` if a limit was specified and reached during get `git status`, so this result is not complete. Otherwise, (including `undefined`) is complete.\n     */\n    readonly incomplete?: boolean;\n\n}\n\nexport namespace WorkingDirectoryStatus {\n\n    /**\n     * `true` if the directory statuses are deep equal, otherwise `false`.\n     */\n    export function equals(left: WorkingDirectoryStatus | undefined, right: WorkingDirectoryStatus | undefined): boolean {\n        if (left && right) {\n            return left.exists === right.exists\n                && left.branch === right.branch\n                && left.upstreamBranch === right.upstreamBranch\n                && left.currentHead === right.currentHead\n                && (left.aheadBehind ? left.aheadBehind.ahead : -1) === (right.aheadBehind ? right.aheadBehind.ahead : -1)\n                && (left.aheadBehind ? left.aheadBehind.behind : -1) === (right.aheadBehind ? right.aheadBehind.behind : -1)\n                && left.changes.length === right.changes.length\n                && !!left.incomplete === !!right.incomplete\n                && JSON.stringify(left) === JSON.stringify(right);\n        } else {\n            return left === right;\n        }\n    }\n\n}\n\n/**\n * Enumeration of states that a file resource can have in the working directory.\n */\nexport enum GitFileStatus {\n    'New',\n    'Copied',\n    'Modified',\n    'Renamed',\n    'Deleted',\n    'Conflicted',\n}\n\nexport namespace GitFileStatus {\n\n    /**\n     * Compares the statuses based on the natural order of the enumeration.\n     */\n    export const statusCompare = (left: GitFileStatus, right: GitFileStatus): number => left - right;\n\n    /**\n     * Returns with human readable representation of the Git file status argument. If the `staged` argument is `undefined`,\n     * it will be treated as `false`.\n     */\n    export const toString = (status: GitFileStatus, staged?: boolean): string => {\n        switch (status) {\n            case GitFileStatus.New: return !!staged ? nls.localize('theia/git/added', 'Added') : nls.localize('theia/git/unstaged', 'Unstaged');\n            case GitFileStatus.Renamed: return nls.localize('theia/git/renamed', 'Renamed');\n            case GitFileStatus.Copied: return nls.localize('theia/git/copied', 'Copied');\n            // eslint-disable-next-line @theia/localization-check\n            case GitFileStatus.Modified: return nls.localize('vscode.git/repository/modified', 'Modified');\n            // eslint-disable-next-line @theia/localization-check\n            case GitFileStatus.Deleted: return nls.localize('vscode.git/repository/deleted', 'Deleted');\n            case GitFileStatus.Conflicted: return nls.localize('theia/git/conflicted', 'Conflicted');\n            default: throw new Error(`Unexpected Git file stats: ${status}.`);\n        }\n    };\n\n    /**\n     * Returns with the human readable abbreviation of the Git file status argument. `staged` argument defaults to `false`.\n     */\n    export const toAbbreviation = (status: GitFileStatus, staged?: boolean): string => {\n        switch (status) {\n            case GitFileStatus.New: return !!staged ? 'A' : 'U';\n            case GitFileStatus.Renamed: return 'R';\n            case GitFileStatus.Copied: return 'C';\n            case GitFileStatus.Modified: return 'M';\n            case GitFileStatus.Deleted: return 'D';\n            case GitFileStatus.Conflicted: return 'C';\n            default: throw new Error(`Unexpected Git file stats: ${status}.`);\n        }\n    };\n\n    /**\n     * It should be aligned with https://github.com/microsoft/vscode/blob/0dfa355b3ad185a6289ba28a99c141ab9e72d2be/extensions/git/src/repository.ts#L197\n     */\n    export function getColor(status: GitFileStatus, staged?: boolean): string {\n        switch (status) {\n            case GitFileStatus.New: {\n                if (!staged) {\n                    return 'var(--theia-gitDecoration-untrackedResourceForeground)';\n                }\n                return 'var(--theia-gitDecoration-addedResourceForeground)';\n            }\n            case GitFileStatus.Renamed: return 'var(--theia-gitDecoration-untrackedResourceForeground)';\n            case GitFileStatus.Copied: // Fall through.\n            case GitFileStatus.Modified: return 'var(--theia-gitDecoration-modifiedResourceForeground)';\n            case GitFileStatus.Deleted: return 'var(--theia-gitDecoration-deletedResourceForeground)';\n            case GitFileStatus.Conflicted: return 'var(--theia-gitDecoration-conflictingResourceForeground)';\n        }\n    }\n\n    export function toStrikethrough(status: GitFileStatus): boolean {\n        return status === GitFileStatus.Deleted;\n    }\n\n}\n\n/**\n * Representation of an individual file change in the working directory.\n */\nexport interface GitFileChange {\n\n    /**\n     * The current URI of the changed file resource.\n     */\n    readonly uri: string;\n\n    /**\n     * The file status.\n     */\n    readonly status: GitFileStatus;\n\n    /**\n     * The previous URI of the changed URI. Can be absent if the file is new, or just changed and so on.\n     */\n    readonly oldUri?: string;\n\n    /**\n     * `true` if the file is staged or committed, `false` if not staged. If absent, it means not staged.\n     */\n    readonly staged?: boolean;\n\n}\n\n/**\n * An object encapsulating the changes to a committed file.\n */\nexport interface CommittedFileChange extends GitFileChange {\n\n    /**\n     * A commit SHA or some other identifier that ultimately dereferences to a commit.\n     * This is the pointer to the `after` version of this change. For instance, the parent of this\n     * commit will contain the `before` (or nothing, if the file change represents a new file).\n     */\n    readonly commitish: string;\n\n}\n\n/**\n * Bare minimum representation of a local Git clone.\n */\nexport interface Repository {\n\n    /**\n     * The FS URI of the local clone.\n     */\n    readonly localUri: string;\n\n}\n\nexport namespace Repository {\n    export function equal(repository: Repository | undefined, repository2: Repository | undefined): boolean {\n        if (repository && repository2) {\n            return repository.localUri === repository2.localUri;\n        }\n        return repository === repository2;\n    }\n    export function is(repository: unknown): repository is Repository {\n        return isObject(repository) && 'localUri' in repository;\n    }\n    export function relativePath(repository: Repository | URI, uri: URI | string): Path | undefined {\n        const repositoryUri = new URI(Repository.is(repository) ? repository.localUri : String(repository));\n        return repositoryUri.relative(new URI(String(uri)));\n    }\n}\n\n/**\n * Representation of a Git remote.\n */\nexport interface Remote {\n\n    /**\n     * The name of the remote.\n     */\n    readonly name: string,\n\n    /**\n     * The remote fetch url.\n     */\n    readonly fetch: string,\n\n    /**\n     * The remote git url.\n     */\n    readonly push: string,\n\n}\n\n/**\n * The branch type. Either local or remote.\n * The order matters.\n */\nexport enum BranchType {\n\n    /**\n     * The local branch type.\n     */\n    Local = 0,\n\n    /**\n     * The remote branch type.\n     */\n    Remote = 1\n\n}\n\n/**\n * Representation of a Git branch.\n */\nexport interface Branch {\n\n    /**\n     * The short name of the branch. For instance; `master`.\n     */\n    readonly name: string;\n\n    /**\n     * The remote-prefixed upstream name. For instance; `origin/master`.\n     */\n    readonly upstream?: string;\n\n    /**\n     * The type of branch. Could be either [local](BranchType.Local) or [remote](BranchType.Remote).\n     */\n    readonly type: BranchType;\n\n    /**\n     * The commit associated with this branch.\n     */\n    readonly tip: Commit;\n\n    /**\n     * The name of the remote of the upstream.\n     */\n    readonly remote?: string;\n\n    /**\n     * The name of the branch's upstream without the remote prefix.\n     */\n    readonly upstreamWithoutRemote?: string;\n\n    /**\n     * The name of the branch without the remote prefix. If the branch is a local\n     * branch, this is the same as its `name`.\n     */\n    readonly nameWithoutRemote: string;\n\n}\n\n/**\n * Representation of a Git tag.\n */\nexport interface Tag {\n\n    /**\n     * The name of the tag.\n     */\n    readonly name: string;\n}\n\n/**\n * A Git commit.\n */\nexport interface Commit {\n\n    /**\n     * The commit SHA.\n     */\n    readonly sha: string;\n\n    /**\n     * The first line of the commit message.\n     */\n    readonly summary: string;\n\n    /**\n     * The commit message without the first line and CR.\n     */\n    readonly body?: string;\n\n    /**\n     * Information about the author of this commit. It includes name, email and date.\n     */\n    readonly author: CommitIdentity;\n\n    /**\n     * The SHAs for the parents of the commit.\n     */\n    readonly parentSHAs?: string[];\n\n}\n\n/**\n * Representation of a Git commit, plus the changes that were performed in that particular commit.\n */\nexport interface CommitWithChanges extends Commit {\n\n    /**\n     * The date when the commit was authored (ISO format).\n     */\n    readonly authorDateRelative: string;\n\n    /**\n     * The file changes in the commit.\n     */\n    readonly fileChanges: GitFileChange[];\n}\n\n/**\n * A tuple of name, email, and a date for the author or commit info in a commit.\n */\nexport interface CommitIdentity {\n\n    /**\n     * The name for the commit.\n     */\n    readonly name: string;\n\n    /**\n     * The email address for the user who did the commit.\n     */\n    readonly email: string;\n\n    /**\n     * The date of the commit in ISO format.\n     */\n    readonly timestamp: string;\n\n}\n\n/**\n * The result of shelling out to Git.\n */\nexport interface GitResult {\n\n    /**\n     * The standard output from Git.\n     */\n    readonly stdout: string;\n\n    /**\n     * The standard error output from Git.\n     */\n    readonly stderr: string;\n\n    /**\n     * The exit code of the Git process.\n     */\n    readonly exitCode: number;\n\n}\n\n/**\n * StashEntry\n */\nexport interface StashEntry {\n    readonly id: string;\n    readonly message: string;\n}\n\n/**\n * The Git errors which can be parsed from failed Git commands.\n */\nexport enum GitError {\n    SSHKeyAuditUnverified = 0,\n    SSHAuthenticationFailed = 1,\n    SSHPermissionDenied = 2,\n    HTTPSAuthenticationFailed = 3,\n    RemoteDisconnection = 4,\n    HostDown = 5,\n    RebaseConflicts = 6,\n    MergeConflicts = 7,\n    HTTPSRepositoryNotFound = 8,\n    SSHRepositoryNotFound = 9,\n    PushNotFastForward = 10,\n    BranchDeletionFailed = 11,\n    DefaultBranchDeletionFailed = 12,\n    RevertConflicts = 13,\n    EmptyRebasePatch = 14,\n    NoMatchingRemoteBranch = 15,\n    NoExistingRemoteBranch = 16,\n    NothingToCommit = 17,\n    NoSubmoduleMapping = 18,\n    SubmoduleRepositoryDoesNotExist = 19,\n    InvalidSubmoduleSHA = 20,\n    LocalPermissionDenied = 21,\n    InvalidMerge = 22,\n    InvalidRebase = 23,\n    NonFastForwardMergeIntoEmptyHead = 24,\n    PatchDoesNotApply = 25,\n    BranchAlreadyExists = 26,\n    BadRevision = 27,\n    NotAGitRepository = 28,\n    CannotMergeUnrelatedHistories = 29,\n    LFSAttributeDoesNotMatch = 30,\n    BranchRenameFailed = 31,\n    PathDoesNotExist = 32,\n    InvalidObjectName = 33,\n    OutsideRepository = 34,\n    LockFileAlreadyExists = 35,\n    NoMergeToAbort = 36,\n    LocalChangesOverwritten = 37,\n    UnresolvedConflicts = 38,\n    GPGFailedToSignData = 39,\n    ConflictModifyDeletedInBranch = 40,\n    // GitHub-specific error codes\n    PushWithFileSizeExceedingLimit = 41,\n    HexBranchNameRejected = 42,\n    ForcePushRejected = 43,\n    InvalidRefLength = 44,\n    ProtectedBranchRequiresReview = 45,\n    ProtectedBranchForcePush = 46,\n    ProtectedBranchDeleteRejected = 47,\n    ProtectedBranchRequiredStatus = 48,\n    PushWithPrivateEmail = 49,\n    // End of GitHub-specific error codes\n    ConfigLockFileAlreadyExists = 50,\n    RemoteAlreadyExists = 51,\n    TagAlreadyExists = 52,\n    MergeWithLocalChanges = 53,\n    RebaseWithLocalChanges = 54,\n    MergeCommitNoMainlineOption = 55,\n    UnsafeDirectory = 56,\n    PathExistsButNotInRef = 57\n}\n\nexport interface GitFileBlame {\n    readonly uri: string;\n    readonly commits: Commit[];\n    readonly lines: CommitLine[];\n}\n\nexport interface CommitLine {\n    readonly sha: string;\n    readonly line: number;\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { RpcServer, RpcProxy, isObject } from '@theia/core';\nimport { Repository, WorkingDirectoryStatus } from './git-model';\nimport { Disposable, DisposableCollection, Emitter, Event } from '@theia/core/lib/common';\n\n/**\n * An event representing a `Git` status change in one of the watched local working directory.\n */\nexport interface GitStatusChangeEvent {\n\n    /**\n     * The source `Git` repository where the event belongs to.\n     */\n    readonly source: Repository;\n\n    /**\n     * The new working directory state.\n     */\n    readonly status: WorkingDirectoryStatus;\n\n    /**\n     * The previous working directory state, if any.\n     */\n    readonly oldStatus?: WorkingDirectoryStatus;\n\n}\n\nexport namespace GitStatusChangeEvent {\n\n    /**\n     * `true` if the argument is a `GitStatusEvent`, otherwise `false`.\n     * @param event the argument to check whether it is a Git status change event or not.\n     */\n    export function is(event: unknown): event is GitStatusChangeEvent {\n        return isObject(event) && ('source' in event) && ('status' in event);\n    }\n\n}\n\n/**\n * Client watcher for `Git`.\n */\nexport interface GitWatcherClient {\n\n    /**\n     * Invoked with the event that encapsulates the status change in the repository.\n     */\n    onGitChanged(event: GitStatusChangeEvent): Promise<void>;\n\n}\n\n/**\n * The symbol of the Git watcher backend for DI.\n */\nexport const GitWatcherServer = Symbol('GitWatcherServer');\n\n/**\n * Service representation communicating between the backend and the frontend.\n */\nexport interface GitWatcherServer extends RpcServer<GitWatcherClient> {\n\n    /**\n     * Watches status changes in the given repository.\n     */\n    watchGitChanges(repository: Repository): Promise<number>;\n\n    /**\n     * De-registers any previously added watchers identified by the unique `watcher` argument. If the watcher cannot be found\n     * with its unique ID, the request will be rejected.\n     */\n    unwatchGitChanges(watcher: number): Promise<void>;\n\n}\n\nexport const GitWatcherServerProxy = Symbol('GitWatcherServerProxy');\nexport type GitWatcherServerProxy = RpcProxy<GitWatcherServer>;\n\n@injectable()\nexport class ReconnectingGitWatcherServer implements GitWatcherServer {\n\n    private watcherSequence = 1;\n    private readonly watchParams = new Map<number, Repository>();\n    private readonly localToRemoteWatcher = new Map<number, number>();\n\n    constructor(\n        @inject(GitWatcherServerProxy) private readonly proxy: GitWatcherServerProxy\n    ) {\n        this.proxy.onDidOpenConnection(() => this.reconnect());\n    }\n\n    async watchGitChanges(repository: Repository): Promise<number> {\n        const watcher = this.watcherSequence++;\n        this.watchParams.set(watcher, repository);\n        return this.doWatchGitChanges([watcher, repository]);\n    }\n\n    async unwatchGitChanges(watcher: number): Promise<void> {\n        this.watchParams.delete(watcher);\n        const remote = this.localToRemoteWatcher.get(watcher);\n        if (remote) {\n            this.localToRemoteWatcher.delete(remote);\n            return this.proxy.unwatchGitChanges(remote);\n        } else {\n            throw new Error(`No Git watchers were registered with ID: ${watcher}.`);\n        }\n    }\n\n    dispose(): void {\n        this.proxy.dispose();\n    }\n\n    setClient(client: GitWatcherClient): void {\n        this.proxy.setClient(client);\n    }\n\n    private reconnect(): void {\n        [...this.watchParams.entries()].forEach(entry => this.doWatchGitChanges(entry));\n    }\n\n    private async doWatchGitChanges(entry: [number, Repository]): Promise<number> {\n        const [watcher, repository] = entry;\n        const remote = await this.proxy.watchGitChanges(repository);\n        this.localToRemoteWatcher.set(watcher, remote);\n        return watcher;\n    }\n}\n\n/**\n * Unique WS endpoint path to the Git watcher service.\n */\nexport const GitWatcherPath = '/services/git-watcher';\n\n@injectable()\nexport class GitWatcher implements GitWatcherClient, Disposable {\n\n    private readonly toDispose: DisposableCollection;\n    private readonly onGitEventEmitter: Emitter<GitStatusChangeEvent>;\n\n    constructor(\n        @inject(GitWatcherServer) private readonly server: GitWatcherServer\n    ) {\n        this.toDispose = new DisposableCollection();\n        this.onGitEventEmitter = new Emitter<GitStatusChangeEvent>();\n\n        this.toDispose.push(this.onGitEventEmitter);\n        this.server.setClient({ onGitChanged: e => this.onGitChanged(e) });\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    get onGitEvent(): Event<GitStatusChangeEvent> {\n        return this.onGitEventEmitter.event;\n    }\n\n    async onGitChanged(event: GitStatusChangeEvent): Promise<void> {\n        this.onGitEventEmitter.fire(event);\n    }\n\n    async watchGitChanges(repository: Repository): Promise<Disposable> {\n        const watcher = await this.server.watchGitChanges(repository);\n        const toDispose = new DisposableCollection();\n        toDispose.push(Disposable.create(() => this.server.unwatchGitChanges(watcher)));\n        return toDispose;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ChildProcess } from 'child_process';\nimport { Disposable, isObject } from '@theia/core';\nimport {\n    Repository, WorkingDirectoryStatus, Branch, GitResult, GitError, GitFileStatus,\n    GitFileChange, CommitWithChanges, GitFileBlame, Remote as RemoteModel, StashEntry\n} from './git-model';\n\n/**\n * The WS endpoint path to the Git service.\n */\nexport const GitPath = '/services/git';\n\n/**\n * Git symbol for DI.\n */\nexport const Git = Symbol('Git');\n\nexport namespace Git {\n\n    /**\n     * Options for various Git commands.\n     */\n    export namespace Options {\n\n        /**\n         * Refinements for the `git branch` command.\n         */\n        export namespace BranchCommand {\n\n            /**\n             * Option for listing branches in a Git repository.\n             */\n            export interface List {\n\n                /**\n                 * The type of the branches that has to be listed. If not\n                 *  - `current` returns with the name of the currently active branch.\n                 *  - `local` lists all locally available branch names.\n                 *  - `remote` for listing all remote branches. One might has to perform a `git fetch` to integrate all the remote branches.\n                 *  - `all` lists all remote and local branches including the currently active one.\n                 */\n                readonly type: 'current' | 'local' | 'remote' | 'all';\n\n            }\n\n            /**\n             * Option for creating a new branch.\n             */\n            export interface Create {\n\n                /**\n                 * The desired name of the new branch.\n                 */\n                readonly toCreate: string;\n\n                /**\n                 * The new branch head will point to this commit. It may be given as a branch name, a commit-id, or a tag.\n                 * If this option is omitted, the current `HEAD` will be used instead.\n                 */\n                readonly startPoint?: string;\n\n            }\n\n            /**\n             * Option for deleting a branch. The branch must be fully merged in its upstream branch, or in `HEAD` if no upstream was set.\n             */\n            export interface Delete {\n\n                /**\n                 * The name of the branch to delete.\n                 */\n                readonly toDelete: string;\n\n                /**\n                 * When set to `true`, then allows deleting the branch irrespective of its merged status. `false` by default.\n                 */\n                readonly force?: boolean;\n\n                /**\n                 * When set to `true` then deletes the remote-tracking branches as well. It is `false` by default.\n                 */\n                readonly remote?: boolean;\n\n            }\n\n            /**\n             * Option for renaming an existing branch.\n             */\n            export interface Rename {\n\n                /**\n                 * The desired new name of the branch.\n                 */\n                readonly newName: string;\n\n                /**\n                 * The name of the branch to rename. If not given, then the currently active branch will be renamed.\n                 */\n                readonly oldName?: string;\n\n                /**\n                 * If set to `true`, the allows renaming the branch even if the new branch name already exists. It is `false` by default.\n                 */\n                readonly force?: boolean;\n\n            }\n\n        }\n\n        /**\n         * Git clone options.\n         */\n        export interface Clone {\n\n            /**\n             * The desired destination path (given as a URI) for the cloned repository.\n             * If the path does not exist it will be created. Cloning into an existing\n             * directory is only allowed if the directory is empty.\n             */\n            readonly localUri: string;\n\n            /**\n             * The branch to checkout after the clone has completed. If not given,\n             * the default branch will will be the current one which is usually the `master`.\n             */\n            readonly branch?: string;\n\n        }\n\n        /**\n         * Git repositories options.\n         */\n        export interface Repositories {\n\n            /**\n             * The maximum count of repositories to look up, should be greater than 0.\n             * Undefined to look up all repositories.\n             */\n            readonly maxCount?: number;\n\n        }\n\n        /**\n         * Further refinements for unstaging files from either from the index or from the working-tree. Alternatively, resetting both.\n         */\n        export interface Unstage {\n\n            /**\n             * What to reset; the state of the index, the working-tree, or both. If not given, `all` will be used.\n             */\n            readonly reset?: 'index' | 'working-tree' | 'all';\n\n            /**\n             * The treeish to reset to. Defaults to `HEAD`.\n             */\n            readonly treeish?: string;\n\n        }\n\n        /**\n         * Options for further `git checkout` refinements.\n         */\n        export namespace Checkout {\n\n            /**\n             * Options for checking out branches.\n             */\n            export interface CheckoutBranch {\n\n                /**\n                 * Branch to checkout; if it refers to a branch, then that branch is checked out.\n                 * Otherwise, if it refers to a valid commit, your `HEAD` becomes \"detached\" and you are no\n                 * longer on any branch.\n                 */\n                readonly branch: string;\n\n                /**\n                 * When switching branches, proceed even if the index or the working tree differs from `HEAD`.\n                 * This is used to throw away local changes.\n                 */\n                readonly force?: boolean;\n\n                /**\n                 * When switching branches, if you have local modifications to one or more files that are different\n                 * between the current branch and the branch to which you are switching, the command refuses to\n                 * switch branches in order to preserve your modifications in context. However, with this option,\n                 * a three-way merge between the current branch, your working tree contents, and the new branch is done,\n                 * and you will be on the new branch.\n                 */\n                readonly merge?: boolean;\n\n                /**\n                 * The name for the new local branch.\n                 */\n                readonly newBranch?: string;\n\n            }\n\n            /**\n             * Options for checking out files from the working tree.\n             *\n             *  - When trying to revert a resource to the state of the index, set `paths`.\n             *  - When trying to revert the state of a resource to the repository `HEAD`, then set `paths` and `treeish` to `HEAD`.\n             *  - If you would like to check out the state of a file from the `HEAD` of a branch, set `treeish` to `nameOfTheBranch`.\n             *  - And if you would like to check out a historical revision of a branch, set `treeish` to `nameOfTheBranch~2` which will be\n             *      two commits before the most recent one on the desired branch.\n             */\n            export interface WorkingTreeFile {\n\n                /**\n                 * This is used to restore modified or deleted paths to their original contents from the index or replace\n                 * paths with the contents from a named tree-ish (most often a commit-ish).\n                 *\n                 * One can specify a regular expression for the paths, in such cases, it must be escaped with single-quotes.\n                 * For instance checking out a `Hello.ts` file will be simply `\"Hello.ts\"`, if one would like to checkout\n                 * all TS files, then this for should be used: ```ts\n                 * const options = {\n                 *   paths: `'*.ts'`\n                 * }\n                 * ```.\n                 */\n                readonly paths: string | string[];\n\n                /**\n                 * When checking out paths from the index, do not fail upon unmerged entries; instead, unmerged\n                 * entries are ignored.\n                 */\n                readonly force?: boolean;\n\n                /**\n                 * When checking out paths from the index, this option lets you recreate the conflicted merge in the\n                 * specified paths.\n                 */\n                readonly merge?: boolean;\n\n                /**\n                 * Tree to checkout from. If not specified, the index will be used. `git checkout -- ./fileName.ext`.\n                 * If you want to get the state from the repository ,use `HEAD` which will be equivalent with `git checkout HEAD -- ./fileName.ext`.\n                 */\n                readonly treeish?: string;\n\n            }\n\n        }\n\n        /**\n         * Options for the `git commit` command refinement.\n         */\n        export interface Commit {\n\n            /**\n             * If `true` replaces the tip of the current branch by creating a new commit.\n             * The recorded tree is prepared as usual, and the message from the original commit is used as the starting point, instead of an empty message,\n             * when no other message is specified. The new commit has the same parents and author as the current one. Defaults to `false`.\n             */\n            readonly amend?: boolean;\n\n            /**\n             * Adds the `Signed-off-by` line by the committer at the end of the commit log message. `false` by default.\n             */\n            readonly signOff?: boolean;\n\n        }\n\n        /**\n         * Options for further refining the `git show` command.\n         */\n        export interface Show {\n\n            /**\n             * The desired encoding which should be used when retrieving the file content.\n             * `utf8` should be used for text content and `binary` for blobs. The default one is `utf8`.\n             */\n            readonly encoding?: 'utf8' | 'binary';\n\n            /**\n             * A commit SHA or some other identifier that ultimately dereferences to a commit/tree.\n             * `HEAD` is the local `HEAD`, and `index` is the the staged. If not specified,\n             * then `index` will be used instead. But this can be `HEAD~2` or `ed14ef1~1` where `ed14ef1` is a commit hash.\n             */\n            readonly commitish?: 'index' | string;\n\n        }\n\n        /**\n         * Options for further refining the `git stash` command.\n         */\n        export interface Stash {\n            /**\n             * The kind of stash action.\n             */\n            readonly action?: 'push' | 'apply' | 'pop' | 'list' | 'drop' | 'clear';\n\n            /**\n             * The stash id.\n             * This is an optional argument for actions of kind 'apply', 'pop' and 'drop'.\n             */\n            readonly id?: string;\n\n            /**\n             * The stash message.\n             * This is an optional argument for the `push` action.\n             */\n            readonly message?: string;\n        }\n\n        /**\n         * Options for the `git fetch` command.\n         */\n        export interface Fetch {\n\n            /**\n             * The name of the remote to fetch from. If not given, then the default remote will be used. Defaults to the `origin`.\n             */\n            readonly remote?: string;\n\n        }\n\n        /**\n         * Further refinements for the `git push` command.\n         */\n        export interface Push {\n\n            /**\n             * The name of the remote to push to. If not given, then the default remote will be used. It is the `origin` by default.\n             */\n            readonly remote?: string;\n\n            /**\n             * The name of the local branch to push. If not given, then the currently active branch will be used instead.\n             */\n            readonly localBranch?: string;\n\n            /**\n             * The name of the remote branch to push to. If not given then the changes will be pushed to the remote branch associated with the\n             * local branch.\n             *\n             * `git push <remote> <localBranch>:<remoteBranch>`\n             */\n            readonly remoteBranch?: string;\n\n            /**\n             * Set upstream for every branch that is up to date or successfully pushed,\n             * add upstream (tracking) reference, used by argument-less git-pull and other commands.\n             */\n            readonly setUpstream?: boolean;\n\n            /**\n             * Usually, the command refuses to update a remote ref that is not an ancestor of the local ref used to overwrite it.\n             * This flag disables these checks, and can cause the remote repository to lose commits; use it with care.\n             */\n            readonly force?: boolean;\n\n        }\n\n        /**\n         * Options for the `git pull` command.\n         */\n        export interface Pull {\n\n            /**\n             * The name of the remote to pull from. If not given, then the default remote will be used. Defaults to the `origin`.\n             */\n            readonly remote?: string;\n\n            /**\n             * The name of the branch to pull form. This is required when one performs a `git pull` from a remote which is not\n             * the default remote tracking of the currently active branch.\n             */\n            readonly branch?: string;\n\n            /**\n             * When true, rebase the current branch on top of the upstream branch after fetching.\n             */\n            readonly rebase?: boolean\n\n        }\n\n        /**\n         * Additional technical rectifications for the `git reset` command.\n         */\n        export interface Reset {\n\n            /**\n             * The `git reset` mode. The followings are supported:\n             *  - `hard`,\n             *  - `sort`, or\n             *  - `mixed`.\n             *\n             * Those correspond to the consecutive `--hard`, `--soft`, and `--mixed` Git options.\n             */\n            readonly mode: 'hard' | 'soft' | 'mixed';\n\n            /**\n             * The reference to reset to. By default, resets to `HEAD`.\n             */\n            readonly ref?: string;\n\n        }\n\n        /**\n         * Additional options for the `git merge` command.\n         */\n        export interface Merge {\n\n            /**\n             * The name of the branch that should be merged into the current branch.\n             */\n            readonly branch: string;\n\n        }\n\n        /**\n         * A set of configuration options that can be passed when executing a low-level Git command.\n         */\n        export interface Execution {\n\n            /**\n             * The exit codes which indicate success to the caller. Unexpected exit codes will be logged and an\n             * error thrown. Defaults to `0` if `undefined`.\n             */\n            readonly successExitCodes?: ReadonlyArray<number>;\n\n            /**\n             * The Git errors which are expected by the caller. Unexpected errors will\n             * be logged and an error thrown.\n             */\n            readonly expectedErrors?: ReadonlyArray<GitError>;\n\n            /**\n             * An optional collection of key-value pairs which will be\n             * set as environment variables before executing the Git\n             * process.\n             */\n            readonly env?: Object;\n\n            /**\n             * An optional string which will be written to the child process\n             * stdin stream immediately after spawning the process.\n             */\n            readonly stdin?: string;\n\n            /**\n             * The encoding to use when writing to `stdin`, if the `stdin`\n             * parameter is a string.\n             */\n            readonly stdinEncoding?: string;\n\n            /**\n             * The size the output buffer to allocate to the spawned process. Set this\n             * if you are anticipating a large amount of output.\n             *\n             * If not specified, this will be 10MB (10485760 bytes) which should be\n             * enough for most Git operations.\n             */\n            readonly maxBuffer?: number;\n\n            /**\n             * An optional callback which will be invoked with the child\n             * process instance after spawning the Git process.\n             *\n             * Note that if the `stdin` parameter was specified the `stdin`\n             * stream will be closed by the time this callback fires.\n             *\n             * Defining this property could make the `exec` function invocation **non-client** compatible.\n             */\n            readonly processCallback?: (process: ChildProcess) => void;\n\n            /**\n             * The name for the command based on its caller's context.\n             * This could be used only for performance measurements and debugging. It has no runtime behavior effects.\n             */\n            readonly name?: string;\n\n        }\n\n        /**\n         * Range that is used for representing to individual commitish when calculating either `git log` or `git diff`.\n         */\n        export interface Range {\n\n            /**\n             * The last revision that should be included among the result running this query. Here, the revision can be a tag, a commitish,\n             * or even an expression (`HEAD~3`). For more details to specify the revision, see [here](https://git-scm.com/docs/gitrevisions#_specifying_revisions).\n             */\n            readonly toRevision?: string;\n\n            /**\n             * Either the from revision (`string`) or a positive integer that is equivalent to the `~` suffix, which means the commit object that is the `fromRevision`<sup>th</sup>\n             * generation ancestor of the named, `toRevision` commit object, following only the first parents. If not specified, equivalent to `origin..toRevision`.\n             */\n            readonly fromRevision?: number | string;\n\n        }\n\n        /**\n         * Optional configuration for the `git diff` command.\n         */\n        export interface Diff {\n\n            /**\n             * The Git revision range that will be used when calculating the diff.\n             */\n            readonly range?: Range;\n\n            /**\n             * The URI of the resource in the repository to get the diff. Can be an individual file or a directory.\n             */\n            readonly uri?: string;\n\n        }\n\n        /**\n         * Optional configuration for the `git log` command.\n         */\n        export interface Log extends Diff {\n\n            /**\n             * The name of the branch to run the `git log` command. If not specified, then the currently active branch will be used.\n             */\n            readonly branch?: string;\n\n            /**\n             * Limits the number of commits. Also known as `-n` or `--number. If not specified, or not a positive integer, then will be ignored, and the returning list\n             * of commits will not be limited.\n             */\n            readonly maxCount?: number;\n\n            /**\n             * Decides whether the commit hash should be the abbreviated version.\n             */\n            readonly shortSha?: boolean;\n        }\n\n        /**\n         * Optional configuration for the `git blame` command.\n         */\n        export interface Blame {\n            /**\n             * Dirty state content.\n             */\n            readonly content?: string;\n        }\n\n        /**\n         * Further refinements for the `git ls-files`.\n         */\n        export interface LsFiles {\n\n            /**\n             * If any the file does not appear in the index, treat this as an error that results in the error code 1.\n             */\n            readonly errorUnmatch?: true;\n\n        }\n\n        /**\n         * Options for the `git remote` command.\n         */\n        export interface Remote {\n\n            /**\n             * Be more verbose and get remote url for `fetch` and `push` actions.\n             */\n            readonly verbose?: true,\n\n        }\n\n        /**\n         * Options for the `git rev-parse` command.\n         */\n        export interface RevParse {\n\n            /**\n             * The reference to parse.\n             */\n            readonly ref: string;\n\n        }\n\n    }\n}\n\n/**\n * Provides basic functionality for Git.\n */\nexport interface Git extends Disposable {\n\n    /**\n     * Clones a remote repository into the desired local location.\n     *\n     * @param remoteUrl the URL of the remote.\n     * @param options the clone options.\n     */\n    clone(remoteUrl: string, options: Git.Options.Clone): Promise<Repository>;\n\n    /**\n     * Resolves to an array of repositories discovered in the workspace given with the workspace root URI.\n     */\n    repositories(workspaceRootUri: string, options: Git.Options.Repositories): Promise<Repository[]>;\n\n    /**\n     * Returns with the working directory status of the given Git repository.\n     *\n     * @param the repository to get the working directory status from.\n     */\n    status(repository: Repository): Promise<WorkingDirectoryStatus>;\n\n    /**\n     * Stages the given file or files in the working clone. The invocation will be rejected if\n     * any files (given with their file URIs) is not among the changed files.\n     *\n     * @param repository the repository to stage the files.\n     * @param uri one or multiple file URIs to stage in the working clone.\n     */\n    add(repository: Repository, uri: string | string[]): Promise<void>;\n\n    /**\n     * Removes the given file or files among the staged files in the working clone. The invocation will be rejected if\n     * any files (given with their file URIs) is not among the staged files.\n     *\n     * @param repository the repository to where the staged files have to be removed from.\n     * @param uri one or multiple file URIs to unstage in the working clone. If the array is empty, all the changed files will be staged.\n     * @param options optional refinements for the the unstaging operation.\n     */\n    unstage(repository: Repository, uri: string | string[], options?: Git.Options.Unstage): Promise<void>;\n\n    /**\n     * Returns with the currently active branch, or `undefined` if the current branch is in detached mode.\n     *\n     * @param the repository where the current branch has to be queried.\n     * @param options the type of the branch, which is always the `current`.\n     */\n    branch(repository: Repository, options: { type: 'current' }): Promise<Branch | undefined>;\n\n    /**\n     * Returns with an array of branches.\n     *\n     * @param the repository where the branches has to be queried.\n     * @param options the type of the branch, which is either the `local`, the `remote`, or `all` of them.\n     */\n    branch(repository: Repository, options: { type: 'local' | 'remote' | 'all' }): Promise<Branch[]>;\n\n    /**\n     * Creates, renames, and deletes a branch.\n     *\n     * @param the repository where the branch modification has to be performed.\n     * @param options further Git command refinements for the branch modification.\n     */\n    /* eslint-disable @typescript-eslint/indent */\n    branch(repository: Repository, options:\n        Git.Options.BranchCommand.Create |\n        Git.Options.BranchCommand.Rename |\n        Git.Options.BranchCommand.Delete\n    ): Promise<void>;\n    /* eslint-enable @typescript-eslint/indent */\n\n    /**\n     * Switches branches or restores working tree files.\n     *\n     * @param repository the repository to where the `git checkout` has to be performed.\n     * @param options further checkout options.\n     */\n    checkout(repository: Repository, options: Git.Options.Checkout.CheckoutBranch | Git.Options.Checkout.WorkingTreeFile): Promise<void>;\n\n    /**\n     * Commits the changes of all staged files in the working directory.\n     *\n     * @param repository the repository where the staged changes has to be committed.\n     * @param message the optional commit message.\n     */\n    commit(repository: Repository, message?: string, options?: Git.Options.Commit): Promise<void>;\n\n    /**\n     * Fetches branches and/or tags (collectively, `refs`) from the repository, along with the objects necessary to complete their histories.\n     * The remotely-tracked branches will be updated too.\n     *\n     * @param repository the repository to fetch from.\n     * @param options optional options for `git fetch` refinement.\n     */\n    fetch(repository: Repository, options?: Git.Options.Fetch): Promise<void>;\n\n    /**\n     * Updates the `refs` using local `refs`, while sending objects necessary to complete the given `refs` by pushing\n     * all committed changed from the local Git repository to the `remote` one.\n     *\n     * @param repository the repository to push to.\n     * @param options optional refinements for the `git push` command.\n     */\n    push(repository: Repository, options?: Git.Options.Push): Promise<void>;\n\n    /**\n     * Fetches from and integrates with another repository. It incorporates changes from a repository into the current branch.\n     * In its default mode, `git pull` is shorthand for `git fetch` followed by `git merge FETCH_HEAD`.\n     *\n     * @param repository the repository to pull from.\n     * @param options optional refinements for the `git pull` command.\n     */\n    pull(repository: Repository, options?: Git.Options.Pull): Promise<void>;\n\n    /**\n     * Resets the current `HEAD` of the entire working directory to the specified state.\n     *\n     * @param repository the repository which state has to be reset.\n     * @param options further clarifying the `git reset` command.\n     */\n    reset(repository: Repository, options: Git.Options.Reset): Promise<void>;\n\n    /**\n     * Merges the given branch into the currently active branch.\n     *\n     * @param repository the repository to merge from.\n     * @param options `git merge` command refinements.\n     */\n    merge(repository: Repository, options: Git.Options.Merge): Promise<void>;\n\n    /**\n     * Retrieves and shows the content of a resource from the repository at a given reference, commit, or tree.\n     * Resolves to a promise that will produce a string containing the contents of the file or an error if the file does not exists in the given revision.\n     *\n     * @param repository the repository to get the file content from.\n     * @param uri the URI of the file who's content has to be retrieved and shown.\n     * @param options the options for further refining the `git show`.\n     */\n    show(repository: Repository, uri: string, options?: Git.Options.Show): Promise<string>;\n\n    /**\n     * The default `git stash` command. Equivalent to `git stash push`. If the `message` is not defined, the Git default *WIP on branchname* will be used instead.\n     */\n    stash(repository: Repository, options?: Readonly<{ action?: 'push', message?: string }>): Promise<void>;\n\n    /**\n     * Resolves to an array of stashed entries that you currently have. Same as `git stash list`.\n     */\n    stash(repository: Repository, options: Readonly<{ action: 'list' }>): Promise<StashEntry[]>;\n\n    /**\n     * Removes all the stash entries.\n     */\n    stash(repository: Repository, options: Readonly<{ action: 'clear' }>): Promise<void>;\n\n    /**\n     * Performs stash actions depending on given action option.\n     * pop:\n     * Removes a single stashed state from the stash list and applies it on top of the current working tree state.\n     * The single stashed state is identified by the optional `id`. If the `id` is not defined the latest stash will be popped.\n     *\n     * apply:\n     * Like `git stash pop`, but does not remove the state from the stash list.\n     *\n     * drop:\n     * Removes a single stash entry from the list of stash entries. When the `id` is not given, it removes the latest one.\n     */\n    stash(repository: Repository, options: Readonly<{ action: 'apply' | 'pop' | 'drop', id?: string }>): Promise<void>;\n\n    /**\n     * It resolves to an array of configured remotes names for the given repository.\n     *\n     * @param repository the repository to get the remote names.\n     */\n    remote(repository: Repository): Promise<string[]>;\n\n    /**\n     * It resolves to an array of configured remote objects for the given Git action.\n     *\n     * @param repository the repository to get the remote objects.\n     * @param options `git remote` command refinements.\n     */\n    remote(repository: Repository, options: { verbose: true }): Promise<RemoteModel[]>;\n\n    /**\n     * Executes the Git command and resolves to the result. If an executed Git command exits with a code that is not in the `successExitCodes` or an error not in `expectedErrors`,\n     * a `GitError` will be thrown.\n     *\n     * @param repository the repository where one can execute the command. (Although the repository path is not necessarily mandatory for each Git commands,\n     * such as `git config -l`, or `git --version`, we treat the repository as a required argument to have a symmetric API.)\n     * @param args the array of arguments for Git.\n     * @param options options can be used to tweaked additional configurations for the low-level command execution.\n     */\n    exec(repository: Repository, args: string[], options?: Git.Options.Execution): Promise<GitResult>;\n\n    /**\n     * Shows the difference between content pairs in the working tree, commits, or index.\n     *\n     * @param repository the repository where where the diff has to be calculated.\n     * @param options optional configuration for further refining the `git diff` command execution.\n     */\n    diff(repository: Repository, options?: Git.Options.Diff): Promise<GitFileChange[]>;\n\n    /**\n     * Returns a list with commits and their respective file changes.\n     *\n     * @param repository the repository where the log has to be calculated.\n     * @param options optional configuration for further refining the `git log` command execution.\n     */\n    log(repository: Repository, options?: Git.Options.Log): Promise<CommitWithChanges[]>;\n\n    /**\n     * Returns the commit SHA of the given ref if the ref exists, or returns 'undefined' if the\n     * given ref does not exist.\n     *\n     * @param repository the repository where the ref may be found.\n     * @param options configuration containing the ref and optionally other properties for further refining the `git rev-parse` command execution.\n     */\n    revParse(repository: Repository, options: Git.Options.RevParse): Promise<string | undefined>;\n\n    /**\n     * Returns the annotations of each line in the given file.\n     *\n     * @param repository the repository which contains the given file.\n     * @param uri the URI of the file to get the annotations for.\n     * @param options more options refining the `git blame`.\n     */\n    blame(repository: Repository, uri: string, options?: Git.Options.Blame): Promise<GitFileBlame | undefined>;\n\n    /**\n     * Resolves to `true` if the file is managed by the Git repository. Otherwise, `false`.\n     */\n    lsFiles(repository: Repository, uri: string, options: { errorUnmatch: true }): Promise<boolean>;\n    /**\n     * Shows information about files in the index and the working tree\n     *\n     * @param repository the repository where the `git lf-files` has to be executed.\n     * @param uri the URI of the file to check.\n     * @param options further options for the command executions.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    lsFiles(repository: Repository, uri: string, options?: Git.Options.LsFiles): Promise<any>;\n\n}\n\n/**\n * Contains a set of utility functions for {@link Git}.\n */\nexport namespace GitUtils {\n\n    /**\n     * `true` if the argument is an option for renaming an existing branch in the repository.\n     */\n    export function isBranchRename(arg: unknown): arg is Git.Options.BranchCommand.Rename {\n        return isObject(arg) && 'newName' in arg;\n    }\n\n    /**\n     * `true` if the argument is an option for deleting an existing branch in the repository.\n     */\n    export function isBranchDelete(arg: unknown): arg is Git.Options.BranchCommand.Delete {\n        return isObject(arg) && 'toDelete' in arg;\n    }\n\n    /**\n     * `true` if the argument is an option for creating a new branch in the repository.\n     */\n    export function isBranchCreate(arg: unknown): arg is Git.Options.BranchCommand.Create {\n        return isObject(arg) && 'toCreate' in arg;\n    }\n\n    /**\n     * `true` if the argument is an option for listing the branches in a repository.\n     */\n    export function isBranchList(arg: unknown): arg is Git.Options.BranchCommand.List {\n        return isObject(arg) && 'type' in arg;\n    }\n\n    /**\n     * `true` if the argument is an option for checking out a new local branch.\n     */\n    export function isBranchCheckout(arg: unknown): arg is Git.Options.Checkout.CheckoutBranch {\n        return isObject(arg) && 'branch' in arg;\n    }\n\n    /**\n     * `true` if the argument is an option for checking out a working tree file.\n     */\n    export function isWorkingTreeFileCheckout(arg: unknown): arg is Git.Options.Checkout.WorkingTreeFile {\n        return isObject(arg) && 'paths' in arg;\n    }\n\n    /**\n     * The error code for when the path to a repository doesn't exist.\n     */\n    const RepositoryDoesNotExistErrorCode = 'repository-does-not-exist-error';\n\n    /**\n     * `true` if the argument is an error indicating the absence of a local Git repository.\n     * Otherwise, `false`.\n     */\n    export function isRepositoryDoesNotExistError(error: unknown): boolean {\n        // TODO this is odd here.This piece of code is already implementation specific, so this should go to the Git API.\n        // But how can we ensure that the `any` type error is serializable?\n        if (error instanceof Error && ('code' in error)) {\n            return (error as { code: string }).code === RepositoryDoesNotExistErrorCode;\n        }\n        return false;\n    }\n\n    /**\n     * Maps the raw status text from Git to a Git file status enumeration.\n     */\n    export function mapStatus(rawStatus: string): GitFileStatus {\n        const status = rawStatus.trim();\n\n        if (status === 'M') {\n            return GitFileStatus.Modified;\n        } // modified\n        if (status === 'A') {\n            return GitFileStatus.New;\n        } // added\n        if (status === 'D') {\n            return GitFileStatus.Deleted;\n        } // deleted\n        if (status === 'R') {\n            return GitFileStatus.Renamed;\n        } // renamed\n        if (status === 'C') {\n            return GitFileStatus.Copied;\n        } // copied\n\n        // git log -M --name-status will return a RXXX - where XXX is a percentage\n        if (status.match(/R[0-9]+/)) {\n            return GitFileStatus.Renamed;\n        }\n\n        // git log -C --name-status will return a CXXX - where XXX is a percentage\n        if (status.match(/C[0-9]+/)) {\n            return GitFileStatus.Copied;\n        }\n\n        return GitFileStatus.Modified;\n    }\n\n    /**\n     * `true` if the argument is a raw Git status with similarity percentage. Otherwise, `false`.\n     */\n    export function isSimilarityStatus(rawStatus: string): boolean {\n        return !!rawStatus.match(/R[0-9][0-9][0-9]/) || !!rawStatus.match(/C[0-9][0-9][0-9]/);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './git';\nexport * from './git-model';\nexport * from './git-watcher';\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/dist/cjs.js!./diff.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/dist/cjs.js!./git-icons.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}