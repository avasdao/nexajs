{"version":3,"file":"vendors-node_modules_theia_callhierarchy_lib_browser_callhierarchy-frontend-module_js.js","mappings":"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","sources":["webpack:///./node_modules/@theia/callhierarchy/src/browser/style/index.css?./node_modules/css-loader/dist/cjs.js","webpack:///./node_modules/@theia/callhierarchy/src/browser/callhierarchy-contribution.ts?","webpack:///./node_modules/@theia/callhierarchy/src/browser/callhierarchy-frontend-module.ts?","webpack:///./node_modules/@theia/callhierarchy/src/browser/callhierarchy-service.ts?","webpack:///./node_modules/@theia/callhierarchy/src/browser/callhierarchy-tree/callhierarchy-tree-container.ts?","webpack:///./node_modules/@theia/callhierarchy/src/browser/callhierarchy-tree/callhierarchy-tree-model.ts?","webpack:///./node_modules/@theia/callhierarchy/src/browser/callhierarchy-tree/callhierarchy-tree-widget.tsx?","webpack:///./node_modules/@theia/callhierarchy/src/browser/callhierarchy-tree/callhierarchy-tree.ts?","webpack:///./node_modules/@theia/callhierarchy/src/browser/callhierarchy-tree/index.ts?","webpack:///./node_modules/@theia/callhierarchy/src/browser/callhierarchy.ts?","webpack:///./node_modules/@theia/callhierarchy/src/browser/style/index.css?"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.theia-CallHierarchyTree {\n  font-size: var(--theia-ui-font-size1);\n}\n\n.theia-CallHierarchyTree .theia-TreeNode {\n  width: 100%;\n}\n\n.theia-CallHierarchyTree .theia-ExpansionToggle {\n  min-width: 9px;\n  padding-right: 4px;\n}\n\n.theia-CallHierarchyTree .definitionNode {\n  display: flex;\n}\n\n.theia-CallHierarchyTree .definitionNode {\n  width: calc(100% - 32px);\n}\n\n.theia-CallHierarchyTree .definitionNode div {\n  margin-right: 5px;\n}\n\n.theia-CallHierarchyTree .definitionNode .symbol {\n  padding-right: 4px;\n}\n\n.theia-CallHierarchyTree .definitionNode .referenceCount {\n  color: var(--theia-badge-background);\n  padding-right: 4px;\n}\n\n.theia-CallHierarchyTree .definitionNode .container {\n  color: var(--theia-descriptionForeground);\n}\n\n.theia-CallHierarchyTree .definitionNode-content {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.theia-CallHierarchyTree\n  .definitionNode.deprecatedDefinition\n  .definitionNode-content {\n  text-decoration: line-through;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@theia/callhierarchy/src/browser/style/index.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,qCAAqC;AACvC;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,cAAc;EACd,kBAAkB;AACpB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,oCAAoC;EACpC,kBAAkB;AACpB;;AAEA;EACE,yCAAyC;AAC3C;;AAEA;EACE,mBAAmB;EACnB,gBAAgB;EAChB,uBAAuB;AACzB;;AAEA;;;EAGE,6BAA6B;AAC/B\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2018 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-CallHierarchyTree {\\n  font-size: var(--theia-ui-font-size1);\\n}\\n\\n.theia-CallHierarchyTree .theia-TreeNode {\\n  width: 100%;\\n}\\n\\n.theia-CallHierarchyTree .theia-ExpansionToggle {\\n  min-width: 9px;\\n  padding-right: 4px;\\n}\\n\\n.theia-CallHierarchyTree .definitionNode {\\n  display: flex;\\n}\\n\\n.theia-CallHierarchyTree .definitionNode {\\n  width: calc(100% - 32px);\\n}\\n\\n.theia-CallHierarchyTree .definitionNode div {\\n  margin-right: 5px;\\n}\\n\\n.theia-CallHierarchyTree .definitionNode .symbol {\\n  padding-right: 4px;\\n}\\n\\n.theia-CallHierarchyTree .definitionNode .referenceCount {\\n  color: var(--theia-badge-background);\\n  padding-right: 4px;\\n}\\n\\n.theia-CallHierarchyTree .definitionNode .container {\\n  color: var(--theia-descriptionForeground);\\n}\\n\\n.theia-CallHierarchyTree .definitionNode-content {\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.theia-CallHierarchyTree\\n  .definitionNode.deprecatedDefinition\\n  .definitionNode-content {\\n  text-decoration: line-through;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { MenuModelRegistry, Command, CommandRegistry } from '@theia/core/lib/common';\nimport { AbstractViewContribution, OpenViewArguments, KeybindingRegistry } from '@theia/core/lib/browser';\nimport { EDITOR_CONTEXT_MENU, CurrentEditorAccess, EditorManager } from '@theia/editor/lib/browser';\nimport { CallHierarchyTreeWidget } from './callhierarchy-tree/callhierarchy-tree-widget';\nimport { CALLHIERARCHY_ID, CALL_HIERARCHY_LABEL, CALL_HIERARCHY_TOGGLE_COMMAND_ID } from './callhierarchy';\nimport { CallHierarchyServiceProvider } from './callhierarchy-service';\nimport URI from '@theia/core/lib/common/uri';\nimport { ContextKey, ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nexport { CALL_HIERARCHY_LABEL, CALL_HIERARCHY_TOGGLE_COMMAND_ID };\n\nexport namespace CallHierarchyCommands {\n    export const OPEN = Command.toLocalizedCommand({\n        id: 'callhierarchy:open',\n        label: 'Open Call Hierarchy'\n    }, 'theia/callhierarchy/open');\n}\n\n@injectable()\nexport class CallHierarchyContribution extends AbstractViewContribution<CallHierarchyTreeWidget> {\n\n    @inject(CurrentEditorAccess) protected readonly editorAccess: CurrentEditorAccess;\n    @inject(EditorManager) protected readonly editorManager: EditorManager;\n    @inject(CallHierarchyServiceProvider) protected readonly callHierarchyServiceProvider: CallHierarchyServiceProvider;\n    @inject(ContextKeyService) protected readonly contextKeyService: ContextKeyService;\n\n    protected editorHasCallHierarchyProvider!: ContextKey<boolean>;\n\n    constructor() {\n        super({\n            widgetId: CALLHIERARCHY_ID,\n            widgetName: CALL_HIERARCHY_LABEL,\n            defaultWidgetOptions: {\n                area: 'bottom'\n            },\n            toggleCommandId: CALL_HIERARCHY_TOGGLE_COMMAND_ID,\n            toggleKeybinding: 'ctrlcmd+shift+f1'\n        });\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.editorHasCallHierarchyProvider = this.contextKeyService.createKey('editorHasCallHierarchyProvider', false);\n        this.editorManager.onCurrentEditorChanged(() => this.editorHasCallHierarchyProvider.set(this.isCallHierarchyAvailable()));\n        this.callHierarchyServiceProvider.onDidChange(() => this.editorHasCallHierarchyProvider.set(this.isCallHierarchyAvailable()));\n    }\n\n    protected isCallHierarchyAvailable(): boolean {\n        const { selection, languageId } = this.editorAccess;\n        return !!selection && !!languageId && !!this.callHierarchyServiceProvider.get(languageId, new URI(selection.uri));\n    }\n\n    override async openView(args?: Partial<OpenViewArguments>): Promise<CallHierarchyTreeWidget> {\n        const widget = await super.openView(args);\n        const { selection, languageId } = this.editorAccess;\n        widget.initializeModel(selection, languageId);\n        return widget;\n    }\n\n    override registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(CallHierarchyCommands.OPEN, {\n            execute: () => this.openView({\n                toggle: false,\n                activate: true\n            }),\n            isEnabled: this.isCallHierarchyAvailable.bind(this)\n        });\n        super.registerCommands(commands);\n    }\n\n    override registerMenus(menus: MenuModelRegistry): void {\n        const menuPath = [...EDITOR_CONTEXT_MENU, 'navigation'];\n        menus.registerMenuAction(menuPath, {\n            commandId: CallHierarchyCommands.OPEN.id,\n            label: CALL_HIERARCHY_LABEL\n        });\n        super.registerMenus(menus);\n    }\n\n    override registerKeybindings(keybindings: KeybindingRegistry): void {\n        super.registerKeybindings(keybindings);\n        keybindings.registerKeybinding({\n            command: CallHierarchyCommands.OPEN.id,\n            keybinding: 'ctrlcmd+f1'\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { CallHierarchyContribution } from './callhierarchy-contribution';\nimport { bindContributionProvider } from '@theia/core/lib/common';\nimport { CallHierarchyService, CallHierarchyServiceProvider } from './callhierarchy-service';\nimport { WidgetFactory, bindViewContribution } from '@theia/core/lib/browser';\nimport { CALLHIERARCHY_ID } from './callhierarchy';\nimport { createHierarchyTreeWidget } from './callhierarchy-tree';\nimport { ContainerModule } from '@theia/core/shared/inversify';\n\nimport '../../src/browser/style/index.css';\n\nexport default new ContainerModule(bind => {\n    bindContributionProvider(bind, CallHierarchyService);\n    bind(CallHierarchyServiceProvider).to(CallHierarchyServiceProvider).inSingletonScope();\n\n    bindViewContribution(bind, CallHierarchyContribution);\n\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: CALLHIERARCHY_ID,\n        createWidget: () => createHierarchyTreeWidget(context.container)\n    }));\n});\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, named, postConstruct } from '@theia/core/shared/inversify';\nimport { Position, DocumentUri } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { CancellationToken } from '@theia/core';\nimport URI from '@theia/core/lib/common/uri';\nimport { ContributionProvider, Disposable, Emitter, Event } from '@theia/core/lib/common';\nimport { CallHierarchyItem, CallHierarchyIncomingCall, CallHierarchyOutgoingCall } from './callhierarchy';\nimport { LanguageSelector, score } from '@theia/editor/lib/common/language-selector';\n\nexport const CallHierarchyService = Symbol('CallHierarchyService');\n\nexport interface CallHierarchySession {\n    items: CallHierarchyItem[];\n    dispose(): void;\n}\n\nexport interface CallHierarchyService {\n\n    readonly selector: LanguageSelector;\n\n    getRootDefinition(uri: DocumentUri, position: Position, cancellationToken: CancellationToken): Promise<CallHierarchySession | undefined>\n    getCallers(definition: CallHierarchyItem, cancellationToken: CancellationToken): Promise<CallHierarchyIncomingCall[] | undefined>\n    getCallees?(definition: CallHierarchyItem, cancellationToken: CancellationToken): Promise<CallHierarchyOutgoingCall[] | undefined>\n}\n\n@injectable()\nexport class CallHierarchyServiceProvider {\n\n    @inject(ContributionProvider) @named(CallHierarchyService)\n    protected readonly contributions: ContributionProvider<CallHierarchyService>;\n\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n    get onDidChange(): Event<void> {\n        return this.onDidChangeEmitter.event;\n    }\n\n    private services: CallHierarchyService[] = [];\n\n    @postConstruct()\n    init(): void {\n        this.services = this.services.concat(this.contributions.getContributions());\n    }\n\n    get(languageId: string, uri: URI): CallHierarchyService | undefined {\n        return this.services\n            .filter(service => this.score(service, languageId, uri) > 0)\n            .sort((left, right) => this.score(right, languageId, uri) - this.score(left, languageId, uri))[0];\n    }\n\n    protected score(service: CallHierarchyService, languageId: string, uri: URI): number {\n        return score(service.selector, uri.scheme, uri.path.toString(), languageId, true);\n    }\n\n    add(service: CallHierarchyService): Disposable {\n        this.services.push(service);\n        const that = this;\n        this.onDidChangeEmitter.fire();\n        return {\n            dispose: () => {\n                that.remove(service);\n            }\n        };\n    }\n\n    private remove(service: CallHierarchyService): boolean {\n        const length = this.services.length;\n        this.services = this.services.filter(value => value !== service);\n        const serviceWasRemoved = length !== this.services.length;\n        if (serviceWasRemoved) {\n            this.onDidChangeEmitter.fire();\n        }\n        return serviceWasRemoved;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces, Container } from '@theia/core/shared/inversify';\nimport { createTreeContainer } from '@theia/core/lib/browser';\nimport { CallHierarchyTree } from './callhierarchy-tree';\nimport { CallHierarchyTreeModel } from './callhierarchy-tree-model';\nimport { CallHierarchyTreeWidget } from './callhierarchy-tree-widget';\n\nfunction createHierarchyTreeContainer(parent: interfaces.Container): Container {\n    const child = createTreeContainer(parent, {\n        tree: CallHierarchyTree,\n        model: CallHierarchyTreeModel,\n        widget: CallHierarchyTreeWidget,\n    });\n\n    return child;\n}\n\nexport function createHierarchyTreeWidget(parent: interfaces.Container): CallHierarchyTreeWidget {\n    return createHierarchyTreeContainer(parent).get<CallHierarchyTreeWidget>(CallHierarchyTreeWidget);\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { CompositeTreeNode, TreeModelImpl, TreeNode } from '@theia/core/lib/browser';\nimport { CallHierarchyTree, ItemNode } from './callhierarchy-tree';\nimport { CallHierarchyServiceProvider, CallHierarchySession } from '../callhierarchy-service';\nimport { Position } from '@theia/core/shared/vscode-languageserver-protocol';\nimport URI from '@theia/core/lib/common/uri';\nimport { CancellationTokenSource } from '@theia/core/lib/common/cancellation';\n\n@injectable()\nexport class CallHierarchyTreeModel extends TreeModelImpl {\n\n    protected _languageId: string | undefined;\n    protected currentSession?: CallHierarchySession;\n\n    @inject(CallHierarchyTree) protected override readonly tree: CallHierarchyTree;\n    @inject(CallHierarchyServiceProvider) protected readonly callHierarchyServiceProvider: CallHierarchyServiceProvider;\n\n    getTree(): CallHierarchyTree {\n        return this.tree;\n    }\n\n    get languageId(): string | undefined {\n        return this._languageId;\n    }\n\n    async initializeCallHierarchy(languageId: string | undefined, uri: string | undefined, position: Position | undefined): Promise<void> {\n        this.tree.root = undefined;\n        this.tree.callHierarchyService = undefined;\n        this._languageId = languageId;\n        if (languageId && uri && position) {\n            const callHierarchyService = this.callHierarchyServiceProvider.get(languageId, new URI(uri));\n            if (callHierarchyService) {\n                this.tree.callHierarchyService = callHierarchyService;\n                const cancellationSource = new CancellationTokenSource();\n                const rootDefinition = await callHierarchyService.getRootDefinition(uri, position, cancellationSource.token);\n                if (rootDefinition) {\n                    this.currentSession?.dispose();\n                    this.currentSession = rootDefinition;\n                    const root: CompositeTreeNode = {\n                        id: 'call-hierarchy-tree-root',\n                        parent: undefined,\n                        children: [],\n                        visible: false,\n                    };\n                    rootDefinition.items.forEach(definition => CompositeTreeNode.addChild(root, ItemNode.create(definition, root)));\n                    this.tree.root = root;\n                }\n            }\n        }\n    }\n\n    protected override doOpenNode(node: TreeNode): void {\n        // do nothing (in particular do not expand the node)\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport {\n    ContextMenuRenderer, TreeWidget, NodeProps, TreeProps, TreeNode,\n    TreeModel, DockPanel, codicon\n} from '@theia/core/lib/browser';\nimport { LabelProvider } from '@theia/core/lib/browser/label-provider';\nimport { ItemNode, CallerNode } from './callhierarchy-tree';\nimport { CallHierarchyTreeModel } from './callhierarchy-tree-model';\nimport { CALLHIERARCHY_ID, CallHierarchyItem, CallHierarchyIncomingCall, CALL_HIERARCHY_LABEL } from '../callhierarchy';\nimport URI from '@theia/core/lib/common/uri';\nimport { Location, Range, SymbolKind, DocumentUri, SymbolTag } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport { nls } from '@theia/core/lib/common/nls';\nimport * as React from '@theia/core/shared/react';\n\nexport const HIERARCHY_TREE_CLASS = 'theia-CallHierarchyTree';\nexport const DEFINITION_NODE_CLASS = 'theia-CallHierarchyTreeNode';\nexport const DEFINITION_ICON_CLASS = 'theia-CallHierarchyTreeNodeIcon';\n\n@injectable()\nexport class CallHierarchyTreeWidget extends TreeWidget {\n\n    constructor(\n        @inject(TreeProps) override readonly props: TreeProps,\n        @inject(CallHierarchyTreeModel) override readonly model: CallHierarchyTreeModel,\n        @inject(ContextMenuRenderer) contextMenuRenderer: ContextMenuRenderer,\n        @inject(LabelProvider) protected override readonly labelProvider: LabelProvider,\n        @inject(EditorManager) readonly editorManager: EditorManager\n    ) {\n        super(props, model, contextMenuRenderer);\n\n        this.id = CALLHIERARCHY_ID;\n        this.title.label = CALL_HIERARCHY_LABEL;\n        this.title.caption = CALL_HIERARCHY_LABEL;\n        this.title.iconClass = codicon('references');\n        this.title.closable = true;\n        this.addClass(HIERARCHY_TREE_CLASS);\n        this.toDispose.push(this.model.onSelectionChanged(selection => {\n            const node = selection[0];\n            if (node) {\n                this.openEditor(node, true);\n            }\n        }));\n        this.toDispose.push(this.model.onOpenNode((node: TreeNode) => {\n            this.openEditor(node, false);\n        }));\n        this.toDispose.push(\n            this.labelProvider.onDidChange(() => this.update())\n        );\n    }\n\n    initializeModel(selection: Location | undefined, languageId: string | undefined): void {\n        this.model.initializeCallHierarchy(languageId, selection ? selection.uri : undefined, selection ? selection.range.start : undefined);\n    }\n\n    protected override createNodeClassNames(node: TreeNode, props: NodeProps): string[] {\n        const classNames = super.createNodeClassNames(node, props);\n        if (ItemNode.is(node)) {\n            classNames.push(DEFINITION_NODE_CLASS);\n        }\n        return classNames;\n    }\n\n    protected override createNodeAttributes(node: TreeNode, props: NodeProps): React.Attributes & React.HTMLAttributes<HTMLElement> {\n        const elementAttrs = super.createNodeAttributes(node, props);\n        return {\n            ...elementAttrs,\n        };\n    }\n\n    protected override renderTree(model: TreeModel): React.ReactNode {\n        return super.renderTree(model)\n            || <div className='theia-widget-noInfo'>{nls.localize('theia/callhierarchy/noCallers', 'No callers have been detected.')}</div>;\n    }\n\n    protected override renderCaption(node: TreeNode, props: NodeProps): React.ReactNode {\n        if (ItemNode.is(node)) {\n            return this.decorateDefinitionCaption(node.definition);\n        }\n        if (CallerNode.is(node)) {\n            return this.decorateCallerCaption(node.caller);\n        }\n        return 'caption';\n    }\n\n    protected decorateDefinitionCaption(definition: CallHierarchyItem): React.ReactNode {\n        const symbol = definition.name;\n        const location = this.labelProvider.getName(URI.fromComponents(definition.uri));\n        const container = location;\n        const isDeprecated = definition.tags?.includes(SymbolTag.Deprecated);\n        const classNames = ['definitionNode'];\n        if (isDeprecated) {\n            classNames.push('deprecatedDefinition');\n        }\n\n        return <div className={classNames.join(' ')}>\n            <div className={'symbol-icon-center codicon codicon-symbol-' + this.toIconClass(definition.kind)}></div>\n            <div className='definitionNode-content'>\n                <span className='symbol'>\n                    {symbol}\n                </span>\n                <span className='container'>\n                    {container}\n                </span>\n            </div>\n        </div>;\n    }\n\n    protected decorateCallerCaption(caller: CallHierarchyIncomingCall): React.ReactNode {\n        const definition = caller.from;\n        const symbol = definition.name;\n        const referenceCount = caller.fromRanges.length;\n        const location = this.labelProvider.getName(URI.fromComponents(definition.uri));\n        const container = location;\n        const isDeprecated = definition.tags?.includes(SymbolTag.Deprecated);\n        const classNames = ['definitionNode'];\n        if (isDeprecated) {\n            classNames.push('deprecatedDefinition');\n        }\n\n        return <div className={classNames.join(' ')}>\n            <div className={'symbol-icon-center codicon codicon-symbol-' + this.toIconClass(definition.kind)}></div>\n            <div className='definitionNode-content'>\n                <span className='symbol'>\n                    {symbol}\n                </span>\n                <span className='referenceCount'>\n                    {(referenceCount > 1) ? `[${referenceCount}]` : ''}\n                </span>\n                <span className='container'>\n                    {container}\n                </span>\n            </div>\n        </div>;\n    }\n\n    // tslint:disable-next-line:typedef\n    protected toIconClass(symbolKind: number) {\n        switch (symbolKind) {\n            case SymbolKind.File: return 'file';\n            case SymbolKind.Module: return 'module';\n            case SymbolKind.Namespace: return 'namespace';\n            case SymbolKind.Package: return 'package';\n            case SymbolKind.Class: return 'class';\n            case SymbolKind.Method: return 'method';\n            case SymbolKind.Property: return 'property';\n            case SymbolKind.Field: return 'field';\n            case SymbolKind.Constructor: return 'constructor';\n            case SymbolKind.Enum: return 'enum';\n            case SymbolKind.Interface: return 'interface';\n            case SymbolKind.Function: return 'function';\n            case SymbolKind.Variable: return 'variable';\n            case SymbolKind.Constant: return 'constant';\n            case SymbolKind.String: return 'string';\n            case SymbolKind.Number: return 'number';\n            case SymbolKind.Boolean: return 'boolean';\n            case SymbolKind.Array: return 'array';\n            default: return 'unknown';\n        }\n    }\n\n    private openEditor(node: TreeNode, keepFocus: boolean): void {\n\n        if (ItemNode.is(node)) {\n            const def = node.definition;\n            this.doOpenEditor(URI.fromComponents(def.uri).toString(), def.selectionRange ? def.selectionRange : def.range, keepFocus);\n        }\n        if (CallerNode.is(node)) {\n            this.doOpenEditor(URI.fromComponents(node.caller.from.uri).toString(), node.caller.fromRanges[0], keepFocus);\n        }\n    }\n\n    private doOpenEditor(uri: DocumentUri, range: Range, keepFocus: boolean): void {\n        this.editorManager.open(\n            new URI(uri), {\n            mode: keepFocus ? 'reveal' : 'activate',\n            selection: range\n        }\n        ).then(editorWidget => {\n            if (editorWidget.parent instanceof DockPanel) {\n                editorWidget.parent.selectWidget(editorWidget);\n            }\n        });\n    }\n\n    override storeState(): object {\n        const callHierarchyService = this.model.getTree().callHierarchyService;\n        if (this.model.root && callHierarchyService) {\n            return {\n                root: this.deflateForStorage(this.model.root),\n                languageId: this.model.languageId,\n            };\n        } else {\n            return {};\n        }\n    }\n\n    override restoreState(oldState: object): void {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if ((oldState as any).root && (oldState as any).languageId) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const root = this.inflateFromStorage((oldState as any).root) as ItemNode;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.model.initializeCallHierarchy((oldState as any).languageId, URI.fromComponents(root.definition.uri).toString(), root.definition.range.start);\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { TreeNode, CompositeTreeNode, SelectableTreeNode, ExpandableTreeNode, TreeImpl } from '@theia/core/lib/browser';\nimport { CallHierarchyItem, CallHierarchyIncomingCall } from '../callhierarchy';\nimport { CallHierarchyService } from '../callhierarchy-service';\nimport { Md5 } from 'ts-md5';\nimport { CancellationTokenSource } from '@theia/core/lib/common/cancellation';\n\n@injectable()\nexport class CallHierarchyTree extends TreeImpl {\n\n    protected _callHierarchyService: CallHierarchyService | undefined;\n\n    set callHierarchyService(callHierarchyService: CallHierarchyService | undefined) {\n        this._callHierarchyService = callHierarchyService;\n    }\n\n    get callHierarchyService(): CallHierarchyService | undefined {\n        return this._callHierarchyService;\n    }\n\n    override async resolveChildren(parent: CompositeTreeNode): Promise<TreeNode[]> {\n        if (!this.callHierarchyService) {\n            return Promise.resolve([]);\n        }\n        if (parent.children.length > 0) {\n            return Promise.resolve([...parent.children]);\n        }\n        let definition: CallHierarchyItem | undefined;\n        if (ItemNode.is(parent)) {\n            definition = parent.definition;\n        } else if (CallerNode.is(parent)) {\n            definition = parent.caller.from;\n        }\n        if (definition) {\n            const cancellationSource = new CancellationTokenSource();\n            const callers = await this.callHierarchyService.getCallers(definition, cancellationSource.token);\n            if (!callers) {\n                return Promise.resolve([]);\n            }\n            return this.toNodes(callers, parent);\n        }\n        return Promise.resolve([]);\n    }\n\n    protected toNodes(callers: CallHierarchyIncomingCall[], parent: CompositeTreeNode): TreeNode[] {\n        return callers.map(caller => this.toNode(caller, parent));\n    }\n\n    protected toNode(caller: CallHierarchyIncomingCall, parent: CompositeTreeNode | undefined): TreeNode {\n        return CallerNode.create(caller, parent as TreeNode);\n    }\n}\n\nexport interface ItemNode extends SelectableTreeNode, ExpandableTreeNode {\n    definition: CallHierarchyItem;\n}\n\nexport namespace ItemNode {\n    export function is(node: TreeNode | undefined): node is ItemNode {\n        return !!node && 'definition' in node;\n    }\n\n    export function create(definition: CallHierarchyItem, parent: TreeNode | undefined): ItemNode {\n        const name = definition.name;\n        const id = createId(definition, parent);\n        return <ItemNode>{\n            id, definition, name, parent,\n            visible: true,\n            children: [],\n            expanded: false,\n            selected: false,\n        };\n    }\n}\n\nexport interface CallerNode extends SelectableTreeNode, ExpandableTreeNode {\n    caller: CallHierarchyIncomingCall;\n}\n\nexport namespace CallerNode {\n    export function is(node: TreeNode | undefined): node is CallerNode {\n        return !!node && 'caller' in node;\n    }\n\n    export function create(caller: CallHierarchyIncomingCall, parent: TreeNode | undefined): CallerNode {\n        const callerDefinition = caller.from;\n        const name = callerDefinition.name;\n        const id = createId(callerDefinition, parent);\n        return <CallerNode>{\n            id, caller, name, parent,\n            visible: true,\n            children: [],\n            expanded: false,\n            selected: false,\n        };\n    }\n}\n\nfunction createId(definition: CallHierarchyItem, parent: TreeNode | undefined): string {\n    const idPrefix = (parent) ? parent.id + '/' : '';\n    const id = idPrefix + Md5.hashStr(JSON.stringify(definition));\n    return id;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './callhierarchy-tree';\nexport * from './callhierarchy-tree-model';\nexport * from './callhierarchy-tree-widget';\nexport * from './callhierarchy-tree-container';\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { nls } from '@theia/core';\nimport { UriComponents } from '@theia/core/lib/common/uri';\nimport { Range, SymbolKind, SymbolTag } from '@theia/core/shared/vscode-languageserver-protocol';\n\nexport const CALLHIERARCHY_ID = 'callhierarchy';\nexport const CALL_HIERARCHY_TOGGLE_COMMAND_ID = 'callhierarchy:toggle';\nexport const CALL_HIERARCHY_LABEL = nls.localizeByDefault('Call Hierarchy');\n\nexport interface CallHierarchyItem {\n    _sessionId?: string;\n    _itemId?: string;\n\n    kind: SymbolKind;\n    name: string;\n    detail?: string;\n    uri: UriComponents;\n    range: Range;\n    selectionRange: Range;\n    tags?: readonly SymbolTag[];\n    data?: unknown;\n}\n\nexport interface CallHierarchyIncomingCall {\n    from: CallHierarchyItem;\n    fromRanges: Range[];\n}\n\nexport interface CallHierarchyOutgoingCall {\n    to: CallHierarchyItem;\n    fromRanges: Range[];\n}\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}