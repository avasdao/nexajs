{"version":3,"file":"vendors-node_modules_theia_core_lib_browser_menu_browser-menu-module_js.js","mappings":"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","sources":["webpack:///./node_modules/@theia/core/src/browser/menu/browser-context-menu-renderer.ts?","webpack:///./node_modules/@theia/core/src/browser/menu/browser-menu-module.ts?","webpack:///./node_modules/@theia/core/src/browser/menu/browser-menu-plugin.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from 'inversify';\nimport { Menu } from '../widgets';\nimport { ContextMenuAccess, ContextMenuRenderer, coordinateFromAnchor, RenderContextMenuOptions } from '../context-menu-renderer';\nimport { BrowserMainMenuFactory } from './browser-menu-plugin';\n\nexport class BrowserContextMenuAccess extends ContextMenuAccess {\n    constructor(\n        public readonly menu: Menu\n    ) {\n        super(menu);\n    }\n}\n\n@injectable()\nexport class BrowserContextMenuRenderer extends ContextMenuRenderer {\n\n    constructor(@inject(BrowserMainMenuFactory) private menuFactory: BrowserMainMenuFactory) {\n        super();\n    }\n\n    protected doRender({ menuPath, anchor, args, onHide, context, contextKeyService, skipSingleRootNode }: RenderContextMenuOptions): ContextMenuAccess {\n        const contextMenu = this.menuFactory.createContextMenu(menuPath, args, context, contextKeyService, skipSingleRootNode);\n        const { x, y } = coordinateFromAnchor(anchor);\n        if (onHide) {\n            contextMenu.aboutToClose.connect(() => onHide!());\n        }\n        contextMenu.open(x, y);\n        return new BrowserContextMenuAccess(contextMenu);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from 'inversify';\nimport { FrontendApplicationContribution } from '../frontend-application-contribution';\nimport { ContextMenuRenderer } from '../context-menu-renderer';\nimport { BrowserMenuBarContribution, BrowserMainMenuFactory } from './browser-menu-plugin';\nimport { BrowserContextMenuRenderer } from './browser-context-menu-renderer';\n\nexport default new ContainerModule(bind => {\n    bind(BrowserMainMenuFactory).toSelf().inSingletonScope();\n    bind(ContextMenuRenderer).to(BrowserContextMenuRenderer).inSingletonScope();\n    bind(BrowserMenuBarContribution).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).toService(BrowserMenuBarContribution);\n});\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from 'inversify';\nimport { MenuBar, Menu as MenuWidget, Widget } from '@phosphor/widgets';\nimport { CommandRegistry as PhosphorCommandRegistry } from '@phosphor/commands';\nimport {\n    CommandRegistry, environment, DisposableCollection, Disposable,\n    MenuModelRegistry, MAIN_MENU_BAR, MenuPath, MenuNode, MenuCommandExecutor, CompoundMenuNode, CompoundMenuNodeRole, CommandMenuNode\n} from '../../common';\nimport { KeybindingRegistry } from '../keybinding';\nimport { FrontendApplication } from '../frontend-application';\nimport { FrontendApplicationContribution } from '../frontend-application-contribution';\nimport { ContextKeyService, ContextMatcher } from '../context-key-service';\nimport { ContextMenuContext } from './context-menu-context';\nimport { waitForRevealed } from '../widgets';\nimport { ApplicationShell } from '../shell';\nimport { CorePreferences } from '../core-preferences';\nimport { PreferenceService } from '../preferences/preference-service';\n\nexport abstract class MenuBarWidget extends MenuBar {\n    abstract activateMenu(label: string, ...labels: string[]): Promise<MenuWidget>;\n    abstract triggerMenuItem(label: string, ...labels: string[]): Promise<MenuWidget.IItem>;\n}\n\nexport interface BrowserMenuOptions extends MenuWidget.IOptions {\n    commands: MenuCommandRegistry,\n    context?: HTMLElement,\n    contextKeyService?: ContextMatcher;\n    rootMenuPath: MenuPath\n};\n\n@injectable()\nexport class BrowserMainMenuFactory implements MenuWidgetFactory {\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    @inject(ContextMenuContext)\n    protected readonly context: ContextMenuContext;\n\n    @inject(CommandRegistry)\n    protected readonly commandRegistry: CommandRegistry;\n\n    @inject(MenuCommandExecutor)\n    protected readonly menuCommandExecutor: MenuCommandExecutor;\n\n    @inject(CorePreferences)\n    protected readonly corePreferences: CorePreferences;\n\n    @inject(KeybindingRegistry)\n    protected readonly keybindingRegistry: KeybindingRegistry;\n\n    @inject(MenuModelRegistry)\n    protected readonly menuProvider: MenuModelRegistry;\n\n    createMenuBar(): MenuBarWidget {\n        const menuBar = new DynamicMenuBarWidget();\n        menuBar.id = 'theia:menubar';\n        this.corePreferences.ready.then(() => {\n            this.showMenuBar(menuBar, this.corePreferences.get('window.menuBarVisibility', 'classic'));\n        });\n        const preferenceListener = this.corePreferences.onPreferenceChanged(preference => {\n            if (preference.preferenceName === 'window.menuBarVisibility') {\n                this.showMenuBar(menuBar, preference.newValue);\n            }\n        });\n        const keybindingListener = this.keybindingRegistry.onKeybindingsChanged(() => {\n            const preference = this.corePreferences['window.menuBarVisibility'];\n            this.showMenuBar(menuBar, preference);\n        });\n        menuBar.disposed.connect(() => {\n            preferenceListener.dispose();\n            keybindingListener.dispose();\n        });\n        return menuBar;\n    }\n\n    protected showMenuBar(menuBar: DynamicMenuBarWidget, preference: string | undefined): void {\n        if (preference && ['classic', 'visible'].includes(preference)) {\n            menuBar.clearMenus();\n            this.fillMenuBar(menuBar);\n        } else {\n            menuBar.clearMenus();\n        }\n    }\n\n    protected fillMenuBar(menuBar: MenuBarWidget): void {\n        const menuModel = this.menuProvider.getMenu(MAIN_MENU_BAR);\n        const menuCommandRegistry = this.createMenuCommandRegistry(menuModel);\n        for (const menu of menuModel.children) {\n            if (CompoundMenuNode.is(menu)) {\n                const menuWidget = this.createMenuWidget(menu, { commands: menuCommandRegistry, rootMenuPath: MAIN_MENU_BAR });\n                menuBar.addMenu(menuWidget);\n            }\n        }\n    }\n\n    createContextMenu(path: MenuPath, args?: unknown[], context?: HTMLElement, contextKeyService?: ContextMatcher, skipSingleRootNode?: boolean): MenuWidget {\n        const menuModel = skipSingleRootNode ? this.menuProvider.removeSingleRootNode(this.menuProvider.getMenu(path), path) : this.menuProvider.getMenu(path);\n        const menuCommandRegistry = this.createMenuCommandRegistry(menuModel, args).snapshot(path);\n        const contextMenu = this.createMenuWidget(menuModel, { commands: menuCommandRegistry, context, rootMenuPath: path, contextKeyService });\n        return contextMenu;\n    }\n\n    createMenuWidget(menu: CompoundMenuNode, options: BrowserMenuOptions): DynamicMenuWidget {\n        return new DynamicMenuWidget(menu, options, this.services);\n    }\n\n    protected createMenuCommandRegistry(menu: CompoundMenuNode, args: unknown[] = []): MenuCommandRegistry {\n        const menuCommandRegistry = new MenuCommandRegistry(this.services);\n        this.registerMenu(menuCommandRegistry, menu, args);\n        return menuCommandRegistry;\n    }\n\n    protected registerMenu(menuCommandRegistry: MenuCommandRegistry, menu: MenuNode, args: unknown[]): void {\n        if (CompoundMenuNode.is(menu)) {\n            menu.children.forEach(child => this.registerMenu(menuCommandRegistry, child, args));\n        } else if (CommandMenuNode.is(menu)) {\n            menuCommandRegistry.registerActionMenu(menu, args);\n            if (CommandMenuNode.hasAltHandler(menu)) {\n                menuCommandRegistry.registerActionMenu(menu.altNode, args);\n            }\n\n        }\n    }\n\n    protected get services(): MenuServices {\n        return {\n            context: this.context,\n            contextKeyService: this.contextKeyService,\n            commandRegistry: this.commandRegistry,\n            keybindingRegistry: this.keybindingRegistry,\n            menuWidgetFactory: this,\n            commandExecutor: this.menuCommandExecutor,\n        };\n    }\n\n}\n\nexport class DynamicMenuBarWidget extends MenuBarWidget {\n\n    /**\n     * We want to restore the focus after the menu closes.\n     */\n    protected previousFocusedElement: HTMLElement | undefined;\n\n    constructor() {\n        super();\n        // HACK we need to hook in on private method _openChildMenu. Don't do this at home!\n        DynamicMenuBarWidget.prototype['_openChildMenu'] = () => {\n            if (this.activeMenu instanceof DynamicMenuWidget) {\n                // `childMenu` is `null` if we open the menu. For example, menu is not shown and you click on `Edit`.\n                // However, the `childMenu` is set, when `Edit` was already open and you move the mouse over `Select`.\n                // We want to save the focus object for the former case only.\n                if (!this.childMenu) {\n                    const { activeElement } = document;\n                    if (activeElement instanceof HTMLElement) {\n                        this.previousFocusedElement = activeElement;\n                    }\n                }\n                this.activeMenu.aboutToShow({ previousFocusedElement: this.previousFocusedElement });\n            }\n            super['_openChildMenu']();\n        };\n    }\n\n    async activateMenu(label: string, ...labels: string[]): Promise<MenuWidget> {\n        const menu = this.menus.find(m => m.title.label === label);\n        if (!menu) {\n            throw new Error(`could not find '${label}' menu`);\n        }\n        this.activeMenu = menu;\n        this.openActiveMenu();\n        await waitForRevealed(menu);\n\n        const menuPath = [label];\n\n        let current = menu;\n        for (const itemLabel of labels) {\n            const item = current.items.find(i => i.label === itemLabel);\n            if (!item || !item.submenu) {\n                throw new Error(`could not find '${label}' submenu in ${menuPath.map(l => \"'\" + l + \"'\").join(' -> ')} menu`);\n            }\n            current.activeItem = item;\n            current.triggerActiveItem();\n            current = item.submenu;\n            await waitForRevealed(current);\n        }\n        return current;\n    }\n\n    async triggerMenuItem(label: string, ...labels: string[]): Promise<MenuWidget.IItem> {\n        if (!labels.length) {\n            throw new Error('menu item label is not specified');\n        }\n        const menuPath = [label, ...labels.slice(0, labels.length - 1)];\n        const menu = await this.activateMenu(menuPath[0], ...menuPath.slice(1));\n        const item = menu.items.find(i => i.label === labels[labels.length - 1]);\n        if (!item) {\n            throw new Error(`could not find '${label}' item in ${menuPath.map(l => \"'\" + l + \"'\").join(' -> ')} menu`);\n        }\n        menu.activeItem = item;\n        menu.triggerActiveItem();\n        return item;\n    }\n\n}\n\nexport class MenuServices {\n    readonly commandRegistry: CommandRegistry;\n    readonly keybindingRegistry: KeybindingRegistry;\n    readonly contextKeyService: ContextKeyService;\n    readonly context: ContextMenuContext;\n    readonly menuWidgetFactory: MenuWidgetFactory;\n    readonly commandExecutor: MenuCommandExecutor;\n}\n\nexport interface MenuWidgetFactory {\n    createMenuWidget(menu: MenuNode & Required<Pick<MenuNode, 'children'>>, options: BrowserMenuOptions): MenuWidget;\n}\n\n/**\n * A menu widget that would recompute its items on update.\n */\nexport class DynamicMenuWidget extends MenuWidget {\n\n    /**\n     * We want to restore the focus after the menu closes.\n     */\n    protected previousFocusedElement: HTMLElement | undefined;\n\n    constructor(\n        protected menu: CompoundMenuNode,\n        protected options: BrowserMenuOptions,\n        protected services: MenuServices\n    ) {\n        super(options);\n        if (menu.label) {\n            this.title.label = menu.label;\n        }\n        if (menu.icon) {\n            this.title.iconClass = menu.icon;\n        }\n        this.updateSubMenus(this, this.menu, this.options.commands);\n    }\n\n    public aboutToShow({ previousFocusedElement }: { previousFocusedElement: HTMLElement | undefined }): void {\n        this.preserveFocusedElement(previousFocusedElement);\n        this.clearItems();\n        this.runWithPreservedFocusContext(() => {\n            this.options.commands.snapshot(this.options.rootMenuPath);\n            this.updateSubMenus(this, this.menu, this.options.commands);\n        });\n    }\n\n    public override open(x: number, y: number, options?: MenuWidget.IOpenOptions): void {\n        const cb = () => {\n            this.restoreFocusedElement();\n            this.aboutToClose.disconnect(cb);\n        };\n        this.aboutToClose.connect(cb);\n        this.preserveFocusedElement();\n        super.open(x, y, options);\n    }\n\n    protected updateSubMenus(parent: MenuWidget, menu: CompoundMenuNode, commands: MenuCommandRegistry): void {\n        const items = this.buildSubMenus([], menu, commands);\n        while (items[items.length - 1]?.type === 'separator') {\n            items.pop();\n        }\n        for (const item of items) {\n            parent.addItem(item);\n        }\n    }\n\n    protected buildSubMenus(parentItems: MenuWidget.IItemOptions[], menu: MenuNode, commands: MenuCommandRegistry): MenuWidget.IItemOptions[] {\n        if (CompoundMenuNode.is(menu)\n            && menu.children.length\n            && this.undefinedOrMatch(this.options.contextKeyService ?? this.services.contextKeyService, menu.when, this.options.context)) {\n            const role = menu === this.menu ? CompoundMenuNodeRole.Group : CompoundMenuNode.getRole(menu);\n            if (role === CompoundMenuNodeRole.Submenu) {\n                const submenu = this.services.menuWidgetFactory.createMenuWidget(menu, this.options);\n                if (submenu.items.length > 0) {\n                    parentItems.push({ type: 'submenu', submenu });\n                }\n            } else if (role === CompoundMenuNodeRole.Group && menu.id !== 'inline') {\n                const children = CompoundMenuNode.getFlatChildren(menu.children);\n                const myItems: MenuWidget.IItemOptions[] = [];\n                children.forEach(child => this.buildSubMenus(myItems, child, commands));\n                if (myItems.length) {\n                    if (parentItems.length && parentItems[parentItems.length - 1].type !== 'separator') {\n                        parentItems.push({ type: 'separator' });\n                    }\n                    parentItems.push(...myItems);\n                    parentItems.push({ type: 'separator' });\n                }\n            }\n        } else if (menu.command) {\n            const node = menu.altNode && this.services.context.altPressed ? menu.altNode : (menu as MenuNode & CommandMenuNode);\n            if (commands.isVisible(node.command) && this.undefinedOrMatch(this.options.contextKeyService ?? this.services.contextKeyService, node.when, this.options.context)) {\n                parentItems.push({\n                    command: node.command,\n                    type: 'command'\n                });\n            }\n        }\n        return parentItems;\n    }\n\n    protected undefinedOrMatch(contextKeyService: ContextMatcher, expression?: string, context?: HTMLElement): boolean {\n        if (expression) { return contextKeyService.match(expression, context); }\n        return true;\n    }\n\n    protected preserveFocusedElement(previousFocusedElement: Element | null = document.activeElement): boolean {\n        if (!this.previousFocusedElement && previousFocusedElement instanceof HTMLElement) {\n            this.previousFocusedElement = previousFocusedElement;\n            return true;\n        }\n        return false;\n    }\n\n    protected restoreFocusedElement(): boolean {\n        if (this.previousFocusedElement) {\n            this.previousFocusedElement.focus({ preventScroll: true });\n            this.previousFocusedElement = undefined;\n            return true;\n        }\n        return false;\n    }\n\n    protected runWithPreservedFocusContext(what: () => void): void {\n        let focusToRestore: HTMLElement | undefined = undefined;\n        const { activeElement } = document;\n        if (this.previousFocusedElement && activeElement instanceof HTMLElement && this.previousFocusedElement !== activeElement) {\n            focusToRestore = activeElement;\n            this.previousFocusedElement.focus({ preventScroll: true });\n        }\n        try {\n            what();\n        } finally {\n            if (focusToRestore) {\n                focusToRestore.focus({ preventScroll: true });\n            }\n        }\n    }\n\n}\n\n@injectable()\nexport class BrowserMenuBarContribution implements FrontendApplicationContribution {\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    @inject(PreferenceService)\n    protected readonly preferenceService: PreferenceService;\n\n    constructor(\n        @inject(BrowserMainMenuFactory) protected readonly factory: BrowserMainMenuFactory\n    ) { }\n\n    onStart(app: FrontendApplication): void {\n        this.appendMenu(app.shell);\n    }\n\n    get menuBar(): MenuBarWidget | undefined {\n        return this.shell.topPanel.widgets.find(w => w instanceof MenuBarWidget) as MenuBarWidget | undefined;\n    }\n\n    protected appendMenu(shell: ApplicationShell): void {\n        const logo = this.createLogo();\n        shell.addWidget(logo, { area: 'top' });\n        const menu = this.factory.createMenuBar();\n        shell.addWidget(menu, { area: 'top' });\n        // Hiding the menu is only necessary in electron\n        // In the browser we hide the whole top panel\n        if (environment.electron.is()) {\n            this.preferenceService.ready.then(() => {\n                menu.setHidden(['compact', 'hidden'].includes(this.preferenceService.get('window.menuBarVisibility', '')));\n            });\n            this.preferenceService.onPreferenceChanged(change => {\n                if (change.preferenceName === 'window.menuBarVisibility') {\n                    menu.setHidden(['compact', 'hidden'].includes(change.newValue));\n                }\n            });\n        }\n    }\n\n    protected createLogo(): Widget {\n        const logo = new Widget();\n        logo.id = 'theia:icon';\n        logo.addClass('theia-icon');\n        return logo;\n    }\n}\n\n/**\n * Stores Theia-specific action menu nodes instead of PhosphorJS commands with their handlers.\n */\nexport class MenuCommandRegistry extends PhosphorCommandRegistry {\n\n    protected actions = new Map<string, [MenuNode & CommandMenuNode, unknown[]]>();\n    protected toDispose = new DisposableCollection();\n\n    constructor(protected services: MenuServices) {\n        super();\n    }\n\n    registerActionMenu(menu: MenuNode & CommandMenuNode, args: unknown[]): void {\n        const { commandRegistry } = this.services;\n        const command = commandRegistry.getCommand(menu.command);\n        if (!command) {\n            return;\n        }\n        const { id } = command;\n        if (this.actions.has(id)) {\n            return;\n        }\n        this.actions.set(id, [menu, args]);\n    }\n\n    snapshot(menuPath: MenuPath): this {\n        this.toDispose.dispose();\n        for (const [menu, args] of this.actions.values()) {\n            this.toDispose.push(this.registerCommand(menu, args, menuPath));\n        }\n        return this;\n    }\n\n    protected registerCommand(menu: MenuNode & CommandMenuNode, args: unknown[], menuPath: MenuPath): Disposable {\n        const { commandRegistry, keybindingRegistry, commandExecutor } = this.services;\n        const command = commandRegistry.getCommand(menu.command);\n        if (!command) {\n            return Disposable.NULL;\n        }\n        const { id } = command;\n        if (this.hasCommand(id)) {\n            // several menu items can be registered for the same command in different contexts\n            return Disposable.NULL;\n        }\n\n        // We freeze the `isEnabled`, `isVisible`, and `isToggled` states so they won't change.\n        const enabled = commandExecutor.isEnabled(menuPath, id, ...args);\n        const visible = commandExecutor.isVisible(menuPath, id, ...args);\n        const toggled = commandExecutor.isToggled(menuPath, id, ...args);\n        const unregisterCommand = this.addCommand(id, {\n            execute: () => commandExecutor.executeCommand(menuPath, id, ...args),\n            label: menu.label,\n            icon: menu.icon,\n            isEnabled: () => enabled,\n            isVisible: () => visible,\n            isToggled: () => toggled\n        });\n\n        const bindings = keybindingRegistry.getKeybindingsForCommand(id);\n        // Only consider the first keybinding.\n        if (bindings.length) {\n            const binding = bindings[0];\n            const keys = keybindingRegistry.acceleratorFor(binding, ' ', true);\n            this.addKeyBinding({\n                command: id,\n                keys,\n                selector: '.p-Widget' // We have the PhosphorJS dependency anyway.\n            });\n        }\n        return Disposable.create(() => unregisterCommand.dispose());\n    }\n\n}\n"],"names":[],"sourceRoot":""}