{"version":3,"file":"vendors-node_modules_theia_navigator_lib_browser_open-editors-widget_navigator-open-editors-d-12ac23.js","mappings":"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","sources":["webpack:///./node_modules/@theia/core/shared/lodash.debounce/index.js?","webpack:///./node_modules/@theia/navigator/src/browser/open-editors-widget/navigator-open-editors-decorator-service.ts?","webpack:///./node_modules/@theia/navigator/src/browser/open-editors-widget/navigator-open-editors-tree-model.ts?","webpack:///./node_modules/@theia/workspace/src/browser/index.ts?"],"sourcesContent":["module.exports = require('lodash.debounce');\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, named } from '@theia/core/shared/inversify';\nimport { TreeDecorator, AbstractTreeDecoratorService } from '@theia/core/lib/browser/tree/tree-decorator';\nimport { ContributionProvider } from '@theia/core/lib/common';\n\nexport const OpenEditorsTreeDecorator = Symbol('OpenEditorsTreeDecorator');\n\n@injectable()\nexport class OpenEditorsTreeDecoratorService extends AbstractTreeDecoratorService {\n    constructor(@inject(ContributionProvider) @named(OpenEditorsTreeDecorator) protected readonly contributions: ContributionProvider<TreeDecorator>) {\n        super(contributions.getContributions());\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { FileNode, FileStatNode, FileTreeModel } from '@theia/filesystem/lib/browser';\nimport {\n    ApplicationShell,\n    CompositeTreeNode,\n    open,\n    NavigatableWidget,\n    OpenerService,\n    SelectableTreeNode,\n    TreeNode,\n    Widget,\n    ExpandableTreeNode,\n    TabBar\n} from '@theia/core/lib/browser';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport debounce = require('@theia/core/shared/lodash.debounce');\nimport { DisposableCollection, nls } from '@theia/core/lib/common';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\n\nexport interface OpenEditorNode extends FileStatNode {\n    widget: Widget;\n};\n\nexport namespace OpenEditorNode {\n    export function is(node: unknown): node is OpenEditorNode {\n        return FileStatNode.is(node) && 'widget' in node;\n    }\n}\n\n@injectable()\nexport class OpenEditorsModel extends FileTreeModel {\n    static GROUP_NODE_ID_PREFIX = 'group-node';\n    static AREA_NODE_ID_PREFIX = 'area-node';\n\n    @inject(ApplicationShell) protected readonly applicationShell: ApplicationShell;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(OpenerService) protected readonly openerService: OpenerService;\n\n    protected toDisposeOnPreviewWidgetReplaced = new DisposableCollection();\n    // Returns the collection of editors belonging to a tabbar group in the main area\n    protected _editorWidgetsByGroup = new Map<number, { widgets: NavigatableWidget[], tabbar: TabBar<Widget> }>();\n\n    // Returns the collection of editors belonging to an area grouping (main, left, right bottom)\n    protected _editorWidgetsByArea = new Map<ApplicationShell.Area, NavigatableWidget[]>();\n\n    // Last collection of editors before a layout modification, used to detect changes in widget ordering\n    protected _lastEditorWidgetsByArea = new Map<ApplicationShell.Area, NavigatableWidget[]>();\n\n    protected cachedFileStats = new Map<string, FileStat>();\n\n    get editorWidgets(): NavigatableWidget[] {\n        const editorWidgets: NavigatableWidget[] = [];\n        this._editorWidgetsByArea.forEach(widgets => editorWidgets.push(...widgets));\n        return editorWidgets;\n    }\n\n    getTabBarForGroup(id: number): TabBar<Widget> | undefined {\n        return this._editorWidgetsByGroup.get(id)?.tabbar;\n    }\n\n    @postConstruct()\n    protected override init(): void {\n        super.init();\n        this.setupHandlers();\n        this.initializeRoot();\n    }\n\n    protected setupHandlers(): void {\n        this.toDispose.push(this.applicationShell.onDidChangeCurrentWidget(({ newValue }) => {\n            const nodeToSelect = this.tree.getNode(newValue?.id);\n            if (nodeToSelect && SelectableTreeNode.is(nodeToSelect)) {\n                this.selectNode(nodeToSelect);\n            }\n        }));\n        this.toDispose.push(this.applicationShell.onDidAddWidget(async () => {\n            await this.updateOpenWidgets();\n            const existingWidgetIds = new Set(this.editorWidgets.map(widget => widget.id));\n            this.cachedFileStats.forEach((_fileStat, id) => {\n                if (!existingWidgetIds.has(id)) {\n                    this.cachedFileStats.delete(id);\n                }\n            });\n        }));\n        this.toDispose.push(this.applicationShell.onDidRemoveWidget(() => this.updateOpenWidgets()));\n        // Check for tabs rearranged in main and bottom\n        this.applicationShell.mainPanel.layoutModified.connect(() => this.doUpdateOpenWidgets('main'));\n        this.applicationShell.bottomPanel.layoutModified.connect(() => this.doUpdateOpenWidgets('bottom'));\n    }\n\n    protected async initializeRoot(): Promise<void> {\n        await this.updateOpenWidgets();\n        this.fireChanged();\n    }\n\n    protected updateOpenWidgets = debounce(this.doUpdateOpenWidgets, 250);\n\n    protected async doUpdateOpenWidgets(layoutModifiedArea?: ApplicationShell.Area): Promise<void> {\n        this._lastEditorWidgetsByArea = this._editorWidgetsByArea;\n        this._editorWidgetsByArea = new Map<ApplicationShell.Area, NavigatableWidget[]>();\n        let doRebuild = true;\n        const areas: ApplicationShell.Area[] = ['main', 'bottom', 'left', 'right', 'top', 'secondaryWindow'];\n        areas.forEach(area => {\n            const editorWidgetsForArea = this.applicationShell.getWidgets(area).filter((widget): widget is NavigatableWidget => NavigatableWidget.is(widget));\n            if (editorWidgetsForArea.length) {\n                this._editorWidgetsByArea.set(area, editorWidgetsForArea);\n            }\n        });\n        if (this._lastEditorWidgetsByArea.size === 0) {\n            this._lastEditorWidgetsByArea = this._editorWidgetsByArea;\n        }\n        // `layoutModified` can be triggered when tabs are clicked, even if they are not rearranged.\n        // This will check for those instances and prevent a rebuild if it is unnecessary. Rebuilding\n        // the tree if there is no change can cause the tree's selection to flicker.\n        if (layoutModifiedArea) {\n            doRebuild = this.shouldRebuildTreeOnLayoutModified(layoutModifiedArea);\n        }\n        if (doRebuild) {\n            this.root = await this.buildRootFromOpenedWidgets(this._editorWidgetsByArea);\n        }\n    }\n\n    protected shouldRebuildTreeOnLayoutModified(area: ApplicationShell.Area): boolean {\n        const currentOrdering = this._editorWidgetsByArea.get(area);\n        const previousOrdering = this._lastEditorWidgetsByArea.get(area);\n        if (currentOrdering?.length === 1) {\n            return true;\n        }\n        if (currentOrdering?.length !== previousOrdering?.length) {\n            return true;\n        }\n        if (!!currentOrdering && !!previousOrdering) {\n            return !currentOrdering.every((widget, index) => widget === previousOrdering[index]);\n        }\n        return true;\n    }\n\n    protected tryCreateWidgetGroupMap(): Map<Widget, CompositeTreeNode> {\n        const mainTabBars = this.applicationShell.mainAreaTabBars;\n        this._editorWidgetsByGroup = new Map();\n        const widgetGroupMap = new Map<Widget, CompositeTreeNode>();\n        if (mainTabBars.length > 1) {\n            mainTabBars.forEach((tabbar, index) => {\n                const groupNumber = index + 1;\n                const newCaption = nls.localizeByDefault('Group {0}', groupNumber);\n                const groupNode = {\n                    parent: undefined,\n                    id: `${OpenEditorsModel.GROUP_NODE_ID_PREFIX}:${groupNumber}`,\n                    name: newCaption,\n                    children: []\n                };\n                const widgets: NavigatableWidget[] = [];\n                tabbar.titles.map(title => {\n                    const { owner } = title;\n                    widgetGroupMap.set(owner, groupNode);\n                    if (NavigatableWidget.is(owner)) {\n                        widgets.push(owner);\n                    }\n                });\n                this._editorWidgetsByGroup.set(groupNumber, { widgets, tabbar });\n            });\n        }\n        return widgetGroupMap;\n    }\n\n    protected async buildRootFromOpenedWidgets(widgetsByArea: Map<ApplicationShell.Area, NavigatableWidget[]>): Promise<CompositeTreeNode> {\n        const rootNode: CompositeTreeNode = {\n            id: 'open-editors:root',\n            parent: undefined,\n            visible: false,\n            children: [],\n        };\n\n        const mainAreaWidgetGroups = this.tryCreateWidgetGroupMap();\n\n        for (const [area, widgetsInArea] of widgetsByArea.entries()) {\n            const areaNode: CompositeTreeNode & ExpandableTreeNode = {\n                id: `${OpenEditorsModel.AREA_NODE_ID_PREFIX}:${area}`,\n                parent: rootNode,\n                name: ApplicationShell.areaLabels[area],\n                expanded: true,\n                children: []\n            };\n            for (const widget of widgetsInArea) {\n                const uri = widget.getResourceUri();\n                if (uri) {\n                    let fileStat: FileStat;\n                    try {\n                        fileStat = await this.fileService.resolve(uri);\n                        this.cachedFileStats.set(widget.id, fileStat);\n                    } catch {\n                        const cachedStat = this.cachedFileStats.get(widget.id);\n                        if (cachedStat) {\n                            fileStat = cachedStat;\n                        } else {\n                            continue;\n                        }\n                    }\n\n                    const openEditorNode: OpenEditorNode = {\n                        id: widget.id,\n                        fileStat,\n                        uri,\n                        selected: false,\n                        parent: undefined,\n                        name: widget.title.label,\n                        icon: widget.title.iconClass,\n                        widget\n                    };\n                    // only show groupings for main area widgets if more than one tabbar\n                    if ((area === 'main') && (mainAreaWidgetGroups.size > 1)) {\n                        const groupNode = mainAreaWidgetGroups.get(widget);\n                        if (groupNode) {\n                            CompositeTreeNode.addChild(groupNode, openEditorNode);\n                            CompositeTreeNode.addChild(areaNode, groupNode);\n                        }\n                    } else {\n                        CompositeTreeNode.addChild(areaNode, openEditorNode);\n                    }\n                }\n            }\n            // If widgets are only in the main area and in a single tabbar, then don't show area node\n            if (widgetsByArea.size === 1 && widgetsByArea.has('main') && area === 'main') {\n                areaNode.children.forEach(child => CompositeTreeNode.addChild(rootNode, child));\n            } else {\n                CompositeTreeNode.addChild(rootNode, areaNode);\n            }\n\n        }\n        return rootNode;\n    }\n\n    protected override doOpenNode(node: TreeNode): void {\n        if (node.visible === false) {\n            return;\n        } else if (FileNode.is(node)) {\n            open(this.openerService, node.uri);\n        } else {\n            super.doOpenNode(node);\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './workspace-commands';\nexport * from './workspace-service';\nexport * from './canonical-uri-service';\nexport * from './workspace-frontend-contribution';\nexport * from './workspace-frontend-module';\nexport * from './workspace-preferences';\nexport * from './workspace-trust-service';\n"],"names":[],"sourceRoot":""}