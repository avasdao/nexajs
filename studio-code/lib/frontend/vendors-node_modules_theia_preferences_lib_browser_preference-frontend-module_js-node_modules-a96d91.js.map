{"version":3,"file":"vendors-node_modules_theia_preferences_lib_browser_preference-frontend-module_js-node_modules-a96d91.js","mappings":"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","sources":["webpack:///./node_modules/@theia/preferences/src/browser/style/index.css?./node_modules/css-loader/dist/cjs.js","webpack:///./node_modules/@theia/preferences/src/browser/style/preference-array.css?./node_modules/css-loader/dist/cjs.js","webpack:///./node_modules/@theia/preferences/src/browser/style/preference-context-menu.css?./node_modules/css-loader/dist/cjs.js","webpack:///./node_modules/@theia/preferences/src/browser/style/preference-file.css?./node_modules/css-loader/dist/cjs.js","webpack:///./node_modules/@theia/preferences/src/browser/style/preference-object.css?./node_modules/css-loader/dist/cjs.js","webpack:///./node_modules/@theia/preferences/src/browser/style/search-input.css?./node_modules/css-loader/dist/cjs.js","webpack:///./node_modules/@theia/core/shared/fuzzy/index.js?","webpack:///./node_modules/@theia/core/shared/lodash.debounce/index.js?","webpack:///./node_modules/@theia/core/shared/react-dom/client/index.js?","webpack:///./node_modules/@theia/preferences/src/browser/preference-frontend-module.ts?","webpack:///./node_modules/@theia/preferences/src/browser/preference-open-handler.ts?","webpack:///./node_modules/@theia/preferences/src/browser/preference-tree-model.ts?","webpack:///./node_modules/@theia/preferences/src/browser/preferences-contribution.ts?","webpack:///./node_modules/@theia/preferences/src/browser/preferences-json-schema-contribution.ts?","webpack:///./node_modules/@theia/preferences/src/browser/preferences-monaco-contribution.ts?","webpack:///./node_modules/@theia/preferences/src/browser/util/preference-scope-command-manager.ts?","webpack:///./node_modules/@theia/preferences/src/browser/util/preference-tree-generator.ts?","webpack:///./node_modules/@theia/preferences/src/browser/util/preference-tree-label-provider.ts?","webpack:///./node_modules/@theia/preferences/src/browser/util/preference-types.ts?","webpack:///./node_modules/@theia/preferences/src/browser/views/components/preference-array-input.ts?","webpack:///./node_modules/@theia/preferences/src/browser/views/components/preference-boolean-input.ts?","webpack:///./node_modules/@theia/preferences/src/browser/views/components/preference-file-input.ts?","webpack:///./node_modules/@theia/preferences/src/browser/views/components/preference-json-input.ts?","webpack:///./node_modules/@theia/preferences/src/browser/views/components/preference-markdown-renderer.ts?","webpack:///./node_modules/@theia/preferences/src/browser/views/components/preference-node-renderer-creator.ts?","webpack:///./node_modules/@theia/preferences/src/browser/views/components/preference-node-renderer.ts?","webpack:///./node_modules/@theia/preferences/src/browser/views/components/preference-number-input.ts?","webpack:///./node_modules/@theia/preferences/src/browser/views/components/preference-select-input.ts?","webpack:///./node_modules/@theia/preferences/src/browser/views/components/preference-string-input.ts?","webpack:///./node_modules/@theia/preferences/src/browser/views/preference-editor-widget.ts?","webpack:///./node_modules/@theia/preferences/src/browser/views/preference-scope-tabbar-widget.tsx?","webpack:///./node_modules/@theia/preferences/src/browser/views/preference-searchbar-widget.tsx?","webpack:///./node_modules/@theia/preferences/src/browser/views/preference-tree-widget.tsx?","webpack:///./node_modules/@theia/preferences/src/browser/views/preference-widget-bindings.ts?","webpack:///./node_modules/@theia/preferences/src/browser/views/preference-widget.tsx?","webpack:///./node_modules/@theia/userstorage/src/browser/index.ts?","webpack:///./node_modules/@theia/userstorage/src/browser/user-storage-contribution.ts?","webpack:///./node_modules/@theia/userstorage/src/browser/user-storage-frontend-module.ts?","webpack:///./node_modules/@theia/userstorage/src/browser/user-storage-uri.ts?","webpack:///./node_modules/@theia/workspace/src/browser/index.ts?","webpack:///./node_modules/@theia/preferences/src/browser/style/index.css?"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../../../../css-loader/dist/cjs.js!./preference-context-menu.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_1___ from \"-!../../../../../css-loader/dist/cjs.js!./preference-array.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_2___ from \"-!../../../../../css-loader/dist/cjs.js!./preference-file.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_3___ from \"-!../../../../../css-loader/dist/cjs.js!./preference-object.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_4___ from \"-!../../../../../css-loader/dist/cjs.js!./search-input.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_2___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_3___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_4___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n#preferences_container_widget .p-SplitPanel-handle {\n  border-right: var(--theia-border-width) solid var(--theia-editorGroup-border);\n}\n\n#preferences_container_widget .p-TabBar-tabIcon {\n  align-items: center;\n  display: flex;\n  line-height: var(--theia-content-line-height) !important;\n}\n\n/* UI View */\n\n.theia-settings-container {\n  max-width: 1000px;\n  padding-top: 11px;\n  display: grid;\n  grid-template-areas:\n    \"header header\"\n    \"tabbar tabbar\"\n    \"navbar editor\";\n  grid-template-columns: minmax(150px, 280px) 1fr;\n  grid-template-rows: 45px 45px 1fr;\n}\n\n.theia-settings-container\n  .settings-main:not(.no-results)\n  .settings-no-results-announcement {\n  display: none;\n}\n\n.theia-settings-container .settings-main .hidden {\n  display: none;\n}\n\n.theia-settings-container .settings-no-results-announcement {\n  font-weight: bold;\n  font-size: var(--theia-ui-font-size3);\n  padding-left: var(--theia-ui-padding);\n  margin: calc(2 * var(--theia-ui-padding)) 0px;\n}\n\n.theia-settings-container .preferences-searchbar-widget {\n  grid-area: header;\n  margin: 3px 24px 0px 24px;\n}\n\n.theia-settings-container .preferences-tabbar-widget {\n  grid-area: tabbar;\n  margin: 3px 24px 0px 24px;\n}\n\n.theia-settings-container .preferences-tabbar-widget.with-shadow {\n  box-shadow: 0px 6px 5px -5px var(--theia-widget-shadow);\n}\n\n.theia-settings-container\n  .preferences-tabbar-widget\n  .preferences-scope-tab\n  .p-TabBar-tabIcon:not(.preferences-folder-dropdown-icon) {\n  display: none;\n}\n\n#theia-main-content-panel\n  .theia-settings-container\n  #preferences-scope-tab-bar\n  .preferences-scope-tab {\n  background: var(--theia-editor-background);\n  border-right: unset;\n  border-bottom: var(--theia-border-width) solid\n    var(--theia-tab-unfocusedInactiveForeground);\n  border-top: none;\n}\n\n#theia-main-content-panel .theia-settings-container .tabbar-underline {\n  width: 100%;\n  position: absolute;\n  top: calc(\n    var(--theia-private-horizontal-tab-height) +\n      var(--theia-private-horizontal-tab-scrollbar-rail-height) / 2 - 1px\n  );\n  border-top: 1px solid var(--theia-tab-unfocusedInactiveForeground);\n  z-index: -1;\n}\n\n#theia-main-content-panel\n  .theia-settings-container\n  #preferences-scope-tab-bar\n  .preferences-scope-tab {\n  color: var(--theia-panelTitle-inactiveForeground);\n}\n\n#theia-main-content-panel\n  .theia-settings-container\n  #preferences-scope-tab-bar\n  .preferences-scope-tab:hover {\n  color: var(--theia-panelTitle-activeForeground);\n}\n\n#theia-main-content-panel\n  .theia-settings-container\n  #preferences-scope-tab-bar\n  .preferences-scope-tab.p-mod-current {\n  color: var(--theia-panelTitle-activeForeground);\n  border-bottom: var(--theia-border-width) solid\n    var(--theia-panelTitle-activeBorder);\n}\n\n#theia-main-content-panel\n  .theia-settings-container\n  #preferences-scope-tab-bar\n  .preferences-scope-tab.p-mod-current:not(.theia-mod-active) {\n  border-top: unset;\n}\n\n#theia-main-content-panel\n  .theia-settings-container\n  #preferences-scope-tab-bar\n  .preferences-scope-tab.preferences-folder-tab\n  .p-TabBar-tabLabel::after {\n  content: \"Folder\";\n  padding-left: 4px;\n  font-size: 0.8em;\n  color: var(--theia-tab-inactiveForeground);\n}\n\n#theia-main-content-panel\n  .theia-settings-container\n  #preferences-scope-tab-bar\n  .preferences-scope-tab.preferences-folder-dropdown {\n  position: relative;\n  padding-right: 23px;\n}\n\n.preferences-folder-dropdown-icon {\n  width: 15px;\n  height: 15px;\n  position: absolute;\n  right: var(--theia-ui-padding);\n}\n\n.theia-settings-container .preferences-editor-widget {\n  grid-area: editor;\n}\n\n.theia-settings-container .preferences-editor-widget.full-pane {\n  grid-column-start: 1;\n  grid-column-end: 3;\n}\n\n.theia-settings-container .preferences-tree-widget {\n  grid-area: navbar;\n  padding-left: 31px;\n}\n\n.theia-settings-container .preferences-tree-widget .theia-mod-selected {\n  font-weight: bold;\n}\n\n.theia-settings-container .preferences-tree-widget .theia-TreeNodeSegment {\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-width: 90%;\n}\n\n.theia-settings-container .settings-main {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.theia-settings-container .settings-main-scroll-container {\n  position: relative;\n  box-sizing: border-box;\n  width: 100%;\n  padding: 0 24px;\n  flex: 1 1 auto;\n}\n\n.theia-settings-container .settings-main-sticky-misc {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex: 0 1 50px;\n}\n\n.theia-settings-container .settings-main-sticky-misc .json-button > i {\n  display: inline-block;\n  background: var(--theia-icon-open-json) no-repeat;\n  background-position-y: 1px;\n  -webkit-filter: invert(1);\n  filter: invert(1);\n  height: var(--theia-icon-size);\n  width: var(--theia-icon-size);\n}\n\n.theia-settings-container .settings-scope > label {\n  margin-right: 12px;\n}\n\n.theia-settings-container .settings-section {\n  padding-left: 0;\n  padding-top: var(--theia-ui-padding);\n  margin-top: calc(var(--theia-ui-padding) * -1);\n}\n\n.theia-settings-container .settings-section a {\n  border: none;\n  color: var(--theia-foreground);\n  font-weight: 500;\n  outline: 0;\n  text-decoration: none;\n}\n\n.theia-settings-container .settings-section a:hover {\n  text-decoration: underline;\n}\n\n.theia-settings-container .settings-section-category-title {\n  font-weight: bold;\n  font-size: var(--theia-ui-font-size3);\n  padding-left: calc(2 * var(--theia-ui-padding));\n}\n\n.theia-settings-container .settings-section-subcategory-title {\n  font-weight: bold;\n  font-size: var(--theia-ui-font-size2);\n  padding-left: calc(2 * var(--theia-ui-padding));\n}\n\n.theia-settings-container .settings-section > li {\n  list-style-type: none;\n  margin: var(--theia-ui-padding) 0px;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-pack: justify;\n  -ms-flex-pack: justify;\n  justify-content: space-between;\n  -webkit-box-align: start;\n  -ms-flex-align: start;\n  align-items: start;\n}\n\n.theia-settings-container li.single-pref {\n  list-style-type: none;\n  padding: 12px 14px 18px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  position: relative;\n}\n\n.theia-settings-container li.single-pref p {\n  margin: 0;\n}\n\n.theia-settings-container li.single-pref:hover:not(:focus) {\n  background-color: var(--theia-settings-rowHoverBackground);\n}\n\n.theia-settings-container li.single-pref:focus {\n  background-color: var(--theia-settings-focusedRowBackground);\n  outline: 1px solid var(--theia-settings-focusedRowBorder);\n}\n\n.theia-settings-container li.single-pref .pref-context-gutter {\n  position: absolute;\n  height: calc(100% - 36px);\n  left: -22px;\n  padding-right: 8px;\n  border-right: 2px hidden;\n}\n\n.theia-settings-container .settings-context-menu-btn {\n  opacity: 0;\n  transition: opacity 0.5s;\n}\n\n.theia-settings-container\n  .single-pref:focus-within\n  .pref-context-gutter\n  .settings-context-menu-btn,\n.theia-settings-container\n  .pref-name:hover\n  + .pref-context-gutter\n  .settings-context-menu-btn,\n.theia-settings-container .pref-context-gutter:hover .settings-context-menu-btn,\n.theia-settings-container\n  .pref-context-gutter.show-cog\n  .settings-context-menu-btn {\n  opacity: 1;\n}\n\n.theia-settings-container\n  li.single-pref\n  .pref-context-gutter.theia-mod-item-modified {\n  border-right: 2px solid var(--theia-settings-modifiedItemIndicator);\n}\n\n.theia-settings-container li.single-pref input[type=\"text\"] {\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n}\n\n.theia-settings-container .settings-main {\n  margin: 0;\n}\n\n.theia-settings-container .settings-main-sticky {\n  top: 0;\n  padding-top: calc(var(--theia-ui-padding));\n  margin-top: calc(var(--theia-ui-padding) * -1);\n  background-color: var(--theia-editor-background);\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n}\n\n.theia-settings-container .pref-name {\n  padding: 0;\n  font-weight: bold;\n}\n\n.theia-settings-container .preference-leaf-headline-prefix {\n  color: var(--theia-descriptionForeground);\n}\n\n.preferences-tree-spacer {\n  padding-left: calc(var(--theia-ui-padding) / 2);\n  padding-right: calc(var(--theia-ui-padding) / 2);\n  min-width: var(--theia-icon-size);\n  min-height: var(--theia-icon-size);\n}\n\n.theia-settings-container .pref-description {\n  padding: var(--theia-ui-padding) 0;\n  color: var(--theia-descriptionForeground);\n  line-height: 18px;\n}\n\n.theia-settings-container .pref-description a {\n  text-decoration-line: none;\n  cursor: pointer;\n}\n\n.theia-settings-container .theia-select:focus {\n  outline-width: 1px;\n  outline-style: solid;\n  outline-offset: -1px;\n  opacity: 1 !important;\n  outline-color: var(--theia-focusBorder);\n}\n\n.theia-settings-container .theia-input[type=\"text\"] {\n  border: 1px solid var(--theia-dropdown-border);\n}\n\n.theia-settings-container .theia-input[type=\"checkbox\"]:focus,\n.theia-settings-container .theia-input[type=\"number\"]:focus {\n  outline-width: 1px;\n}\n\n.theia-settings-container .theia-input[type=\"checkbox\"] {\n  margin-left: 0;\n}\n\n/* Remove the spinners from input[type = number] on Firefox. */\n.theia-settings-container .theia-input[type=\"number\"] {\n  -webkit-appearance: textfield;\n  border: 1px solid var(--theia-dropdown-border);\n}\n\n/* Remove the webkit spinners from input[type = number] on all browsers except Firefox. */\n.theia-settings-container input::-webkit-outer-spin-button,\n.theia-settings-container input::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n.dialogContent .error:not(:empty),\n.theia-settings-container .pref-content-container .pref-input .pref-input-container .pref-error-notification {\n  border-style: solid;\n  border-width: 1px;\n  border-color: var(--theia-inputValidation-errorBorder);\n  background-color: var(--theia-inputValidation-errorBackground);\n  width: 100%;\n  box-sizing: border-box;\n  padding: var(--theia-ui-padding);\n}\n\n.theia-settings-container\n  .pref-content-container\n  .pref-input\n  .pref-input-container {\n  display: flex;\n  flex-direction: column;\n}\n\n.theia-settings-container .pref-content-container a.theia-json-input {\n  text-decoration: underline;\n  color: var(--theia-titleBar-activeForeground);\n}\n\n.theia-settings-container .pref-content-container a.theia-json-input:hover {\n  text-decoration: none;\n  cursor: pointer;\n}\n\n.theia-settings-container .pref-content-container {\n  width: 100%;\n}\n\n.theia-settings-container .pref-content-container .pref-input {\n  padding: var(--theia-ui-padding) 0;\n  width: 100%;\n  max-width: 320px;\n}\n\n.theia-settings-container .pref-content-container .pref-input > select,\n.theia-settings-container\n  .pref-content-container\n  .pref-input\n  > input:not([type=\"checkbox\"]) {\n  width: 100%;\n}\n\n/* These specifications for the boolean class ensure that the\n    checkbox is rendered to the left of the description.\n*/\n.theia-settings-container .pref-content-container.boolean {\n  display: grid;\n  grid-template-columns: 20px 1fr;\n}\n\n.theia-settings-container .pref-content-container.boolean .pref-description {\n  grid-column-start: 2;\n  grid-row-start: 1;\n}\n\n.theia-settings-container .pref-content-container.boolean .pref-input {\n  grid-column-start: 1;\n  grid-row-start: 1;\n  margin: 0;\n}\n\n.theia-settings-container .settings-section > li:last-child {\n  margin-bottom: 20px;\n}\n\n.theia-settings-container .preference-leaf-headline-suffix {\n  font-weight: normal;\n  color: var(--theia-descriptionForeground);\n}\n\n.theia-settings-container .preference-leaf-headline-suffix::before {\n  content: \" (\";\n}\n\n.theia-settings-container .preference-leaf-headline-suffix::after {\n  content: \")\";\n}\n\n.theia-settings-container .preference-scope-underlined {\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n.theia-settings-container\n  .preference-modified-scope-wrapper:not(:last-child)::after {\n  content: \", \";\n}\n\n/** Select component */\n\n.theia-settings-container .theia-select-component {\n  height: 26px;\n  width: 100%;\n  max-width: 320px;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@theia/preferences/src/browser/style/index.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,6EAA6E;AAC/E;;AAEA;EACE,mBAAmB;EACnB,aAAa;EACb,wDAAwD;AAC1D;;AAEA,YAAY;;AAQZ;EACE,iBAAiB;EACjB,iBAAiB;EACjB,aAAa;EACb;;;mBAGiB;EACjB,+CAA+C;EAC/C,iCAAiC;AACnC;;AAEA;;;EAGE,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,iBAAiB;EACjB,qCAAqC;EACrC,qCAAqC;EACrC,6CAA6C;AAC/C;;AAEA;EACE,iBAAiB;EACjB,yBAAyB;AAC3B;;AAEA;EACE,iBAAiB;EACjB,yBAAyB;AAC3B;;AAEA;EACE,uDAAuD;AACzD;;AAEA;;;;EAIE,aAAa;AACf;;AAEA;;;;EAIE,0CAA0C;EAC1C,mBAAmB;EACnB;gDAC8C;EAC9C,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB;;;GAGC;EACD,kEAAkE;EAClE,WAAW;AACb;;AAEA;;;;EAIE,iDAAiD;AACnD;;AAEA;;;;EAIE,+CAA+C;AACjD;;AAEA;;;;EAIE,+CAA+C;EAC/C;wCACsC;AACxC;;AAEA;;;;EAIE,iBAAiB;AACnB;;AAEA;;;;;EAKE,iBAAiB;EACjB,iBAAiB;EACjB,gBAAgB;EAChB,0CAA0C;AAC5C;;AAEA;;;;EAIE,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,8BAA8B;AAChC;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,oBAAoB;EACpB,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,uBAAuB;EACvB,gBAAgB;EAChB,cAAc;AAChB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;EAClB,sBAAsB;EACtB,WAAW;EACX,eAAe;EACf,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,cAAc;AAChB;;AAEA;EACE,qBAAqB;EACrB,iDAAiD;EACjD,0BAA0B;EAC1B,yBAAyB;EACzB,iBAAiB;EACjB,8BAA8B;EAC9B,6BAA6B;AAC/B;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,oCAAoC;EACpC,8CAA8C;AAChD;;AAEA;EACE,YAAY;EACZ,8BAA8B;EAC9B,gBAAgB;EAChB,UAAU;EACV,qBAAqB;AACvB;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,iBAAiB;EACjB,qCAAqC;EACrC,+CAA+C;AACjD;;AAEA;EACE,iBAAiB;EACjB,qCAAqC;EACrC,+CAA+C;AACjD;;AAEA;EACE,qBAAqB;EACrB,mCAAmC;EACnC,oBAAoB;EACpB,oBAAoB;EACpB,aAAa;EACb,yBAAyB;EACzB,sBAAsB;EACtB,8BAA8B;EAC9B,wBAAwB;EACxB,qBAAqB;EACrB,kBAAkB;AACpB;;AAEA;EACE,qBAAqB;EACrB,uBAAuB;EACvB,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,sBAAsB;EACtB,kBAAkB;AACpB;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,0DAA0D;AAC5D;;AAEA;EACE,4DAA4D;EAC5D,yDAAyD;AAC3D;;AAEA;EACE,kBAAkB;EAClB,yBAAyB;EACzB,WAAW;EACX,kBAAkB;EAClB,wBAAwB;AAC1B;;AAEA;EACE,UAAU;EACV,wBAAwB;AAC1B;;AAEA;;;;;;;;;;;;EAYE,UAAU;AACZ;;AAEA;;;EAGE,mEAAmE;AACrE;;AAEA;EACE,8BAA8B;EAC9B,sBAAsB;AACxB;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,MAAM;EACN,0CAA0C;EAC1C,8CAA8C;EAC9C,gDAAgD;EAChD,8BAA8B;EAC9B,sBAAsB;EACtB,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,6BAA6B;AAC/B;;AAEA;EACE,UAAU;EACV,iBAAiB;AACnB;;AAEA;EACE,yCAAyC;AAC3C;;AAEA;EACE,+CAA+C;EAC/C,gDAAgD;EAChD,iCAAiC;EACjC,kCAAkC;AACpC;;AAEA;EACE,kCAAkC;EAClC,yCAAyC;EACzC,iBAAiB;AACnB;;AAEA;EACE,0BAA0B;EAC1B,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,oBAAoB;EACpB,oBAAoB;EACpB,qBAAqB;EACrB,uCAAuC;AACzC;;AAEA;EACE,8CAA8C;AAChD;;AAEA;;EAEE,kBAAkB;AACpB;;AAEA;EACE,cAAc;AAChB;;AAEA,8DAA8D;AAC9D;EACE,6BAA6B;EAC7B,8CAA8C;AAChD;;AAEA,yFAAyF;AACzF;;EAEE,wBAAwB;EACxB,SAAS;AACX;;AAEA;;EAEE,mBAAmB;EACnB,iBAAiB;EACjB,sDAAsD;EACtD,8DAA8D;EAC9D,WAAW;EACX,sBAAsB;EACtB,gCAAgC;AAClC;;AAEA;;;;EAIE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,0BAA0B;EAC1B,6CAA6C;AAC/C;;AAEA;EACE,qBAAqB;EACrB,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,kCAAkC;EAClC,WAAW;EACX,gBAAgB;AAClB;;AAEA;;;;;EAKE,WAAW;AACb;;AAEA;;CAEC;AACD;EACE,aAAa;EACb,+BAA+B;AACjC;;AAEA;EACE,oBAAoB;EACpB,iBAAiB;AACnB;;AAEA;EACE,oBAAoB;EACpB,iBAAiB;EACjB,SAAS;AACX;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;EACnB,yCAAyC;AAC3C;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,0BAA0B;EAC1B,eAAe;AACjB;;AAEA;;EAEE,aAAa;AACf;;AAEA,sBAAsB;;AAEtB;EACE,YAAY;EACZ,WAAW;EACX,gBAAgB;AAClB\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2019 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n#preferences_container_widget .p-SplitPanel-handle {\\n  border-right: var(--theia-border-width) solid var(--theia-editorGroup-border);\\n}\\n\\n#preferences_container_widget .p-TabBar-tabIcon {\\n  align-items: center;\\n  display: flex;\\n  line-height: var(--theia-content-line-height) !important;\\n}\\n\\n/* UI View */\\n\\n@import url(\\\"./preference-context-menu.css\\\");\\n@import url(\\\"./preference-array.css\\\");\\n@import url(\\\"./preference-file.css\\\");\\n@import url(\\\"./preference-object.css\\\");\\n@import url(\\\"./search-input.css\\\");\\n\\n.theia-settings-container {\\n  max-width: 1000px;\\n  padding-top: 11px;\\n  display: grid;\\n  grid-template-areas:\\n    \\\"header header\\\"\\n    \\\"tabbar tabbar\\\"\\n    \\\"navbar editor\\\";\\n  grid-template-columns: minmax(150px, 280px) 1fr;\\n  grid-template-rows: 45px 45px 1fr;\\n}\\n\\n.theia-settings-container\\n  .settings-main:not(.no-results)\\n  .settings-no-results-announcement {\\n  display: none;\\n}\\n\\n.theia-settings-container .settings-main .hidden {\\n  display: none;\\n}\\n\\n.theia-settings-container .settings-no-results-announcement {\\n  font-weight: bold;\\n  font-size: var(--theia-ui-font-size3);\\n  padding-left: var(--theia-ui-padding);\\n  margin: calc(2 * var(--theia-ui-padding)) 0px;\\n}\\n\\n.theia-settings-container .preferences-searchbar-widget {\\n  grid-area: header;\\n  margin: 3px 24px 0px 24px;\\n}\\n\\n.theia-settings-container .preferences-tabbar-widget {\\n  grid-area: tabbar;\\n  margin: 3px 24px 0px 24px;\\n}\\n\\n.theia-settings-container .preferences-tabbar-widget.with-shadow {\\n  box-shadow: 0px 6px 5px -5px var(--theia-widget-shadow);\\n}\\n\\n.theia-settings-container\\n  .preferences-tabbar-widget\\n  .preferences-scope-tab\\n  .p-TabBar-tabIcon:not(.preferences-folder-dropdown-icon) {\\n  display: none;\\n}\\n\\n#theia-main-content-panel\\n  .theia-settings-container\\n  #preferences-scope-tab-bar\\n  .preferences-scope-tab {\\n  background: var(--theia-editor-background);\\n  border-right: unset;\\n  border-bottom: var(--theia-border-width) solid\\n    var(--theia-tab-unfocusedInactiveForeground);\\n  border-top: none;\\n}\\n\\n#theia-main-content-panel .theia-settings-container .tabbar-underline {\\n  width: 100%;\\n  position: absolute;\\n  top: calc(\\n    var(--theia-private-horizontal-tab-height) +\\n      var(--theia-private-horizontal-tab-scrollbar-rail-height) / 2 - 1px\\n  );\\n  border-top: 1px solid var(--theia-tab-unfocusedInactiveForeground);\\n  z-index: -1;\\n}\\n\\n#theia-main-content-panel\\n  .theia-settings-container\\n  #preferences-scope-tab-bar\\n  .preferences-scope-tab {\\n  color: var(--theia-panelTitle-inactiveForeground);\\n}\\n\\n#theia-main-content-panel\\n  .theia-settings-container\\n  #preferences-scope-tab-bar\\n  .preferences-scope-tab:hover {\\n  color: var(--theia-panelTitle-activeForeground);\\n}\\n\\n#theia-main-content-panel\\n  .theia-settings-container\\n  #preferences-scope-tab-bar\\n  .preferences-scope-tab.p-mod-current {\\n  color: var(--theia-panelTitle-activeForeground);\\n  border-bottom: var(--theia-border-width) solid\\n    var(--theia-panelTitle-activeBorder);\\n}\\n\\n#theia-main-content-panel\\n  .theia-settings-container\\n  #preferences-scope-tab-bar\\n  .preferences-scope-tab.p-mod-current:not(.theia-mod-active) {\\n  border-top: unset;\\n}\\n\\n#theia-main-content-panel\\n  .theia-settings-container\\n  #preferences-scope-tab-bar\\n  .preferences-scope-tab.preferences-folder-tab\\n  .p-TabBar-tabLabel::after {\\n  content: \\\"Folder\\\";\\n  padding-left: 4px;\\n  font-size: 0.8em;\\n  color: var(--theia-tab-inactiveForeground);\\n}\\n\\n#theia-main-content-panel\\n  .theia-settings-container\\n  #preferences-scope-tab-bar\\n  .preferences-scope-tab.preferences-folder-dropdown {\\n  position: relative;\\n  padding-right: 23px;\\n}\\n\\n.preferences-folder-dropdown-icon {\\n  width: 15px;\\n  height: 15px;\\n  position: absolute;\\n  right: var(--theia-ui-padding);\\n}\\n\\n.theia-settings-container .preferences-editor-widget {\\n  grid-area: editor;\\n}\\n\\n.theia-settings-container .preferences-editor-widget.full-pane {\\n  grid-column-start: 1;\\n  grid-column-end: 3;\\n}\\n\\n.theia-settings-container .preferences-tree-widget {\\n  grid-area: navbar;\\n  padding-left: 31px;\\n}\\n\\n.theia-settings-container .preferences-tree-widget .theia-mod-selected {\\n  font-weight: bold;\\n}\\n\\n.theia-settings-container .preferences-tree-widget .theia-TreeNodeSegment {\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n  max-width: 90%;\\n}\\n\\n.theia-settings-container .settings-main {\\n  height: 100%;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.theia-settings-container .settings-main-scroll-container {\\n  position: relative;\\n  box-sizing: border-box;\\n  width: 100%;\\n  padding: 0 24px;\\n  flex: 1 1 auto;\\n}\\n\\n.theia-settings-container .settings-main-sticky-misc {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  flex: 0 1 50px;\\n}\\n\\n.theia-settings-container .settings-main-sticky-misc .json-button > i {\\n  display: inline-block;\\n  background: var(--theia-icon-open-json) no-repeat;\\n  background-position-y: 1px;\\n  -webkit-filter: invert(1);\\n  filter: invert(1);\\n  height: var(--theia-icon-size);\\n  width: var(--theia-icon-size);\\n}\\n\\n.theia-settings-container .settings-scope > label {\\n  margin-right: 12px;\\n}\\n\\n.theia-settings-container .settings-section {\\n  padding-left: 0;\\n  padding-top: var(--theia-ui-padding);\\n  margin-top: calc(var(--theia-ui-padding) * -1);\\n}\\n\\n.theia-settings-container .settings-section a {\\n  border: none;\\n  color: var(--theia-foreground);\\n  font-weight: 500;\\n  outline: 0;\\n  text-decoration: none;\\n}\\n\\n.theia-settings-container .settings-section a:hover {\\n  text-decoration: underline;\\n}\\n\\n.theia-settings-container .settings-section-category-title {\\n  font-weight: bold;\\n  font-size: var(--theia-ui-font-size3);\\n  padding-left: calc(2 * var(--theia-ui-padding));\\n}\\n\\n.theia-settings-container .settings-section-subcategory-title {\\n  font-weight: bold;\\n  font-size: var(--theia-ui-font-size2);\\n  padding-left: calc(2 * var(--theia-ui-padding));\\n}\\n\\n.theia-settings-container .settings-section > li {\\n  list-style-type: none;\\n  margin: var(--theia-ui-padding) 0px;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n  -ms-flex-pack: justify;\\n  justify-content: space-between;\\n  -webkit-box-align: start;\\n  -ms-flex-align: start;\\n  align-items: start;\\n}\\n\\n.theia-settings-container li.single-pref {\\n  list-style-type: none;\\n  padding: 12px 14px 18px;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  box-sizing: border-box;\\n  position: relative;\\n}\\n\\n.theia-settings-container li.single-pref p {\\n  margin: 0;\\n}\\n\\n.theia-settings-container li.single-pref:hover:not(:focus) {\\n  background-color: var(--theia-settings-rowHoverBackground);\\n}\\n\\n.theia-settings-container li.single-pref:focus {\\n  background-color: var(--theia-settings-focusedRowBackground);\\n  outline: 1px solid var(--theia-settings-focusedRowBorder);\\n}\\n\\n.theia-settings-container li.single-pref .pref-context-gutter {\\n  position: absolute;\\n  height: calc(100% - 36px);\\n  left: -22px;\\n  padding-right: 8px;\\n  border-right: 2px hidden;\\n}\\n\\n.theia-settings-container .settings-context-menu-btn {\\n  opacity: 0;\\n  transition: opacity 0.5s;\\n}\\n\\n.theia-settings-container\\n  .single-pref:focus-within\\n  .pref-context-gutter\\n  .settings-context-menu-btn,\\n.theia-settings-container\\n  .pref-name:hover\\n  + .pref-context-gutter\\n  .settings-context-menu-btn,\\n.theia-settings-container .pref-context-gutter:hover .settings-context-menu-btn,\\n.theia-settings-container\\n  .pref-context-gutter.show-cog\\n  .settings-context-menu-btn {\\n  opacity: 1;\\n}\\n\\n.theia-settings-container\\n  li.single-pref\\n  .pref-context-gutter.theia-mod-item-modified {\\n  border-right: 2px solid var(--theia-settings-modifiedItemIndicator);\\n}\\n\\n.theia-settings-container li.single-pref input[type=\\\"text\\\"] {\\n  -webkit-box-sizing: border-box;\\n  box-sizing: border-box;\\n}\\n\\n.theia-settings-container .settings-main {\\n  margin: 0;\\n}\\n\\n.theia-settings-container .settings-main-sticky {\\n  top: 0;\\n  padding-top: calc(var(--theia-ui-padding));\\n  margin-top: calc(var(--theia-ui-padding) * -1);\\n  background-color: var(--theia-editor-background);\\n  -webkit-box-sizing: border-box;\\n  box-sizing: border-box;\\n  z-index: 1000;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-around;\\n}\\n\\n.theia-settings-container .pref-name {\\n  padding: 0;\\n  font-weight: bold;\\n}\\n\\n.theia-settings-container .preference-leaf-headline-prefix {\\n  color: var(--theia-descriptionForeground);\\n}\\n\\n.preferences-tree-spacer {\\n  padding-left: calc(var(--theia-ui-padding) / 2);\\n  padding-right: calc(var(--theia-ui-padding) / 2);\\n  min-width: var(--theia-icon-size);\\n  min-height: var(--theia-icon-size);\\n}\\n\\n.theia-settings-container .pref-description {\\n  padding: var(--theia-ui-padding) 0;\\n  color: var(--theia-descriptionForeground);\\n  line-height: 18px;\\n}\\n\\n.theia-settings-container .pref-description a {\\n  text-decoration-line: none;\\n  cursor: pointer;\\n}\\n\\n.theia-settings-container .theia-select:focus {\\n  outline-width: 1px;\\n  outline-style: solid;\\n  outline-offset: -1px;\\n  opacity: 1 !important;\\n  outline-color: var(--theia-focusBorder);\\n}\\n\\n.theia-settings-container .theia-input[type=\\\"text\\\"] {\\n  border: 1px solid var(--theia-dropdown-border);\\n}\\n\\n.theia-settings-container .theia-input[type=\\\"checkbox\\\"]:focus,\\n.theia-settings-container .theia-input[type=\\\"number\\\"]:focus {\\n  outline-width: 1px;\\n}\\n\\n.theia-settings-container .theia-input[type=\\\"checkbox\\\"] {\\n  margin-left: 0;\\n}\\n\\n/* Remove the spinners from input[type = number] on Firefox. */\\n.theia-settings-container .theia-input[type=\\\"number\\\"] {\\n  -webkit-appearance: textfield;\\n  border: 1px solid var(--theia-dropdown-border);\\n}\\n\\n/* Remove the webkit spinners from input[type = number] on all browsers except Firefox. */\\n.theia-settings-container input::-webkit-outer-spin-button,\\n.theia-settings-container input::-webkit-inner-spin-button {\\n  -webkit-appearance: none;\\n  margin: 0;\\n}\\n\\n.dialogContent .error:not(:empty),\\n.theia-settings-container .pref-content-container .pref-input .pref-input-container .pref-error-notification {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: var(--theia-inputValidation-errorBorder);\\n  background-color: var(--theia-inputValidation-errorBackground);\\n  width: 100%;\\n  box-sizing: border-box;\\n  padding: var(--theia-ui-padding);\\n}\\n\\n.theia-settings-container\\n  .pref-content-container\\n  .pref-input\\n  .pref-input-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.theia-settings-container .pref-content-container a.theia-json-input {\\n  text-decoration: underline;\\n  color: var(--theia-titleBar-activeForeground);\\n}\\n\\n.theia-settings-container .pref-content-container a.theia-json-input:hover {\\n  text-decoration: none;\\n  cursor: pointer;\\n}\\n\\n.theia-settings-container .pref-content-container {\\n  width: 100%;\\n}\\n\\n.theia-settings-container .pref-content-container .pref-input {\\n  padding: var(--theia-ui-padding) 0;\\n  width: 100%;\\n  max-width: 320px;\\n}\\n\\n.theia-settings-container .pref-content-container .pref-input > select,\\n.theia-settings-container\\n  .pref-content-container\\n  .pref-input\\n  > input:not([type=\\\"checkbox\\\"]) {\\n  width: 100%;\\n}\\n\\n/* These specifications for the boolean class ensure that the\\n    checkbox is rendered to the left of the description.\\n*/\\n.theia-settings-container .pref-content-container.boolean {\\n  display: grid;\\n  grid-template-columns: 20px 1fr;\\n}\\n\\n.theia-settings-container .pref-content-container.boolean .pref-description {\\n  grid-column-start: 2;\\n  grid-row-start: 1;\\n}\\n\\n.theia-settings-container .pref-content-container.boolean .pref-input {\\n  grid-column-start: 1;\\n  grid-row-start: 1;\\n  margin: 0;\\n}\\n\\n.theia-settings-container .settings-section > li:last-child {\\n  margin-bottom: 20px;\\n}\\n\\n.theia-settings-container .preference-leaf-headline-suffix {\\n  font-weight: normal;\\n  color: var(--theia-descriptionForeground);\\n}\\n\\n.theia-settings-container .preference-leaf-headline-suffix::before {\\n  content: \\\" (\\\";\\n}\\n\\n.theia-settings-container .preference-leaf-headline-suffix::after {\\n  content: \\\")\\\";\\n}\\n\\n.theia-settings-container .preference-scope-underlined {\\n  text-decoration: underline;\\n  cursor: pointer;\\n}\\n\\n.theia-settings-container\\n  .preference-modified-scope-wrapper:not(:last-child)::after {\\n  content: \\\", \\\";\\n}\\n\\n/** Select component */\\n\\n.theia-settings-container .theia-select-component {\\n  height: 26px;\\n  width: 100%;\\n  max-width: 320px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.theia-settings-container .preference-array {\n  list-style: none;\n  padding: 0;\n}\n\n.theia-settings-container .preference-array-element {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-pack: justify;\n  -ms-flex-pack: justify;\n  justify-content: space-between;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  padding: calc(var(--theia-ui-padding) / 2) var(--theia-ui-padding);\n  border-bottom: var(--theia-panel-border) 2px solid;\n}\n\n.theia-settings-container .pref-input li:nth-last-child(2) {\n  border-bottom: none;\n}\n\n.theia-settings-container .pref-input li:last-child {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n}\n\n.theia-settings-container .preference-array-element:hover {\n  background-color: rgba(50%, 50%, 50%, 0.1);\n}\n\n.theia-settings-container .preference-array-element-btn {\n  width: 1.5em;\n  height: 1.5em;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-pack: center;\n  -ms-flex-pack: center;\n  justify-content: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n}\n\n.theia-settings-container\n  .preference-array-element\n  .preference-array-element-btn {\n  opacity: 0;\n}\n\n.theia-settings-container\n  .preference-array-element:hover\n  .preference-array-element-btn {\n  opacity: 1;\n}\n\n.theia-settings-container .preference-array-element-btn:hover {\n  background-color: rgba(50%, 50%, 50%, 0.1);\n  cursor: pointer;\n}\n\n.theia-settings-container .preference-array .codicon.codicon-add {\n  margin-left: calc((var(--theia-icon-size) + 4px) * -1);\n  margin-right: 4px;\n  width: var(--theia-icon-size);\n  height: var(--theia-icon-size);\n}\n\n.theia-settings-container .preference-array-input {\n  padding-right: calc(var(--theia-icon-size) + var(--theia-ui-padding));\n  width: 100%;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@theia/preferences/src/browser/style/preference-array.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,gBAAgB;EAChB,UAAU;AACZ;;AAEA;EACE,oBAAoB;EACpB,oBAAoB;EACpB,aAAa;EACb,yBAAyB;EACzB,sBAAsB;EACtB,8BAA8B;EAC9B,yBAAyB;EACzB,sBAAsB;EACtB,mBAAmB;EACnB,kEAAkE;EAClE,kDAAkD;AACpD;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,oBAAoB;EACpB,oBAAoB;EACpB,aAAa;EACb,yBAAyB;EACzB,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,0CAA0C;AAC5C;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,oBAAoB;EACpB,oBAAoB;EACpB,aAAa;EACb,wBAAwB;EACxB,qBAAqB;EACrB,uBAAuB;EACvB,yBAAyB;EACzB,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;;;EAGE,UAAU;AACZ;;AAEA;;;EAGE,UAAU;AACZ;;AAEA;EACE,0CAA0C;EAC1C,eAAe;AACjB;;AAEA;EACE,sDAAsD;EACtD,iBAAiB;EACjB,6BAA6B;EAC7B,8BAA8B;AAChC;;AAEA;EACE,qEAAqE;EACrE,WAAW;AACb\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2020 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-settings-container .preference-array {\\n  list-style: none;\\n  padding: 0;\\n}\\n\\n.theia-settings-container .preference-array-element {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n  -ms-flex-pack: justify;\\n  justify-content: space-between;\\n  -webkit-box-align: center;\\n  -ms-flex-align: center;\\n  align-items: center;\\n  padding: calc(var(--theia-ui-padding) / 2) var(--theia-ui-padding);\\n  border-bottom: var(--theia-panel-border) 2px solid;\\n}\\n\\n.theia-settings-container .pref-input li:nth-last-child(2) {\\n  border-bottom: none;\\n}\\n\\n.theia-settings-container .pref-input li:last-child {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n  -ms-flex-align: center;\\n  align-items: center;\\n}\\n\\n.theia-settings-container .preference-array-element:hover {\\n  background-color: rgba(50%, 50%, 50%, 0.1);\\n}\\n\\n.theia-settings-container .preference-array-element-btn {\\n  width: 1.5em;\\n  height: 1.5em;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: center;\\n  -ms-flex-pack: center;\\n  justify-content: center;\\n  -webkit-box-align: center;\\n  -ms-flex-align: center;\\n  align-items: center;\\n}\\n\\n.theia-settings-container\\n  .preference-array-element\\n  .preference-array-element-btn {\\n  opacity: 0;\\n}\\n\\n.theia-settings-container\\n  .preference-array-element:hover\\n  .preference-array-element-btn {\\n  opacity: 1;\\n}\\n\\n.theia-settings-container .preference-array-element-btn:hover {\\n  background-color: rgba(50%, 50%, 50%, 0.1);\\n  cursor: pointer;\\n}\\n\\n.theia-settings-container .preference-array .codicon.codicon-add {\\n  margin-left: calc((var(--theia-icon-size) + 4px) * -1);\\n  margin-right: 4px;\\n  width: var(--theia-icon-size);\\n  height: var(--theia-icon-size);\\n}\\n\\n.theia-settings-container .preference-array-input {\\n  padding-right: calc(var(--theia-icon-size) + var(--theia-ui-padding));\\n  width: 100%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.theia-settings-container .settings-context-menu-container {\n  position: relative;\n  padding-left: var(--theia-ui-padding);\n}\n\n.theia-settings-container .settings-context-menu-btn {\n  cursor: pointer;\n}\n\n.theia-settings-container .settings-context-menu {\n  position: absolute;\n  width: var(--theia-settingsSidebar-width);\n  list-style: none;\n  padding: var(--theia-ui-padding);\n  bottom: calc(100% + 10px);\n  left: -10px;\n  z-index: 9999;\n  background-color: var(--theia-menu-background);\n}\n\n.theia-settings-container .settings-context-menu:before {\n  content: \"\";\n  position: absolute;\n  left: 10px;\n  bottom: -10px;\n  width: 0;\n  height: 0;\n  border-left: 10px solid transparent;\n  border-right: 10px solid transparent;\n  border-top: 10px solid var(--theia-menu-background);\n}\n\n.theia-settings-container .settings-context-menu li {\n  padding: var(--theia-ui-padding);\n}\n\n.theia-settings-container .settings-context-menu li:hover {\n  background-color: var(--theia-menu-selectionBackground);\n}\n\n.theia-settings-container .settings-context-menu i {\n  padding-right: var(--theia-ui-padding);\n  width: var(--theia-icon-size);\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-pack: center;\n  -ms-flex-pack: center;\n  justify-content: center;\n}\n\n.theia-settings-container .pref-context-menu-btn {\n  margin-left: 5px;\n}\n\n.theia-settings-container .pref-context-menu-btn:hover {\n  background-color: rgba(50%, 50%, 50%, 0.1);\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@theia/preferences/src/browser/style/preference-context-menu.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,kBAAkB;EAClB,qCAAqC;AACvC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,yCAAyC;EACzC,gBAAgB;EAChB,gCAAgC;EAChC,yBAAyB;EACzB,WAAW;EACX,aAAa;EACb,8CAA8C;AAChD;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,UAAU;EACV,aAAa;EACb,QAAQ;EACR,SAAS;EACT,mCAAmC;EACnC,oCAAoC;EACpC,mDAAmD;AACrD;;AAEA;EACE,gCAAgC;AAClC;;AAEA;EACE,uDAAuD;AACzD;;AAEA;EACE,sCAAsC;EACtC,6BAA6B;EAC7B,2BAA2B;EAC3B,2BAA2B;EAC3B,oBAAoB;EACpB,wBAAwB;EACxB,qBAAqB;EACrB,uBAAuB;AACzB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,0CAA0C;AAC5C\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2020 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-settings-container .settings-context-menu-container {\\n  position: relative;\\n  padding-left: var(--theia-ui-padding);\\n}\\n\\n.theia-settings-container .settings-context-menu-btn {\\n  cursor: pointer;\\n}\\n\\n.theia-settings-container .settings-context-menu {\\n  position: absolute;\\n  width: var(--theia-settingsSidebar-width);\\n  list-style: none;\\n  padding: var(--theia-ui-padding);\\n  bottom: calc(100% + 10px);\\n  left: -10px;\\n  z-index: 9999;\\n  background-color: var(--theia-menu-background);\\n}\\n\\n.theia-settings-container .settings-context-menu:before {\\n  content: \\\"\\\";\\n  position: absolute;\\n  left: 10px;\\n  bottom: -10px;\\n  width: 0;\\n  height: 0;\\n  border-left: 10px solid transparent;\\n  border-right: 10px solid transparent;\\n  border-top: 10px solid var(--theia-menu-background);\\n}\\n\\n.theia-settings-container .settings-context-menu li {\\n  padding: var(--theia-ui-padding);\\n}\\n\\n.theia-settings-container .settings-context-menu li:hover {\\n  background-color: var(--theia-menu-selectionBackground);\\n}\\n\\n.theia-settings-container .settings-context-menu i {\\n  padding-right: var(--theia-ui-padding);\\n  width: var(--theia-icon-size);\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n  -webkit-box-pack: center;\\n  -ms-flex-pack: center;\\n  justify-content: center;\\n}\\n\\n.theia-settings-container .pref-context-menu-btn {\\n  margin-left: 5px;\\n}\\n\\n.theia-settings-container .pref-context-menu-btn:hover {\\n  background-color: rgba(50%, 50%, 50%, 0.1);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2022 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.theia-settings-container .preference-file-container {\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.theia-settings-container .preference-file-input {\n  flex: 1;\n  padding-right: 4px;\n}\n\n.theia-settings-container .preference-file-button {\n  margin-left: 0px;\n  height: calc(var(--theia-content-line-height) + 4px);\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@theia/preferences/src/browser/style/preference-file.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,kBAAkB;EAClB,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,OAAO;EACP,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,oDAAoD;AACtD\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2022 EclipseSource and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-settings-container .preference-file-container {\\n  position: relative;\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.theia-settings-container .preference-file-input {\\n  flex: 1;\\n  padding-right: 4px;\\n}\\n\\n.theia-settings-container .preference-file-button {\\n  margin-left: 0px;\\n  height: calc(var(--theia-content-line-height) + 4px);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.theia-settings-container .object-preference-input-container {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-pack: justify;\n  -ms-flex-pack: justify;\n  justify-content: space-between;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n}\n\n.theia-settings-container .object-preference-input {\n  width: 100%;\n  max-height: 250px;\n  resize: none;\n  color: var(--theia-settings-textInputForeground);\n  background-color: var(--theia-settings-textInputBackground);\n  border-color: var(--theia-panel-border);\n  font-size: var(--theia-code-font-size);\n  margin-bottom: 10px;\n}\n\n.theia-settings-container .object-preference-input-btn-toggle {\n  padding: 0 calc(var(--theia-ui-padding) / 2);\n}\n\n.theia-settings-container .object-preference-input-btn-toggle-icon {\n  display: inline-block;\n  background: var(--theia-icon-open-json) no-repeat;\n  background-position-y: 1px;\n  height: var(--theia-icon-size);\n  width: var(--theia-icon-size);\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@theia/preferences/src/browser/style/preference-object.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,oBAAoB;EACpB,oBAAoB;EACpB,aAAa;EACb,yBAAyB;EACzB,sBAAsB;EACtB,8BAA8B;EAC9B,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,YAAY;EACZ,gDAAgD;EAChD,2DAA2D;EAC3D,uCAAuC;EACvC,sCAAsC;EACtC,mBAAmB;AACrB;;AAEA;EACE,4CAA4C;AAC9C;;AAEA;EACE,qBAAqB;EACrB,iDAAiD;EACjD,0BAA0B;EAC1B,8BAA8B;EAC9B,6BAA6B;AAC/B\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2020 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-settings-container .object-preference-input-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n  -ms-flex-pack: justify;\\n  justify-content: space-between;\\n  -ms-flex-wrap: wrap;\\n  flex-wrap: wrap;\\n}\\n\\n.theia-settings-container .object-preference-input {\\n  width: 100%;\\n  max-height: 250px;\\n  resize: none;\\n  color: var(--theia-settings-textInputForeground);\\n  background-color: var(--theia-settings-textInputBackground);\\n  border-color: var(--theia-panel-border);\\n  font-size: var(--theia-code-font-size);\\n  margin-bottom: 10px;\\n}\\n\\n.theia-settings-container .object-preference-input-btn-toggle {\\n  padding: 0 calc(var(--theia-ui-padding) / 2);\\n}\\n\\n.theia-settings-container .object-preference-input-btn-toggle-icon {\\n  display: inline-block;\\n  background: var(--theia-icon-open-json) no-repeat;\\n  background-position-y: 1px;\\n  height: var(--theia-icon-size);\\n  width: var(--theia-icon-size);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.theia-settings-container .settings-search-container {\n  display: flex;\n  align-items: center;\n}\n\n.theia-settings-container .settings-search-container .settings-search-input {\n  flex: 1;\n  text-indent: 8px;\n  padding: calc(var(--theia-ui-padding) / 2) 0;\n  box-sizing: border-box;\n  border: 1px solid var(--theia-dropdown-border);\n}\n\n.theia-settings-container .settings-search-container .option-buttons {\n  height: 23px;\n  align-items: center;\n  position: absolute;\n  z-index: 999;\n  right: 5px;\n  display: flex;\n}\n\n.theia-settings-container .settings-search-container .clear-all {\n  background: var(--theia-icon-clear);\n}\n\n.theia-settings-container .settings-search-container .results-found {\n  background-color: var(--theia-badge-background);\n  border-radius: 2px;\n  color: var(--theia-badge-foreground);\n  padding: calc(var(--theia-ui-padding) / 5) calc(var(--theia-ui-padding) / 2);\n}\n\n.theia-settings-container .settings-search-container .option {\n  width: 21px;\n  height: 21px;\n  margin: 0 1px;\n  display: inline-block;\n  box-sizing: border-box;\n  user-select: none;\n  background-repeat: no-repeat;\n  background-position: center;\n  border: var(--theia-border-width) solid transparent;\n  opacity: 0.7;\n  cursor: pointer;\n}\n\n.theia-settings-container .settings-search-container .enabled {\n  opacity: 1;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@theia/preferences/src/browser/style/search-input.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,OAAO;EACP,gBAAgB;EAChB,4CAA4C;EAC5C,sBAAsB;EACtB,8CAA8C;AAChD;;AAEA;EACE,YAAY;EACZ,mBAAmB;EACnB,kBAAkB;EAClB,YAAY;EACZ,UAAU;EACV,aAAa;AACf;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,+CAA+C;EAC/C,kBAAkB;EAClB,oCAAoC;EACpC,4EAA4E;AAC9E;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,qBAAqB;EACrB,sBAAsB;EACtB,iBAAiB;EACjB,4BAA4B;EAC5B,2BAA2B;EAC3B,mDAAmD;EACnD,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,UAAU;AACZ\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2020 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-settings-container .settings-search-container {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.theia-settings-container .settings-search-container .settings-search-input {\\n  flex: 1;\\n  text-indent: 8px;\\n  padding: calc(var(--theia-ui-padding) / 2) 0;\\n  box-sizing: border-box;\\n  border: 1px solid var(--theia-dropdown-border);\\n}\\n\\n.theia-settings-container .settings-search-container .option-buttons {\\n  height: 23px;\\n  align-items: center;\\n  position: absolute;\\n  z-index: 999;\\n  right: 5px;\\n  display: flex;\\n}\\n\\n.theia-settings-container .settings-search-container .clear-all {\\n  background: var(--theia-icon-clear);\\n}\\n\\n.theia-settings-container .settings-search-container .results-found {\\n  background-color: var(--theia-badge-background);\\n  border-radius: 2px;\\n  color: var(--theia-badge-foreground);\\n  padding: calc(var(--theia-ui-padding) / 5) calc(var(--theia-ui-padding) / 2);\\n}\\n\\n.theia-settings-container .settings-search-container .option {\\n  width: 21px;\\n  height: 21px;\\n  margin: 0 1px;\\n  display: inline-block;\\n  box-sizing: border-box;\\n  user-select: none;\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  border: var(--theia-border-width) solid transparent;\\n  opacity: 0.7;\\n  cursor: pointer;\\n}\\n\\n.theia-settings-container .settings-search-container .enabled {\\n  opacity: 1;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","module.exports = require('fuzzy');\n","module.exports = require('lodash.debounce');\n","module.exports = require('react-dom/client');\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport '../../src/browser/style/index.css';\nimport './preferences-monaco-contribution';\nimport { ContainerModule, interfaces } from '@theia/core/shared/inversify';\nimport { bindViewContribution, OpenHandler } from '@theia/core/lib/browser';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { PreferenceTreeGenerator } from './util/preference-tree-generator';\nimport { bindPreferenceProviders } from './preference-bindings';\nimport { bindPreferencesWidgets } from './views/preference-widget-bindings';\nimport { PreferencesContribution } from './preferences-contribution';\nimport { PreferenceScopeCommandManager } from './util/preference-scope-command-manager';\nimport { JsonSchemaContribution } from '@theia/core/lib/browser/json-schema-store';\nimport { PreferencesJsonSchemaContribution } from './preferences-json-schema-contribution';\nimport { MonacoJSONCEditor } from './monaco-jsonc-editor';\nimport { PreferenceTransaction, PreferenceTransactionFactory, preferenceTransactionFactoryCreator } from './preference-transaction-manager';\nimport { PreferenceOpenHandler } from './preference-open-handler';\n\nexport function bindPreferences(bind: interfaces.Bind, unbind: interfaces.Unbind): void {\n    bindPreferenceProviders(bind, unbind);\n    bindPreferencesWidgets(bind);\n\n    bind(PreferenceTreeGenerator).toSelf().inSingletonScope();\n\n    bindViewContribution(bind, PreferencesContribution);\n\n    bind(PreferenceOpenHandler).toSelf().inSingletonScope();\n    bind(OpenHandler).toService(PreferenceOpenHandler);\n\n    bind(PreferenceScopeCommandManager).toSelf().inSingletonScope();\n    bind(TabBarToolbarContribution).toService(PreferencesContribution);\n\n    bind(PreferencesJsonSchemaContribution).toSelf().inSingletonScope();\n    bind(JsonSchemaContribution).toService(PreferencesJsonSchemaContribution);\n\n    bind(MonacoJSONCEditor).toSelf().inSingletonScope();\n    bind(PreferenceTransaction).toSelf();\n    bind(PreferenceTransactionFactory).toFactory(preferenceTransactionFactoryCreator);\n}\n\nexport default new ContainerModule((bind, unbind, isBound, rebind) => {\n    bindPreferences(bind, unbind);\n});\n","// *****************************************************************************\n// Copyright (C) 2022 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { animationFrame, OpenHandler } from '@theia/core/lib/browser';\nimport URI from '@theia/core/lib/common/uri';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { PreferencesContribution } from './preferences-contribution';\n\n@injectable()\nexport class PreferenceOpenHandler implements OpenHandler {\n\n    readonly id = 'preference';\n\n    @inject(PreferencesContribution)\n    protected readonly preferencesContribution: PreferencesContribution;\n\n    canHandle(uri: URI): number {\n        return uri.scheme === this.id ? 500 : -1;\n    }\n\n    async open(uri: URI): Promise<boolean> {\n        const preferencesWidget = await this.preferencesContribution.openView();\n        const selector = `li[data-pref-id=\"${uri.path.toString()}\"]:not([data-node-id^=\"commonly-used@\"])`;\n        const element = document.querySelector(selector);\n        if (element instanceof HTMLElement) {\n            if (element.classList.contains('hidden')) {\n                // We clear the search term as we have clicked on a hidden preference\n                await preferencesWidget.setSearchTerm('');\n                await animationFrame();\n            }\n            element.scrollIntoView({\n                block: 'center'\n            });\n            element.focus();\n            return true;\n        }\n        return false;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport {\n    TreeModelImpl,\n    TreeWidget,\n    CompositeTreeNode,\n    TopDownTreeIterator,\n    TreeNode,\n    PreferenceSchemaProvider,\n    PreferenceDataProperty,\n    NodeProps,\n    ExpandableTreeNode,\n    SelectableTreeNode,\n    PreferenceService,\n} from '@theia/core/lib/browser';\nimport { Emitter } from '@theia/core';\nimport { PreferencesSearchbarWidget } from './views/preference-searchbar-widget';\nimport { PreferenceTreeGenerator, COMMONLY_USED_SECTION_PREFIX } from './util/preference-tree-generator';\nimport * as fuzzy from '@theia/core/shared/fuzzy';\nimport { PreferencesScopeTabBar } from './views/preference-scope-tabbar-widget';\nimport { Preference } from './util/preference-types';\nimport { Event } from '@theia/core/lib/common';\n\nexport interface PreferenceTreeNodeProps extends NodeProps {\n    visibleChildren: number;\n    isExpansible?: boolean;\n}\n\nexport interface PreferenceTreeNodeRow extends Readonly<TreeWidget.NodeRow>, PreferenceTreeNodeProps {\n    node: Preference.TreeNode;\n}\nexport enum PreferenceFilterChangeSource {\n    Schema,\n    Search,\n    Scope,\n}\nexport interface PreferenceFilterChangeEvent {\n    source: PreferenceFilterChangeSource\n}\n\n@injectable()\nexport class PreferenceTreeModel extends TreeModelImpl {\n\n    @inject(PreferenceSchemaProvider) protected readonly schemaProvider: PreferenceSchemaProvider;\n    @inject(PreferencesSearchbarWidget) protected readonly filterInput: PreferencesSearchbarWidget;\n    @inject(PreferenceTreeGenerator) protected readonly treeGenerator: PreferenceTreeGenerator;\n    @inject(PreferencesScopeTabBar) protected readonly scopeTracker: PreferencesScopeTabBar;\n    @inject(PreferenceService) protected readonly preferenceService: PreferenceService;\n\n    protected readonly onTreeFilterChangedEmitter = new Emitter<PreferenceFilterChangeEvent>();\n    readonly onFilterChanged = this.onTreeFilterChangedEmitter.event;\n\n    protected lastSearchedFuzzy: string = '';\n    protected lastSearchedLiteral: string = '';\n    protected _currentScope: number = Number(Preference.DEFAULT_SCOPE.scope);\n    protected _isFiltered: boolean = false;\n    protected _currentRows: Map<string, PreferenceTreeNodeRow> = new Map();\n    protected _totalVisibleLeaves = 0;\n\n    get currentRows(): Readonly<Map<string, PreferenceTreeNodeRow>> {\n        return this._currentRows;\n    }\n\n    get totalVisibleLeaves(): number {\n        return this._totalVisibleLeaves;\n    }\n\n    get isFiltered(): boolean {\n        return this._isFiltered;\n    }\n\n    get propertyList(): { [key: string]: PreferenceDataProperty; } {\n        return this.schemaProvider.getCombinedSchema().properties;\n    }\n\n    get currentScope(): Preference.SelectedScopeDetails {\n        return this.scopeTracker.currentScope;\n    }\n\n    get onSchemaChanged(): Event<CompositeTreeNode> {\n        return this.treeGenerator.onSchemaChanged;\n    }\n\n    @postConstruct()\n    protected override init(): void {\n        this.doInit();\n    }\n\n    protected async doInit(): Promise<void> {\n        super.init();\n        this.toDispose.pushAll([\n            this.treeGenerator.onSchemaChanged(newTree => this.handleNewSchema(newTree)),\n            this.scopeTracker.onScopeChanged(scopeDetails => {\n                this._currentScope = scopeDetails.scope;\n                this.updateFilteredRows(PreferenceFilterChangeSource.Scope);\n            }),\n            this.filterInput.onFilterChanged(newSearchTerm => {\n                this.lastSearchedLiteral = newSearchTerm;\n                this.lastSearchedFuzzy = newSearchTerm.replace(/\\s/g, '');\n                this._isFiltered = newSearchTerm.length > 2;\n                if (this.isFiltered) {\n                    this.expandAll();\n                } else if (CompositeTreeNode.is(this.root)) {\n                    this.collapseAll(this.root);\n                }\n                this.updateFilteredRows(PreferenceFilterChangeSource.Search);\n            }),\n            this.onFilterChanged(() => {\n                this.filterInput.updateResultsCount(this._totalVisibleLeaves);\n            }),\n            this.onTreeFilterChangedEmitter,\n        ]);\n        await this.preferenceService.ready;\n        this.handleNewSchema(this.treeGenerator.root);\n    }\n\n    private handleNewSchema(newRoot: CompositeTreeNode): void {\n        this.root = newRoot;\n        if (this.isFiltered) {\n            this.expandAll();\n        }\n        this.updateFilteredRows(PreferenceFilterChangeSource.Schema);\n    }\n\n    protected updateRows(): void {\n        const root = this.root;\n        this._currentRows = new Map();\n        if (root) {\n            this._totalVisibleLeaves = 0;\n            let index = 0;\n\n            for (const node of new TopDownTreeIterator(root, {\n                pruneCollapsed: false,\n                pruneSiblings: true\n            })) {\n                if (TreeNode.isVisible(node) && Preference.TreeNode.is(node)) {\n                    const { id } = Preference.TreeNode.getGroupAndIdFromNodeId(node.id);\n                    if (CompositeTreeNode.is(node) || this.passesCurrentFilters(node, id)) {\n                        this.updateVisibleChildren(node);\n\n                        this._currentRows.set(node.id, {\n                            index: index++,\n                            node,\n                            depth: node.depth,\n                            visibleChildren: 0,\n                        });\n                    }\n                }\n            }\n        }\n    }\n\n    protected updateFilteredRows(source: PreferenceFilterChangeSource): void {\n        this.updateRows();\n        this.onTreeFilterChangedEmitter.fire({ source });\n    }\n\n    protected passesCurrentFilters(node: Preference.LeafNode, prefID: string): boolean {\n        if (!this.schemaProvider.isValidInScope(prefID, this._currentScope)) {\n            return false;\n        }\n        if (!this._isFiltered) {\n            return true;\n        }\n        // When filtering, VSCode will render an item that is present in the commonly used section only once but render both its possible parents in the left-hand tree.\n        // E.g. searching for editor.renderWhitespace will show one item in the main panel, but both 'Commonly Used' and 'Text Editor' in the left tree.\n        // That seems counterintuitive and introduces a number of special cases, so I prefer to remove the commonly used section entirely when the user searches.\n        if (node.id.startsWith(COMMONLY_USED_SECTION_PREFIX)) {\n            return false;\n        }\n        return fuzzy.test(this.lastSearchedFuzzy, prefID) // search matches preference name.\n            // search matches description. Fuzzy isn't ideal here because the score depends on the order of discovery.\n            || (node.preference.data.description ?? '').includes(this.lastSearchedLiteral);\n    }\n\n    protected override isVisibleSelectableNode(node: TreeNode): node is SelectableTreeNode {\n        return CompositeTreeNode.is(node) && !!this._currentRows.get(node.id)?.visibleChildren;\n    }\n\n    protected updateVisibleChildren(node: TreeNode): void {\n        if (!CompositeTreeNode.is(node)) {\n            this._totalVisibleLeaves++;\n            let nextParent = node.parent?.id && this._currentRows.get(node.parent?.id);\n            while (nextParent && nextParent.node !== this.root) {\n                if (nextParent) {\n                    nextParent.visibleChildren += 1;\n                }\n                nextParent = nextParent.node.parent?.id && this._currentRows.get(nextParent.node.parent?.id);\n                if (nextParent) {\n                    nextParent.isExpansible = true;\n                }\n            }\n        }\n    }\n\n    collapseAllExcept(openNode: TreeNode | undefined): void {\n        if (ExpandableTreeNode.is(openNode)) {\n            this.expandNode(openNode);\n        }\n        if (CompositeTreeNode.is(this.root)) {\n            this.root.children.forEach(child => {\n                if (child !== openNode && ExpandableTreeNode.is(child)) {\n                    this.collapseNode(child);\n                }\n            });\n        }\n    }\n\n    protected expandAll(): void {\n        if (CompositeTreeNode.is(this.root)) {\n            this.root.children.forEach(child => {\n                if (ExpandableTreeNode.is(child)) {\n                    this.expandNode(child);\n                }\n            });\n        }\n    }\n\n    getNodeFromPreferenceId(id: string): Preference.TreeNode | undefined {\n        const node = this.getNode(this.treeGenerator.getNodeId(id));\n        return node && Preference.TreeNode.is(node) ? node : undefined;\n    }\n\n    /**\n     * @returns true if selection changed, false otherwise\n     */\n    selectIfNotSelected(node: SelectableTreeNode): boolean {\n        const currentlySelected = this.selectedNodes[0];\n        if (node !== currentlySelected) {\n            this.selectNode(node);\n            return true;\n        }\n        return false;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, named, optional } from '@theia/core/shared/inversify';\nimport { MenuModelRegistry, CommandRegistry, nls } from '@theia/core';\nimport {\n    CommonMenus,\n    AbstractViewContribution,\n    CommonCommands,\n    KeybindingRegistry,\n    Widget,\n    PreferenceScope,\n    PreferenceProvider,\n    PreferenceService,\n    QuickInputService,\n    QuickPickItem,\n    isFirefox,\n    PreferenceSchemaProvider,\n} from '@theia/core/lib/browser';\nimport { isOSX } from '@theia/core/lib/common/os';\nimport { TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { EditorManager, EditorWidget } from '@theia/editor/lib/browser';\nimport URI from '@theia/core/lib/common/uri';\nimport { PreferencesWidget } from './views/preference-widget';\nimport { WorkspacePreferenceProvider } from './workspace-preference-provider';\nimport { Preference, PreferencesCommands, PreferenceMenus } from './util/preference-types';\nimport { ClipboardService } from '@theia/core/lib/browser/clipboard-service';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\n\n@injectable()\nexport class PreferencesContribution extends AbstractViewContribution<PreferencesWidget> {\n\n    @inject(FileService) protected readonly fileService: FileService;\n    @inject(PreferenceProvider) @named(PreferenceScope.Workspace) protected readonly workspacePreferenceProvider: WorkspacePreferenceProvider;\n    @inject(EditorManager) protected readonly editorManager: EditorManager;\n    @inject(PreferenceService) protected readonly preferenceService: PreferenceService;\n    @inject(ClipboardService) protected readonly clipboardService: ClipboardService;\n    @inject(PreferencesWidget) protected readonly scopeTracker: PreferencesWidget;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(QuickInputService) @optional() protected readonly quickInputService: QuickInputService;\n    @inject(PreferenceSchemaProvider) protected readonly schema: PreferenceSchemaProvider;\n\n    constructor() {\n        super({\n            widgetId: PreferencesWidget.ID,\n            widgetName: PreferencesWidget.LABEL,\n            defaultWidgetOptions: {\n                area: 'main',\n            },\n        });\n    }\n\n    override registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(CommonCommands.OPEN_PREFERENCES, {\n            execute: async (query?: string) => {\n                const widget = await this.openView({ activate: true });\n                if (typeof query === 'string') {\n                    widget.setSearchTerm(query);\n                }\n            },\n        });\n        commands.registerCommand(PreferencesCommands.OPEN_PREFERENCES_JSON_TOOLBAR, {\n            isEnabled: () => true,\n            isVisible: w => this.withWidget(w, () => true),\n            execute: (preferenceId: string) => {\n                this.openPreferencesJSON(preferenceId);\n            }\n        });\n        commands.registerCommand(PreferencesCommands.COPY_JSON_NAME, {\n            isEnabled: Preference.EditorCommandArgs.is,\n            isVisible: Preference.EditorCommandArgs.is,\n            execute: ({ id, value }: Preference.EditorCommandArgs) => {\n                this.clipboardService.writeText(id);\n            }\n        });\n        commands.registerCommand(PreferencesCommands.COPY_JSON_VALUE, {\n            isEnabled: Preference.EditorCommandArgs.is,\n            isVisible: Preference.EditorCommandArgs.is,\n            execute: ({ id, value }: { id: string, value: string; }) => {\n                const jsonString = `\"${id}\": ${JSON.stringify(value)}`;\n                this.clipboardService.writeText(jsonString);\n            }\n        });\n        commands.registerCommand(PreferencesCommands.RESET_PREFERENCE, {\n            isEnabled: Preference.EditorCommandArgs.is,\n            isVisible: Preference.EditorCommandArgs.is,\n            execute: ({ id }: Preference.EditorCommandArgs) => {\n                this.preferenceService.set(id, undefined, Number(this.scopeTracker.currentScope.scope), this.scopeTracker.currentScope.uri);\n            }\n        });\n        commands.registerCommand(PreferencesCommands.OPEN_USER_PREFERENCES, {\n            execute: async () => {\n                const widget = await this.openView({ activate: true });\n                widget.setScope(PreferenceScope.User);\n            }\n        });\n        commands.registerCommand(PreferencesCommands.OPEN_WORKSPACE_PREFERENCES, {\n            isEnabled: () => !!this.workspaceService.workspace,\n            isVisible: () => !!this.workspaceService.workspace,\n            execute: async () => {\n                const widget = await this.openView({ activate: true });\n                widget.setScope(PreferenceScope.Workspace);\n            }\n        });\n        commands.registerCommand(PreferencesCommands.OPEN_FOLDER_PREFERENCES, {\n            isEnabled: () => !!this.workspaceService.isMultiRootWorkspaceOpened && this.workspaceService.tryGetRoots().length > 0,\n            isVisible: () => !!this.workspaceService.isMultiRootWorkspaceOpened && this.workspaceService.tryGetRoots().length > 0,\n            execute: () => this.openFolderPreferences(root => {\n                this.openView({ activate: true });\n                this.scopeTracker.setScope(root.resource);\n            })\n        });\n        commands.registerCommand(PreferencesCommands.OPEN_USER_PREFERENCES_JSON, {\n            execute: async () => this.openJson(PreferenceScope.User)\n        });\n        commands.registerCommand(PreferencesCommands.OPEN_WORKSPACE_PREFERENCES_JSON, {\n            isEnabled: () => !!this.workspaceService.workspace,\n            isVisible: () => !!this.workspaceService.workspace,\n            execute: async () => this.openJson(PreferenceScope.Workspace)\n        });\n        commands.registerCommand(PreferencesCommands.OPEN_FOLDER_PREFERENCES_JSON, {\n            isEnabled: () => !!this.workspaceService.isMultiRootWorkspaceOpened && this.workspaceService.tryGetRoots().length > 0,\n            isVisible: () => !!this.workspaceService.isMultiRootWorkspaceOpened && this.workspaceService.tryGetRoots().length > 0,\n            execute: () => this.openFolderPreferences(root => this.openJson(PreferenceScope.Folder, root.resource.toString()))\n        });\n    }\n\n    override registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction(CommonMenus.FILE_SETTINGS_SUBMENU_OPEN, {\n            commandId: CommonCommands.OPEN_PREFERENCES.id,\n            label: nls.localizeByDefault('Settings'),\n            order: 'a10',\n        });\n        menus.registerMenuAction(CommonMenus.MANAGE_SETTINGS, {\n            commandId: CommonCommands.OPEN_PREFERENCES.id,\n            label: nls.localizeByDefault('Settings'),\n            order: 'a10',\n        });\n        menus.registerMenuAction(PreferenceMenus.PREFERENCE_EDITOR_CONTEXT_MENU, {\n            commandId: PreferencesCommands.RESET_PREFERENCE.id,\n            label: PreferencesCommands.RESET_PREFERENCE.label,\n            order: 'a'\n        });\n        menus.registerMenuAction(PreferenceMenus.PREFERENCE_EDITOR_COPY_ACTIONS, {\n            commandId: PreferencesCommands.COPY_JSON_VALUE.id,\n            label: PreferencesCommands.COPY_JSON_VALUE.label,\n            order: 'b'\n        });\n        menus.registerMenuAction(PreferenceMenus.PREFERENCE_EDITOR_COPY_ACTIONS, {\n            commandId: PreferencesCommands.COPY_JSON_NAME.id,\n            label: PreferencesCommands.COPY_JSON_NAME.label,\n            order: 'c'\n        });\n    }\n\n    override registerKeybindings(keybindings: KeybindingRegistry): void {\n        keybindings.registerKeybinding({\n            command: CommonCommands.OPEN_PREFERENCES.id,\n            keybinding: (isOSX && !isFirefox) ? 'cmd+,' : 'ctrl+,'\n        });\n    }\n\n    registerToolbarItems(toolbar: TabBarToolbarRegistry): void {\n        toolbar.registerItem({\n            id: PreferencesCommands.OPEN_PREFERENCES_JSON_TOOLBAR.id,\n            command: PreferencesCommands.OPEN_PREFERENCES_JSON_TOOLBAR.id,\n            tooltip: PreferencesCommands.OPEN_USER_PREFERENCES_JSON.label,\n            priority: 0,\n        });\n    }\n\n    protected async openPreferencesJSON(opener: string | PreferencesWidget): Promise<void> {\n        const { scope, activeScopeIsFolder, uri } = this.scopeTracker.currentScope;\n        const scopeID = Number(scope);\n        let preferenceId = '';\n        if (typeof opener === 'string') {\n            preferenceId = opener;\n            const currentPreferenceValue = this.preferenceService.inspect(preferenceId, uri);\n            const valueInCurrentScope = Preference.getValueInScope(currentPreferenceValue, scopeID) ?? currentPreferenceValue?.defaultValue;\n            this.preferenceService.set(preferenceId, valueInCurrentScope, scopeID, uri);\n        }\n\n        let jsonEditorWidget: EditorWidget;\n        const jsonUriToOpen = await this.obtainConfigUri(scopeID, activeScopeIsFolder, uri);\n        if (jsonUriToOpen) {\n            jsonEditorWidget = await this.editorManager.open(jsonUriToOpen);\n\n            if (preferenceId) {\n                const text = jsonEditorWidget.editor.document.getText();\n                if (preferenceId) {\n                    const { index } = text.match(preferenceId)!;\n                    const numReturns = text.slice(0, index).match(new RegExp('\\n', 'g'))!.length;\n                    jsonEditorWidget.editor.cursor = { line: numReturns, character: 4 + preferenceId.length + 4 };\n                }\n            }\n        }\n    }\n\n    protected async openJson(scope: PreferenceScope, resource?: string): Promise<void> {\n        const jsonUriToOpen = await this.obtainConfigUri(scope, false, resource);\n        if (jsonUriToOpen) {\n            await this.editorManager.open(jsonUriToOpen);\n        }\n    }\n\n    /**\n     * Prompts which workspace root folder to open the JSON settings.\n     */\n    protected async openFolderPreferences(callback: (root: FileStat) => unknown): Promise<void> {\n        const roots = this.workspaceService.tryGetRoots();\n        if (roots.length === 1) {\n            callback(roots[0]);\n        } else {\n            const items: QuickPickItem[] = roots.map(root => ({\n                label: root.name,\n                description: root.resource.path.fsPath(),\n                execute: () => callback(root)\n            }));\n            this.quickInputService?.showQuickPick(items, { placeholder: 'Select workspace folder' });\n        }\n    }\n\n    private async obtainConfigUri(serializedScope: number, activeScopeIsFolder: boolean, resource?: string): Promise<URI | undefined> {\n        let scope: PreferenceScope = serializedScope;\n        if (activeScopeIsFolder) {\n            scope = PreferenceScope.Folder;\n        }\n        const resourceUri = !!resource ? resource : undefined;\n        const configUri = this.preferenceService.getConfigUri(scope, resourceUri);\n        if (!configUri) {\n            return undefined;\n        }\n        if (configUri && !await this.fileService.exists(configUri)) {\n            await this.fileService.create(configUri);\n        }\n        return configUri;\n    }\n\n    /**\n     * Determine if the current widget is the PreferencesWidget.\n     */\n    protected withWidget<T>(widget: Widget | undefined = this.tryGetWidget(), fn: (widget: PreferencesWidget) => T): T | false {\n        if (widget instanceof PreferencesWidget && widget.id === PreferencesWidget.ID) {\n            return fn(widget);\n        }\n        return false;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { InMemoryResources } from '@theia/core';\nimport { JsonSchemaRegisterContext, JsonSchemaContribution } from '@theia/core/lib/browser/json-schema-store';\nimport { PreferenceSchemaProvider } from '@theia/core/lib/browser/preferences/preference-contribution';\nimport { PreferenceConfigurations } from '@theia/core/lib/browser/preferences/preference-configurations';\nimport { PreferenceScope } from '@theia/core/lib/browser';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\n\nconst PREFERENCE_URI_PREFIX = 'vscode://schemas/settings/';\nconst USER_STORAGE_PREFIX = 'user-storage:/';\n\n@injectable()\nexport class PreferencesJsonSchemaContribution implements JsonSchemaContribution {\n    private serializeSchema = (scope: PreferenceScope) => JSON.stringify(this.schemaProvider.getSchema(scope));\n\n    @inject(PreferenceSchemaProvider)\n    protected readonly schemaProvider: PreferenceSchemaProvider;\n\n    @inject(InMemoryResources)\n    protected readonly inmemoryResources: InMemoryResources;\n\n    @inject(PreferenceConfigurations)\n    protected readonly preferenceConfigurations: PreferenceConfigurations;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    registerSchemas(context: JsonSchemaRegisterContext): void {\n        this.registerSchema(PreferenceScope.Default, context);\n        this.registerSchema(PreferenceScope.User, context);\n        this.registerSchema(PreferenceScope.Workspace, context);\n        this.registerSchema(PreferenceScope.Folder, context);\n\n        this.workspaceService.updateSchema('settings', { $ref: this.getSchemaURIForScope(PreferenceScope.Workspace).toString() });\n        this.schemaProvider.onDidPreferenceSchemaChanged(() => this.updateInMemoryResources());\n    }\n\n    private registerSchema(scope: PreferenceScope, context: JsonSchemaRegisterContext): void {\n        const scopeStr = PreferenceScope[scope].toLowerCase();\n        const uri = new URI(PREFERENCE_URI_PREFIX + scopeStr);\n\n        this.inmemoryResources.add(uri, this.serializeSchema(scope));\n\n        context.registerSchema({\n            fileMatch: this.getFileMatch(scopeStr),\n            url: uri.toString()\n        });\n    }\n\n    private updateInMemoryResources(): void {\n        this.inmemoryResources.update(this.getSchemaURIForScope(PreferenceScope.Default),\n            this.serializeSchema(+PreferenceScope.Default));\n        this.inmemoryResources.update(this.getSchemaURIForScope(PreferenceScope.User),\n            this.serializeSchema(+PreferenceScope.User));\n        this.inmemoryResources.update(this.getSchemaURIForScope(PreferenceScope.Workspace),\n            this.serializeSchema(+PreferenceScope.Workspace));\n        this.inmemoryResources.update(this.getSchemaURIForScope(PreferenceScope.Folder),\n            this.serializeSchema(+PreferenceScope.Folder));\n    }\n\n    private getSchemaURIForScope(scope: PreferenceScope): URI {\n        return new URI(PREFERENCE_URI_PREFIX + PreferenceScope[scope].toLowerCase());\n    }\n\n    private getFileMatch(scope: string): string[] {\n        const baseName = this.preferenceConfigurations.getConfigName() + '.json';\n        return [baseName, new URI(USER_STORAGE_PREFIX + scope).resolve(baseName).toString()];\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as monaco from '@theia/monaco-editor-core';\n\nmonaco.languages.register({\n    id: 'jsonc',\n    'aliases': [\n        'JSON with Comments'\n    ],\n    'filenames': [\n        'settings.json'\n    ]\n});\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { PreferenceScope, LabelProvider, codicon } from '@theia/core/lib/browser';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\nimport { CommandRegistry, MenuModelRegistry, Command } from '@theia/core/lib/common';\nimport { Preference, PreferenceMenus } from './preference-types';\n\n/**\n * @deprecated since 1.17.0 moved to PreferenceMenus namespace.\n */\nexport const FOLDER_SCOPE_MENU_PATH = PreferenceMenus.FOLDER_SCOPE_MENU_PATH;\n\n/**\n * @deprecated since 1.17.0. This work is now done in the PreferenceScopeTabbarWidget.\n */\n@injectable()\nexport class PreferenceScopeCommandManager {\n    @inject(CommandRegistry) protected readonly commandRegistry: CommandRegistry;\n    @inject(MenuModelRegistry) protected readonly menuModelRegistry: MenuModelRegistry;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n\n    protected foldersAsCommands: Command[] = [];\n\n    createFolderWorkspacesMenu(\n        folderWorkspaces: FileStat[],\n        currentFolderURI?: string,\n    ): void {\n        this.foldersAsCommands.forEach(folderCommand => {\n            this.menuModelRegistry.unregisterMenuAction(folderCommand, FOLDER_SCOPE_MENU_PATH);\n            this.commandRegistry.unregisterCommand(folderCommand);\n        });\n        this.foldersAsCommands.length = 0;\n\n        folderWorkspaces.forEach(folderWorkspace => {\n            const folderLabel = this.labelProvider.getName(folderWorkspace.resource);\n\n            const iconClass = currentFolderURI === folderWorkspace.resource.toString() ? codicon('pass') : '';\n            const newFolderAsCommand = {\n                id: `preferenceScopeCommand:${folderWorkspace.resource.toString()}`,\n                label: folderLabel,\n                iconClass: iconClass\n            };\n\n            this.foldersAsCommands.push(newFolderAsCommand);\n\n            this.commandRegistry.registerCommand(newFolderAsCommand, {\n                isVisible: (callback, check) => check === 'from-tabbar',\n                isEnabled: (callback, check) => check === 'from-tabbar',\n                execute: (callback: (scopeDetails: Preference.SelectedScopeDetails) => void) => {\n                    callback({ scope: PreferenceScope.Folder, uri: folderWorkspace.resource.toString(), activeScopeIsFolder: true });\n                }\n            });\n\n            this.menuModelRegistry.registerMenuAction(FOLDER_SCOPE_MENU_PATH, {\n                commandId: newFolderAsCommand.id,\n                label: newFolderAsCommand.label\n            });\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { CompositeTreeNode, PreferenceSchemaProvider, OVERRIDE_PROPERTY_PATTERN, PreferenceDataProperty } from '@theia/core/lib/browser';\nimport { PreferenceConfigurations } from '@theia/core/lib/browser/preferences/preference-configurations';\nimport { Emitter } from '@theia/core';\nimport debounce = require('@theia/core/shared/lodash.debounce');\nimport { Preference } from './preference-types';\n\nexport const COMMONLY_USED_SECTION_PREFIX = 'commonly-used';\n@injectable()\nexport class PreferenceTreeGenerator {\n\n    @inject(PreferenceSchemaProvider) protected readonly schemaProvider: PreferenceSchemaProvider;\n    @inject(PreferenceConfigurations) protected readonly preferenceConfigs: PreferenceConfigurations;\n\n    protected _root: CompositeTreeNode;\n\n    protected readonly onSchemaChangedEmitter = new Emitter<CompositeTreeNode>();\n    readonly onSchemaChanged = this.onSchemaChangedEmitter.event;\n    protected readonly commonlyUsedPreferences = [\n        'files.autoSave', 'files.autoSaveDelay', 'editor.fontSize',\n        'editor.fontFamily', 'editor.tabSize', 'editor.renderWhitespace',\n        'editor.cursorStyle', 'editor.multiCursorModifier', 'editor.insertSpaces',\n        'editor.wordWrap', 'files.exclude', 'files.associations'\n    ];\n    protected readonly topLevelCategories = new Map([\n        [COMMONLY_USED_SECTION_PREFIX, 'Commonly Used'],\n        ['editor', 'Text Editor'],\n        ['workbench', 'Workbench'],\n        ['window', 'Window'],\n        ['features', 'Features'],\n        ['application', 'Application'],\n        ['security', 'Security'],\n        ['extensions', 'Extensions']\n    ]);\n    protected readonly sectionAssignments = new Map([\n        ['breadcrumbs', 'workbench'],\n        ['comments', 'features'],\n        ['debug', 'features'],\n        ['diffEditor', 'editor'],\n        ['explorer', 'features'],\n        ['extensions', 'features'],\n        ['files', 'editor'],\n        ['hosted-plugin', 'features'],\n        ['http', 'application'],\n        ['keyboard', 'application'],\n        ['notification', 'workbench'],\n        ['output', 'features'],\n        ['preview', 'features'],\n        ['problems', 'features'],\n        ['scm', 'features'],\n        ['search', 'features'],\n        ['task', 'features'],\n        ['terminal', 'features'],\n        ['toolbar', 'features'],\n        ['webview', 'features'],\n        ['workspace', 'application'],\n    ]);\n    protected readonly defaultTopLevelCategory = 'extensions';\n\n    get root(): CompositeTreeNode {\n        return this._root ?? this.generateTree();\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.doInit();\n    }\n\n    protected async doInit(): Promise<void> {\n        await this.schemaProvider.ready;\n        this.schemaProvider.onDidPreferenceSchemaChanged(() => this.handleChangedSchema());\n        this.handleChangedSchema();\n    }\n\n    generateTree(): CompositeTreeNode {\n        const preferencesSchema = this.schemaProvider.getCombinedSchema();\n        const propertyNames = Object.keys(preferencesSchema.properties);\n        const groups = new Map<string, Preference.CompositeTreeNode>();\n        const root = this.createRootNode();\n\n        for (const id of this.topLevelCategories.keys()) {\n            this.getOrCreatePreferencesGroup(id, id, root, groups);\n        }\n        const commonlyUsed = this.getOrCreatePreferencesGroup(COMMONLY_USED_SECTION_PREFIX, COMMONLY_USED_SECTION_PREFIX, root, groups);\n        for (const preference of this.commonlyUsedPreferences) {\n            if (preference in preferencesSchema.properties) {\n                this.createLeafNode(preference, commonlyUsed, preferencesSchema.properties[preference]);\n            }\n        }\n        for (const propertyName of propertyNames) {\n            const property = preferencesSchema.properties[propertyName];\n            if (!this.preferenceConfigs.isSectionName(propertyName) && !OVERRIDE_PROPERTY_PATTERN.test(propertyName) && !property.deprecationMessage) {\n                const labels = propertyName.split('.');\n                const groupID = this.getGroupName(labels);\n                const subgroupName = this.getSubgroupName(labels, groupID);\n                const subgroupID = [groupID, subgroupName].join('.');\n                const toplevelParent = this.getOrCreatePreferencesGroup(groupID, groupID, root, groups);\n                const immediateParent = subgroupName && this.getOrCreatePreferencesGroup(subgroupID, groupID, toplevelParent, groups);\n                this.createLeafNode(propertyName, immediateParent || toplevelParent, property);\n            }\n        }\n\n        for (const group of groups.values()) {\n            if (group.id !== `${COMMONLY_USED_SECTION_PREFIX}@${COMMONLY_USED_SECTION_PREFIX}`) {\n                (group.children as Preference.TreeNode[]).sort((a, b) => {\n                    const aIsComposite = CompositeTreeNode.is(a);\n                    const bIsComposite = CompositeTreeNode.is(b);\n                    if (aIsComposite && !bIsComposite) {\n                        return 1;\n                    }\n                    if (bIsComposite && !aIsComposite) {\n                        return -1;\n                    }\n                    return a.id.localeCompare(b.id);\n                });\n            }\n        }\n\n        this._root = root;\n        return root;\n    };\n\n    getNodeId(preferenceId: string): string {\n        const expectedGroup = this.getGroupName(preferenceId.split('.'));\n        const expectedId = `${expectedGroup}@${preferenceId}`;\n        return expectedId;\n    }\n\n    protected getGroupName(labels: string[]): string {\n        const defaultGroup = labels[0];\n        if (this.topLevelCategories.has(defaultGroup)) {\n            return defaultGroup;\n        }\n        const assignedGroup = this.sectionAssignments.get(defaultGroup);\n        if (assignedGroup) {\n            return assignedGroup;\n        }\n        return this.defaultTopLevelCategory;\n    }\n\n    protected getSubgroupName(labels: string[], computedGroupName: string): string | undefined {\n        if (computedGroupName !== labels[0]) {\n            return labels[0];\n        } else if (labels.length > 2) {\n            return labels[1];\n        }\n    }\n\n    doHandleChangedSchema(): void {\n        const newTree = this.generateTree();\n        this.onSchemaChangedEmitter.fire(newTree);\n    }\n\n    handleChangedSchema = debounce(this.doHandleChangedSchema, 200);\n\n    protected createRootNode(): CompositeTreeNode {\n        return {\n            id: 'root-node-id',\n            name: '',\n            parent: undefined,\n            visible: true,\n            children: []\n        };\n    }\n\n    protected createLeafNode(property: string, preferencesGroup: Preference.CompositeTreeNode, data: PreferenceDataProperty): Preference.LeafNode {\n        const { group } = Preference.TreeNode.getGroupAndIdFromNodeId(preferencesGroup.id);\n        const newNode = {\n            id: `${group}@${property}`,\n            preferenceId: property,\n            parent: preferencesGroup,\n            preference: { data },\n            depth: Preference.TreeNode.isTopLevel(preferencesGroup) ? 1 : 2,\n        };\n        CompositeTreeNode.addChild(preferencesGroup, newNode);\n        return newNode;\n    }\n\n    protected createPreferencesGroup(id: string, group: string, root: CompositeTreeNode): Preference.CompositeTreeNode {\n        const newNode = {\n            id: `${group}@${id}`,\n            visible: true,\n            parent: root,\n            children: [],\n            expanded: false,\n            selected: false,\n            depth: 0,\n        };\n        const isTopLevel = Preference.TreeNode.isTopLevel(newNode);\n        if (!isTopLevel) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            delete (newNode as any).expanded;\n        }\n        newNode.depth = isTopLevel ? 0 : 1;\n        CompositeTreeNode.addChild(root, newNode);\n        return newNode;\n    }\n\n    getCustomLabelFor(id: string): string | undefined {\n        return this.topLevelCategories.get(id);\n    }\n\n    protected getOrCreatePreferencesGroup(id: string, group: string, root: CompositeTreeNode, groups: Map<string, Preference.CompositeTreeNode>): Preference.CompositeTreeNode {\n        const existingGroup = groups.get(id);\n        if (existingGroup) { return existingGroup; }\n        const newNode = this.createPreferencesGroup(id, group, root);\n        groups.set(id, newNode);\n        return newNode;\n    };\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { LabelProviderContribution, TreeNode } from '@theia/core/lib/browser';\nimport { Preference } from './preference-types';\nimport { PreferenceTreeGenerator } from './preference-tree-generator';\n@injectable()\nexport class PreferenceTreeLabelProvider implements LabelProviderContribution {\n    @inject(PreferenceTreeGenerator) protected readonly treeGenerator: PreferenceTreeGenerator;\n\n    canHandle(element: object): number {\n        return TreeNode.is(element) && Preference.TreeNode.is(element) ? 150 : 0;\n    }\n\n    getName(node: Preference.TreeNode): string {\n        const { id } = Preference.TreeNode.getGroupAndIdFromNodeId(node.id);\n        return this.formatString(this.treeGenerator.getCustomLabelFor(id) ?? id.split('.').pop()!);\n    }\n\n    getPrefix(node: Preference.TreeNode, fullPath = false): string | undefined {\n        const { depth } = node;\n        const { id, group } = Preference.TreeNode.getGroupAndIdFromNodeId(node.id);\n        const segments = id.split('.');\n        const segmentsHandled = group === segments[0] ? depth : depth - 1;\n        segments.pop(); // Ignore the leaf name.\n        const prefixSegments = fullPath ? segments : segments.slice(segmentsHandled);\n        if (prefixSegments.length) {\n            let output = prefixSegments.length > 1 ? `${this.formatString(prefixSegments[0])} › ` : `${this.formatString(prefixSegments[0])}: `;\n            for (const segment of prefixSegments.slice(1)) {\n                output += `${this.formatString(segment)}: `;\n            }\n            return output;\n        }\n    }\n\n    protected formatString(string: string): string {\n        let formattedString = string[0].toLocaleUpperCase();\n        for (let i = 1; i < string.length; i++) {\n            if (this.isUpperCase(string[i]) && !/\\s/.test(string[i - 1]) && !this.isUpperCase(string[i - 1])) {\n                formattedString += ' ';\n            }\n            formattedString += string[i];\n        }\n        return formattedString.trim();\n    }\n\n    protected isUpperCase(char: string): boolean {\n        return char === char.toLocaleUpperCase() && char.toLocaleLowerCase() !== char.toLocaleUpperCase();\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport {\n    PreferenceDataProperty,\n    PreferenceScope,\n    TreeNode as BaseTreeNode,\n    CompositeTreeNode as BaseCompositeTreeNode,\n    PreferenceInspection,\n    CommonCommands,\n} from '@theia/core/lib/browser';\nimport { Command, MenuPath } from '@theia/core';\nimport { JSONValue } from '@theia/core/shared/@phosphor/coreutils';\nimport { JsonType } from '@theia/core/lib/common/json-schema';\n\nexport namespace Preference {\n\n    export interface EditorCommandArgs {\n        id: string;\n        value: string | undefined;\n    }\n\n    export namespace EditorCommandArgs {\n        export function is(prefObject: EditorCommandArgs): prefObject is EditorCommandArgs {\n            return !!prefObject && 'id' in prefObject && 'value' in prefObject;\n        }\n    }\n\n    export const Node = Symbol('Preference.Node');\n    export type Node = TreeNode;\n\n    export type TreeNode = CompositeTreeNode | LeafNode;\n\n    export namespace TreeNode {\n        export const is = (node: BaseTreeNode | TreeNode): node is TreeNode => 'depth' in node;\n        export const isTopLevel = (node: BaseTreeNode): boolean => {\n            const { group, id } = getGroupAndIdFromNodeId(node.id);\n            return group === id;\n        };\n        export const getGroupAndIdFromNodeId = (nodeId: string): { group: string; id: string } => {\n            const separator = nodeId.indexOf('@');\n            const group = nodeId.substring(0, separator);\n            const id = nodeId.substring(separator + 1, nodeId.length);\n            return { group, id };\n        };\n    }\n\n    export interface CompositeTreeNode extends BaseCompositeTreeNode {\n        depth: number;\n    }\n\n    export interface LeafNode extends BaseTreeNode {\n        depth: number;\n        preference: { data: PreferenceDataProperty };\n        preferenceId: string;\n    }\n\n    export namespace LeafNode {\n        export const is = (node: BaseTreeNode | LeafNode): node is LeafNode => 'preference' in node && !!node.preference.data;\n\n        export const getType = (node: BaseTreeNode | LeafNode): JsonType | undefined => is(node)\n            ? Array.isArray(node.preference.data.type) ? node.preference.data.type[0] : node.preference.data.type\n            : undefined;\n    }\n\n    export const getValueInScope = <T extends JSONValue>(preferenceInfo: PreferenceInspection<T> | undefined, scope: number): T | undefined => {\n        if (!preferenceInfo) {\n            return undefined;\n        }\n        switch (scope) {\n            case PreferenceScope.User:\n                return preferenceInfo.globalValue;\n            case PreferenceScope.Workspace:\n                return preferenceInfo.workspaceValue;\n            case PreferenceScope.Folder:\n                return preferenceInfo.workspaceFolderValue;\n            default:\n                return undefined;\n        }\n    };\n\n    export interface SelectedScopeDetails {\n        scope: number;\n        uri: string | undefined;\n        activeScopeIsFolder: boolean;\n    };\n\n    export const DEFAULT_SCOPE: SelectedScopeDetails = {\n        scope: PreferenceScope.User,\n        uri: undefined,\n        activeScopeIsFolder: false\n    };\n\n}\n\nexport namespace PreferencesCommands {\n    export const OPEN_PREFERENCES_JSON_TOOLBAR: Command = {\n        id: 'preferences:openJson.toolbar',\n        iconClass: 'codicon codicon-json'\n    };\n    export const COPY_JSON_NAME = Command.toDefaultLocalizedCommand({\n        id: 'preferences:copyJson.name',\n        label: 'Copy Setting ID'\n    });\n    export const RESET_PREFERENCE = Command.toDefaultLocalizedCommand({\n        id: 'preferences:reset',\n        label: 'Reset Setting'\n    });\n\n    export const COPY_JSON_VALUE = Command.toDefaultLocalizedCommand({\n        id: 'preferences:copyJson.value',\n        label: 'Copy Setting as JSON',\n    });\n\n    export const OPEN_USER_PREFERENCES = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.openGlobalSettings',\n        category: CommonCommands.PREFERENCES_CATEGORY,\n        label: 'Open User Settings',\n    });\n\n    export const OPEN_WORKSPACE_PREFERENCES = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.openWorkspaceSettings',\n        category: CommonCommands.PREFERENCES_CATEGORY,\n        label: 'Open Workspace Settings',\n    });\n\n    export const OPEN_FOLDER_PREFERENCES = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.openFolderSettings',\n        category: CommonCommands.PREFERENCES_CATEGORY,\n        label: 'Open Folder Settings'\n    });\n\n    export const OPEN_USER_PREFERENCES_JSON = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.openSettingsJson',\n        category: CommonCommands.PREFERENCES_CATEGORY,\n        label: 'Open Settings (JSON)'\n    });\n\n    export const OPEN_WORKSPACE_PREFERENCES_JSON = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.openWorkspaceSettingsFile',\n        category: CommonCommands.PREFERENCES_CATEGORY,\n        label: 'Open Workspace Settings (JSON)',\n    });\n\n    export const OPEN_FOLDER_PREFERENCES_JSON = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.openFolderSettingsFile',\n        category: CommonCommands.PREFERENCES_CATEGORY,\n        label: 'Open Folder Settings (JSON)',\n    });\n}\n\nexport namespace PreferenceMenus {\n    export const PREFERENCE_EDITOR_CONTEXT_MENU: MenuPath = ['preferences:editor.contextMenu'];\n    export const PREFERENCE_EDITOR_COPY_ACTIONS: MenuPath = [...PREFERENCE_EDITOR_CONTEXT_MENU, 'preferences:editor.contextMenu.copy'];\n    export const FOLDER_SCOPE_MENU_PATH = ['preferences:scope.menu'];\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { codiconArray } from '@theia/core/lib/browser';\nimport { injectable, interfaces } from '@theia/core/shared/inversify';\nimport { IJSONSchema } from '@theia/core/lib/common/json-schema';\nimport { Preference } from '../../util/preference-types';\nimport { PreferenceLeafNodeRenderer, PreferenceNodeRenderer } from './preference-node-renderer';\nimport { PreferenceLeafNodeRendererContribution } from './preference-node-renderer-creator';\n\n@injectable()\nexport class PreferenceArrayInputRenderer extends PreferenceLeafNodeRenderer<string[], HTMLInputElement> {\n    existingValues = new Map<string, { node: HTMLElement, index: number }>();\n    wrapper: HTMLElement;\n    inputWrapper: HTMLElement;\n\n    protected createInteractable(parent: HTMLElement): void {\n        const wrapper = document.createElement('ul');\n        wrapper.classList.add('preference-array');\n        this.wrapper = wrapper;\n        const currentValue = this.getValue();\n        if (Array.isArray(currentValue)) {\n            for (const [index, value] of currentValue.entries()) {\n                const node = this.createExistingValue(value);\n                wrapper.appendChild(node);\n                this.existingValues.set(value, { node, index });\n            }\n        }\n        const inputWrapper = this.createInput();\n        wrapper.appendChild(inputWrapper);\n        parent.appendChild(wrapper);\n    }\n\n    protected getFallbackValue(): string[] {\n        return [];\n    }\n\n    protected createExistingValue(value: string): HTMLElement {\n        const existingValue = document.createElement('li');\n        existingValue.classList.add('preference-array-element');\n        const valueWrapper = document.createElement('span');\n        valueWrapper.classList.add('preference-array-element-val');\n        valueWrapper.textContent = value;\n        existingValue.appendChild(valueWrapper);\n        const iconWrapper = document.createElement('span');\n        iconWrapper.classList.add('preference-array-element-btn', 'remove-btn');\n        const handler = this.removeItem.bind(this, value);\n        iconWrapper.onclick = handler;\n        iconWrapper.onkeydown = handler;\n        iconWrapper.setAttribute('role', 'button');\n        iconWrapper.tabIndex = 0;\n        existingValue.appendChild(iconWrapper);\n        const icon = document.createElement('i');\n        icon.classList.add(...codiconArray('close'));\n        iconWrapper.appendChild(icon);\n        return existingValue;\n    }\n\n    protected createInput(): HTMLElement {\n        const inputWrapper = document.createElement('li');\n        this.inputWrapper = inputWrapper;\n        const input = document.createElement('input');\n        inputWrapper.appendChild(input);\n        this.interactable = input;\n        input.classList.add('preference-array-input', 'theia-input');\n        input.type = 'text';\n        input.placeholder = 'Add Value...';\n        input.spellcheck = false;\n        input.onkeydown = this.handleEnter.bind(this);\n        input.setAttribute('aria-label', 'Preference String Input');\n        const iconWrapper = document.createElement('span');\n        inputWrapper.appendChild(iconWrapper);\n        iconWrapper.classList.add('preference-array-element-btn', ...codiconArray('add'));\n        iconWrapper.setAttribute('role', 'button');\n        const handler = this.addItem.bind(this);\n        iconWrapper.onclick = handler;\n        iconWrapper.onkeydown = handler;\n        iconWrapper.tabIndex = 0;\n        iconWrapper.setAttribute('aria-label', 'Submit Preference Input');\n        return inputWrapper;\n    }\n\n    protected doHandleValueChange(): void {\n        this.updateInspection();\n        const values = this.getValue() ?? [];\n        const newValues = new Set(...values);\n        for (const [value, row] of this.existingValues.entries()) {\n            if (!newValues.has(value)) {\n                row.node.remove();\n                this.existingValues.delete(value);\n            }\n        }\n        for (const [index, value] of values.entries()) {\n            let row = this.existingValues.get(value);\n            if (row) {\n                row.index = index;\n            } else {\n                row = { node: this.createExistingValue(value), index };\n                this.existingValues.set(value, row);\n            }\n\n            if (this.wrapper.children[index] !== row.node) {\n                this.wrapper.children[index].insertAdjacentElement('beforebegin', row.node);\n            }\n        }\n        this.updateModificationStatus();\n    }\n\n    protected removeItem(value: string): void {\n        const row = this.existingValues.get(value);\n        if (row) {\n            row.node.remove();\n            this.existingValues.delete(value);\n            this.setPreferenceImmediately(this.getOrderedValues());\n        }\n    }\n\n    protected handleEnter(e: KeyboardEvent): void {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            this.addItem();\n        }\n    }\n\n    protected addItem(): void {\n        const newItem = this.interactable.value;\n        if (newItem && !this.existingValues.has(newItem)) {\n            const node = this.createExistingValue(newItem);\n            this.inputWrapper.insertAdjacentElement('beforebegin', node);\n            this.existingValues.set(newItem, { node, index: this.existingValues.size });\n            this.setPreferenceImmediately(this.getOrderedValues());\n        }\n        this.interactable.value = '';\n    }\n\n    protected getOrderedValues(): string[] {\n        return Array.from(this.existingValues.entries())\n            .sort(([, a], [, b]) => a.index - b.index)\n            .map(([value]) => value);\n    }\n\n    override dispose(): void {\n        this.existingValues.clear();\n        super.dispose();\n    }\n}\n\n@injectable()\nexport class PreferenceArrayInputRendererContribution extends PreferenceLeafNodeRendererContribution {\n    static ID = 'preference-array-input-renderer';\n    id = PreferenceArrayInputRendererContribution.ID;\n\n    canHandleLeafNode(node: Preference.LeafNode): number {\n        const type = Preference.LeafNode.getType(node);\n        return type === 'array' && (node.preference.data.items as IJSONSchema)?.type === 'string' ? 2 : 0;\n    }\n\n    createLeafNodeRenderer(container: interfaces.Container): PreferenceNodeRenderer {\n        return container.get(PreferenceArrayInputRenderer);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, interfaces } from '@theia/core/shared/inversify';\nimport { Preference } from '../../util/preference-types';\nimport { PreferenceLeafNodeRenderer, PreferenceNodeRenderer } from './preference-node-renderer';\nimport { PreferenceLeafNodeRendererContribution } from './preference-node-renderer-creator';\n\n@injectable()\nexport class PreferenceBooleanInputRenderer extends PreferenceLeafNodeRenderer<boolean, HTMLInputElement> {\n    protected createInteractable(parent: HTMLElement): void {\n        const interactable = document.createElement('input');\n        this.interactable = interactable;\n        interactable.type = 'checkbox';\n        interactable.classList.add('theia-input');\n        interactable.defaultChecked = Boolean(this.getValue());\n        interactable.onchange = this.handleUserInteraction.bind(this);\n        parent.appendChild(interactable);\n    }\n\n    protected override getAdditionalNodeClassnames(): Iterable<string> {\n        return ['boolean'];\n    }\n\n    protected getFallbackValue(): false {\n        return false;\n    }\n\n    protected handleUserInteraction(): Promise<void> {\n        return this.setPreferenceImmediately(this.interactable.checked);\n    }\n\n    protected doHandleValueChange(): void {\n        const currentValue = this.interactable.checked;\n        this.updateInspection();\n        const newValue = Boolean(this.getValue());\n        this.updateModificationStatus(newValue);\n        if (newValue !== currentValue && document.activeElement !== this.interactable) {\n            this.interactable.checked = newValue;\n        }\n    }\n}\n\n@injectable()\nexport class PreferenceBooleanInputRendererContribution extends PreferenceLeafNodeRendererContribution {\n    static ID = 'preference-boolean-input-renderer';\n    id = PreferenceBooleanInputRendererContribution.ID;\n\n    canHandleLeafNode(node: Preference.LeafNode): number {\n        return Preference.LeafNode.getType(node) === 'boolean' ? 2 : 0;\n    }\n\n    createLeafNodeRenderer(container: interfaces.Container): PreferenceNodeRenderer {\n        return container.get(PreferenceBooleanInputRenderer);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { isObject } from '@theia/core/lib/common';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { inject, injectable, interfaces } from '@theia/core/shared/inversify';\nimport { OpenFileDialogProps } from '@theia/filesystem/lib/browser';\nimport { FileDialogService } from '@theia/filesystem/lib/browser/file-dialog/file-dialog-service';\nimport { WorkspaceCommands } from '@theia/workspace/lib/browser';\nimport { Preference } from '../../util/preference-types';\nimport { PreferenceNodeRenderer } from './preference-node-renderer';\nimport { PreferenceLeafNodeRendererContribution } from './preference-node-renderer-creator';\nimport { PreferenceStringInputRenderer } from './preference-string-input';\n\nexport interface FileNodeTypeDetails {\n    isFilepath: true;\n    selectionProps?: Partial<OpenFileDialogProps>;\n}\n\nexport namespace FileNodeTypeDetails {\n    export function is(typeDetails: unknown): typeDetails is FileNodeTypeDetails {\n        return isObject<FileNodeTypeDetails>(typeDetails) && !!typeDetails.isFilepath;\n    }\n}\n\n@injectable()\nexport class PreferenceSingleFilePathInputRendererContribution extends PreferenceLeafNodeRendererContribution {\n    static ID = 'preference-single-file-path-input-renderer';\n    id = PreferenceSingleFilePathInputRendererContribution.ID;\n\n    canHandleLeafNode(node: Preference.LeafNode): number {\n        const typeDetails = node.preference.data.typeDetails;\n        return FileNodeTypeDetails.is(typeDetails) && !typeDetails.selectionProps?.canSelectMany ? 5 : 0;\n    }\n\n    createLeafNodeRenderer(container: interfaces.Container): PreferenceNodeRenderer {\n        return container.get(PreferenceSingleFilePathInputRenderer);\n    }\n}\n\n@injectable()\nexport class PreferenceSingleFilePathInputRenderer extends PreferenceStringInputRenderer {\n    @inject(FileDialogService) fileDialogService: FileDialogService;\n\n    get typeDetails(): FileNodeTypeDetails {\n        return this.preferenceNode.preference.data.typeDetails as FileNodeTypeDetails;\n    }\n\n    protected createInputWrapper(): HTMLElement {\n        const inputWrapper = document.createElement('div');\n        inputWrapper.classList.add('preference-file-container');\n        return inputWrapper;\n    }\n\n    protected override createInteractable(parent: HTMLElement): void {\n        const inputWrapper = this.createInputWrapper();\n\n        super.createInteractable(inputWrapper);\n        this.interactable.classList.add('preference-file-input');\n\n        this.createBrowseButton(inputWrapper);\n\n        parent.appendChild(inputWrapper);\n    }\n\n    protected createBrowseButton(parent: HTMLElement): void {\n        const button = document.createElement('button');\n        button.classList.add('theia-button', 'main', 'preference-file-button');\n        button.textContent = nls.localize('theia/core/file/browse', 'Browse');\n        const handler = this.browse.bind(this);\n        button.onclick = handler;\n        button.onkeydown = handler;\n        button.tabIndex = 0;\n        button.setAttribute('aria-label', 'Submit Preference Input');\n        parent.appendChild(button);\n    }\n\n    protected async browse(): Promise<void> {\n        const selectionProps = this.typeDetails.selectionProps;\n        const title = selectionProps?.title ?? selectionProps?.canSelectFolders ? WorkspaceCommands.OPEN_FOLDER.dialogLabel : WorkspaceCommands.OPEN_FILE.dialogLabel;\n        const selection = await this.fileDialogService.showOpenDialog({ title, ...selectionProps });\n        if (selection) {\n            this.setPreferenceImmediately(selection.path.fsPath());\n        }\n    }\n\n    protected override setPreferenceImmediately(value: string): Promise<void> {\n        this.interactable.value = value;\n        return super.setPreferenceImmediately(value);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { PreferenceLeafNodeRenderer, PreferenceNodeRenderer } from './preference-node-renderer';\nimport { injectable, inject, interfaces } from '@theia/core/shared/inversify';\nimport { CommandService, nls } from '@theia/core/lib/common';\nimport { Preference, PreferencesCommands } from '../../util/preference-types';\nimport { JSONValue } from '@theia/core/shared/@phosphor/coreutils';\nimport { PreferenceLeafNodeRendererContribution } from './preference-node-renderer-creator';\n\n@injectable()\nexport class PreferenceJSONLinkRenderer extends PreferenceLeafNodeRenderer<JSONValue, HTMLAnchorElement> {\n    @inject(CommandService) protected readonly commandService: CommandService;\n\n    protected createInteractable(parent: HTMLElement): void {\n        const message = nls.localizeByDefault('Edit in settings.json');\n        const interactable = document.createElement('a');\n        this.interactable = interactable;\n        interactable.classList.add('theia-json-input');\n        interactable.setAttribute('role', 'button');\n        interactable.title = message;\n        interactable.textContent = message;\n        interactable.onclick = this.handleUserInteraction.bind(this);\n        interactable.onkeydown = this.handleUserInteraction.bind(this);\n        parent.appendChild(interactable);\n    }\n\n    protected getFallbackValue(): JSONValue {\n        const node = this.preferenceNode;\n        const type = Array.isArray(node.preference.data.type) ? node.preference.data.type[0] : node.preference.data.type;\n        switch (type) {\n            case 'object':\n                return {};\n            case 'array':\n                return [];\n            case 'null':\n                return null; // eslint-disable-line no-null/no-null\n            default: // Should all be handled by other input types.\n                return '';\n        }\n    }\n\n    protected doHandleValueChange(): void {\n        this.updateInspection();\n        this.updateModificationStatus();\n    }\n\n    protected handleUserInteraction(): void {\n        this.commandService.executeCommand(PreferencesCommands.OPEN_PREFERENCES_JSON_TOOLBAR.id, this.id);\n    }\n}\n\n@injectable()\nexport class PreferenceJSONLinkRendererContribution extends PreferenceLeafNodeRendererContribution {\n    static ID = 'preference-json-link-renderer';\n    id = PreferenceJSONLinkRendererContribution.ID;\n\n    canHandleLeafNode(_node: Preference.LeafNode): number {\n        return 1;\n    }\n\n    createLeafNodeRenderer(container: interfaces.Container): PreferenceNodeRenderer {\n        return container.get(PreferenceJSONLinkRenderer);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { PreferenceTreeModel } from '../../preference-tree-model';\nimport { PreferenceTreeLabelProvider } from '../../util/preference-tree-label-provider';\nimport * as markdownit from '@theia/core/shared/markdown-it';\n\n@injectable()\nexport class PreferenceMarkdownRenderer {\n\n    @inject(PreferenceTreeModel) protected readonly model: PreferenceTreeModel;\n    @inject(PreferenceTreeLabelProvider) protected readonly labelProvider: PreferenceTreeLabelProvider;\n\n    protected _renderer?: markdownit;\n\n    render(text: string): string {\n        return this.getRenderer().render(text);\n    }\n\n    renderInline(text: string): string {\n        return this.getRenderer().renderInline(text);\n    }\n\n    protected getRenderer(): markdownit {\n        this._renderer ??= this.buildMarkdownRenderer();\n        return this._renderer;\n    }\n\n    protected buildMarkdownRenderer(): markdownit {\n        const engine = markdownit();\n        const inlineCode = engine.renderer.rules.code_inline;\n\n        engine.renderer.rules.code_inline = (tokens, idx, options, env, self) => {\n            const token = tokens[idx];\n            const content = token.content;\n            if (content.startsWith('#') && content.endsWith('#')) {\n                const preferenceId = content.substring(1, content.length - 1);\n                const preferenceNode = this.model.getNodeFromPreferenceId(preferenceId);\n                if (preferenceNode) {\n                    let name = this.labelProvider.getName(preferenceNode);\n                    const prefix = this.labelProvider.getPrefix(preferenceNode, true);\n                    if (prefix) {\n                        name = prefix + name;\n                    }\n                    return `<a title=\"${preferenceId}\" href=\"preference:${preferenceId}\">${name}</a>`;\n                } else {\n                    console.warn(`Linked preference \"${preferenceId}\" not found.`);\n                }\n            }\n            return inlineCode ? inlineCode(tokens, idx, options, env, self) : '';\n        };\n        return engine;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContributionProvider, Disposable, Emitter, Event, Prioritizeable } from '@theia/core';\nimport { inject, injectable, interfaces, named } from '@theia/core/shared/inversify';\nimport { Preference } from '../../util/preference-types';\nimport { PreferenceHeaderRenderer, PreferenceNodeRenderer } from './preference-node-renderer';\n\nexport const PreferenceNodeRendererCreatorRegistry = Symbol('PreferenceNodeRendererCreatorRegistry');\nexport interface PreferenceNodeRendererCreatorRegistry {\n    registerPreferenceNodeRendererCreator(creator: PreferenceNodeRendererCreator): Disposable;\n    unregisterPreferenceNodeRendererCreator(creator: PreferenceNodeRendererCreator): void;\n    getPreferenceNodeRendererCreator(node: Preference.TreeNode): PreferenceNodeRendererCreator;\n    onDidChange: Event<void>;\n}\n\nexport const PreferenceNodeRendererContribution = Symbol('PreferenceNodeRendererContribution');\nexport interface PreferenceNodeRendererContribution {\n    registerPreferenceNodeRendererCreator(registry: PreferenceNodeRendererCreatorRegistry): void;\n}\n\nexport const PreferenceNodeRendererCreator = Symbol('PreferenceNodeRendererCreator');\nexport interface PreferenceNodeRendererCreator {\n    id: string;\n    canHandle(node: Preference.TreeNode): number;\n    createRenderer(node: Preference.TreeNode, container: interfaces.Container): PreferenceNodeRenderer;\n}\n\n@injectable()\nexport class DefaultPreferenceNodeRendererCreatorRegistry implements PreferenceNodeRendererCreatorRegistry {\n    protected readonly _creators: Map<string, PreferenceNodeRendererCreator> = new Map<string, PreferenceNodeRendererCreator>();\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n    readonly onDidChange = this.onDidChangeEmitter.event;\n\n    constructor(\n        @inject(ContributionProvider) @named(PreferenceNodeRendererContribution)\n        protected readonly contributionProvider: ContributionProvider<PreferenceNodeRendererContribution>\n    ) {\n        const contributions = this.contributionProvider.getContributions();\n        for (const contrib of contributions) {\n            contrib.registerPreferenceNodeRendererCreator(this);\n        }\n    }\n\n    registerPreferenceNodeRendererCreator(creator: PreferenceNodeRendererCreator): Disposable {\n        if (this._creators.has(creator.id)) {\n            console.warn(`A preference node renderer creator ${creator.id} is already registered.`);\n            return Disposable.NULL;\n        }\n        this._creators.set(creator.id, creator);\n        this.fireDidChange();\n        return Disposable.create(() => this._creators.delete(creator.id));\n    }\n\n    unregisterPreferenceNodeRendererCreator(creator: PreferenceNodeRendererCreator | string): void {\n        const id = typeof creator === 'string' ? creator : creator.id;\n        if (this._creators.delete(id)) {\n            this.fireDidChange();\n        }\n    }\n\n    getPreferenceNodeRendererCreator(node: Preference.TreeNode): PreferenceNodeRendererCreator {\n        const contributions = this.prioritize(node);\n        if (contributions.length >= 1) {\n            return contributions[0];\n        }\n        // we already bind a default creator contribution so if that happens it was deliberate\n        throw new Error(`There is no contribution for ${node.id}.`);\n    }\n\n    protected fireDidChange(): void {\n        this.onDidChangeEmitter.fire(undefined);\n    }\n\n    protected prioritize(node: Preference.TreeNode): PreferenceNodeRendererCreator[] {\n        const prioritized = Prioritizeable.prioritizeAllSync(Array.from(this._creators.values()), creator => {\n            try {\n                return creator.canHandle(node);\n            } catch {\n                return 0;\n            }\n        });\n        return prioritized.map(p => p.value);\n    }\n}\n\n@injectable()\nexport abstract class PreferenceLeafNodeRendererContribution implements PreferenceNodeRendererCreator, PreferenceNodeRendererContribution {\n    abstract id: string;\n\n    canHandle(node: Preference.TreeNode): number {\n        return Preference.LeafNode.is(node) ? this.canHandleLeafNode(node) : 0;\n    }\n\n    registerPreferenceNodeRendererCreator(registry: PreferenceNodeRendererCreatorRegistry): void {\n        registry.registerPreferenceNodeRendererCreator(this);\n    }\n\n    abstract canHandleLeafNode(node: Preference.LeafNode): number;\n\n    createRenderer(node: Preference.TreeNode, container: interfaces.Container): PreferenceNodeRenderer {\n        const child = container.createChild();\n        child.bind(Preference.Node).toConstantValue(node);\n        return this.createLeafNodeRenderer(child);\n    }\n\n    abstract createLeafNodeRenderer(container: interfaces.Container): PreferenceNodeRenderer;\n}\n\n@injectable()\nexport class PreferenceHeaderRendererContribution implements PreferenceNodeRendererCreator, PreferenceNodeRendererContribution {\n    static ID = 'preference-header-renderer';\n    id = PreferenceHeaderRendererContribution.ID;\n\n    registerPreferenceNodeRendererCreator(registry: PreferenceNodeRendererCreatorRegistry): void {\n        registry.registerPreferenceNodeRendererCreator(this);\n    }\n\n    canHandle(node: Preference.TreeNode): number {\n        return !Preference.LeafNode.is(node) ? 1 : 0;\n    }\n\n    createRenderer(node: Preference.TreeNode, container: interfaces.Container): PreferenceNodeRenderer {\n        const grandchild = container.createChild();\n        grandchild.bind(Preference.Node).toConstantValue(node);\n        return grandchild.get(PreferenceHeaderRenderer);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport {\n    PreferenceService, ContextMenuRenderer, PreferenceInspection,\n    PreferenceScope, PreferenceProvider, codicon, OpenerService, open, PreferenceDataProperty\n} from '@theia/core/lib/browser';\nimport { Preference, PreferenceMenus } from '../../util/preference-types';\nimport { PreferenceTreeLabelProvider } from '../../util/preference-tree-label-provider';\nimport { PreferencesScopeTabBar } from '../preference-scope-tabbar-widget';\nimport { Disposable, nls } from '@theia/core/lib/common';\nimport { JSONValue } from '@theia/core/shared/@phosphor/coreutils';\nimport debounce = require('@theia/core/shared/lodash.debounce');\nimport { PreferenceTreeModel } from '../../preference-tree-model';\nimport { PreferencesSearchbarWidget } from '../preference-searchbar-widget';\nimport * as DOMPurify from '@theia/core/shared/dompurify';\nimport URI from '@theia/core/lib/common/uri';\nimport { PreferenceMarkdownRenderer } from './preference-markdown-renderer';\n\nexport const PreferenceNodeRendererFactory = Symbol('PreferenceNodeRendererFactory');\nexport type PreferenceNodeRendererFactory = (node: Preference.TreeNode) => PreferenceNodeRenderer;\nexport const HEADER_CLASS = 'settings-section-category-title';\nexport const SUBHEADER_CLASS = 'settings-section-subcategory-title';\n\nexport interface GeneralPreferenceNodeRenderer extends Disposable {\n    node: HTMLElement;\n    id: string;\n    schema?: PreferenceDataProperty;\n    group: string;\n    nodeId: string;\n    visible: boolean;\n    insertBefore(nextSibling: HTMLElement): void;\n    insertAfter(previousSibling: HTMLElement): void;\n    appendTo(parent: HTMLElement): void;\n    prependTo(parent: HTMLElement): void;\n    handleValueChange?(): void;\n    handleSearchChange?(isFiltered?: boolean): void;\n    handleScopeChange?(isFiltered?: boolean): void;\n    hide(): void;\n    show(): void;\n}\n\n@injectable()\nexport abstract class PreferenceNodeRenderer implements Disposable, GeneralPreferenceNodeRenderer {\n    @inject(Preference.Node) protected readonly preferenceNode: Preference.Node;\n    @inject(PreferenceTreeLabelProvider) protected readonly labelProvider: PreferenceTreeLabelProvider;\n\n    protected attached = false;\n\n    _id: string;\n    _group: string;\n    _subgroup: string;\n    protected domNode: HTMLElement;\n\n    get node(): HTMLElement {\n        return this.domNode;\n    }\n\n    get nodeId(): string {\n        return this.preferenceNode.id;\n    }\n\n    get id(): string {\n        return this._id;\n    }\n\n    get group(): string {\n        return this._group;\n    }\n\n    get visible(): boolean {\n        return !this.node.classList.contains('hidden');\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.setId();\n        this.domNode = this.createDomNode();\n    }\n\n    protected setId(): void {\n        const { id, group } = Preference.TreeNode.getGroupAndIdFromNodeId(this.preferenceNode.id);\n        const segments = id.split('.');\n        this._id = id;\n        this._group = group;\n        this._subgroup = (group === segments[0] ? segments[1] : segments[0]) ?? '';\n    }\n\n    protected abstract createDomNode(): HTMLElement;\n\n    protected getAdditionalNodeClassnames(): Iterable<string> {\n        return [];\n    }\n\n    insertBefore(nextSibling: HTMLElement): void {\n        nextSibling.insertAdjacentElement('beforebegin', this.domNode);\n        this.attached = true;\n    }\n\n    insertAfter(previousSibling: HTMLElement): void {\n        previousSibling.insertAdjacentElement('afterend', this.domNode);\n    }\n\n    appendTo(parent: HTMLElement): void {\n        parent.appendChild(this.domNode);\n    }\n\n    prependTo(parent: HTMLElement): void {\n        parent.prepend(this.domNode);\n    }\n\n    hide(): void {\n        this.domNode.classList.add('hidden');\n    }\n\n    show(): void {\n        this.domNode.classList.remove('hidden');\n    }\n\n    dispose(): void {\n        this.domNode.remove();\n    }\n}\n\nexport class PreferenceHeaderRenderer extends PreferenceNodeRenderer {\n    protected createDomNode(): HTMLElement {\n        const wrapper = document.createElement('ul');\n        wrapper.className = 'settings-section';\n        wrapper.id = `${this.preferenceNode.id}-editor`;\n        const isCategory = Preference.TreeNode.isTopLevel(this.preferenceNode);\n        const hierarchyClassName = isCategory ? HEADER_CLASS : SUBHEADER_CLASS;\n        const name = this.labelProvider.getName(this.preferenceNode);\n        const label = document.createElement('li');\n        label.classList.add('settings-section-title', hierarchyClassName);\n        label.textContent = name;\n        wrapper.appendChild(label);\n        return wrapper;\n    }\n}\n\n@injectable()\nexport abstract class PreferenceLeafNodeRenderer<ValueType extends JSONValue, InteractableType extends HTMLElement>\n    extends PreferenceNodeRenderer\n    implements Required<GeneralPreferenceNodeRenderer> {\n    @inject(Preference.Node) protected override readonly preferenceNode: Preference.LeafNode;\n    @inject(PreferenceService) protected readonly preferenceService: PreferenceService;\n    @inject(ContextMenuRenderer) protected readonly menuRenderer: ContextMenuRenderer;\n    @inject(PreferencesScopeTabBar) protected readonly scopeTracker: PreferencesScopeTabBar;\n    @inject(PreferenceTreeModel) protected readonly model: PreferenceTreeModel;\n    @inject(PreferencesSearchbarWidget) protected readonly searchbar: PreferencesSearchbarWidget;\n    @inject(OpenerService) protected readonly openerService: OpenerService;\n    @inject(PreferenceMarkdownRenderer) protected readonly markdownRenderer: PreferenceMarkdownRenderer;\n\n    protected headlineWrapper: HTMLDivElement;\n    protected gutter: HTMLDivElement;\n    protected interactable: InteractableType;\n    protected inspection: PreferenceInspection<ValueType> | undefined;\n    protected isModifiedFromDefault = false;\n\n    get schema(): PreferenceDataProperty {\n        return this.preferenceNode.preference.data;\n    }\n\n    @postConstruct()\n    protected override init(): void {\n        this.setId();\n        this.updateInspection();\n        this.domNode = this.createDomNode();\n        this.updateModificationStatus();\n    }\n\n    protected updateInspection(): void {\n        this.inspection = this.preferenceService.inspect<ValueType>(this.id, this.scopeTracker.currentScope.uri);\n    }\n\n    protected openLink(event: MouseEvent): void {\n        if (event.target instanceof HTMLAnchorElement) {\n            event.preventDefault();\n            event.stopPropagation();\n            // Exclude right click\n            if (event.button < 2) {\n                const uri = new URI(event.target.href);\n                open(this.openerService, uri);\n            }\n        }\n    }\n\n    protected createDomNode(): HTMLLIElement {\n        const wrapper = document.createElement('li');\n        wrapper.classList.add('single-pref');\n        wrapper.id = `${this.id}-editor`;\n        wrapper.tabIndex = 0;\n        wrapper.setAttribute('data-pref-id', this.id);\n        wrapper.setAttribute('data-node-id', this.preferenceNode.id);\n\n        const headlineWrapper = document.createElement('div');\n        headlineWrapper.classList.add('pref-name');\n        headlineWrapper.title = this.id;\n        this.headlineWrapper = headlineWrapper;\n        wrapper.appendChild(headlineWrapper);\n\n        this.updateHeadline();\n\n        const gutter = document.createElement('div');\n        gutter.classList.add('pref-context-gutter');\n        this.gutter = gutter;\n        wrapper.appendChild(gutter);\n\n        const cog = document.createElement('i');\n        cog.className = `${codicon('settings-gear', true)} settings-context-menu-btn`;\n        cog.setAttribute('aria-label', 'Open Context Menu');\n        cog.setAttribute('role', 'button');\n        cog.onclick = this.handleCogAction.bind(this);\n        cog.onkeydown = this.handleCogAction.bind(this);\n        cog.title = nls.localizeByDefault('More Actions...');\n        gutter.appendChild(cog);\n\n        const contentWrapper = document.createElement('div');\n        contentWrapper.classList.add('pref-content-container', ...this.getAdditionalNodeClassnames());\n        wrapper.appendChild(contentWrapper);\n\n        const { description, markdownDescription } = this.preferenceNode.preference.data;\n        if (markdownDescription || description) {\n            const descriptionWrapper = document.createElement('div');\n            descriptionWrapper.classList.add('pref-description');\n            if (markdownDescription) {\n                const renderedDescription = this.markdownRenderer.render(markdownDescription);\n                descriptionWrapper.onauxclick = this.openLink.bind(this);\n                descriptionWrapper.onclick = this.openLink.bind(this);\n                descriptionWrapper.oncontextmenu = () => false;\n                descriptionWrapper.innerHTML = DOMPurify.sanitize(renderedDescription, {\n                    ALLOW_UNKNOWN_PROTOCOLS: true\n                });\n            } else if (description) {\n                descriptionWrapper.textContent = description;\n            }\n            contentWrapper.appendChild(descriptionWrapper);\n        }\n\n        const interactableWrapper = document.createElement('div');\n        interactableWrapper.classList.add('pref-input');\n        contentWrapper.appendChild(interactableWrapper);\n        this.createInteractable(interactableWrapper);\n\n        return wrapper;\n    }\n\n    protected handleCogAction({ currentTarget }: KeyboardEvent | MouseEvent): void {\n        const value = Preference.getValueInScope(this.inspection, this.scopeTracker.currentScope.scope) ?? this.inspection?.defaultValue;\n        const target = currentTarget as HTMLElement | undefined;\n        if (target && value !== undefined) {\n            this.showCog();\n            const domRect = target.getBoundingClientRect();\n            this.menuRenderer.render({\n                menuPath: PreferenceMenus.PREFERENCE_EDITOR_CONTEXT_MENU,\n                anchor: { x: domRect.left, y: domRect.bottom },\n                args: [{ id: this.id, value }],\n                onHide: () => this.hideCog()\n            });\n        }\n    }\n\n    protected addModifiedMarking(): void {\n        this.gutter.classList.add('theia-mod-item-modified');\n    }\n\n    protected removeModifiedMarking(): void {\n        this.gutter.classList.remove('theia-mod-item-modified');\n    }\n\n    protected showCog(): void {\n        this.gutter.classList.add('show-cog');\n    }\n\n    protected hideCog(): void {\n        this.gutter.classList.remove('show-cog');\n    }\n\n    protected updateModificationStatus(knownCurrentValue?: JSONValue): void {\n        const wasModified = this.isModifiedFromDefault;\n        const { inspection } = this;\n        const valueInCurrentScope = knownCurrentValue ?? Preference.getValueInScope(inspection, this.scopeTracker.currentScope.scope);\n        this.isModifiedFromDefault = valueInCurrentScope !== undefined && !PreferenceProvider.deepEqual(valueInCurrentScope, inspection?.defaultValue);\n        if (wasModified !== this.isModifiedFromDefault) {\n            this.gutter.classList.toggle('theia-mod-item-modified', this.isModifiedFromDefault);\n        }\n    }\n\n    protected updateHeadline(filtered = this.model.isFiltered): void {\n        const { headlineWrapper } = this;\n        if (this.headlineWrapper.childElementCount === 0) {\n            const name = this.labelProvider.getName(this.preferenceNode);\n            const nameWrapper = document.createElement('span');\n            nameWrapper.classList.add('preference-leaf-headline-name');\n            nameWrapper.textContent = name;\n            headlineWrapper.appendChild(nameWrapper);\n        }\n        const prefix = this.labelProvider.getPrefix(this.preferenceNode, filtered);\n        const currentFirstChild = headlineWrapper.children[0];\n        const currentFirstChildIsPrefix = currentFirstChild.classList.contains('preference-leaf-headline-prefix');\n        if (prefix) {\n            let prefixWrapper;\n            if (currentFirstChildIsPrefix) {\n                prefixWrapper = currentFirstChild;\n            } else {\n                prefixWrapper = document.createElement('span');\n                prefixWrapper.classList.add('preference-leaf-headline-prefix');\n                headlineWrapper.insertBefore(prefixWrapper, currentFirstChild);\n            }\n            prefixWrapper.textContent = prefix;\n        } else if (currentFirstChildIsPrefix) {\n            headlineWrapper.removeChild(currentFirstChild);\n        }\n\n        const currentLastChild = headlineWrapper.lastChild as HTMLElement;\n        if (currentLastChild.classList.contains('preference-leaf-headline-suffix')) {\n            this.compareOtherModifiedScopes(headlineWrapper, currentLastChild);\n        } else {\n            this.createOtherModifiedScopes(headlineWrapper);\n        }\n    }\n\n    protected compareOtherModifiedScopes(headlineWrapper: HTMLDivElement, currentSuffix: HTMLElement): void {\n        const modifiedScopes = this.getModifiedScopesAsStrings();\n        if (modifiedScopes.length === 0) {\n            headlineWrapper.removeChild(currentSuffix);\n        } else {\n\n            const modifiedMessagePrefix = currentSuffix.children[0] as HTMLElement;\n            const newMessagePrefix = this.getModifiedMessagePrefix();\n            if (modifiedMessagePrefix.textContent !== newMessagePrefix) {\n                modifiedMessagePrefix.textContent = newMessagePrefix;\n            }\n\n            const [firstModifiedScope, secondModifiedScope] = modifiedScopes;\n\n            const firstScopeMessage = currentSuffix.children[1] as HTMLElement;\n            const secondScopeMessage = currentSuffix.children[2] as HTMLElement;\n            firstScopeMessage.children[0].textContent = PreferenceScope[firstModifiedScope];\n            this.addEventHandlerToModifiedScope(firstModifiedScope, firstScopeMessage.children[0] as HTMLElement);\n            if (modifiedScopes.length === 1 && secondScopeMessage) {\n                currentSuffix.removeChild(secondScopeMessage);\n            } else if (modifiedScopes.length === 2 && !secondScopeMessage) {\n                const newSecondMessage = this.createModifiedScopeMessage(secondModifiedScope);\n                currentSuffix.appendChild(newSecondMessage);\n            }\n            // If both scopes are modified and both messages are present, do nothing.\n        }\n    }\n\n    protected createOtherModifiedScopes(headlineWrapper: HTMLDivElement): void {\n        const modifiedScopes = this.getModifiedScopesAsStrings();\n        if (modifiedScopes.length !== 0) {\n            const wrapper = document.createElement('i');\n            wrapper.classList.add('preference-leaf-headline-suffix');\n            headlineWrapper.appendChild(wrapper);\n\n            const messagePrefix = this.getModifiedMessagePrefix();\n            const messageWrapper = document.createElement('span');\n            messageWrapper.classList.add('preference-other-modified-scope-alert');\n            messageWrapper.textContent = messagePrefix;\n            wrapper.appendChild(messageWrapper);\n            modifiedScopes.forEach((scopeName, i) => {\n                const scopeWrapper = this.createModifiedScopeMessage(scopeName);\n                wrapper.appendChild(scopeWrapper);\n            });\n        }\n    }\n\n    protected createModifiedScopeMessage(scope: PreferenceScope): HTMLSpanElement {\n        const scopeWrapper = document.createElement('span');\n        scopeWrapper.classList.add('preference-modified-scope-wrapper');\n        const scopeInteractable = document.createElement('span');\n        scopeInteractable.classList.add('preference-scope-underlined');\n        const scopeName = PreferenceScope[scope];\n        this.addEventHandlerToModifiedScope(scope, scopeInteractable);\n        scopeInteractable.textContent = scopeName;\n        scopeWrapper.appendChild(scopeInteractable);\n        return scopeWrapper;\n    }\n\n    protected getModifiedMessagePrefix(): string {\n        return (this.isModifiedFromDefault ? nls.localizeByDefault('Also modified in') : nls.localizeByDefault('Modified in')) + ': ';\n    }\n\n    protected addEventHandlerToModifiedScope(scope: PreferenceScope, scopeWrapper: HTMLElement): void {\n        if (scope === PreferenceScope.User || scope === PreferenceScope.Workspace) {\n            const eventHandler = () => {\n                this.scopeTracker.setScope(scope);\n                this.searchbar.updateSearchTerm(this.id);\n            };\n            scopeWrapper.onclick = eventHandler;\n            scopeWrapper.onkeydown = eventHandler;\n            scopeWrapper.tabIndex = 0;\n        } else {\n            scopeWrapper.onclick = null; // eslint-disable-line no-null/no-null\n            scopeWrapper.onkeydown = null; // eslint-disable-line no-null/no-null\n            scopeWrapper.tabIndex = -1;\n        }\n    }\n\n    protected getModifiedScopesAsStrings(): PreferenceScope[] {\n        const currentScopeInView = this.scopeTracker.currentScope.scope;\n        const { inspection } = this;\n        const modifiedScopes = [];\n        if (inspection) {\n            for (const otherScope of [PreferenceScope.User, PreferenceScope.Workspace]) {\n                if (otherScope !== currentScopeInView) {\n                    const valueInOtherScope = Preference.getValueInScope(inspection, otherScope);\n                    if (valueInOtherScope !== undefined && !PreferenceProvider.deepEqual(valueInOtherScope, inspection.defaultValue)) {\n                        modifiedScopes.push(otherScope);\n                    }\n                }\n            }\n        }\n        return modifiedScopes;\n    }\n\n    // Many preferences allow `null` and even use it as a default regardless of the declared type.\n    protected getValue(): ValueType | null {\n        let currentValue = Preference.getValueInScope(this.inspection, this.scopeTracker.currentScope.scope);\n        if (currentValue === undefined) {\n            currentValue = this.inspection?.defaultValue;\n        }\n        return currentValue !== undefined ? currentValue : this.getFallbackValue();\n    }\n\n    protected setPreferenceWithDebounce = debounce(this.setPreferenceImmediately.bind(this), 500, { leading: false, trailing: true });\n\n    protected setPreferenceImmediately(value: ValueType | undefined): Promise<void> {\n        return this.preferenceService.set(this.id, value, this.scopeTracker.currentScope.scope, this.scopeTracker.currentScope.uri)\n            .catch(() => this.handleValueChange());\n    }\n\n    handleSearchChange(isFiltered = this.model.isFiltered): void {\n        this.updateHeadline(isFiltered);\n    }\n\n    handleScopeChange(isFiltered = this.model.isFiltered): void {\n        this.handleValueChange();\n        this.updateHeadline(isFiltered);\n    }\n\n    handleValueChange(): void {\n        this.doHandleValueChange();\n        this.updateHeadline();\n    }\n\n    /**\n     * Should create an HTML element that the user can interact with to change the value of the preference.\n     * @param container the parent element for the interactable. This method is responsible for adding the new element to its parent.\n     */\n    protected abstract createInteractable(container: HTMLElement): void;\n    /**\n     * @returns a fallback default value for a preference of the type implemented by a concrete leaf renderer\n     * This function is only called if the default value for a given preference is not specified in its schema.\n     */\n    protected abstract getFallbackValue(): ValueType;\n    /**\n     * This function is responsible for reconciling the display of the preference value with the value reported by the PreferenceService.\n     */\n    protected abstract doHandleValueChange(): void;\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { nls } from '@theia/core';\nimport { injectable, interfaces } from '@theia/core/shared/inversify';\nimport { Preference } from '../../util/preference-types';\nimport { PreferenceLeafNodeRenderer, PreferenceNodeRenderer } from './preference-node-renderer';\nimport { PreferenceLeafNodeRendererContribution } from './preference-node-renderer-creator';\n\ninterface PreferenceNumberInputValidation {\n    /**\n     * the numeric value of the input. `NaN` if there is an error.\n     */\n    value: number;\n    /**\n     * the error message to display.\n     */\n    message: string;\n}\n\n@injectable()\nexport class PreferenceNumberInputRenderer extends PreferenceLeafNodeRenderer<number, HTMLInputElement> {\n\n    protected _errorMessage: HTMLElement | undefined;\n    protected interactableWrapper: HTMLElement;\n\n    get errorMessage(): HTMLElement {\n        if (!this._errorMessage) {\n            const errorMessage = document.createElement('div');\n            errorMessage.classList.add('pref-error-notification');\n            this._errorMessage = errorMessage;\n        }\n        return this._errorMessage;\n    }\n\n    protected createInteractable(parent: HTMLElement): void {\n        const interactableWrapper = document.createElement('div');\n        this.interactableWrapper = interactableWrapper;\n        interactableWrapper.classList.add('pref-input-container');\n        const interactable = document.createElement('input');\n        this.interactable = interactable;\n        interactable.type = 'number';\n        interactable.step = this.preferenceNode.preference.data.type === 'integer' ? '1' : 'any';\n        interactable.classList.add('theia-input');\n        interactable.defaultValue = this.getValue()?.toString() ?? '';\n        interactable.oninput = this.handleUserInteraction.bind(this);\n        interactable.onblur = this.handleBlur.bind(this);\n        interactableWrapper.appendChild(interactable);\n        parent.appendChild(interactableWrapper);\n    }\n\n    protected getFallbackValue(): number {\n        return 0;\n    }\n\n    protected handleUserInteraction(): void {\n        const { value, message } = this.getInputValidation(this.interactable.value);\n        if (isNaN(value)) {\n            this.showErrorMessage(message);\n        } else {\n            this.hideErrorMessage();\n            this.setPreferenceWithDebounce(value);\n        }\n    }\n\n    protected async handleBlur(): Promise<void> {\n        this.hideErrorMessage();\n        await this.setPreferenceWithDebounce.flush();\n        this.handleValueChange();\n    }\n\n    protected doHandleValueChange(): void {\n        const { value } = this.interactable;\n        const currentValue = value.length ? Number(value) : NaN;\n        this.updateInspection();\n        const newValue = this.getValue() ?? '';\n        this.updateModificationStatus(newValue);\n        if (newValue !== currentValue) {\n            if (document.activeElement !== this.interactable) {\n                this.interactable.value = newValue.toString();\n            } else {\n                this.handleUserInteraction(); // give priority to the value of the input if it is focused.\n            }\n        }\n    }\n\n    protected getInputValidation(input: string): PreferenceNumberInputValidation {\n        const { preference: { data } } = this.preferenceNode;\n        const inputValue = Number(input);\n        const errorMessages: string[] = [];\n\n        if (input === '' || isNaN(inputValue)) {\n            return { value: NaN, message: nls.localizeByDefault('Value must be a number.') };\n        }\n        if (data.minimum && inputValue < data.minimum) {\n            errorMessages.push(nls.localizeByDefault('Value must be greater than or equal to {0}.', data.minimum));\n        };\n        if (data.maximum && inputValue > data.maximum) {\n            errorMessages.push(nls.localizeByDefault('Value must be less than or equal to {0}.', data.maximum));\n        };\n        if (data.type === 'integer' && !Number.isInteger(inputValue)) {\n            errorMessages.push(nls.localizeByDefault('Value must be an integer.'));\n        }\n\n        return {\n            value: errorMessages.length ? NaN : inputValue,\n            message: errorMessages.join(' ')\n        };\n    }\n\n    protected showErrorMessage(message: string): void {\n        this.errorMessage.textContent = message;\n        this.interactableWrapper.appendChild(this.errorMessage);\n    }\n\n    protected hideErrorMessage(): void {\n        this.errorMessage.remove();\n    }\n}\n\n@injectable()\nexport class PreferenceNumberInputRendererContribution extends PreferenceLeafNodeRendererContribution {\n    static ID = 'preference-number-input-renderer';\n    id = PreferenceNumberInputRendererContribution.ID;\n\n    canHandleLeafNode(node: Preference.LeafNode): number {\n        const type = Preference.LeafNode.getType(node);\n        return type === 'integer' || type === 'number' ? 2 : 0;\n    }\n\n    createLeafNodeRenderer(container: interfaces.Container): PreferenceNodeRenderer {\n        return container.get(PreferenceNumberInputRenderer);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { PreferenceLeafNodeRenderer, PreferenceNodeRenderer } from './preference-node-renderer';\nimport { injectable, interfaces } from '@theia/core/shared/inversify';\nimport { JSONValue } from '@theia/core/shared/@phosphor/coreutils';\nimport { PreferenceProvider } from '@theia/core/lib/browser/preferences/preference-provider';\nimport { SelectComponent, SelectOption } from '@theia/core/lib/browser/widgets/select-component';\nimport { Preference } from '../../util/preference-types';\nimport { PreferenceLeafNodeRendererContribution } from './preference-node-renderer-creator';\nimport * as React from '@theia/core/shared/react';\nimport { createRoot } from '@theia/core/shared/react-dom/client';\nimport { escapeInvisibleChars } from '@theia/core/lib/common/strings';\n\n@injectable()\nexport class PreferenceSelectInputRenderer extends PreferenceLeafNodeRenderer<JSONValue, HTMLDivElement> {\n\n    protected readonly selectComponent = React.createRef<SelectComponent>();\n\n    protected selectOptions: SelectOption[] = [];\n\n    protected get enumValues(): JSONValue[] {\n        return this.preferenceNode.preference.data.enum!;\n    }\n\n    protected updateSelectOptions(): void {\n        const updatedSelectOptions: SelectOption[] = [];\n        const values = this.enumValues;\n        const preferenceData = this.preferenceNode.preference.data;\n        const defaultValue = preferenceData.default;\n        for (let i = 0; i < values.length; i++) {\n            const value = values[i];\n            const stringValue = `${value}`;\n            const label = escapeInvisibleChars(preferenceData.enumItemLabels?.[i] ?? stringValue);\n            const detail = PreferenceProvider.deepEqual(defaultValue, value) ? 'default' : undefined;\n            let enumDescription = preferenceData.enumDescriptions?.[i];\n            let markdown = false;\n            const markdownEnumDescription = preferenceData.markdownEnumDescriptions?.[i];\n            if (markdownEnumDescription) {\n                enumDescription = this.markdownRenderer.renderInline(markdownEnumDescription);\n                markdown = true;\n            }\n            updatedSelectOptions.push({\n                label,\n                value: stringValue,\n                detail,\n                description: enumDescription,\n                markdown\n            });\n        }\n        this.selectOptions = updatedSelectOptions;\n    }\n\n    protected createInteractable(parent: HTMLElement): void {\n        this.updateSelectOptions();\n        const interactable = document.createElement('div');\n        const selectComponent = React.createElement(SelectComponent, {\n            options: this.selectOptions,\n            defaultValue: this.getDataValue(),\n            onChange: (_, index) => this.handleUserInteraction(index),\n            ref: this.selectComponent\n        });\n        this.interactable = interactable;\n        const root = createRoot(interactable);\n        root.render(selectComponent);\n        parent.appendChild(interactable);\n    }\n\n    protected getFallbackValue(): JSONValue {\n        const { default: schemaDefault, defaultValue, enum: enumValues } = this.preferenceNode.preference.data;\n        return schemaDefault !== undefined\n            ? schemaDefault : defaultValue !== undefined\n                ? defaultValue\n                : enumValues![0];\n    }\n\n    protected doHandleValueChange(): void {\n        this.updateInspection();\n        this.updateSelectOptions();\n        const newValue = this.getDataValue();\n        this.updateModificationStatus(this.getValue());\n        if (document.activeElement !== this.interactable && this.selectComponent.current) {\n            this.selectComponent.current.value = newValue;\n        }\n    }\n\n    /**\n     * Returns the stringified index corresponding to the currently selected value.\n     */\n    protected getDataValue(): number {\n        const currentValue = this.getValue();\n        let selected = this.enumValues.findIndex(value => PreferenceProvider.deepEqual(value, currentValue));\n        if (selected === -1) {\n            const fallback = this.getFallbackValue();\n            selected = this.enumValues.findIndex(value => PreferenceProvider.deepEqual(value, fallback));\n        }\n        return Math.max(selected, 0);\n    }\n\n    protected handleUserInteraction(selected: number): void {\n        const value = this.enumValues[selected];\n        this.setPreferenceImmediately(value);\n    }\n}\n\n@injectable()\nexport class PreferenceSelectInputRendererContribution extends PreferenceLeafNodeRendererContribution {\n    static ID = 'preference-select-input-renderer';\n    id = PreferenceSelectInputRendererContribution.ID;\n\n    canHandleLeafNode(node: Preference.LeafNode): number {\n        return node.preference.data.enum ? 3 : 0;\n    }\n\n    createLeafNodeRenderer(container: interfaces.Container): PreferenceNodeRenderer {\n        return container.get(PreferenceSelectInputRenderer);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, interfaces } from '@theia/core/shared/inversify';\nimport { Preference } from '../../util/preference-types';\nimport { PreferenceLeafNodeRenderer, PreferenceNodeRenderer } from './preference-node-renderer';\nimport { PreferenceLeafNodeRendererContribution } from './preference-node-renderer-creator';\n\n@injectable()\nexport class PreferenceStringInputRenderer extends PreferenceLeafNodeRenderer<string, HTMLInputElement> {\n    protected createInteractable(parent: HTMLElement): void {\n        const interactable = document.createElement('input');\n        this.interactable = interactable;\n        interactable.type = 'text';\n        interactable.spellcheck = false;\n        interactable.classList.add('theia-input');\n        interactable.defaultValue = this.getValue() ?? '';\n        interactable.oninput = this.handleUserInteraction.bind(this);\n        interactable.onblur = this.handleBlur.bind(this);\n        parent.appendChild(interactable);\n    }\n\n    protected getFallbackValue(): string {\n        return '';\n    }\n\n    protected doHandleValueChange(): void {\n        const currentValue = this.interactable.value;\n        this.updateInspection();\n        const newValue = this.getValue() ?? '';\n        this.updateModificationStatus(newValue);\n        if (newValue !== currentValue) {\n            if (document.activeElement !== this.interactable) {\n                this.interactable.value = newValue;\n            } else {\n                this.handleUserInteraction(); // give priority to the value of the input if it is focused.\n            }\n        }\n    }\n\n    protected handleUserInteraction(): void {\n        this.setPreferenceWithDebounce(this.interactable.value);\n    }\n\n    protected async handleBlur(): Promise<void> {\n        await this.setPreferenceWithDebounce.flush();\n        this.handleValueChange();\n    }\n}\n\n@injectable()\nexport class PreferenceStringInputRendererContribution extends PreferenceLeafNodeRendererContribution {\n    static ID = 'preference-string-input-renderer';\n    id = PreferenceStringInputRendererContribution.ID;\n\n    canHandleLeafNode(node: Preference.LeafNode): number {\n        return Preference.LeafNode.getType(node) === 'string' ? 2 : 0;\n    }\n\n    createLeafNodeRenderer(container: interfaces.Container): PreferenceNodeRenderer {\n        return container.get(PreferenceStringInputRenderer);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { postConstruct, injectable, inject } from '@theia/core/shared/inversify';\nimport throttle = require('@theia/core/shared/lodash.throttle');\nimport * as deepEqual from 'fast-deep-equal';\nimport {\n    PreferenceService,\n    CompositeTreeNode,\n    SelectableTreeNode,\n    StatefulWidget,\n    TopDownTreeIterator,\n    PreferenceChanges,\n    ExpandableTreeNode,\n    PreferenceSchemaProvider,\n} from '@theia/core/lib/browser';\nimport { unreachable } from '@theia/core/lib/common';\nimport { BaseWidget, DEFAULT_SCROLL_OPTIONS } from '@theia/core/lib/browser/widgets/widget';\nimport { PreferenceTreeModel, PreferenceFilterChangeEvent, PreferenceFilterChangeSource } from '../preference-tree-model';\nimport { PreferenceNodeRendererFactory, GeneralPreferenceNodeRenderer } from './components/preference-node-renderer';\nimport { Preference } from '../util/preference-types';\nimport { COMMONLY_USED_SECTION_PREFIX } from '../util/preference-tree-generator';\nimport { PreferencesScopeTabBar } from './preference-scope-tabbar-widget';\nimport { PreferenceNodeRendererCreatorRegistry } from './components/preference-node-renderer-creator';\n\nexport interface PreferencesEditorState {\n    firstVisibleChildID: string,\n}\n\n@injectable()\nexport class PreferencesEditorWidget extends BaseWidget implements StatefulWidget {\n    static readonly ID = 'settings.editor';\n    static readonly LABEL = 'Settings Editor';\n\n    override scrollOptions = DEFAULT_SCROLL_OPTIONS;\n\n    protected scrollContainer: HTMLDivElement;\n    /**\n     * Guards against scroll events and selection events looping into each other. Set before this widget initiates a selection.\n     */\n    protected currentModelSelectionId = '';\n    /**\n     * Permits the user to expand multiple nodes without each one being collapsed on a new selection.\n     */\n    protected lastUserSelection = '';\n    protected isAtScrollTop = true;\n    protected firstVisibleChildID = '';\n    protected renderers = new Map<string, GeneralPreferenceNodeRenderer>();\n    protected preferenceDataKeys = new Map<string, string>();\n    // The commonly used section will duplicate preference ID's, so we'll keep a separate list of them.\n    protected commonlyUsedRenderers = new Map<string, GeneralPreferenceNodeRenderer>();\n\n    @inject(PreferenceService) protected readonly preferenceService: PreferenceService;\n    @inject(PreferenceTreeModel) protected readonly model: PreferenceTreeModel;\n    @inject(PreferenceNodeRendererFactory) protected readonly rendererFactory: PreferenceNodeRendererFactory;\n    @inject(PreferenceNodeRendererCreatorRegistry) protected readonly rendererRegistry: PreferenceNodeRendererCreatorRegistry;\n    @inject(PreferenceSchemaProvider) protected readonly schemaProvider: PreferenceSchemaProvider;\n    @inject(PreferencesScopeTabBar) protected readonly tabbar: PreferencesScopeTabBar;\n\n    @postConstruct()\n    protected init(): void {\n        this.doInit();\n    }\n\n    protected async doInit(): Promise<void> {\n\n        this.id = PreferencesEditorWidget.ID;\n        this.title.label = PreferencesEditorWidget.LABEL;\n        this.addClass('settings-main');\n        this.toDispose.pushAll([\n            this.preferenceService.onPreferencesChanged(e => this.handlePreferenceChanges(e)),\n            this.model.onFilterChanged(e => this.handleDisplayChange(e)),\n            this.model.onSelectionChanged(e => this.handleSelectionChange(e)),\n        ]);\n        this.createContainers();\n        await this.preferenceService.ready;\n        this.handleDisplayChange({ source: PreferenceFilterChangeSource.Schema });\n        this.rendererRegistry.onDidChange(() => this.handleRegistryChange());\n    }\n\n    protected createContainers(): void {\n        const innerWrapper = document.createElement('div');\n        innerWrapper.classList.add('settings-main-scroll-container');\n        this.scrollContainer = innerWrapper;\n        innerWrapper.addEventListener('scroll', this.onScroll, { passive: true });\n        this.node.appendChild(innerWrapper);\n        const noLeavesMessage = document.createElement('div');\n        noLeavesMessage.classList.add('settings-no-results-announcement');\n        noLeavesMessage.textContent = 'That search query has returned no results.';\n        this.node.appendChild(noLeavesMessage);\n    }\n\n    protected handleDisplayChange(e: PreferenceFilterChangeEvent): void {\n        const { isFiltered } = this.model;\n        const currentFirstVisible = this.firstVisibleChildID;\n        const leavesAreVisible = this.areLeavesVisible();\n        if (e.source === PreferenceFilterChangeSource.Search) {\n            this.handleSearchChange(isFiltered, leavesAreVisible);\n        } else if (e.source === PreferenceFilterChangeSource.Scope) {\n            this.handleScopeChange(isFiltered);\n        } else if (e.source === PreferenceFilterChangeSource.Schema) {\n            this.handleSchemaChange(isFiltered);\n        } else {\n            unreachable(e.source, 'Not all PreferenceFilterChangeSource enum variants handled.');\n        }\n        this.resetScroll(currentFirstVisible, e.source === PreferenceFilterChangeSource.Search && !isFiltered);\n    }\n\n    protected handleRegistryChange(): void {\n        for (const [id, renderer, collection] of this.allRenderers()) {\n            renderer.dispose();\n            collection.delete(id);\n        }\n        this.handleDisplayChange({ source: PreferenceFilterChangeSource.Schema });\n    }\n\n    protected handleSchemaChange(isFiltered: boolean): void {\n        for (const [id, renderer, collection] of this.allRenderers()) {\n            const node = this.model.getNode(renderer.nodeId);\n            if (!node || (Preference.LeafNode.is(node) && this.hasSchemaChanged(renderer, node))) {\n                renderer.dispose();\n                collection.delete(id);\n            }\n        }\n        if (this.model.root) {\n            const nodeIterator = Array.from(this.scrollContainer.children)[Symbol.iterator]();\n            let nextNode: HTMLElement | undefined = nodeIterator.next().value;\n            for (const node of new TopDownTreeIterator(this.model.root)) {\n                if (Preference.TreeNode.is(node)) {\n                    const { collection, id } = this.analyzeIDAndGetRendererGroup(node.id);\n                    const renderer = collection.get(id) ?? this.rendererFactory(node);\n                    if (!renderer.node.parentElement) { // If it hasn't been attached yet, it hasn't been checked for the current search.\n                        this.hideIfFailsFilters(renderer, isFiltered);\n                        collection.set(id, renderer);\n                    }\n                    if (nextNode !== renderer.node) {\n                        if (nextNode) {\n                            renderer.insertBefore(nextNode);\n                        } else {\n                            renderer.appendTo(this.scrollContainer);\n                        }\n                    } else {\n                        nextNode = nodeIterator.next().value;\n                    }\n                }\n            }\n        }\n    }\n\n    protected handleScopeChange(isFiltered: boolean = this.model.isFiltered): void {\n        for (const [, renderer] of this.allRenderers()) {\n            const isHidden = this.hideIfFailsFilters(renderer, isFiltered);\n            if (isFiltered || !isHidden) {\n                renderer.handleScopeChange?.(isFiltered);\n            }\n        }\n    }\n\n    protected hasSchemaChanged(renderer: GeneralPreferenceNodeRenderer, node: Preference.LeafNode): boolean {\n        return !deepEqual(renderer.schema, node.preference.data);\n    }\n\n    protected handleSearchChange(isFiltered: boolean, leavesAreVisible: boolean): void {\n        if (leavesAreVisible) {\n            for (const [, renderer] of this.allRenderers()) {\n                const isHidden = this.hideIfFailsFilters(renderer, isFiltered);\n                if (!isHidden) {\n                    renderer.handleSearchChange?.(isFiltered);\n                }\n            }\n        }\n    }\n\n    protected areLeavesVisible(): boolean {\n        const leavesAreVisible = this.model.totalVisibleLeaves > 0;\n        this.node.classList.toggle('no-results', !leavesAreVisible);\n        this.scrollContainer.classList.toggle('hidden', !leavesAreVisible);\n        return leavesAreVisible;\n    }\n\n    protected *allRenderers(): IterableIterator<[string, GeneralPreferenceNodeRenderer, Map<string, GeneralPreferenceNodeRenderer>]> {\n        for (const [id, renderer] of this.commonlyUsedRenderers.entries()) {\n            yield [id, renderer, this.commonlyUsedRenderers];\n        }\n        for (const [id, renderer] of this.renderers.entries()) {\n            yield [id, renderer, this.renderers];\n        }\n    }\n\n    protected handlePreferenceChanges(e: PreferenceChanges): void {\n        for (const id of Object.keys(e)) {\n            this.commonlyUsedRenderers.get(id)?.handleValueChange?.();\n            this.renderers.get(id)?.handleValueChange?.();\n        }\n    }\n\n    /**\n     * @returns true if the renderer is hidden, false otherwise.\n     */\n    protected hideIfFailsFilters(renderer: GeneralPreferenceNodeRenderer, isFiltered: boolean): boolean {\n        const row = this.model.currentRows.get(renderer.nodeId);\n        if (!row || (CompositeTreeNode.is(row.node) && (isFiltered || row.visibleChildren === 0))) {\n            renderer.hide();\n            return true;\n        } else {\n            renderer.show();\n            return false;\n        }\n    }\n\n    protected resetScroll(nodeIDToScrollTo?: string, filterWasCleared: boolean = false): void {\n        if (this.scrollBar) { // Absent on widget creation\n            this.doResetScroll(nodeIDToScrollTo, filterWasCleared);\n        } else {\n            const interval = setInterval(() => {\n                if (this.scrollBar) {\n                    clearInterval(interval);\n                    this.doResetScroll(nodeIDToScrollTo, filterWasCleared);\n                }\n            }, 500);\n        }\n    }\n\n    protected doResetScroll(nodeIDToScrollTo?: string, filterWasCleared: boolean = false): void {\n        requestAnimationFrame(() => {\n            this.scrollBar?.update();\n            if (!filterWasCleared && nodeIDToScrollTo) {\n                const { id, collection } = this.analyzeIDAndGetRendererGroup(nodeIDToScrollTo);\n                const renderer = collection.get(id);\n                if (renderer?.visible) {\n                    renderer.node.scrollIntoView();\n                    return;\n                }\n            }\n            this.scrollContainer.scrollTop = 0;\n        });\n    };\n\n    protected doOnScroll(): void {\n        const { scrollContainer } = this;\n        const firstVisibleChildID = this.findFirstVisibleChildID();\n        this.setFirstVisibleChildID(firstVisibleChildID);\n        if (this.isAtScrollTop && scrollContainer.scrollTop !== 0) {\n            this.isAtScrollTop = false;\n            this.tabbar.toggleShadow(true);\n        } else if (!this.isAtScrollTop && scrollContainer.scrollTop === 0) {\n            this.isAtScrollTop = true;\n            this.tabbar.toggleShadow(false);\n        }\n    };\n\n    onScroll = throttle(this.doOnScroll.bind(this), 50);\n\n    protected findFirstVisibleChildID(): string | undefined {\n        const { scrollTop } = this.scrollContainer;\n        for (const [, renderer] of this.allRenderers()) {\n            const { offsetTop, offsetHeight } = renderer.node;\n            if (Math.abs(offsetTop - scrollTop) <= offsetHeight / 2) {\n                return renderer.nodeId;\n            }\n        }\n    }\n\n    protected setFirstVisibleChildID(id?: string): void {\n        if (id && id !== this.firstVisibleChildID) {\n            this.firstVisibleChildID = id;\n            let currentNode = this.model.getNode(id);\n            let expansionAncestor;\n            let selectionAncestor;\n            while (currentNode && (!expansionAncestor || !selectionAncestor)) {\n                if (!selectionAncestor && SelectableTreeNode.is(currentNode)) {\n                    selectionAncestor = currentNode;\n                }\n                if (!expansionAncestor && ExpandableTreeNode.is(currentNode)) {\n                    expansionAncestor = currentNode;\n                }\n                currentNode = currentNode.parent;\n            }\n            if (selectionAncestor) {\n                this.currentModelSelectionId = selectionAncestor.id;\n                expansionAncestor = expansionAncestor ?? selectionAncestor;\n                this.model.selectIfNotSelected(selectionAncestor);\n                if (!this.model.isFiltered && id !== this.lastUserSelection) {\n                    this.lastUserSelection = '';\n                    this.model.collapseAllExcept(expansionAncestor);\n                }\n            }\n        }\n    }\n\n    protected handleSelectionChange(selectionEvent: readonly Readonly<SelectableTreeNode>[]): void {\n        const node = selectionEvent[0];\n        if (node && node.id !== this.currentModelSelectionId) {\n            this.currentModelSelectionId = node.id;\n            this.lastUserSelection = node.id;\n            if (this.model.isFiltered && CompositeTreeNode.is(node)) {\n                for (const candidate of new TopDownTreeIterator(node, { pruneSiblings: true })) {\n                    const { id, collection } = this.analyzeIDAndGetRendererGroup(candidate.id);\n                    const renderer = collection.get(id);\n                    if (renderer?.visible) {\n                        // When filtered, treat the first visible child as the selected node, since it will be the one scrolled to.\n                        this.lastUserSelection = renderer.nodeId;\n                        renderer.node.scrollIntoView();\n                        return;\n                    }\n                }\n            } else {\n                const { id, collection } = this.analyzeIDAndGetRendererGroup(node.id);\n                const renderer = collection.get(id);\n                renderer?.node.scrollIntoView();\n            }\n        }\n    }\n\n    protected analyzeIDAndGetRendererGroup(nodeID: string): { id: string, group: string, collection: Map<string, GeneralPreferenceNodeRenderer> } {\n        const { id, group } = Preference.TreeNode.getGroupAndIdFromNodeId(nodeID);\n        const collection = group === COMMONLY_USED_SECTION_PREFIX ? this.commonlyUsedRenderers : this.renderers;\n        return { id, group, collection };\n    }\n\n    protected override getScrollContainer(): HTMLElement {\n        return this.scrollContainer;\n    }\n\n    storeState(): PreferencesEditorState {\n        return {\n            firstVisibleChildID: this.firstVisibleChildID,\n        };\n    }\n\n    restoreState(oldState: PreferencesEditorState): void {\n        this.firstVisibleChildID = oldState.firstVisibleChildID;\n        this.resetScroll(this.firstVisibleChildID);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { TabBar, Widget, Title } from '@theia/core/shared/@phosphor/widgets';\nimport { PreferenceScope, Message, ContextMenuRenderer, LabelProvider, StatefulWidget, codicon } from '@theia/core/lib/browser';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\nimport { PreferenceScopeCommandManager } from '../util/preference-scope-command-manager';\nimport { Preference, PreferenceMenus } from '../util/preference-types';\nimport { CommandRegistry, DisposableCollection, Emitter, MenuModelRegistry } from '@theia/core/lib/common';\nimport { nls } from '@theia/core/lib/common/nls';\n\nconst USER_TAB_LABEL = nls.localizeByDefault('User');\nconst USER_TAB_INDEX = PreferenceScope['User'];\nconst WORKSPACE_TAB_LABEL = nls.localizeByDefault('Workspace');\nconst WORKSPACE_TAB_INDEX = PreferenceScope['Workspace'];\nconst FOLDER_TAB_LABEL = nls.localizeByDefault('Folder');\nconst FOLDER_TAB_INDEX = PreferenceScope['Folder'];\n\nconst PREFERENCE_TAB_CLASSNAME = 'preferences-scope-tab';\nconst GENERAL_FOLDER_TAB_CLASSNAME = 'preference-folder';\nconst LABELED_FOLDER_TAB_CLASSNAME = 'preferences-folder-tab';\nconst FOLDER_DROPDOWN_CLASSNAME = 'preferences-folder-dropdown';\nconst FOLDER_DROPDOWN_ICON_CLASSNAME = 'preferences-folder-dropdown-icon ' + codicon('chevron-down');\nconst TABBAR_UNDERLINE_CLASSNAME = 'tabbar-underline';\nconst SINGLE_FOLDER_TAB_CLASSNAME = `${PREFERENCE_TAB_CLASSNAME} ${GENERAL_FOLDER_TAB_CLASSNAME} ${LABELED_FOLDER_TAB_CLASSNAME}`;\nconst UNSELECTED_FOLDER_DROPDOWN_CLASSNAME = `${PREFERENCE_TAB_CLASSNAME} ${GENERAL_FOLDER_TAB_CLASSNAME} ${FOLDER_DROPDOWN_CLASSNAME}`;\nconst SELECTED_FOLDER_DROPDOWN_CLASSNAME = `${PREFERENCE_TAB_CLASSNAME} ${GENERAL_FOLDER_TAB_CLASSNAME} ${LABELED_FOLDER_TAB_CLASSNAME} ${FOLDER_DROPDOWN_CLASSNAME}`;\nconst SHADOW_CLASSNAME = 'with-shadow';\n\nexport interface PreferencesScopeTabBarState {\n    scopeDetails: Preference.SelectedScopeDetails;\n}\n\n@injectable()\nexport class PreferencesScopeTabBar extends TabBar<Widget> implements StatefulWidget {\n\n    static ID = 'preferences-scope-tab-bar';\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(PreferenceScopeCommandManager) protected readonly preferencesMenuFactory: PreferenceScopeCommandManager;\n    @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(CommandRegistry) protected readonly commandRegistry: CommandRegistry;\n    @inject(MenuModelRegistry) protected readonly menuModelRegistry: MenuModelRegistry;\n\n    protected readonly onScopeChangedEmitter = new Emitter<Preference.SelectedScopeDetails>();\n    readonly onScopeChanged = this.onScopeChangedEmitter.event;\n\n    protected toDispose = new DisposableCollection();\n    protected folderTitle: Title<Widget>;\n    protected currentWorkspaceRoots: FileStat[] = [];\n    protected currentSelection: Preference.SelectedScopeDetails = Preference.DEFAULT_SCOPE;\n    protected editorScrollAtTop = true;\n\n    get currentScope(): Preference.SelectedScopeDetails {\n        return this.currentSelection;\n    }\n\n    protected setNewScopeSelection(newSelection: Preference.SelectedScopeDetails): void {\n        const stringifiedSelectionScope = newSelection.scope.toString();\n        const newIndex = this.titles.findIndex(title => title.dataset.scope === stringifiedSelectionScope);\n        if (newIndex !== -1) {\n            this.currentSelection = newSelection;\n            this.currentIndex = newIndex;\n            if (newSelection.scope === PreferenceScope.Folder) {\n                this.addOrUpdateFolderTab();\n            }\n            this.emitNewScope();\n        }\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.id = PreferencesScopeTabBar.ID;\n        this.setupInitialDisplay();\n\n        this.tabActivateRequested.connect((sender, args) => {\n            const scopeDetails = this.toScopeDetails(args.title);\n            if (scopeDetails) {\n                this.setNewScopeSelection(scopeDetails);\n            }\n        });\n        this.toDispose.pushAll([\n            this.workspaceService.onWorkspaceChanged(newRoots => this.doUpdateDisplay(newRoots)),\n            this.workspaceService.onWorkspaceLocationChanged(() => this.doUpdateDisplay(this.workspaceService.tryGetRoots())),\n        ]);\n        const tabUnderline = document.createElement('div');\n        tabUnderline.className = TABBAR_UNDERLINE_CLASSNAME;\n        this.node.append(tabUnderline);\n    }\n\n    protected toScopeDetails(title?: Title<Widget> | Preference.SelectedScopeDetails): Preference.SelectedScopeDetails | undefined {\n        if (title) {\n            const source = 'dataset' in title ? title.dataset : title;\n            const { scope, uri, activeScopeIsFolder } = source;\n            return {\n                scope: Number(scope),\n                uri: uri || undefined,\n                activeScopeIsFolder: activeScopeIsFolder === 'true' || activeScopeIsFolder === true,\n            };\n        }\n    }\n\n    protected toDataSet(scopeDetails: Preference.SelectedScopeDetails): Title.Dataset {\n        const { scope, uri, activeScopeIsFolder } = scopeDetails;\n        return {\n            scope: scope.toString(),\n            uri: uri ?? '',\n            activeScopeIsFolder: activeScopeIsFolder.toString()\n        };\n    }\n\n    protected setupInitialDisplay(): void {\n        this.addUserTab();\n        if (this.workspaceService.workspace) {\n            this.addWorkspaceTab(this.workspaceService.workspace);\n        }\n        this.addOrUpdateFolderTab();\n    }\n\n    protected override onUpdateRequest(msg: Message): void {\n        super.onUpdateRequest(msg);\n        this.addTabIndexToTabs();\n    }\n\n    protected addTabIndexToTabs(): void {\n        this.node.querySelectorAll('li').forEach((tab, index) => {\n            tab.tabIndex = 0;\n            const handler = () => {\n                if (tab.className.includes(GENERAL_FOLDER_TAB_CLASSNAME) && this.currentWorkspaceRoots.length > 1) {\n                    const tabRect = tab.getBoundingClientRect();\n                    this.openContextMenu(tabRect, tab, 'keypress');\n                } else {\n                    const details = this.toScopeDetails(this.titles[index]);\n                    if (details) {\n                        this.setNewScopeSelection(details);\n                    }\n                }\n            };\n            tab.onkeydown = handler;\n            tab.onclick = handler;\n        });\n    }\n\n    protected addUserTab(): void {\n        this.addTab(new Title({\n            dataset: { uri: '', scope: USER_TAB_INDEX.toString() },\n            label: USER_TAB_LABEL,\n            owner: this,\n            className: PREFERENCE_TAB_CLASSNAME\n        }));\n    }\n\n    protected addWorkspaceTab(currentWorkspace: FileStat): Title<Widget> {\n        const scopeDetails = this.getWorkspaceDataset(currentWorkspace);\n        const workspaceTabTitle = new Title({\n            dataset: this.toDataSet(scopeDetails),\n            label: WORKSPACE_TAB_LABEL,\n            owner: this,\n            className: PREFERENCE_TAB_CLASSNAME,\n        });\n        this.addTab(workspaceTabTitle);\n        return workspaceTabTitle;\n    }\n\n    protected getWorkspaceDataset(currentWorkspace: FileStat): Preference.SelectedScopeDetails {\n        const { resource, isDirectory } = currentWorkspace;\n        const scope = WORKSPACE_TAB_INDEX;\n        return { uri: resource.toString(), activeScopeIsFolder: isDirectory, scope };\n    }\n\n    protected addOrUpdateFolderTab(): void {\n        if (!!this.workspaceService.workspace) {\n            this.currentWorkspaceRoots = this.workspaceService.tryGetRoots();\n            const multipleFolderRootsAreAvailable = this.currentWorkspaceRoots && this.currentWorkspaceRoots.length > 1;\n            const noFolderRootsAreAvailable = this.currentWorkspaceRoots.length === 0;\n            const shouldShowFoldersSeparately = this.workspaceService.saved;\n\n            if (!noFolderRootsAreAvailable) {\n                if (!this.folderTitle) {\n                    this.folderTitle = new Title({\n                        label: '',\n                        caption: FOLDER_TAB_LABEL,\n                        owner: this,\n                    });\n                }\n\n                this.setFolderTitleProperties(multipleFolderRootsAreAvailable);\n                if (multipleFolderRootsAreAvailable || shouldShowFoldersSeparately) {\n                    this.addTab(this.folderTitle);\n                }\n            } else {\n                const folderTabIndex = this.titles.findIndex(title => title.caption === FOLDER_TAB_LABEL);\n\n                if (folderTabIndex > -1) {\n                    this.removeTabAt(folderTabIndex);\n                }\n            }\n        }\n    }\n\n    protected setFolderTitleProperties(multipleFolderRootsAreAvailable: boolean): void {\n        this.folderTitle.iconClass = multipleFolderRootsAreAvailable ? FOLDER_DROPDOWN_ICON_CLASSNAME : '';\n        if (this.currentSelection.scope === FOLDER_TAB_INDEX) {\n            this.folderTitle.label = this.labelProvider.getName(new URI(this.currentSelection.uri));\n            this.folderTitle.dataset = this.toDataSet(this.currentSelection);\n            this.folderTitle.className = multipleFolderRootsAreAvailable ? SELECTED_FOLDER_DROPDOWN_CLASSNAME : SINGLE_FOLDER_TAB_CLASSNAME;\n        } else {\n            const singleFolderRoot = this.currentWorkspaceRoots[0].resource;\n            const singleFolderLabel = this.labelProvider.getName(singleFolderRoot);\n            const defaultURI = multipleFolderRootsAreAvailable ? '' : singleFolderRoot.toString();\n            this.folderTitle.label = multipleFolderRootsAreAvailable ? FOLDER_TAB_LABEL : singleFolderLabel;\n            this.folderTitle.className = multipleFolderRootsAreAvailable ? UNSELECTED_FOLDER_DROPDOWN_CLASSNAME : SINGLE_FOLDER_TAB_CLASSNAME;\n            this.folderTitle.dataset = { folderTitle: 'true', scope: FOLDER_TAB_INDEX.toString(), uri: defaultURI };\n        }\n    }\n\n    protected folderSelectionCallback = (newScope: Preference.SelectedScopeDetails): void => { this.setNewScopeSelection(newScope); };\n\n    protected getFolderContextMenu(workspaceRoots = this.workspaceService.tryGetRoots()): void {\n        this.preferencesMenuFactory.createFolderWorkspacesMenu(workspaceRoots, this.currentSelection.uri);\n    }\n\n    override handleEvent(): void {\n        // Don't - the handlers are defined in PreferenceScopeTabbarWidget.addTabIndexToTabs()\n    }\n\n    protected openContextMenu(tabRect: DOMRect | ClientRect, folderTabNode: HTMLElement, source: 'click' | 'keypress'): void {\n        const toDisposeOnHide = new DisposableCollection();\n        for (const root of this.workspaceService.tryGetRoots()) {\n            const id = `set-scope-to-${root.resource.toString()}`;\n            toDisposeOnHide.pushAll([\n                this.commandRegistry.registerCommand(\n                    { id },\n                    { execute: () => this.setScope(root.resource) }\n                ),\n                this.menuModelRegistry.registerMenuAction(PreferenceMenus.FOLDER_SCOPE_MENU_PATH,\n                    {\n                        commandId: id,\n                        label: this.labelProvider.getName(root),\n                    }\n                )\n            ]);\n        }\n        this.contextMenuRenderer.render({\n            menuPath: PreferenceMenus.FOLDER_SCOPE_MENU_PATH,\n            anchor: { x: tabRect.left, y: tabRect.bottom },\n            onHide: () => {\n                setTimeout(() => toDisposeOnHide.dispose());\n                if (source === 'click') { folderTabNode.blur(); }\n            }\n        });\n    }\n\n    protected doUpdateDisplay(newRoots: FileStat[]): void {\n        const folderWasRemoved = newRoots.length < this.currentWorkspaceRoots.length;\n        this.currentWorkspaceRoots = newRoots;\n        if (folderWasRemoved) {\n            const removedFolderWasSelectedScope = !this.currentWorkspaceRoots.some(root => root.resource.toString() === this.currentSelection.uri);\n            if (removedFolderWasSelectedScope) {\n                this.setNewScopeSelection(Preference.DEFAULT_SCOPE);\n            }\n        }\n        this.updateWorkspaceTab();\n        this.addOrUpdateFolderTab();\n    }\n\n    protected updateWorkspaceTab(): void {\n        const currentWorkspace = this.workspaceService.workspace;\n        if (currentWorkspace) {\n            const workspaceTitle = this.titles.find(title => title.label === WORKSPACE_TAB_LABEL) ?? this.addWorkspaceTab(currentWorkspace);\n            const scopeDetails = this.getWorkspaceDataset(currentWorkspace);\n            workspaceTitle.dataset = this.toDataSet(scopeDetails);\n            if (this.currentSelection.scope === PreferenceScope.Workspace) {\n                this.setNewScopeSelection(scopeDetails);\n            }\n        }\n    }\n\n    protected emitNewScope(): void {\n        this.onScopeChangedEmitter.fire(this.currentSelection);\n    }\n\n    setScope(scope: PreferenceScope.User | PreferenceScope.Workspace | URI): void {\n        const details = scope instanceof URI ? this.getDetailsForResource(scope) : this.getDetailsForScope(scope);\n        if (details) {\n            this.setNewScopeSelection(details);\n        }\n    }\n\n    protected getDetailsForScope(scope: PreferenceScope.User | PreferenceScope.Workspace): Preference.SelectedScopeDetails | undefined {\n        const stringifiedSelectionScope = scope.toString();\n        const correspondingTitle = this.titles.find(title => title.dataset.scope === stringifiedSelectionScope);\n        return this.toScopeDetails(correspondingTitle);\n    }\n\n    protected getDetailsForResource(resource: URI): Preference.SelectedScopeDetails | undefined {\n        const parent = this.workspaceService.getWorkspaceRootUri(resource);\n        if (!parent) {\n            return undefined;\n        }\n        if (!this.workspaceService.isMultiRootWorkspaceOpened) {\n            return this.getDetailsForScope(PreferenceScope.Workspace);\n        }\n        return ({ scope: PreferenceScope.Folder, uri: parent.toString(), activeScopeIsFolder: true });\n    }\n\n    storeState(): PreferencesScopeTabBarState {\n        return {\n            scopeDetails: this.currentScope\n        };\n    }\n\n    restoreState(oldState: PreferencesScopeTabBarState): void {\n        const scopeDetails = this.toScopeDetails(oldState.scopeDetails);\n        if (scopeDetails) {\n            this.setNewScopeSelection(scopeDetails);\n        }\n    }\n\n    toggleShadow(showShadow: boolean): void {\n        this.toggleClass(SHADOW_CLASSNAME, showShadow);\n    }\n\n    override dispose(): void {\n        super.dispose();\n        this.toDispose.dispose();\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { codicon, ReactWidget, StatefulWidget, Widget } from '@theia/core/lib/browser';\nimport { injectable, postConstruct, unmanaged } from '@theia/core/shared/inversify';\nimport * as React from '@theia/core/shared/react';\nimport debounce = require('p-debounce');\nimport { Emitter } from '@theia/core';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport interface PreferencesSearchbarState {\n    searchTerm: string;\n}\n\n@injectable()\nexport class PreferencesSearchbarWidget extends ReactWidget implements StatefulWidget {\n    static readonly ID = 'settings.header';\n    static readonly LABEL = 'Settings Header';\n    static readonly SEARCHBAR_ID = 'preference-searchbar';\n\n    protected readonly onFilterStringChangedEmitter = new Emitter<string>();\n    readonly onFilterChanged = this.onFilterStringChangedEmitter.event;\n\n    protected searchbarRef: React.RefObject<HTMLInputElement> = React.createRef<HTMLInputElement>();\n    protected resultsCount: number = 0;\n\n    constructor(@unmanaged() options?: Widget.IOptions) {\n        super(options);\n        this.focus = this.focus.bind(this);\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.id = PreferencesSearchbarWidget.ID;\n        this.title.label = PreferencesSearchbarWidget.LABEL;\n        this.update();\n    }\n\n    protected handleSearch = (e: React.ChangeEvent<HTMLInputElement>): Promise<void> => this.search(e.target.value);\n\n    protected search = debounce(async (value: string) => {\n        this.onFilterStringChangedEmitter.fire(value);\n        this.update();\n    }, 200);\n\n    focus(): void {\n        if (this.searchbarRef.current) {\n            this.searchbarRef.current.focus();\n        }\n    }\n\n    /**\n     * Clears the search input and all search results.\n     * @param e on-click mouse event.\n     */\n    protected clearSearchResults = async (e: React.MouseEvent): Promise<void> => {\n        const search = document.getElementById(PreferencesSearchbarWidget.SEARCHBAR_ID) as HTMLInputElement;\n        if (search) {\n            search.value = '';\n            await this.search(search.value);\n            this.update();\n        }\n    };\n\n    /**\n     * Renders all search bar options.\n     */\n    protected renderOptionContainer(): React.ReactNode {\n        const resultsCount = this.renderResultsCountOption();\n        const clearAllOption = this.renderClearAllOption();\n        return <div className=\"option-buttons\"> {resultsCount} {clearAllOption} </div>;\n    }\n\n    /**\n     * Renders a badge displaying search results count.\n     */\n    protected renderResultsCountOption(): React.ReactNode {\n        let resultsFound: string;\n        if (this.resultsCount === 0) {\n            resultsFound = nls.localizeByDefault('No Settings Found');\n        } else if (this.resultsCount === 1) {\n            resultsFound = nls.localizeByDefault('1 Setting Found');\n        } else {\n            resultsFound = nls.localizeByDefault('{0} Settings Found', this.resultsCount.toFixed(0));\n        }\n        return this.searchTermExists() ?\n            (<span\n                className=\"results-found\"\n                title={resultsFound}>\n                {resultsFound}\n            </span>)\n            : '';\n    }\n\n    /**\n     * Renders a clear all button.\n     */\n    protected renderClearAllOption(): React.ReactNode {\n        return <span\n            className={`${codicon('clear-all')} option ${(this.searchTermExists() ? 'enabled' : '')}`}\n            title={nls.localizeByDefault('Clear Search Results')}\n            onClick={this.clearSearchResults}\n        />;\n    }\n\n    /**\n     * Determines whether the search input currently has a value.\n     * @returns true, if the search input currently has a value; false, otherwise.\n     */\n    protected searchTermExists(): boolean {\n        return !!this.searchbarRef.current?.value;\n    }\n\n    protected getSearchTerm(): string {\n        const search = document.getElementById(PreferencesSearchbarWidget.SEARCHBAR_ID) as HTMLInputElement;\n        return search?.value;\n    }\n\n    async updateSearchTerm(searchTerm: string): Promise<void> {\n        const search = document.getElementById(PreferencesSearchbarWidget.SEARCHBAR_ID) as HTMLInputElement;\n        if (!search || search.value === searchTerm) {\n            return;\n        }\n        search.value = searchTerm;\n        await this.search(search.value);\n        this.update();\n    }\n\n    render(): React.ReactNode {\n        const optionContainer = this.renderOptionContainer();\n        return (\n            <div className='settings-header'>\n                <div className=\"settings-search-container\" ref={this.focus}>\n                    <input\n                        type=\"text\"\n                        id={PreferencesSearchbarWidget.SEARCHBAR_ID}\n                        spellCheck={false}\n                        placeholder={nls.localizeByDefault('Search settings')}\n                        className=\"settings-search-input theia-input\"\n                        onChange={this.handleSearch}\n                        ref={this.searchbarRef}\n                    />\n                    {optionContainer}\n                </div>\n            </div >\n        );\n    }\n\n    /**\n     * Updates the search result count.\n     * @param count the result count.\n     */\n    updateResultsCount(count: number): void {\n        this.resultsCount = count;\n        this.update();\n    }\n\n    storeState(): PreferencesSearchbarState {\n        return {\n            searchTerm: this.getSearchTerm()\n        };\n    }\n\n    restoreState(oldState: PreferencesSearchbarState): void {\n        const searchInputExists = this.onDidChangeVisibility(() => {\n            this.updateSearchTerm(oldState.searchTerm || '');\n            searchInputExists.dispose();\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport {\n    ExpandableTreeNode,\n    TreeNode,\n    TreeProps,\n    TreeWidget,\n    TREE_NODE_CONTENT_CLASS,\n} from '@theia/core/lib/browser';\nimport React = require('@theia/core/shared/react');\nimport { PreferenceTreeModel, PreferenceTreeNodeRow, PreferenceTreeNodeProps } from '../preference-tree-model';\n\n@injectable()\nexport class PreferencesTreeWidget extends TreeWidget {\n    static ID = 'preferences.tree';\n\n    protected shouldFireSelectionEvents: boolean = true;\n    protected firstVisibleLeafNodeID: string;\n\n    @inject(PreferenceTreeModel) override readonly model: PreferenceTreeModel;\n    @inject(TreeProps) protected readonly treeProps: TreeProps;\n\n    @postConstruct()\n    override init(): void {\n        super.init();\n        this.id = PreferencesTreeWidget.ID;\n        this.toDispose.pushAll([\n            this.model.onFilterChanged(() => {\n                this.updateRows();\n            }),\n        ]);\n    }\n\n    override doUpdateRows(): void {\n        this.rows = new Map();\n        let index = 0;\n        for (const [id, nodeRow] of this.model.currentRows.entries()) {\n            if (nodeRow.visibleChildren > 0 && (ExpandableTreeNode.is(nodeRow.node) || ExpandableTreeNode.isExpanded(nodeRow.node.parent))) {\n                this.rows.set(id, { ...nodeRow, index: index++ });\n            }\n        }\n        this.updateScrollToRow();\n    }\n\n    protected override doRenderNodeRow({ depth, visibleChildren, node, isExpansible }: PreferenceTreeNodeRow): React.ReactNode {\n        return this.renderNode(node, { depth, visibleChildren, isExpansible });\n    }\n\n    protected override renderNode(node: TreeNode, props: PreferenceTreeNodeProps): React.ReactNode {\n        if (!TreeNode.isVisible(node)) {\n            return undefined;\n        }\n\n        const attributes = this.createNodeAttributes(node, props);\n\n        const content = <div className={TREE_NODE_CONTENT_CLASS}>\n            {this.renderExpansionToggle(node, props)}\n            {this.renderCaption(node, props)}\n        </div>;\n        return React.createElement('div', attributes, content);\n    }\n\n    protected override renderExpansionToggle(node: TreeNode, props: PreferenceTreeNodeProps): React.ReactNode {\n        if (ExpandableTreeNode.is(node) && !props.isExpansible) {\n            return <div className='preferences-tree-spacer' />;\n        }\n        return super.renderExpansionToggle(node, props);\n    }\n\n    protected override toNodeName(node: TreeNode): string {\n        const visibleChildren = this.model.currentRows.get(node.id)?.visibleChildren;\n        const baseName = this.labelProvider.getName(node);\n        const printedNameWithVisibleChildren = this.model.isFiltered && visibleChildren !== undefined\n            ? `${baseName} (${visibleChildren})`\n            : baseName;\n        return printedNameWithVisibleChildren;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { createTreeContainer, LabelProviderContribution, WidgetFactory } from '@theia/core/lib/browser';\nimport { bindContributionProvider } from '@theia/core/lib/common/contribution-provider';\nimport { Container, interfaces } from '@theia/core/shared/inversify';\nimport { PreferenceTreeModel } from '../preference-tree-model';\nimport { PreferenceTreeLabelProvider } from '../util/preference-tree-label-provider';\nimport { Preference } from '../util/preference-types';\nimport { PreferenceArrayInputRenderer, PreferenceArrayInputRendererContribution } from './components/preference-array-input';\nimport { PreferenceBooleanInputRenderer, PreferenceBooleanInputRendererContribution } from './components/preference-boolean-input';\nimport { PreferenceSingleFilePathInputRenderer, PreferenceSingleFilePathInputRendererContribution } from './components/preference-file-input';\nimport { PreferenceJSONLinkRenderer, PreferenceJSONLinkRendererContribution } from './components/preference-json-input';\nimport { PreferenceHeaderRenderer, PreferenceNodeRendererFactory } from './components/preference-node-renderer';\nimport {\n    DefaultPreferenceNodeRendererCreatorRegistry, PreferenceHeaderRendererContribution, PreferenceNodeRendererContribution, PreferenceNodeRendererCreatorRegistry\n} from './components/preference-node-renderer-creator';\nimport { PreferenceNumberInputRenderer, PreferenceNumberInputRendererContribution } from './components/preference-number-input';\nimport { PreferenceSelectInputRenderer, PreferenceSelectInputRendererContribution } from './components/preference-select-input';\nimport { PreferenceStringInputRenderer, PreferenceStringInputRendererContribution } from './components/preference-string-input';\nimport { PreferenceMarkdownRenderer } from './components/preference-markdown-renderer';\nimport { PreferencesEditorWidget } from './preference-editor-widget';\nimport { PreferencesScopeTabBar } from './preference-scope-tabbar-widget';\nimport { PreferencesSearchbarWidget } from './preference-searchbar-widget';\nimport { PreferencesTreeWidget } from './preference-tree-widget';\nimport { PreferencesWidget } from './preference-widget';\n\nexport function bindPreferencesWidgets(bind: interfaces.Bind): void {\n    bind(PreferenceTreeLabelProvider).toSelf().inSingletonScope();\n    bind(LabelProviderContribution).toService(PreferenceTreeLabelProvider);\n    bind(PreferencesWidget)\n        .toDynamicValue(({ container }) => createPreferencesWidgetContainer(container).get(PreferencesWidget))\n        .inSingletonScope();\n    bind(WidgetFactory).toDynamicValue(({ container }) => ({\n        id: PreferencesWidget.ID,\n        createWidget: () => container.get(PreferencesWidget)\n    })).inSingletonScope();\n\n    bindContributionProvider(bind, PreferenceNodeRendererContribution);\n\n    bind(PreferenceSelectInputRenderer).toSelf();\n    bind(PreferenceNodeRendererContribution).to(PreferenceSelectInputRendererContribution).inSingletonScope();\n\n    bind(PreferenceArrayInputRenderer).toSelf();\n    bind(PreferenceNodeRendererContribution).to(PreferenceArrayInputRendererContribution).inSingletonScope();\n\n    bind(PreferenceStringInputRenderer).toSelf();\n    bind(PreferenceNodeRendererContribution).to(PreferenceStringInputRendererContribution).inSingletonScope();\n\n    bind(PreferenceBooleanInputRenderer).toSelf();\n    bind(PreferenceNodeRendererContribution).to(PreferenceBooleanInputRendererContribution).inSingletonScope();\n\n    bind(PreferenceNumberInputRenderer).toSelf();\n    bind(PreferenceNodeRendererContribution).to(PreferenceNumberInputRendererContribution).inSingletonScope();\n\n    bind(PreferenceJSONLinkRenderer).toSelf();\n    bind(PreferenceNodeRendererContribution).to(PreferenceJSONLinkRendererContribution).inSingletonScope();\n\n    bind(PreferenceHeaderRenderer).toSelf();\n    bind(PreferenceNodeRendererContribution).to(PreferenceHeaderRendererContribution).inSingletonScope();\n\n    bind(PreferenceSingleFilePathInputRenderer).toSelf();\n    bind(PreferenceNodeRendererContribution).to(PreferenceSingleFilePathInputRendererContribution).inSingletonScope();\n\n    bind(DefaultPreferenceNodeRendererCreatorRegistry).toSelf().inSingletonScope();\n    bind(PreferenceNodeRendererCreatorRegistry).toService(DefaultPreferenceNodeRendererCreatorRegistry);\n}\n\nexport function createPreferencesWidgetContainer(parent: interfaces.Container): Container {\n    const child = createTreeContainer(parent, {\n        model: PreferenceTreeModel,\n        widget: PreferencesTreeWidget,\n        props: { search: false }\n    });\n    child.bind(PreferencesEditorWidget).toSelf();\n\n    child.bind(PreferencesSearchbarWidget).toSelf();\n    child.bind(PreferencesScopeTabBar).toSelf();\n    child.bind(PreferencesWidget).toSelf();\n\n    child.bind(PreferenceNodeRendererFactory).toFactory(({ container }) => (node: Preference.TreeNode) => {\n        const registry = container.get<PreferenceNodeRendererCreatorRegistry>(PreferenceNodeRendererCreatorRegistry);\n        const creator = registry.getPreferenceNodeRendererCreator(node);\n        return creator.createRenderer(node, container);\n    });\n\n    child.bind(PreferenceMarkdownRenderer).toSelf().inSingletonScope();\n\n    return child;\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { postConstruct, injectable, inject } from '@theia/core/shared/inversify';\nimport { Panel, Widget, Message, StatefulWidget, PreferenceScope, codicon } from '@theia/core/lib/browser';\nimport { PreferencesEditorState, PreferencesEditorWidget } from './preference-editor-widget';\nimport { PreferencesTreeWidget } from './preference-tree-widget';\nimport { PreferencesSearchbarState, PreferencesSearchbarWidget } from './preference-searchbar-widget';\nimport { PreferencesScopeTabBar, PreferencesScopeTabBarState } from './preference-scope-tabbar-widget';\nimport { Preference } from '../util/preference-types';\nimport URI from '@theia/core/lib/common/uri';\nimport { nls } from '@theia/core/lib/common/nls';\n\ninterface PreferencesWidgetState {\n    scopeTabBarState: PreferencesScopeTabBarState,\n    editorState: PreferencesEditorState,\n    searchbarWidgetState: PreferencesSearchbarState,\n}\n\n@injectable()\nexport class PreferencesWidget extends Panel implements StatefulWidget {\n    /**\n     * The widget `id`.\n     */\n    static readonly ID = 'settings_widget';\n    /**\n     * The widget `label` which is used for display purposes.\n     */\n    static readonly LABEL = nls.localizeByDefault('Settings');\n\n    @inject(PreferencesEditorWidget) protected readonly editorWidget: PreferencesEditorWidget;\n    @inject(PreferencesTreeWidget) protected readonly treeWidget: PreferencesTreeWidget;\n    @inject(PreferencesSearchbarWidget) protected readonly searchbarWidget: PreferencesSearchbarWidget;\n    @inject(PreferencesScopeTabBar) protected readonly tabBarWidget: PreferencesScopeTabBar;\n\n    get currentScope(): Preference.SelectedScopeDetails {\n        return this.tabBarWidget.currentScope;\n    }\n\n    setSearchTerm(query: string): Promise<void> {\n        return this.searchbarWidget.updateSearchTerm(query);\n    }\n\n    setScope(scope: PreferenceScope.User | PreferenceScope.Workspace | URI): void {\n        this.tabBarWidget.setScope(scope);\n    }\n\n    protected override onResize(msg: Widget.ResizeMessage): void {\n        super.onResize(msg);\n        if (msg.width < 600 && this.treeWidget && !this.treeWidget.isHidden) {\n            this.treeWidget.hide();\n            this.editorWidget.addClass('full-pane');\n        } else if (msg.width >= 600 && this.treeWidget && this.treeWidget.isHidden) {\n            this.treeWidget.show();\n            this.editorWidget.removeClass('full-pane');\n        }\n    }\n\n    protected override onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.searchbarWidget.focus();\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.id = PreferencesWidget.ID;\n        this.title.label = PreferencesWidget.LABEL;\n        this.title.closable = true;\n        this.addClass('theia-settings-container');\n        this.title.iconClass = codicon('settings');\n\n        this.searchbarWidget.addClass('preferences-searchbar-widget');\n        this.addWidget(this.searchbarWidget);\n\n        this.tabBarWidget.addClass('preferences-tabbar-widget');\n        this.addWidget(this.tabBarWidget);\n\n        this.treeWidget.addClass('preferences-tree-widget');\n        this.addWidget(this.treeWidget);\n\n        this.editorWidget.addClass('preferences-editor-widget');\n        this.addWidget(this.editorWidget);\n\n        this.update();\n    }\n\n    getPreviewNode(): Node | undefined {\n        return this.node;\n    }\n\n    storeState(): PreferencesWidgetState {\n        return {\n            scopeTabBarState: this.tabBarWidget.storeState(),\n            editorState: this.editorWidget.storeState(),\n            searchbarWidgetState: this.searchbarWidget.storeState(),\n        };\n    }\n\n    restoreState(state: PreferencesWidgetState): void {\n        this.tabBarWidget.restoreState(state.scopeTabBarState);\n        this.editorWidget.restoreState(state.editorState);\n        this.searchbarWidget.restoreState(state.searchbarWidgetState);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './user-storage-uri';\nexport * from './user-storage-frontend-module';\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\nimport { FileSystemProvider } from '@theia/filesystem/lib/common/files';\nimport { FileService, FileServiceContribution } from '@theia/filesystem/lib/browser/file-service';\nimport { DelegatingFileSystemProvider } from '@theia/filesystem/lib/common/delegating-file-system-provider';\nimport { UserStorageUri } from './user-storage-uri';\n\n@injectable()\nexport class UserStorageContribution implements FileServiceContribution {\n\n    @inject(EnvVariablesServer)\n    protected readonly environments: EnvVariablesServer;\n\n    registerFileSystemProviders(service: FileService): void {\n        service.onWillActivateFileSystemProvider(event => {\n            if (event.scheme === UserStorageUri.scheme) {\n                event.waitUntil((async () => {\n                    const provider = await this.createProvider(service);\n                    service.registerProvider(UserStorageUri.scheme, provider);\n                })());\n            }\n        });\n    }\n\n    protected async createProvider(service: FileService): Promise<FileSystemProvider> {\n        const delegate = await service.activateProvider('file');\n        const configDirUri = new URI(await this.environments.getConfigDirUri());\n        return new DelegatingFileSystemProvider(delegate, {\n            uriConverter: {\n                to: resource => {\n                    const relativePath = UserStorageUri.relative(resource);\n                    if (relativePath) {\n                        return configDirUri.resolve(relativePath).normalizePath();\n                    }\n                    return undefined;\n                },\n                from: resource => {\n                    const relativePath = configDirUri.relative(resource);\n                    if (relativePath) {\n                        return UserStorageUri.resolve(relativePath);\n                    }\n                    return undefined;\n                }\n            }\n        }, new DisposableCollection(\n            delegate.watch(configDirUri, { excludes: [], recursive: true })\n        ));\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { FileServiceContribution } from '@theia/filesystem/lib/browser/file-service';\nimport { UserStorageContribution } from './user-storage-contribution';\n\nexport default new ContainerModule(bind => {\n    bind(UserStorageContribution).toSelf().inSingletonScope();\n    bind(FileServiceContribution).toService(UserStorageContribution);\n});\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport URI from '@theia/core/lib/common/uri';\n\nexport const UserStorageUri = new URI('user-storage:/user');\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './workspace-commands';\nexport * from './workspace-service';\nexport * from './canonical-uri-service';\nexport * from './workspace-frontend-contribution';\nexport * from './workspace-frontend-module';\nexport * from './workspace-preferences';\nexport * from './workspace-trust-service';\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}