"use strict";
(self["webpackChunk"] = self["webpackChunk"] || []).push([["vendors-node_modules_theia_editor_lib_browser_editor_js-node_modules_theia_navigator_lib_brow-4fc8b9"],{

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/@theia/test/src/browser/style/index.css":
/*!****************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/@theia/test/src/browser/style/index.css ***!
  \****************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `/******************************************************************************
* Copyright (C) 2023 STMicroelectronics and others.
* This program and the accompanying materials are made available under the
* terms of the Eclipse Public License v. 2.0 which is available at
* http://www.eclipse.org/legal/epl-2.0.
*
* This Source Code may also be made available under the following Secondary
* Licenses when the conditions for such availability set forth in the Eclipse
* Public License v. 2.0 are satisfied: GNU General Public License, version 2
* with the GNU Classpath Exception which is available at
* https://www.gnu.org/software/classpath/license.html.
*
* SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
********************************************************************************/

.theia-test-view {
    height: 100%
}

.theia-test-view .passed,
.theia-test-result-view .passed {
    color: var(--theia-successBackground);
}

.theia-test-view .failed,
.theia-test-result-view .failed {
    color: var(--theia-editorError-foreground);
}

.theia-test-view .errored,
.theia-test-result-view .errored {
    color: var(--theia-editorError-foreground);
}

.theia-test-view .queued,
.theia-test-result-view .queued {
    color: var(--theia-editorWarning-foreground);
}

.theia-test-view .theia-TreeNode:not(:hover):not(.theia-mod-selected) .theia-test-tree-inline-action {
    display: none;
}`, "",{"version":3,"sources":["webpack://./node_modules/@theia/test/src/browser/style/index.css"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;gFAagF;;AAEhF;IACI;AACJ;;AAEA;;IAEI,qCAAqC;AACzC;;AAEA;;IAEI,0CAA0C;AAC9C;;AAEA;;IAEI,0CAA0C;AAC9C;;AAEA;;IAEI,4CAA4C;AAChD;;AAEA;IACI,aAAa;AACjB","sourcesContent":["/******************************************************************************\n* Copyright (C) 2023 STMicroelectronics and others.\n* This program and the accompanying materials are made available under the\n* terms of the Eclipse Public License v. 2.0 which is available at\n* http://www.eclipse.org/legal/epl-2.0.\n*\n* This Source Code may also be made available under the following Secondary\n* Licenses when the conditions for such availability set forth in the Eclipse\n* Public License v. 2.0 are satisfied: GNU General Public License, version 2\n* with the GNU Classpath Exception which is available at\n* https://www.gnu.org/software/classpath/license.html.\n*\n* SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n********************************************************************************/\n\n.theia-test-view {\n    height: 100%\n}\n\n.theia-test-view .passed,\n.theia-test-result-view .passed {\n    color: var(--theia-successBackground);\n}\n\n.theia-test-view .failed,\n.theia-test-result-view .failed {\n    color: var(--theia-editorError-foreground);\n}\n\n.theia-test-view .errored,\n.theia-test-result-view .errored {\n    color: var(--theia-editorError-foreground);\n}\n\n.theia-test-view .queued,\n.theia-test-result-view .queued {\n    color: var(--theia-editorWarning-foreground);\n}\n\n.theia-test-view .theia-TreeNode:not(:hover):not(.theia-mod-selected) .theia-test-tree-inline-action {\n    display: none;\n}"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/@theia/editor/lib/browser/editor.js":
/*!**********************************************************!*\
  !*** ./node_modules/@theia/editor/lib/browser/editor.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


// *****************************************************************************
// Copyright (C) 2018 TypeFox and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CustomEditorWidget = exports.TextEditorSelection = exports.MouseTargetType = exports.TextDocumentContentChangeDelta = exports.TextEditorProvider = exports.Location = exports.Range = exports.Position = void 0;
const vscode_languageserver_protocol_1 = __webpack_require__(/*! @theia/core/shared/vscode-languageserver-protocol */ "./node_modules/@theia/core/shared/vscode-languageserver-protocol/index.js");
Object.defineProperty(exports, "Position", ({ enumerable: true, get: function () { return vscode_languageserver_protocol_1.Position; } }));
Object.defineProperty(exports, "Range", ({ enumerable: true, get: function () { return vscode_languageserver_protocol_1.Range; } }));
Object.defineProperty(exports, "Location", ({ enumerable: true, get: function () { return vscode_languageserver_protocol_1.Location; } }));
const uri_1 = __webpack_require__(/*! @theia/core/lib/common/uri */ "./node_modules/@theia/core/lib/common/uri.js");
const common_1 = __webpack_require__(/*! @theia/core/lib/common */ "./node_modules/@theia/core/lib/common/index.js");
Object.defineProperty(exports, "TextDocumentContentChangeDelta", ({ enumerable: true, get: function () { return common_1.TextDocumentContentChangeDelta; } }));
exports.TextEditorProvider = Symbol('TextEditorProvider');
/**
 * Type of hit element with the mouse in the editor.
 * Copied from monaco editor.
 */
var MouseTargetType;
(function (MouseTargetType) {
    /**
     * Mouse is on top of an unknown element.
     */
    MouseTargetType[MouseTargetType["UNKNOWN"] = 0] = "UNKNOWN";
    /**
     * Mouse is on top of the textarea used for input.
     */
    MouseTargetType[MouseTargetType["TEXTAREA"] = 1] = "TEXTAREA";
    /**
     * Mouse is on top of the glyph margin
     */
    MouseTargetType[MouseTargetType["GUTTER_GLYPH_MARGIN"] = 2] = "GUTTER_GLYPH_MARGIN";
    /**
     * Mouse is on top of the line numbers
     */
    MouseTargetType[MouseTargetType["GUTTER_LINE_NUMBERS"] = 3] = "GUTTER_LINE_NUMBERS";
    /**
     * Mouse is on top of the line decorations
     */
    MouseTargetType[MouseTargetType["GUTTER_LINE_DECORATIONS"] = 4] = "GUTTER_LINE_DECORATIONS";
    /**
     * Mouse is on top of the whitespace left in the gutter by a view zone.
     */
    MouseTargetType[MouseTargetType["GUTTER_VIEW_ZONE"] = 5] = "GUTTER_VIEW_ZONE";
    /**
     * Mouse is on top of text in the content.
     */
    MouseTargetType[MouseTargetType["CONTENT_TEXT"] = 6] = "CONTENT_TEXT";
    /**
     * Mouse is on top of empty space in the content (e.g. after line text or below last line)
     */
    MouseTargetType[MouseTargetType["CONTENT_EMPTY"] = 7] = "CONTENT_EMPTY";
    /**
     * Mouse is on top of a view zone in the content.
     */
    MouseTargetType[MouseTargetType["CONTENT_VIEW_ZONE"] = 8] = "CONTENT_VIEW_ZONE";
    /**
     * Mouse is on top of a content widget.
     */
    MouseTargetType[MouseTargetType["CONTENT_WIDGET"] = 9] = "CONTENT_WIDGET";
    /**
     * Mouse is on top of the decorations overview ruler.
     */
    MouseTargetType[MouseTargetType["OVERVIEW_RULER"] = 10] = "OVERVIEW_RULER";
    /**
     * Mouse is on top of a scrollbar.
     */
    MouseTargetType[MouseTargetType["SCROLLBAR"] = 11] = "SCROLLBAR";
    /**
     * Mouse is on top of an overlay widget.
     */
    MouseTargetType[MouseTargetType["OVERLAY_WIDGET"] = 12] = "OVERLAY_WIDGET";
    /**
     * Mouse is outside of the editor.
     */
    MouseTargetType[MouseTargetType["OUTSIDE_EDITOR"] = 13] = "OUTSIDE_EDITOR";
})(MouseTargetType = exports.MouseTargetType || (exports.MouseTargetType = {}));
var TextEditorSelection;
(function (TextEditorSelection) {
    function is(arg) {
        return (0, common_1.isObject)(arg) && arg.uri instanceof uri_1.default;
    }
    TextEditorSelection.is = is;
})(TextEditorSelection = exports.TextEditorSelection || (exports.TextEditorSelection = {}));
var CustomEditorWidget;
(function (CustomEditorWidget) {
    function is(arg) {
        return !!arg && 'modelRef' in arg;
    }
    CustomEditorWidget.is = is;
})(CustomEditorWidget = exports.CustomEditorWidget || (exports.CustomEditorWidget = {}));


/***/ }),

/***/ "./node_modules/@theia/navigator/lib/browser/file-navigator-commands.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@theia/navigator/lib/browser/file-navigator-commands.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


// *****************************************************************************
// Copyright (C) 2022 Ericsson and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FileNavigatorCommands = void 0;
const browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
const common_1 = __webpack_require__(/*! @theia/core/lib/common */ "./node_modules/@theia/core/lib/common/index.js");
const browser_2 = __webpack_require__(/*! @theia/workspace/lib/browser */ "./node_modules/@theia/workspace/lib/browser/index.js");
var FileNavigatorCommands;
(function (FileNavigatorCommands) {
    FileNavigatorCommands.REVEAL_IN_NAVIGATOR = common_1.Command.toLocalizedCommand({
        id: 'navigator.reveal',
        label: 'Reveal in Explorer'
    }, 'theia/navigator/reveal');
    FileNavigatorCommands.TOGGLE_HIDDEN_FILES = common_1.Command.toLocalizedCommand({
        id: 'navigator.toggle.hidden.files',
        label: 'Toggle Hidden Files'
    }, 'theia/navigator/toggleHiddenFiles');
    FileNavigatorCommands.TOGGLE_AUTO_REVEAL = common_1.Command.toLocalizedCommand({
        id: 'navigator.toggle.autoReveal',
        category: browser_1.CommonCommands.FILE_CATEGORY,
        label: 'Auto Reveal'
    }, 'theia/navigator/autoReveal', browser_1.CommonCommands.FILE_CATEGORY_KEY);
    FileNavigatorCommands.REFRESH_NAVIGATOR = common_1.Command.toLocalizedCommand({
        id: 'navigator.refresh',
        category: browser_1.CommonCommands.FILE_CATEGORY,
        label: 'Refresh in Explorer',
        iconClass: (0, browser_1.codicon)('refresh')
    }, 'theia/navigator/refresh', browser_1.CommonCommands.FILE_CATEGORY_KEY);
    FileNavigatorCommands.COLLAPSE_ALL = common_1.Command.toDefaultLocalizedCommand({
        id: 'navigator.collapse.all',
        category: browser_1.CommonCommands.FILE_CATEGORY,
        label: 'Collapse Folders in Explorer',
        iconClass: (0, browser_1.codicon)('collapse-all')
    });
    FileNavigatorCommands.ADD_ROOT_FOLDER = {
        id: 'navigator.addRootFolder'
    };
    FileNavigatorCommands.FOCUS = common_1.Command.toDefaultLocalizedCommand({
        id: 'workbench.files.action.focusFilesExplorer',
        category: browser_1.CommonCommands.FILE_CATEGORY,
        label: 'Focus on Files Explorer'
    });
    FileNavigatorCommands.OPEN = common_1.Command.toDefaultLocalizedCommand({
        id: 'navigator.open',
        category: browser_1.CommonCommands.FILE_CATEGORY,
        label: 'Open'
    });
    FileNavigatorCommands.NEW_FILE_TOOLBAR = {
        id: `${browser_2.WorkspaceCommands.NEW_FILE.id}.toolbar`,
        iconClass: (0, browser_1.codicon)('new-file')
    };
    FileNavigatorCommands.NEW_FOLDER_TOOLBAR = {
        id: `${browser_2.WorkspaceCommands.NEW_FOLDER.id}.toolbar`,
        iconClass: (0, browser_1.codicon)('new-folder')
    };
    /**
     * @deprecated since 1.21.0. Use WorkspaceCommands.COPY_RELATIVE_FILE_COMMAND instead.
     */
    FileNavigatorCommands.COPY_RELATIVE_FILE_PATH = browser_2.WorkspaceCommands.COPY_RELATIVE_FILE_PATH;
})(FileNavigatorCommands = exports.FileNavigatorCommands || (exports.FileNavigatorCommands = {}));


/***/ }),

/***/ "./node_modules/@theia/test/lib/browser/view/test-output-view-contribution.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@theia/test/lib/browser/view/test-output-view-contribution.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


// *****************************************************************************
// Copyright (C) 2023 STMicroelectronics and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TestOutputViewContribution = void 0;
const browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
const test_output_widget_1 = __webpack_require__(/*! ./test-output-widget */ "./node_modules/@theia/test/lib/browser/view/test-output-widget.js");
const inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify/index.js");
const core_1 = __webpack_require__(/*! @theia/core */ "./node_modules/@theia/core/lib/common/index.js");
let TestOutputViewContribution = class TestOutputViewContribution extends browser_1.AbstractViewContribution {
    constructor() {
        super({
            widgetId: test_output_widget_1.TestOutputWidget.ID,
            widgetName: core_1.nls.localizeByDefault('Test Output'),
            defaultWidgetOptions: {
                area: 'bottom'
            }
        });
    }
};
TestOutputViewContribution = __decorate([
    (0, inversify_1.injectable)(),
    __metadata("design:paramtypes", [])
], TestOutputViewContribution);
exports.TestOutputViewContribution = TestOutputViewContribution;


/***/ }),

/***/ "./node_modules/@theia/test/lib/browser/view/test-output-widget.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@theia/test/lib/browser/view/test-output-widget.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var TestOutputWidget_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TestOutputWidget = void 0;
// *****************************************************************************
// Copyright (C) 2023 STMicroelectronics and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
const xterm_1 = __webpack_require__(/*! xterm */ "./node_modules/xterm/lib/xterm.js");
const xterm_addon_fit_1 = __webpack_require__(/*! xterm-addon-fit */ "./node_modules/xterm-addon-fit/lib/xterm-addon-fit.js");
const browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
const inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify/index.js");
const core_1 = __webpack_require__(/*! @theia/core */ "./node_modules/@theia/core/lib/common/index.js");
const terminal_preferences_1 = __webpack_require__(/*! @theia/terminal/lib/browser/terminal-preferences */ "./node_modules/@theia/terminal/lib/browser/terminal-preferences.js");
const terminal_theme_service_1 = __webpack_require__(/*! @theia/terminal/lib/browser/terminal-theme-service */ "./node_modules/@theia/terminal/lib/browser/terminal-theme-service.js");
const test_output_ui_model_1 = __webpack_require__(/*! ./test-output-ui-model */ "./node_modules/@theia/test/lib/browser/view/test-output-ui-model.js");
const debounce = __webpack_require__(/*! p-debounce */ "./node_modules/p-debounce/index.js");
let TestOutputWidget = TestOutputWidget_1 = class TestOutputWidget extends browser_1.BaseWidget {
    constructor() {
        super();
        this.disposeOnSetInput = new core_1.DisposableCollection();
        this.resizeTerminal = debounce(() => this.doResizeTerminal(), 50);
        this.id = TestOutputWidget_1.ID;
        this.title.label = 'Test Output';
        this.title.caption = 'Test Output';
        this.title.iconClass = (0, browser_1.codicon)('symbol-keyword');
        this.title.closable = true;
    }
    init() {
        this.term = new xterm_1.Terminal({
            disableStdin: true,
            cursorStyle: 'bar',
            fontFamily: this.preferences['terminal.integrated.fontFamily'],
            fontSize: this.preferences['terminal.integrated.fontSize'],
            fontWeight: this.preferences['terminal.integrated.fontWeight'],
            fontWeightBold: this.preferences['terminal.integrated.fontWeightBold'],
            drawBoldTextInBrightColors: this.preferences['terminal.integrated.drawBoldTextInBrightColors'],
            letterSpacing: this.preferences['terminal.integrated.letterSpacing'],
            lineHeight: this.preferences['terminal.integrated.lineHeight'],
            scrollback: this.preferences['terminal.integrated.scrollback'],
            fastScrollSensitivity: this.preferences['terminal.integrated.fastScrollSensitivity'],
            rendererType: this.getTerminalRendererType(this.preferences['terminal.integrated.rendererType']),
            theme: this.themeService.theme
        });
        this.fitAddon = new xterm_addon_fit_1.FitAddon();
        this.term.loadAddon(this.fitAddon);
        this.setInput(this.uiModel.selectedOutputSource);
        this.uiModel.onDidChangeSelectedOutputSource(source => this.setInput(source));
        this.toDispose.push(core_1.Disposable.create(() => this.term.dispose()));
    }
    setInput(selectedOutputSource) {
        this.disposeOnSetInput.dispose();
        this.disposeOnSetInput = new core_1.DisposableCollection();
        this.term.clear();
        if (selectedOutputSource) {
            selectedOutputSource.output.forEach(item => this.term.writeln(item.output));
            this.disposeOnSetInput.push(selectedOutputSource.onDidAddTestOutput(items => {
                items.forEach(item => this.term.writeln(item.output));
            }));
            this.term.scrollToBottom();
        }
    }
    onAfterAttach(msg) {
        super.onAfterAttach(msg);
        this.term.open(this.node);
        if (browser_1.isFirefox) {
            // monkey patching intersection observer handling for secondary window support
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            const renderService = this.term._core._renderService;
            const originalFunc = renderService._onIntersectionChange.bind(renderService);
            const replacement = function (entry) {
                if (entry.target.ownerDocument !== document) {
                    // in Firefox, the intersection observer always reports the widget as non-intersecting if the dom element
                    // is in a different document from when the IntersectionObserver started observing. Since we know
                    // that the widget is always "visible" when in a secondary window, so we mark the entry as "intersecting"
                    const patchedEvent = {
                        ...entry,
                        isIntersecting: true,
                    };
                    originalFunc(patchedEvent);
                }
                else {
                    originalFunc(entry);
                }
            };
            renderService._onIntersectionChange = replacement;
        }
        if (browser_1.isFirefox) {
            // The software scrollbars don't work with xterm.js, so we disable the scrollbar if we are on firefox.
            if (this.term.element) {
                this.term.element.children.item(0).style.overflow = 'hidden';
            }
        }
    }
    getTerminalRendererType(terminalRendererType) {
        if (terminalRendererType && (0, terminal_preferences_1.isTerminalRendererType)(terminalRendererType)) {
            return terminalRendererType;
        }
        return terminal_preferences_1.DEFAULT_TERMINAL_RENDERER_TYPE;
    }
    onResize(msg) {
        super.onResize(msg);
        this.resizeTerminal();
    }
    doResizeTerminal() {
        if (this.isDisposed) {
            return;
        }
        const geo = this.fitAddon.proposeDimensions();
        const cols = geo.cols;
        const rows = geo.rows - 1; // subtract one row for margin
        this.term.resize(cols, rows);
    }
};
TestOutputWidget.ID = 'test-output-view';
__decorate([
    (0, inversify_1.inject)(terminal_preferences_1.TerminalPreferences),
    __metadata("design:type", Object)
], TestOutputWidget.prototype, "preferences", void 0);
__decorate([
    (0, inversify_1.inject)(terminal_theme_service_1.TerminalThemeService),
    __metadata("design:type", terminal_theme_service_1.TerminalThemeService)
], TestOutputWidget.prototype, "themeService", void 0);
__decorate([
    (0, inversify_1.inject)(test_output_ui_model_1.TestOutputUIModel),
    __metadata("design:type", test_output_ui_model_1.TestOutputUIModel)
], TestOutputWidget.prototype, "uiModel", void 0);
__decorate([
    (0, inversify_1.postConstruct)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], TestOutputWidget.prototype, "init", null);
TestOutputWidget = TestOutputWidget_1 = __decorate([
    (0, inversify_1.injectable)(),
    __metadata("design:paramtypes", [])
], TestOutputWidget);
exports.TestOutputWidget = TestOutputWidget;


/***/ }),

/***/ "./node_modules/@theia/test/lib/browser/view/test-result-view-contribution.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@theia/test/lib/browser/view/test-result-view-contribution.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


// *****************************************************************************
// Copyright (C) 2023 STMicroelectronics and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TestResultViewContribution = void 0;
const browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
const inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify/index.js");
const test_result_widget_1 = __webpack_require__(/*! ./test-result-widget */ "./node_modules/@theia/test/lib/browser/view/test-result-widget.js");
const core_1 = __webpack_require__(/*! @theia/core */ "./node_modules/@theia/core/lib/common/index.js");
let TestResultViewContribution = class TestResultViewContribution extends browser_1.AbstractViewContribution {
    constructor() {
        super({
            widgetId: test_result_widget_1.TestResultWidget.ID,
            widgetName: core_1.nls.localizeByDefault('Test Results'),
            defaultWidgetOptions: {
                area: 'bottom'
            }
        });
    }
};
TestResultViewContribution = __decorate([
    (0, inversify_1.injectable)(),
    __metadata("design:paramtypes", [])
], TestResultViewContribution);
exports.TestResultViewContribution = TestResultViewContribution;


/***/ }),

/***/ "./node_modules/@theia/test/lib/browser/view/test-result-widget.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@theia/test/lib/browser/view/test-result-widget.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


// *****************************************************************************
// Copyright (C) 2023 STMicroelectronics and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var TestResultWidget_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TestResultWidget = void 0;
const browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
const inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify/index.js");
const test_output_ui_model_1 = __webpack_require__(/*! ./test-output-ui-model */ "./node_modules/@theia/test/lib/browser/view/test-output-ui-model.js");
const core_1 = __webpack_require__(/*! @theia/core */ "./node_modules/@theia/core/lib/common/index.js");
const test_service_1 = __webpack_require__(/*! ../test-service */ "./node_modules/@theia/test/lib/browser/test-service.js");
const markdown_renderer_1 = __webpack_require__(/*! @theia/core/lib/browser/markdown-rendering/markdown-renderer */ "./node_modules/@theia/core/lib/browser/markdown-rendering/markdown-renderer.js");
const markdown_rendering_1 = __webpack_require__(/*! @theia/core/lib/common/markdown-rendering */ "./node_modules/@theia/core/lib/common/markdown-rendering/index.js");
let TestResultWidget = TestResultWidget_1 = class TestResultWidget extends browser_1.BaseWidget {
    constructor() {
        super();
        this.toDisposeOnRender = new core_1.DisposableCollection();
        this.input = [];
        this.id = TestResultWidget_1.ID;
        this.title.label = core_1.nls.localizeByDefault('Test Results');
        this.title.caption = core_1.nls.localizeByDefault('Test Results');
        this.title.iconClass = (0, browser_1.codicon)('checklist');
        this.title.closable = true;
        this.scrollOptions = {
            minScrollbarLength: 35,
        };
    }
    init() {
        this.uiModel.onDidChangeSelectedTestState(e => {
            if (test_service_1.TestFailure.is(e)) {
                this.setInput(e.messages);
            }
        });
    }
    onAfterAttach(msg) {
        super.onAfterAttach(msg);
        this.content = this.node.ownerDocument.createElement('div');
        this.node.append(this.content);
    }
    setInput(messages) {
        this.input = messages;
        this.update();
    }
    onUpdateRequest(msg) {
        this.render();
        super.onUpdateRequest(msg);
    }
    render() {
        this.toDisposeOnRender.dispose();
        this.toDisposeOnRender = new core_1.DisposableCollection();
        this.content.innerHTML = '';
        this.input.forEach(message => {
            if (markdown_rendering_1.MarkdownString.is(message.message)) {
                const line = this.markdownRenderer.render(message.message);
                this.content.append(line.element);
                this.toDisposeOnRender.push(line);
            }
            else {
                this.content.append(this.node.ownerDocument.createTextNode(message.message));
            }
        });
    }
    dispose() {
        this.toDisposeOnRender.dispose();
    }
};
TestResultWidget.ID = 'test-result-widget';
__decorate([
    (0, inversify_1.inject)(test_output_ui_model_1.TestOutputUIModel),
    __metadata("design:type", test_output_ui_model_1.TestOutputUIModel)
], TestResultWidget.prototype, "uiModel", void 0);
__decorate([
    (0, inversify_1.inject)(markdown_renderer_1.MarkdownRenderer),
    __metadata("design:type", Object)
], TestResultWidget.prototype, "markdownRenderer", void 0);
__decorate([
    (0, inversify_1.postConstruct)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], TestResultWidget.prototype, "init", null);
TestResultWidget = TestResultWidget_1 = __decorate([
    (0, inversify_1.injectable)(),
    __metadata("design:paramtypes", [])
], TestResultWidget);
exports.TestResultWidget = TestResultWidget;


/***/ }),

/***/ "./node_modules/@theia/test/lib/browser/view/test-run-view-contribution.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@theia/test/lib/browser/view/test-run-view-contribution.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


// *****************************************************************************
// Copyright (C) 2023 STMicroelectronics and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TestRunViewContribution = exports.TEST_RUNS_INLINE_MENU = exports.TEST_RUNS_CONTEXT_MENU = void 0;
const browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
const inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify/index.js");
const test_service_1 = __webpack_require__(/*! ../test-service */ "./node_modules/@theia/test/lib/browser/test-service.js");
const context_key_service_1 = __webpack_require__(/*! @theia/core/lib/browser/context-key-service */ "./node_modules/@theia/core/lib/browser/context-key-service.js");
const test_run_widget_1 = __webpack_require__(/*! ./test-run-widget */ "./node_modules/@theia/test/lib/browser/view/test-run-widget.js");
const test_view_contribution_1 = __webpack_require__(/*! ./test-view-contribution */ "./node_modules/@theia/test/lib/browser/view/test-view-contribution.js");
const core_1 = __webpack_require__(/*! @theia/core */ "./node_modules/@theia/core/lib/common/index.js");
exports.TEST_RUNS_CONTEXT_MENU = ['test-runs-context-menu'];
exports.TEST_RUNS_INLINE_MENU = [...exports.TEST_RUNS_CONTEXT_MENU, 'inline'];
let TestRunViewContribution = class TestRunViewContribution extends browser_1.AbstractViewContribution {
    constructor() {
        super({
            viewContainerId: test_view_contribution_1.TEST_VIEW_CONTAINER_ID,
            widgetId: test_run_widget_1.TestRunTreeWidget.ID,
            widgetName: core_1.nls.localize('theia/test/testRuns', 'Test Runs'),
            defaultWidgetOptions: {
                area: 'left',
                rank: 200,
            }
        });
    }
    registerToolbarItems(registry) {
        registry.registerItem({
            id: test_view_contribution_1.TestViewCommands.CLEAR_ALL_RESULTS.id,
            command: test_view_contribution_1.TestViewCommands.CLEAR_ALL_RESULTS.id,
            priority: 1
        });
    }
    registerMenus(menus) {
        super.registerMenus(menus);
        menus.registerMenuAction(exports.TEST_RUNS_CONTEXT_MENU, {
            commandId: test_view_contribution_1.TestViewCommands.CANCEL_RUN.id
        });
    }
    registerCommands(commands) {
        super.registerCommands(commands);
        commands.registerCommand(test_view_contribution_1.TestViewCommands.CANCEL_RUN, {
            isEnabled: t => test_service_1.TestRun.is(t) && t.isRunning,
            isVisible: t => test_service_1.TestRun.is(t),
            execute: t => {
                if (test_service_1.TestRun.is(t)) {
                    t.cancel();
                }
            }
        });
        commands.registerCommand(test_view_contribution_1.TestViewCommands.CLEAR_ALL_RESULTS, {
            isEnabled: w => this.withWidget(w, () => true),
            isVisible: w => this.withWidget(w, () => true),
            execute: () => {
                this.testService.clearResults();
            }
        });
    }
    withWidget(widget = this.tryGetWidget(), cb) {
        if (widget instanceof test_run_widget_1.TestRunTreeWidget && widget.id === test_run_widget_1.TestRunTreeWidget.ID) {
            return cb(widget);
        }
        return false;
    }
};
__decorate([
    (0, inversify_1.inject)(test_service_1.TestService),
    __metadata("design:type", Object)
], TestRunViewContribution.prototype, "testService", void 0);
__decorate([
    (0, inversify_1.inject)(context_key_service_1.ContextKeyService),
    __metadata("design:type", Object)
], TestRunViewContribution.prototype, "contextKeys", void 0);
TestRunViewContribution = __decorate([
    (0, inversify_1.injectable)(),
    __metadata("design:paramtypes", [])
], TestRunViewContribution);
exports.TestRunViewContribution = TestRunViewContribution;


/***/ }),

/***/ "./node_modules/@theia/test/lib/browser/view/test-run-widget.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@theia/test/lib/browser/view/test-run-widget.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


// *****************************************************************************
// Copyright (C) 2023 STMicroelectronics and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var TestRunTreeWidget_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TestRunTreeWidget = exports.TestRunTree = void 0;
const inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify/index.js");
const tree_1 = __webpack_require__(/*! @theia/core/lib/browser/tree */ "./node_modules/@theia/core/lib/browser/tree/index.js");
const browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
const icon_theme_service_1 = __webpack_require__(/*! @theia/core/lib/browser/icon-theme-service */ "./node_modules/@theia/core/lib/browser/icon-theme-service.js");
const theming_1 = __webpack_require__(/*! @theia/core/lib/browser/theming */ "./node_modules/@theia/core/lib/browser/theming.js");
const context_key_service_1 = __webpack_require__(/*! @theia/core/lib/browser/context-key-service */ "./node_modules/@theia/core/lib/browser/context-key-service.js");
const test_service_1 = __webpack_require__(/*! ../test-service */ "./node_modules/@theia/test/lib/browser/test-service.js");
const React = __webpack_require__(/*! @theia/core/shared/react */ "./node_modules/@theia/core/shared/react/index.js");
const core_1 = __webpack_require__(/*! @theia/core */ "./node_modules/@theia/core/lib/common/index.js");
const test_execution_state_manager_1 = __webpack_require__(/*! ./test-execution-state-manager */ "./node_modules/@theia/test/lib/browser/view/test-execution-state-manager.js");
const test_output_ui_model_1 = __webpack_require__(/*! ./test-output-ui-model */ "./node_modules/@theia/test/lib/browser/view/test-output-ui-model.js");
class TestRunNode {
    constructor(counter, id, run, parent) {
        this.counter = counter;
        this.id = id;
        this.run = run;
        this.parent = parent;
        this.selected = false;
        this.children = [];
    }
    get name() {
        return this.run.name || core_1.nls.localize('theia/test/testRunDefaultName', '{0} run {1}', this.run.controller.label, this.counter);
    }
    ;
}
class TestItemNode {
    constructor(id, item, parent) {
        this.id = id;
        this.item = item;
        this.parent = parent;
        this.selected = false;
    }
    get name() {
        return this.item.label;
    }
}
let TestRunTree = class TestRunTree extends tree_1.TreeImpl {
    constructor() {
        super(...arguments);
        this.ROOT = {
            id: 'TestResults',
            name: 'Test Results',
            parent: undefined,
            children: [],
            visible: false
        };
        this.controllerListeners = new Map();
        this.runs = new Map();
        this.nextId = 0;
    }
    init() {
        this.root = this.ROOT;
        this.testService.getControllers().forEach(controller => {
            this.addController(controller);
        });
        this.testService.onControllersChanged(controllerDelta => {
            var _a, _b;
            (_a = controllerDelta.removed) === null || _a === void 0 ? void 0 : _a.forEach(controller => {
                var _a;
                (_a = this.controllerListeners.get(controller)) === null || _a === void 0 ? void 0 : _a.dispose();
            });
            (_b = controllerDelta.added) === null || _b === void 0 ? void 0 : _b.forEach(controller => this.addController(controller));
        });
    }
    addController(controller) {
        controller.testRuns.forEach(run => this.addRun(run));
        const listeners = new core_1.DisposableCollection();
        this.controllerListeners.set(controller.id, listeners);
        listeners.push(controller.onRunsChanged(runDelta => {
            var _a, _b;
            (_a = runDelta.removed) === null || _a === void 0 ? void 0 : _a.forEach(run => {
                var _a;
                (_a = this.runs.get(run)) === null || _a === void 0 ? void 0 : _a.disposable.dispose();
                this.runs.delete(run);
                this.refresh(this.ROOT);
            });
            (_b = runDelta.added) === null || _b === void 0 ? void 0 : _b.forEach(run => {
                this.addRun(run);
                this.refresh(this.ROOT);
            });
        }));
    }
    addRun(run) {
        const newNode = this.createRunNode(run);
        const affected = [];
        const disposables = new core_1.DisposableCollection();
        disposables.push(run.onDidChangeTestState(deltas => {
            let needsRefresh = false;
            deltas.forEach(delta => {
                if (delta.newState) {
                    if (delta.newState.state > test_service_1.TestExecutionState.Queued) {
                        const testNode = info.tests.get(delta.test);
                        if (!testNode) {
                            if (info.tests.size === 0) {
                                newNode.expanded = true;
                            }
                            info.tests.set(delta.test, this.createTestItemNode(newNode, delta.test));
                            needsRefresh = true;
                        }
                        else {
                            affected.push(testNode);
                        }
                    }
                }
                else {
                    info.tests.delete(delta.test);
                    needsRefresh = true;
                }
            });
            if (needsRefresh) {
                this.refresh(newNode);
            }
            else {
                this.onDidUpdateEmitter.fire(affected);
            }
        }));
        disposables.push(run.onDidChangeProperty(() => this.onDidUpdateEmitter.fire([])));
        const info = {
            node: newNode,
            disposable: disposables,
            tests: new Map(run.items.filter(item => { var _a; return (((_a = run.getTestState(item)) === null || _a === void 0 ? void 0 : _a.state) || 0) > test_service_1.TestExecutionState.Queued; }).map(item => [item, this.createTestItemNode(newNode, item)]))
        };
        this.runs.set(run, info);
    }
    createRunNode(run) {
        return new TestRunNode(this.nextId, `id-${this.nextId++}`, run, this.ROOT);
    }
    createTestItemNode(parent, item) {
        return new TestItemNode(`testitem-${this.nextId++}`, item, parent);
    }
    async resolveChildren(parent) {
        if (parent === this.ROOT) {
            return Promise.resolve([...this.runs.values()].reverse().map(info => info.node));
        }
        else if (parent instanceof TestRunNode) {
            const runInfo = this.runs.get(parent.run);
            if (runInfo) {
                return Promise.resolve([...runInfo.tests.values()]);
            }
            else {
                return Promise.resolve([]);
            }
        }
        else {
            return Promise.resolve([]);
        }
    }
};
__decorate([
    (0, inversify_1.inject)(test_service_1.TestService),
    __metadata("design:type", Object)
], TestRunTree.prototype, "testService", void 0);
__decorate([
    (0, inversify_1.postConstruct)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], TestRunTree.prototype, "init", null);
TestRunTree = __decorate([
    (0, inversify_1.injectable)()
], TestRunTree);
exports.TestRunTree = TestRunTree;
let TestRunTreeWidget = TestRunTreeWidget_1 = class TestRunTreeWidget extends tree_1.TreeWidget {
    constructor(props, model, contextMenuRenderer) {
        super(props, model, contextMenuRenderer);
        this.id = TestRunTreeWidget_1.ID;
        this.title.label = core_1.nls.localize('theia/test/testRuns', 'Test Runs');
        this.title.caption = core_1.nls.localize('theia/test/testRuns', 'Test Runs');
        this.title.iconClass = (0, browser_1.codicon)('run');
        this.title.closable = true;
    }
    init() {
        super.init();
        this.addClass('theia-test-result-view');
        this.model.onSelectionChanged(() => {
            const node = this.model.selectedNodes[0];
            if (node instanceof TestRunNode) {
                this.uiModel.selectedOutputSource = {
                    get output() {
                        return node.run.getOutput();
                    },
                    onDidAddTestOutput: core_1.Event.map(node.run.onDidChangeTestOutput, evt => evt.map(item => item[1]))
                };
            }
            else if (node instanceof TestItemNode) {
                this.uiModel.selectedOutputSource = {
                    get output() {
                        return node.parent.run.getOutput(node.item);
                    },
                    onDidAddTestOutput: core_1.Event.map(node.parent.run.onDidChangeTestOutput, evt => evt.filter(item => item[0] === node.item).map(item => item[1]))
                };
                this.uiModel.selectedTestState = node.parent.run.getTestState(node.item);
            }
        });
    }
    renderTree(model) {
        if (tree_1.CompositeTreeNode.is(this.model.root) && this.model.root.children.length > 0) {
            return super.renderTree(model);
        }
        return React.createElement("div", { className: 'theia-widget-noInfo noMarkers' }, core_1.nls.localizeByDefault('No tests have been found in this workspace yet.'));
    }
    getTestStateClass(state) {
        switch (state) {
            case test_service_1.TestExecutionState.Queued: return `${(0, browser_1.codicon)('history')} queued`;
            case test_service_1.TestExecutionState.Running: return `${(0, browser_1.codicon)('sync')} codicon-modifier-spin running`;
            case test_service_1.TestExecutionState.Skipped: return `${(0, browser_1.codicon)('debug-step-over')} skipped`;
            case test_service_1.TestExecutionState.Failed: return `${(0, browser_1.codicon)('error')} failed`;
            case test_service_1.TestExecutionState.Errored: return `${(0, browser_1.codicon)('issues')} errored`;
            case test_service_1.TestExecutionState.Passed: return `${(0, browser_1.codicon)('pass')} passed`;
            default: return (0, browser_1.codicon)('circle');
        }
    }
    renderIcon(node, props) {
        var _a;
        if (node instanceof TestItemNode) {
            const state = (_a = node.parent.run.getTestState(node.item)) === null || _a === void 0 ? void 0 : _a.state;
            return React.createElement("div", { className: this.getTestStateClass(state) });
        }
        else if (node instanceof TestRunNode) {
            const icon = node.run.isRunning ? `${(0, browser_1.codicon)('sync')} codicon-modifier-spin running` : (0, browser_1.codicon)('circle');
            return React.createElement("div", { className: icon });
        }
        else {
            return super.renderIcon(node, props);
        }
    }
    toContextMenuArgs(node) {
        if (node instanceof TestRunNode) {
            return [node.run];
        }
        else if (node instanceof TestItemNode) {
            return [node.item];
        }
        return [];
    }
    storeState() {
        return {}; // don't store any state for now
    }
};
TestRunTreeWidget.ID = 'test-run-widget';
__decorate([
    (0, inversify_1.inject)(icon_theme_service_1.IconThemeService),
    __metadata("design:type", icon_theme_service_1.IconThemeService)
], TestRunTreeWidget.prototype, "iconThemeService", void 0);
__decorate([
    (0, inversify_1.inject)(context_key_service_1.ContextKeyService),
    __metadata("design:type", Object)
], TestRunTreeWidget.prototype, "contextKeys", void 0);
__decorate([
    (0, inversify_1.inject)(theming_1.ThemeService),
    __metadata("design:type", theming_1.ThemeService)
], TestRunTreeWidget.prototype, "themeService", void 0);
__decorate([
    (0, inversify_1.inject)(test_execution_state_manager_1.TestExecutionStateManager),
    __metadata("design:type", test_execution_state_manager_1.TestExecutionStateManager)
], TestRunTreeWidget.prototype, "stateManager", void 0);
__decorate([
    (0, inversify_1.inject)(test_output_ui_model_1.TestOutputUIModel),
    __metadata("design:type", test_output_ui_model_1.TestOutputUIModel)
], TestRunTreeWidget.prototype, "uiModel", void 0);
__decorate([
    (0, inversify_1.postConstruct)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], TestRunTreeWidget.prototype, "init", null);
TestRunTreeWidget = TestRunTreeWidget_1 = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(tree_1.TreeProps)),
    __param(1, (0, inversify_1.inject)(tree_1.TreeModel)),
    __param(2, (0, inversify_1.inject)(browser_1.ContextMenuRenderer)),
    __metadata("design:paramtypes", [Object, Object, browser_1.ContextMenuRenderer])
], TestRunTreeWidget);
exports.TestRunTreeWidget = TestRunTreeWidget;


/***/ }),

/***/ "./node_modules/@theia/test/lib/browser/view/test-view-frontend-module.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@theia/test/lib/browser/view/test-view-frontend-module.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


// *****************************************************************************
// Copyright (C) 2023 STMicroelectronics and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createTestRunContainer = exports.createTestTreeContainer = void 0;
__webpack_require__(/*! ../../../src/browser/style/index.css */ "./node_modules/@theia/test/src/browser/style/index.css");
const inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify/index.js");
const browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
const test_tree_widget_1 = __webpack_require__(/*! ./test-tree-widget */ "./node_modules/@theia/test/lib/browser/view/test-tree-widget.js");
const test_view_contribution_1 = __webpack_require__(/*! ./test-view-contribution */ "./node_modules/@theia/test/lib/browser/view/test-view-contribution.js");
const test_service_1 = __webpack_require__(/*! ../test-service */ "./node_modules/@theia/test/lib/browser/test-service.js");
const core_1 = __webpack_require__(/*! @theia/core */ "./node_modules/@theia/core/lib/common/index.js");
const tab_bar_toolbar_1 = __webpack_require__(/*! @theia/core/lib/browser/shell/tab-bar-toolbar */ "./node_modules/@theia/core/lib/browser/shell/tab-bar-toolbar/index.js");
const test_execution_state_manager_1 = __webpack_require__(/*! ./test-execution-state-manager */ "./node_modules/@theia/test/lib/browser/view/test-execution-state-manager.js");
const test_result_widget_1 = __webpack_require__(/*! ./test-result-widget */ "./node_modules/@theia/test/lib/browser/view/test-result-widget.js");
const test_output_widget_1 = __webpack_require__(/*! ./test-output-widget */ "./node_modules/@theia/test/lib/browser/view/test-output-widget.js");
const test_output_view_contribution_1 = __webpack_require__(/*! ./test-output-view-contribution */ "./node_modules/@theia/test/lib/browser/view/test-output-view-contribution.js");
const test_output_ui_model_1 = __webpack_require__(/*! ./test-output-ui-model */ "./node_modules/@theia/test/lib/browser/view/test-output-ui-model.js");
const test_run_widget_1 = __webpack_require__(/*! ./test-run-widget */ "./node_modules/@theia/test/lib/browser/view/test-run-widget.js");
const test_result_view_contribution_1 = __webpack_require__(/*! ./test-result-view-contribution */ "./node_modules/@theia/test/lib/browser/view/test-result-view-contribution.js");
const test_run_view_contribution_1 = __webpack_require__(/*! ./test-run-view-contribution */ "./node_modules/@theia/test/lib/browser/view/test-run-view-contribution.js");
exports["default"] = new inversify_1.ContainerModule(bind => {
    (0, core_1.bindContributionProvider)(bind, test_service_1.TestContribution);
    bind(test_service_1.TestService).to(test_service_1.DefaultTestService).inSingletonScope();
    bind(browser_1.WidgetFactory).toDynamicValue(({ container }) => ({
        id: test_output_widget_1.TestOutputWidget.ID,
        createWidget: () => container.get(test_output_widget_1.TestOutputWidget)
    })).inSingletonScope();
    bind(test_output_widget_1.TestOutputWidget).toSelf();
    bind(browser_1.WidgetFactory).toDynamicValue(({ container }) => ({
        id: test_result_widget_1.TestResultWidget.ID,
        createWidget: () => container.get(test_result_widget_1.TestResultWidget)
    })).inSingletonScope();
    bind(test_result_widget_1.TestResultWidget).toSelf();
    bind(test_tree_widget_1.TestTreeWidget).toDynamicValue(({ container }) => {
        const child = createTestTreeContainer(container);
        return child.get(test_tree_widget_1.TestTreeWidget);
    });
    bind(browser_1.WidgetFactory).toDynamicValue(({ container }) => ({
        id: test_tree_widget_1.TestTreeWidget.ID,
        createWidget: () => container.get(test_tree_widget_1.TestTreeWidget)
    })).inSingletonScope();
    bind(test_run_widget_1.TestRunTreeWidget).toDynamicValue(({ container }) => {
        const child = createTestRunContainer(container);
        return child.get(test_run_widget_1.TestRunTreeWidget);
    });
    bind(browser_1.WidgetFactory).toDynamicValue(({ container }) => ({
        id: test_run_widget_1.TestRunTreeWidget.ID,
        createWidget: () => container.get(test_run_widget_1.TestRunTreeWidget)
    })).inSingletonScope();
    bind(browser_1.WidgetFactory).toDynamicValue(({ container }) => ({
        id: test_view_contribution_1.TEST_VIEW_CONTAINER_ID,
        createWidget: async () => {
            const viewContainer = container.get(browser_1.ViewContainer.Factory)({
                id: test_view_contribution_1.TEST_VIEW_CONTAINER_ID,
                progressLocationId: 'test'
            });
            viewContainer.setTitleOptions(test_view_contribution_1.TEST_VIEW_CONTAINER_TITLE_OPTIONS);
            let widget = await container.get(browser_1.WidgetManager).getOrCreateWidget(test_tree_widget_1.TestTreeWidget.ID);
            viewContainer.addWidget(widget, {
                canHide: false,
                initiallyCollapsed: false
            });
            widget = await container.get(browser_1.WidgetManager).getOrCreateWidget(test_run_widget_1.TestRunTreeWidget.ID);
            viewContainer.addWidget(widget, {
                canHide: true,
                initiallyCollapsed: false,
            });
            return viewContainer;
        }
    })).inSingletonScope();
    (0, browser_1.bindViewContribution)(bind, test_view_contribution_1.TestViewContribution);
    (0, browser_1.bindViewContribution)(bind, test_run_view_contribution_1.TestRunViewContribution);
    (0, browser_1.bindViewContribution)(bind, test_result_view_contribution_1.TestResultViewContribution);
    (0, browser_1.bindViewContribution)(bind, test_output_view_contribution_1.TestOutputViewContribution);
    bind(browser_1.FrontendApplicationContribution).toService(test_view_contribution_1.TestViewContribution);
    bind(tab_bar_toolbar_1.TabBarToolbarContribution).toService(test_view_contribution_1.TestViewContribution);
    bind(tab_bar_toolbar_1.TabBarToolbarContribution).toService(test_run_view_contribution_1.TestRunViewContribution);
    bind(test_execution_state_manager_1.TestExecutionStateManager).toSelf().inSingletonScope();
    bind(test_output_ui_model_1.TestOutputUIModel).toSelf().inSingletonScope();
});
function createTestTreeContainer(parent) {
    return (0, browser_1.createTreeContainer)(parent, {
        tree: test_tree_widget_1.TestTree,
        props: {
            virtualized: false,
            search: true,
            contextMenuPath: test_view_contribution_1.TEST_VIEW_CONTEXT_MENU
        },
        widget: test_tree_widget_1.TestTreeWidget,
    });
}
exports.createTestTreeContainer = createTestTreeContainer;
function createTestRunContainer(parent) {
    return (0, browser_1.createTreeContainer)(parent, {
        tree: test_run_widget_1.TestRunTree,
        props: {
            virtualized: false,
            search: true,
            multiSelect: false,
            contextMenuPath: test_run_view_contribution_1.TEST_RUNS_CONTEXT_MENU
        },
        widget: test_run_widget_1.TestRunTreeWidget
    });
}
exports.createTestRunContainer = createTestRunContainer;


/***/ }),

/***/ "./node_modules/@theia/workspace/lib/browser/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@theia/workspace/lib/browser/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


// *****************************************************************************
// Copyright (C) 2017 TypeFox and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./workspace-commands */ "./node_modules/@theia/workspace/lib/browser/workspace-commands.js"), exports);
__exportStar(__webpack_require__(/*! ./workspace-service */ "./node_modules/@theia/workspace/lib/browser/workspace-service.js"), exports);
__exportStar(__webpack_require__(/*! ./canonical-uri-service */ "./node_modules/@theia/workspace/lib/browser/canonical-uri-service.js"), exports);
__exportStar(__webpack_require__(/*! ./workspace-frontend-contribution */ "./node_modules/@theia/workspace/lib/browser/workspace-frontend-contribution.js"), exports);
__exportStar(__webpack_require__(/*! ./workspace-frontend-module */ "./node_modules/@theia/workspace/lib/browser/workspace-frontend-module.js"), exports);
__exportStar(__webpack_require__(/*! ./workspace-preferences */ "./node_modules/@theia/workspace/lib/browser/workspace-preferences.js"), exports);
__exportStar(__webpack_require__(/*! ./workspace-trust-service */ "./node_modules/@theia/workspace/lib/browser/workspace-trust-service.js"), exports);


/***/ }),

/***/ "./node_modules/@theia/test/src/browser/style/index.css":
/*!**************************************************************!*\
  !*** ./node_modules/@theia/test/src/browser/style/index.css ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_cjs_js_index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../../../css-loader/dist/cjs.js!./index.css */ "./node_modules/css-loader/dist/cjs.js!./node_modules/@theia/test/src/browser/style/index.css");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_index_css__WEBPACK_IMPORTED_MODULE_1__["default"], options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_index_css__WEBPACK_IMPORTED_MODULE_1__["default"].locals || {});

/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_theia_editor_lib_browser_editor_js-node_modules_theia_navigator_lib_brow-4fc8b9.js.map