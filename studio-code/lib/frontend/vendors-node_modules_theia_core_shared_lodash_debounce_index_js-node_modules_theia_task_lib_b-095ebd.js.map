{"version":3,"file":"vendors-node_modules_theia_core_shared_lodash_debounce_index_js-node_modules_theia_task_lib_b-095ebd.js","mappings":"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","sources":["webpack:///./node_modules/@theia/task/src/browser/style/index.css?./node_modules/css-loader/dist/cjs.js","webpack:///./node_modules/@theia/core/shared/lodash.debounce/index.js?","webpack:///./node_modules/@theia/task/src/browser/process/process-task-contribution.ts?","webpack:///./node_modules/@theia/task/src/browser/process/process-task-frontend-module.ts?","webpack:///./node_modules/@theia/task/src/browser/process/process-task-resolver.ts?","webpack:///./node_modules/@theia/task/src/browser/task-frontend-contribution.ts?","webpack:///./node_modules/@theia/task/src/browser/task-frontend-module.ts?","webpack:///./node_modules/@theia/task/src/browser/task-preferences.ts?","webpack:///./node_modules/@theia/task/src/browser/tasks-monaco-contribution.ts?","webpack:///./node_modules/@theia/task/src/common/task-common-module.ts?","webpack:///./node_modules/@theia/workspace/src/browser/index.ts?","webpack:///./node_modules/@theia/task/src/browser/style/index.css?"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.quick-open-task-configure {\n  margin-top: 3px !important;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@theia/task/src/browser/style/index.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,0BAA0B;AAC5B\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2019 Red Hat, Inc. and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.quick-open-task-configure {\\n  margin-top: 3px !important;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","module.exports = require('lodash.debounce');\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { ProcessTaskResolver } from './process-task-resolver';\nimport { TaskContribution, TaskResolverRegistry } from '../task-contribution';\n\n@injectable()\nexport class ProcessTaskContribution implements TaskContribution {\n\n    @inject(ProcessTaskResolver)\n    protected readonly processTaskResolver: ProcessTaskResolver;\n\n    registerResolvers(resolvers: TaskResolverRegistry): void {\n        resolvers.registerExecutionResolver('process', this.processTaskResolver);\n        resolvers.registerExecutionResolver('shell', this.processTaskResolver);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { ProcessTaskContribution } from './process-task-contribution';\nimport { ProcessTaskResolver } from './process-task-resolver';\nimport { TaskContribution } from '../task-contribution';\n\nexport function bindProcessTaskModule(bind: interfaces.Bind): void {\n\n    bind(ProcessTaskResolver).toSelf().inSingletonScope();\n    bind(ProcessTaskContribution).toSelf().inSingletonScope();\n    bind(TaskContribution).toService(ProcessTaskContribution);\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { VariableResolverService } from '@theia/variable-resolver/lib/browser';\nimport { TaskResolver } from '../task-contribution';\nimport { TaskConfiguration } from '../../common/task-protocol';\nimport { ProcessTaskConfiguration } from '../../common/process/task-protocol';\nimport { TaskDefinitionRegistry } from '../task-definition-registry';\nimport URI from '@theia/core/lib/common/uri';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\n\n@injectable()\nexport class ProcessTaskResolver implements TaskResolver {\n\n    @inject(VariableResolverService)\n    protected readonly variableResolverService: VariableResolverService;\n\n    @inject(TaskDefinitionRegistry)\n    protected readonly taskDefinitionRegistry: TaskDefinitionRegistry;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    /**\n     * Perform some adjustments to the task launch configuration, before sending\n     * it to the backend to be executed. We can make sure that parameters that\n     * are optional to the user but required by the server will be defined, with\n     * sane default values. Also, resolve all known variables, e.g. `${workspaceFolder}`.\n     */\n    async resolveTask(taskConfig: TaskConfiguration): Promise<TaskConfiguration> {\n        const type = taskConfig.taskType || taskConfig.type;\n        if (type !== 'process' && type !== 'shell') {\n            throw new Error('Unsupported task configuration type.');\n        }\n        const context = typeof taskConfig._scope === 'string' ? new URI(taskConfig._scope) : undefined;\n        const variableResolverOptions = {\n            context, configurationSection: 'tasks'\n        };\n        const processTaskConfig = taskConfig as ProcessTaskConfiguration;\n        let cwd = processTaskConfig.options && processTaskConfig.options.cwd;\n        if (!cwd) {\n            const rootURI = this.workspaceService.getWorkspaceRootUri(context);\n            if (rootURI) {\n                cwd = rootURI.toString();\n            }\n        }\n\n        const result: ProcessTaskConfiguration = {\n            ...processTaskConfig,\n            command: await this.variableResolverService.resolve(processTaskConfig.command, variableResolverOptions),\n            args: processTaskConfig.args ? await this.variableResolverService.resolve(processTaskConfig.args, variableResolverOptions) : undefined,\n            windows: processTaskConfig.windows ? {\n                command: await this.variableResolverService.resolve(processTaskConfig.windows.command, variableResolverOptions),\n                args: processTaskConfig.windows.args ? await this.variableResolverService.resolve(processTaskConfig.windows.args, variableResolverOptions) : undefined,\n                options: processTaskConfig.windows.options\n            } : undefined,\n            osx: processTaskConfig.osx ? {\n                command: await this.variableResolverService.resolve(processTaskConfig.osx.command, variableResolverOptions),\n                args: processTaskConfig.osx.args ? await this.variableResolverService.resolve(processTaskConfig.osx.args, variableResolverOptions) : undefined,\n                options: processTaskConfig.osx.options\n            } : undefined,\n            linux: processTaskConfig.linux ? {\n                command: await this.variableResolverService.resolve(processTaskConfig.linux.command, variableResolverOptions),\n                args: processTaskConfig.linux.args ? await this.variableResolverService.resolve(processTaskConfig.linux.args, variableResolverOptions) : undefined,\n                options: processTaskConfig.linux.options\n            } : undefined,\n            options: {\n                cwd: await this.variableResolverService.resolve(cwd, variableResolverOptions),\n                env: processTaskConfig.options?.env && await this.variableResolverService.resolve(processTaskConfig.options.env, variableResolverOptions),\n                shell: processTaskConfig.options && processTaskConfig.options.shell\n            }\n        };\n        return result;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, named, postConstruct } from '@theia/core/shared/inversify';\nimport { ILogger, ContributionProvider, CommandContribution, Command, CommandRegistry, MenuContribution, MenuModelRegistry, nls } from '@theia/core/lib/common';\nimport { QuickOpenTask, TaskTerminateQuickOpen, TaskRunningQuickOpen, TaskRestartRunningQuickOpen } from './quick-open-task';\nimport {\n    FrontendApplication, FrontendApplicationContribution, QuickAccessContribution,\n    KeybindingRegistry, KeybindingContribution, StorageService, StatusBar, StatusBarAlignment, CommonMenus\n} from '@theia/core/lib/browser';\nimport { WidgetManager } from '@theia/core/lib/browser/widget-manager';\nimport { TaskContribution, TaskResolverRegistry, TaskProviderRegistry } from './task-contribution';\nimport { TaskService } from './task-service';\nimport { TerminalMenus } from '@theia/terminal/lib/browser/terminal-frontend-contribution';\nimport { TaskSchemaUpdater } from './task-schema-updater';\nimport { TaskConfiguration, TaskWatcher } from '../common';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\n\nexport namespace TaskCommands {\n    const TASK_CATEGORY = 'Task';\n    const TASK_CATEGORY_KEY = nls.getDefaultKey(TASK_CATEGORY);\n    export const TASK_RUN = Command.toDefaultLocalizedCommand({\n        id: 'task:run',\n        category: TASK_CATEGORY,\n        label: 'Run Task...'\n    });\n\n    export const TASK_RUN_BUILD = Command.toDefaultLocalizedCommand({\n        id: 'task:run:build',\n        category: TASK_CATEGORY,\n        label: 'Run Build Task'\n    });\n\n    export const TASK_RUN_TEST = Command.toDefaultLocalizedCommand({\n        id: 'task:run:test',\n        category: TASK_CATEGORY,\n        label: 'Run Test Task'\n    });\n\n    export const WORKBENCH_RUN_TASK = Command.toLocalizedCommand({\n        id: 'workbench.action.tasks.runTask',\n        category: TASK_CATEGORY\n    }, '', TASK_CATEGORY_KEY);\n\n    export const TASK_RUN_LAST = Command.toDefaultLocalizedCommand({\n        id: 'task:run:last',\n        category: TASK_CATEGORY,\n        label: 'Rerun Last Task'\n    });\n\n    export const TASK_ATTACH = Command.toLocalizedCommand({\n        id: 'task:attach',\n        category: TASK_CATEGORY,\n        label: 'Attach Task...'\n    }, 'theia/task/attachTask', TASK_CATEGORY_KEY);\n\n    export const TASK_RUN_TEXT = Command.toDefaultLocalizedCommand({\n        id: 'task:run:text',\n        category: TASK_CATEGORY,\n        label: 'Run Selected Text'\n    });\n\n    export const TASK_CONFIGURE = Command.toDefaultLocalizedCommand({\n        id: 'task:configure',\n        category: TASK_CATEGORY,\n        label: 'Configure Tasks...'\n    });\n\n    export const TASK_OPEN_USER = Command.toLocalizedCommand({\n        id: 'task:open_user',\n        category: TASK_CATEGORY,\n        label: 'Open User Tasks'\n    }, 'theia/task/openUserTasks', TASK_CATEGORY_KEY);\n\n    export const TASK_CLEAR_HISTORY = Command.toLocalizedCommand({\n        id: 'task:clear-history',\n        category: TASK_CATEGORY,\n        label: 'Clear History'\n    }, 'theia/task/clearHistory', TASK_CATEGORY_KEY);\n\n    export const TASK_SHOW_RUNNING = Command.toDefaultLocalizedCommand({\n        id: 'task:show-running',\n        category: TASK_CATEGORY,\n        label: 'Show Running Tasks'\n    });\n\n    export const TASK_TERMINATE = Command.toDefaultLocalizedCommand({\n        id: 'task:terminate',\n        category: TASK_CATEGORY,\n        label: 'Terminate Task'\n    });\n\n    export const TASK_RESTART_RUNNING = Command.toDefaultLocalizedCommand({\n        id: 'task:restart-running',\n        category: TASK_CATEGORY,\n        label: 'Restart Running Task...'\n    });\n}\n\nconst TASKS_STORAGE_KEY = 'tasks';\n\n@injectable()\nexport class TaskFrontendContribution implements CommandContribution, MenuContribution, KeybindingContribution, FrontendApplicationContribution, QuickAccessContribution {\n    @inject(QuickOpenTask)\n    protected readonly quickOpenTask: QuickOpenTask;\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    @inject(FrontendApplication)\n    protected readonly app: FrontendApplication;\n\n    @inject(ILogger) @named('task')\n    protected readonly logger: ILogger;\n\n    @inject(WidgetManager)\n    protected readonly widgetManager: WidgetManager;\n\n    @inject(ContributionProvider) @named(TaskContribution)\n    protected readonly contributionProvider: ContributionProvider<TaskContribution>;\n\n    @inject(TaskProviderRegistry)\n    protected readonly taskProviderRegistry: TaskProviderRegistry;\n\n    @inject(TaskResolverRegistry)\n    protected readonly taskResolverRegistry: TaskResolverRegistry;\n\n    @inject(TaskService)\n    protected readonly taskService: TaskService;\n\n    @inject(TaskSchemaUpdater)\n    protected readonly schemaUpdater: TaskSchemaUpdater;\n\n    @inject(StorageService)\n    protected readonly storageService: StorageService;\n\n    @inject(TaskRunningQuickOpen)\n    protected readonly taskRunningQuickOpen: TaskRunningQuickOpen;\n\n    @inject(TaskTerminateQuickOpen)\n    protected readonly taskTerminateQuickOpen: TaskTerminateQuickOpen;\n\n    @inject(TaskRestartRunningQuickOpen)\n    protected readonly taskRestartRunningQuickOpen: TaskRestartRunningQuickOpen;\n\n    @inject(TaskWatcher)\n    protected readonly taskWatcher: TaskWatcher;\n\n    @inject(StatusBar)\n    protected readonly statusBar: StatusBar;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    @postConstruct()\n    protected init(): void {\n        this.taskWatcher.onTaskCreated(() => this.updateRunningTasksItem());\n        this.taskWatcher.onTaskExit(() => this.updateRunningTasksItem());\n    }\n\n    onStart(): void {\n        this.contributionProvider.getContributions().forEach(contrib => {\n            if (contrib.registerResolvers) {\n                contrib.registerResolvers(this.taskResolverRegistry);\n            }\n            if (contrib.registerProviders) {\n                contrib.registerProviders(this.taskProviderRegistry);\n            }\n        });\n        this.schemaUpdater.update();\n\n        this.storageService.getData<{ recent: TaskConfiguration[] }>(TASKS_STORAGE_KEY, { recent: [] })\n            .then(tasks => this.taskService.recentTasks = tasks.recent);\n    }\n\n    onStop(): void {\n        const recent = this.taskService.recentTasks;\n        this.storageService.setData<{ recent: TaskConfiguration[] }>(TASKS_STORAGE_KEY, { recent });\n    }\n\n    /**\n     * Contribute a status-bar item to trigger\n     * the `Show Running Tasks` command.\n     */\n    protected async updateRunningTasksItem(): Promise<void> {\n        const id = 'show-running-tasks';\n        const items = await this.taskService.getRunningTasks();\n        if (!!items.length) {\n            this.statusBar.setElement(id, {\n                text: `$(tools) ${items.length}`,\n                tooltip: TaskCommands.TASK_SHOW_RUNNING.label,\n                alignment: StatusBarAlignment.LEFT,\n                priority: 2,\n                command: TaskCommands.TASK_SHOW_RUNNING.id,\n            });\n        } else {\n            this.statusBar.removeElement(id);\n        }\n    }\n\n    registerCommands(registry: CommandRegistry): void {\n        registry.registerCommand(\n            TaskCommands.WORKBENCH_RUN_TASK,\n            {\n                isEnabled: () => true,\n                execute: async (label: string) => {\n                    const didExecute = await this.taskService.runTaskByLabel(this.taskService.startUserAction(), label);\n                    if (!didExecute) {\n                        this.quickOpenTask.open();\n                    }\n                }\n            }\n        );\n\n        registry.registerCommand(\n            TaskCommands.TASK_RUN,\n            {\n                isEnabled: () => true,\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                execute: (...args: any[]) => {\n                    const [source, label, scope] = args;\n                    if (source && label) {\n                        return this.taskService.run(this.taskService.startUserAction(), source, label, scope);\n                    }\n                    return this.quickOpenTask.open();\n                }\n            }\n        );\n        registry.registerCommand(\n            TaskCommands.TASK_RUN_BUILD,\n            {\n                isEnabled: () => this.workspaceService.opened,\n                execute: () =>\n                    this.quickOpenTask.runBuildOrTestTask('build')\n            }\n        );\n        registry.registerCommand(\n            TaskCommands.TASK_RUN_TEST,\n            {\n                isEnabled: () => this.workspaceService.opened,\n                execute: () =>\n                    this.quickOpenTask.runBuildOrTestTask('test')\n            }\n        );\n        registry.registerCommand(\n            TaskCommands.TASK_ATTACH,\n            {\n                isEnabled: () => true,\n                execute: () => this.quickOpenTask.attach()\n            }\n        );\n        registry.registerCommand(\n            TaskCommands.TASK_RUN_LAST,\n            {\n                execute: async () => {\n                    if (!await this.taskService.runLastTask(this.taskService.startUserAction())) {\n                        await this.quickOpenTask.open();\n                    }\n                }\n            }\n        );\n        registry.registerCommand(\n            TaskCommands.TASK_RUN_TEXT,\n            {\n                isVisible: () => !!this.editorManager.currentEditor,\n                isEnabled: () => !!this.editorManager.currentEditor,\n                execute: () => this.taskService.runSelectedText()\n            }\n        );\n\n        registry.registerCommand(\n            TaskCommands.TASK_CONFIGURE,\n            {\n                execute: () => this.quickOpenTask.configure()\n            }\n        );\n\n        registry.registerCommand(\n            TaskCommands.TASK_OPEN_USER,\n            {\n                execute: () => {\n                    this.taskService.openUserTasks();\n                }\n            }\n        );\n\n        registry.registerCommand(\n            TaskCommands.TASK_CLEAR_HISTORY,\n            {\n                execute: () => this.taskService.clearRecentTasks()\n            }\n        );\n\n        registry.registerCommand(\n            TaskCommands.TASK_SHOW_RUNNING,\n            {\n                execute: () => this.taskRunningQuickOpen.open()\n            }\n        );\n\n        registry.registerCommand(\n            TaskCommands.TASK_TERMINATE,\n            {\n                execute: () => this.taskTerminateQuickOpen.open()\n            }\n        );\n\n        registry.registerCommand(\n            TaskCommands.TASK_RESTART_RUNNING,\n            {\n                execute: () => this.taskRestartRunningQuickOpen.open()\n            }\n        );\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction(TerminalMenus.TERMINAL_TASKS, {\n            commandId: TaskCommands.TASK_RUN.id,\n            order: '0'\n        });\n\n        menus.registerMenuAction(TerminalMenus.TERMINAL_TASKS, {\n            commandId: TaskCommands.TASK_RUN_BUILD.id,\n            order: '1'\n        });\n\n        menus.registerMenuAction(TerminalMenus.TERMINAL_TASKS, {\n            commandId: TaskCommands.TASK_RUN_TEST.id,\n            order: '2'\n        });\n\n        menus.registerMenuAction(TerminalMenus.TERMINAL_TASKS, {\n            commandId: TaskCommands.TASK_RUN_LAST.id,\n            order: '3'\n        });\n\n        menus.registerMenuAction(TerminalMenus.TERMINAL_TASKS, {\n            commandId: TaskCommands.TASK_ATTACH.id,\n            order: '4'\n        });\n\n        menus.registerMenuAction(TerminalMenus.TERMINAL_TASKS, {\n            commandId: TaskCommands.TASK_RUN_TEXT.id,\n            order: '5'\n        });\n\n        menus.registerMenuAction(TerminalMenus.TERMINAL_TASKS_INFO, {\n            commandId: TaskCommands.TASK_SHOW_RUNNING.id,\n            label: TaskCommands.TASK_SHOW_RUNNING.label + '...',\n            order: '0'\n        });\n\n        menus.registerMenuAction(TerminalMenus.TERMINAL_TASKS_INFO, {\n            commandId: TaskCommands.TASK_RESTART_RUNNING.id,\n            label: TaskCommands.TASK_RESTART_RUNNING.label,\n            order: '1'\n        });\n\n        menus.registerMenuAction(TerminalMenus.TERMINAL_TASKS_INFO, {\n            commandId: TaskCommands.TASK_TERMINATE.id,\n            label: TaskCommands.TASK_TERMINATE.label + '...',\n            order: '2'\n        });\n\n        menus.registerMenuAction(TerminalMenus.TERMINAL_TASKS_CONFIG, {\n            commandId: TaskCommands.TASK_CONFIGURE.id,\n            order: '0'\n        });\n\n        menus.registerMenuAction(CommonMenus.MANAGE_SETTINGS, {\n            commandId: TaskCommands.TASK_OPEN_USER.id,\n            label: nls.localizeByDefault('User Tasks'),\n            order: 'a40'\n        });\n    }\n\n    registerQuickAccessProvider(): void {\n        this.quickOpenTask.registerQuickAccessProvider();\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        keybindings.registerKeybinding({\n            command: TaskCommands.TASK_RUN_LAST.id,\n            keybinding: 'ctrlcmd+shift+k',\n            when: '!textInputFocus || editorReadonly'\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { FrontendApplicationContribution, KeybindingContribution } from '@theia/core/lib/browser';\nimport { CommandContribution, MenuContribution, bindContributionProvider } from '@theia/core/lib/common';\nimport { WebSocketConnectionProvider } from '@theia/core/lib/browser/messaging';\nimport { QuickOpenTask, TaskTerminateQuickOpen, TaskRestartRunningQuickOpen, TaskRunningQuickOpen } from './quick-open-task';\nimport { TaskContribution, TaskProviderRegistry, TaskResolverRegistry } from './task-contribution';\nimport { TaskService } from './task-service';\nimport { TaskConfigurations } from './task-configurations';\nimport { ProvidedTaskConfigurations } from './provided-task-configurations';\nimport { TaskFrontendContribution } from './task-frontend-contribution';\nimport { createCommonBindings } from '../common/task-common-module';\nimport { TaskServer, taskPath } from '../common/task-protocol';\nimport { TaskWatcher } from '../common/task-watcher';\nimport { bindProcessTaskModule } from './process/process-task-frontend-module';\nimport { TaskSchemaUpdater } from './task-schema-updater';\nimport { TaskDefinitionRegistry } from './task-definition-registry';\nimport { ProblemMatcherRegistry } from './task-problem-matcher-registry';\nimport { ProblemPatternRegistry } from './task-problem-pattern-registry';\nimport { TaskConfigurationManager } from './task-configuration-manager';\nimport { bindTaskPreferences } from './task-preferences';\nimport '../../src/browser/style/index.css';\nimport './tasks-monaco-contribution';\nimport { TaskNameResolver } from './task-name-resolver';\nimport { TaskSourceResolver } from './task-source-resolver';\nimport { TaskTemplateSelector } from './task-templates';\nimport { TaskTerminalWidgetManager } from './task-terminal-widget-manager';\nimport { JsonSchemaContribution } from '@theia/core/lib/browser/json-schema-store';\nimport { QuickAccessContribution } from '@theia/core/lib/browser/quick-input/quick-access';\n\nexport default new ContainerModule(bind => {\n    bind(TaskFrontendContribution).toSelf().inSingletonScope();\n    bind(TaskService).toSelf().inSingletonScope();\n\n    for (const identifier of [FrontendApplicationContribution, CommandContribution, KeybindingContribution, MenuContribution, QuickAccessContribution]) {\n        bind(identifier).toService(TaskFrontendContribution);\n    }\n\n    bind(QuickOpenTask).toSelf().inSingletonScope();\n    bind(TaskRunningQuickOpen).toSelf().inSingletonScope();\n    bind(TaskTerminateQuickOpen).toSelf().inSingletonScope();\n    bind(TaskRestartRunningQuickOpen).toSelf().inSingletonScope();\n    bind(TaskConfigurations).toSelf().inSingletonScope();\n    bind(ProvidedTaskConfigurations).toSelf().inSingletonScope();\n    bind(TaskConfigurationManager).toSelf().inSingletonScope();\n\n    bind(TaskServer).toDynamicValue(ctx => {\n        const connection = ctx.container.get(WebSocketConnectionProvider);\n        const taskWatcher = ctx.container.get(TaskWatcher);\n        return connection.createProxy<TaskServer>(taskPath, taskWatcher.getTaskClient());\n    }).inSingletonScope();\n\n    bind(TaskDefinitionRegistry).toSelf().inSingletonScope();\n    bind(ProblemMatcherRegistry).toSelf().inSingletonScope();\n    bind(ProblemPatternRegistry).toSelf().inSingletonScope();\n\n    createCommonBindings(bind);\n\n    bind(TaskProviderRegistry).toSelf().inSingletonScope();\n    bind(TaskResolverRegistry).toSelf().inSingletonScope();\n    bindContributionProvider(bind, TaskContribution);\n    bind(TaskSchemaUpdater).toSelf().inSingletonScope();\n    bind(JsonSchemaContribution).toService(TaskSchemaUpdater);\n    bind(TaskNameResolver).toSelf().inSingletonScope();\n    bind(TaskSourceResolver).toSelf().inSingletonScope();\n    bind(TaskTemplateSelector).toSelf().inSingletonScope();\n    bind(TaskTerminalWidgetManager).toSelf().inSingletonScope();\n\n    bindProcessTaskModule(bind);\n    bindTaskPreferences(bind);\n});\n","// *****************************************************************************\n// Copyright (C) 2019 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { PreferenceContribution, PreferenceSchema } from '@theia/core/lib/browser/preferences/preference-contribution';\nimport { taskSchemaId } from './task-schema-updater';\nimport { PreferenceConfiguration } from '@theia/core/lib/browser/preferences/preference-configurations';\n\nexport const taskPreferencesSchema: PreferenceSchema = {\n    type: 'object',\n    scope: 'resource',\n    properties: {\n        tasks: {\n            $ref: taskSchemaId,\n            description: 'Task definition file',\n            defaultValue: {\n                version: '2.0.0',\n                tasks: []\n            }\n        }\n    }\n};\n\nexport function bindTaskPreferences(bind: interfaces.Bind): void {\n    bind(PreferenceContribution).toConstantValue({ schema: taskPreferencesSchema });\n    bind(PreferenceConfiguration).toConstantValue({ name: 'tasks' });\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as monaco from '@theia/monaco-editor-core';\n\nmonaco.languages.register({\n    id: 'jsonc',\n    'aliases': [\n        'JSON with Comments'\n    ],\n    'filenames': [\n        'tasks.json'\n    ]\n});\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { ILogger } from '@theia/core';\nimport { TaskWatcher } from './task-watcher';\n\n/**\n * Create the bindings common to node and browser.\n *\n * @param bind The bind function from inversify.\n */\nexport function createCommonBindings(bind: interfaces.Bind): void {\n\n    bind(ILogger).toDynamicValue(ctx => {\n        const logger = ctx.container.get<ILogger>(ILogger);\n        return logger.child('task');\n    }).inSingletonScope().whenTargetNamed('task');\n\n    bind(TaskWatcher).toSelf().inSingletonScope();\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './workspace-commands';\nexport * from './workspace-service';\nexport * from './canonical-uri-service';\nexport * from './workspace-frontend-contribution';\nexport * from './workspace-frontend-module';\nexport * from './workspace-preferences';\nexport * from './workspace-trust-service';\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}