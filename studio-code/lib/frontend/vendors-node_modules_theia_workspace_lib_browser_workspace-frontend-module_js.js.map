{"version":3,"file":"vendors-node_modules_theia_workspace_lib_browser_workspace-frontend-module_js.js","mappings":"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","sources":["webpack:///./node_modules/@theia/workspace/src/browser/canonical-uri-service.ts?","webpack:///./node_modules/@theia/workspace/src/browser/diff-service.ts?","webpack:///./node_modules/@theia/workspace/src/browser/quick-open-workspace.ts?","webpack:///./node_modules/@theia/workspace/src/browser/untitled-workspace-exit-dialog.ts?","webpack:///./node_modules/@theia/workspace/src/browser/workspace-breadcrumbs-contribution.ts?","webpack:///./node_modules/@theia/workspace/src/browser/workspace-commands.ts?","webpack:///./node_modules/@theia/workspace/src/browser/workspace-compare-handler.ts?","webpack:///./node_modules/@theia/workspace/src/browser/workspace-delete-handler.ts?","webpack:///./node_modules/@theia/workspace/src/browser/workspace-duplicate-handler.ts?","webpack:///./node_modules/@theia/workspace/src/browser/workspace-frontend-contribution.ts?","webpack:///./node_modules/@theia/workspace/src/browser/workspace-frontend-module.ts?","webpack:///./node_modules/@theia/workspace/src/browser/workspace-input-dialog.ts?","webpack:///./node_modules/@theia/workspace/src/browser/workspace-storage-service.ts?","webpack:///./node_modules/@theia/workspace/src/browser/workspace-trust-preferences.ts?","webpack:///./node_modules/@theia/workspace/src/browser/workspace-trust-service.ts?","webpack:///./node_modules/@theia/workspace/src/browser/workspace-uri-contribution.ts?","webpack:///./node_modules/@theia/workspace/src/browser/workspace-user-working-directory-provider.ts?","webpack:///./node_modules/@theia/workspace/src/browser/workspace-utils.ts?","webpack:///./node_modules/@theia/workspace/src/browser/workspace-variable-contribution.ts?","webpack:///./node_modules/@theia/workspace/src/browser/workspace-window-title-updater.ts?","webpack:///./node_modules/filename-reserved-regex/index.js?","webpack:///./node_modules/valid-filename/index.js?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2023 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { CancellationToken, URI } from '@theia/core/lib/common';\nimport { injectable } from '@theia/core/shared/inversify';\nimport { Disposable } from '@theia/core/shared/vscode-languageserver-protocol';\n\nexport interface CanonicalUriProvider extends Disposable {\n    provideCanonicalUri(uri: URI, targetScheme: string, token: CancellationToken): Promise<URI | undefined>;\n}\n\n@injectable()\nexport class CanonicalUriService {\n    private providers = new Map<string, CanonicalUriProvider>();\n\n    registerCanonicalUriProvider(scheme: string, provider: CanonicalUriProvider): Disposable {\n        if (this.providers.has(scheme)) {\n            throw new Error(`Canonical URI provider for scheme: '${scheme}' already exists`);\n        }\n\n        this.providers.set(scheme, provider);\n        return Disposable.create(() => { this.removeCanonicalUriProvider(scheme); });\n    }\n\n    private removeCanonicalUriProvider(scheme: string): void {\n        const provider = this.providers.get(scheme);\n        if (!provider) {\n            throw new Error(`No Canonical URI provider for scheme: '${scheme}' exists`);\n        }\n\n        this.providers.delete(scheme);\n        provider.dispose();\n    }\n\n    async provideCanonicalUri(uri: URI, targetScheme: string, token: CancellationToken = CancellationToken.None): Promise<URI | undefined> {\n        const provider = this.providers.get(uri.scheme);\n        if (!provider) {\n            console.warn(`No Canonical URI provider for scheme: '${uri.scheme}' exists`);\n            return undefined;\n        }\n\n        return provider.provideCanonicalUri(uri, targetScheme, token);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { DiffUris } from '@theia/core/lib/browser/diff-uris';\nimport { open, OpenerService, OpenerOptions } from '@theia/core/lib/browser';\nimport { MessageService } from '@theia/core/lib/common/message-service';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\n\n@injectable()\nexport class DiffService {\n\n    @inject(FileService) protected readonly fileService: FileService;\n    @inject(OpenerService) protected readonly openerService: OpenerService;\n    @inject(MessageService) protected readonly messageService: MessageService;\n\n    public async openDiffEditor(left: URI, right: URI, label?: string, options?: OpenerOptions): Promise<void> {\n        if (left.scheme === 'file' && right.scheme === 'file') {\n            const [resolvedLeft, resolvedRight] = await this.fileService.resolveAll([{ resource: left }, { resource: right }]);\n            if (resolvedLeft.success && resolvedRight.success) {\n                const leftStat = resolvedLeft.stat;\n                const rightStat = resolvedRight.stat;\n                if (leftStat && rightStat) {\n                    if (!leftStat.isDirectory && !rightStat.isDirectory) {\n                        const uri = DiffUris.encode(left, right, label);\n                        await open(this.openerService, uri, options);\n                    } else {\n                        const details = (() => {\n                            if (leftStat.isDirectory && rightStat.isDirectory) {\n                                return 'Both resource were a directory.';\n                            } else {\n                                if (leftStat.isDirectory) {\n                                    return `'${left.path.base}' was a directory.`;\n                                } else {\n                                    return `'${right.path.base}' was a directory.`;\n                                }\n                            }\n                        });\n                        this.messageService.warn(`Directories cannot be compared. ${details()}`);\n                    }\n                }\n            }\n        } else {\n            const uri = DiffUris.encode(left, right, label);\n            await open(this.openerService, uri, options);\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, optional } from '@theia/core/shared/inversify';\nimport { QuickPickItem, LabelProvider, QuickInputService, QuickInputButton, QuickPickSeparator } from '@theia/core/lib/browser';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\nimport { WorkspaceService } from './workspace-service';\nimport { WorkspacePreferences } from './workspace-preferences';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\nimport { nls, Path } from '@theia/core/lib/common';\nimport { UntitledWorkspaceService } from '../common/untitled-workspace-service';\n\ninterface RecentlyOpenedPick extends QuickPickItem {\n    resource?: URI\n}\n\n@injectable()\nexport class QuickOpenWorkspace {\n    protected items: Array<RecentlyOpenedPick | QuickPickSeparator>;\n    protected opened: boolean;\n\n    @inject(QuickInputService) @optional() protected readonly quickInputService: QuickInputService;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(FileService) protected readonly fileService: FileService;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(WorkspacePreferences) protected preferences: WorkspacePreferences;\n    @inject(EnvVariablesServer) protected readonly envServer: EnvVariablesServer;\n    @inject(UntitledWorkspaceService) protected untitledWorkspaceService: UntitledWorkspaceService;\n\n    protected readonly removeRecentWorkspaceButton: QuickInputButton = {\n        iconClass: 'codicon-remove-close',\n        tooltip: nls.localizeByDefault('Remove from Recently Opened')\n    };\n\n    async open(workspaces: string[]): Promise<void> {\n        this.items = [];\n        const [homeDirUri] = await Promise.all([\n            this.envServer.getHomeDirUri(),\n            this.workspaceService.getUntitledWorkspace()\n        ]);\n        const home = new URI(homeDirUri).path.toString();\n        await this.preferences.ready;\n        this.items.push({\n            type: 'separator',\n            label: nls.localizeByDefault('folders & workspaces')\n        });\n        for (const workspace of workspaces) {\n            const uri = new URI(workspace);\n            let stat: FileStat | undefined;\n            try {\n                stat = await this.fileService.resolve(uri);\n            } catch { }\n            if (this.untitledWorkspaceService.isUntitledWorkspace(uri) || !stat) {\n                continue; // skip the temporary workspace files or an undefined stat.\n            }\n            const icon = this.labelProvider.getIcon(stat);\n            const iconClasses = icon === '' ? undefined : [icon + ' file-icon'];\n\n            this.items.push({\n                label: uri.path.base,\n                description: Path.tildify(uri.path.toString(), home),\n                iconClasses,\n                buttons: [this.removeRecentWorkspaceButton],\n                resource: uri,\n                execute: () => {\n                    const current = this.workspaceService.workspace;\n                    const uriToOpen = new URI(workspace);\n                    if ((current && current.resource.toString() !== workspace) || !current) {\n                        this.workspaceService.open(uriToOpen);\n                    }\n                },\n            });\n        }\n        this.quickInputService?.showQuickPick(this.items, {\n            placeholder: nls.localize(\n                'theia/workspace/openRecentPlaceholder',\n                'Type the name of the workspace you want to open'),\n            onDidTriggerItemButton: async context => {\n                const resource = (context.item as RecentlyOpenedPick).resource;\n                if (resource) {\n                    await this.workspaceService.removeRecentWorkspace(resource.toString());\n                    context.removeItem();\n                }\n            }\n        });\n    }\n\n    select(): void {\n        this.items = [];\n        this.opened = this.workspaceService.opened;\n        this.workspaceService.recentWorkspaces().then(workspaceRoots => {\n            if (workspaceRoots) {\n                this.open(workspaceRoots);\n            }\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { nls } from '@theia/core';\nimport { inject } from '@theia/core/shared/inversify';\nimport { AbstractDialog, Dialog, DialogProps, Message } from '@theia/core/lib/browser';\n\nexport class UntitledWorkspaceExitDialog extends AbstractDialog<UntitledWorkspaceExitDialog.Options> {\n    protected readonly dontSaveButton: HTMLButtonElement;\n    protected _value: UntitledWorkspaceExitDialog.Options = 'Cancel';\n\n    get value(): UntitledWorkspaceExitDialog.Options {\n        return this._value;\n    }\n\n    constructor(\n        @inject(DialogProps) props: DialogProps\n    ) {\n        super(props);\n        const messageNode = document.createElement('div');\n        messageNode.textContent = nls.localizeByDefault('Save your workspace if you plan to open it again.');\n        this.contentNode.appendChild(messageNode);\n        this.dontSaveButton = this.createButton(nls.localizeByDefault(UntitledWorkspaceExitDialog.Values[\"Don't Save\"]));\n        this.dontSaveButton.classList.add('secondary');\n        this.controlPanel.appendChild(this.dontSaveButton);\n        this.appendCloseButton(Dialog.CANCEL);\n        this.appendAcceptButton(nls.localizeByDefault(UntitledWorkspaceExitDialog.Values.Save));\n    }\n\n    protected override onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        this.addAction(this.dontSaveButton, () => this.dontSave(), 'click');\n    }\n\n    protected override addAcceptAction<K extends keyof HTMLElementEventMap>(element: HTMLElement, ...additionalEventTypes: K[]): void {\n        this.addAction(element, () => this.doSave(), 'click');\n    }\n\n    protected dontSave(): void {\n        this._value = UntitledWorkspaceExitDialog.Values[\"Don't Save\"];\n        this.accept();\n    }\n\n    protected doSave(): void {\n        this._value = UntitledWorkspaceExitDialog.Values.Save;\n        this.accept();\n    }\n}\n\nexport namespace UntitledWorkspaceExitDialog {\n    export const enum Values {\n        \"Don't Save\" = \"Don't Save\",\n        Cancel = 'Cancel',\n        Save = 'Save',\n    };\n    export type Options = keyof typeof Values;\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { FilepathBreadcrumb } from '@theia/filesystem/lib/browser/breadcrumbs/filepath-breadcrumb';\nimport { FilepathBreadcrumbClassNameFactory, FilepathBreadcrumbsContribution } from '@theia/filesystem/lib/browser/breadcrumbs/filepath-breadcrumbs-contribution';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { WorkspaceService } from './workspace-service';\nimport URI from '@theia/core/lib/common/uri';\n\n@injectable()\nexport class WorkspaceBreadcrumbsContribution extends FilepathBreadcrumbsContribution {\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    override getContainerClassCreator(fileURI: URI): FilepathBreadcrumbClassNameFactory {\n        const workspaceRoot = this.workspaceService.getWorkspaceRootUri(fileURI);\n        return (location, index) => {\n            if (location.isEqual(fileURI)) {\n                return 'file';\n            } else if (workspaceRoot?.isEqual(location)) {\n                return 'root_folder';\n            }\n            return 'folder';\n        };\n    }\n\n    override getIconClassCreator(fileURI: URI): FilepathBreadcrumbClassNameFactory {\n        const workspaceRoot = this.workspaceService.getWorkspaceRootUri(fileURI);\n        return (location, index) => {\n            if (location.isEqual(fileURI) || workspaceRoot?.isEqual(location)) {\n                return this.labelProvider.getIcon(location) + ' file-icon';\n            }\n            return '';\n        };\n    }\n\n    protected override filterBreadcrumbs(uri: URI, breadcrumb: FilepathBreadcrumb): boolean {\n        const workspaceRootUri = this.workspaceService.getWorkspaceRootUri(uri);\n        const firstCrumbToHide = this.workspaceService.isMultiRootWorkspaceOpened ? workspaceRootUri?.parent : workspaceRootUri;\n        return super.filterBreadcrumbs(uri, breadcrumb) && (!firstCrumbToHide || !breadcrumb.uri.isEqualOrParent(firstCrumbToHide));\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { Command, CommandContribution, CommandRegistry } from '@theia/core/lib/common/command';\nimport { MenuContribution, MenuModelRegistry } from '@theia/core/lib/common/menu';\nimport { CommonMenus } from '@theia/core/lib/browser/common-frontend-contribution';\nimport { FileDialogService } from '@theia/filesystem/lib/browser';\nimport { SingleTextInputDialog, ConfirmDialog, Dialog } from '@theia/core/lib/browser/dialogs';\nimport { OpenerService, OpenHandler, open, FrontendApplication, LabelProvider, CommonCommands } from '@theia/core/lib/browser';\nimport { UriCommandHandler, UriAwareCommandHandler } from '@theia/core/lib/common/uri-command-handler';\nimport { WorkspaceService } from './workspace-service';\nimport { MessageService } from '@theia/core/lib/common/message-service';\nimport { WorkspacePreferences } from './workspace-preferences';\nimport { WorkspaceDeleteHandler } from './workspace-delete-handler';\nimport { WorkspaceDuplicateHandler } from './workspace-duplicate-handler';\nimport { FileSystemUtils } from '@theia/filesystem/lib/common';\nimport { WorkspaceCompareHandler } from './workspace-compare-handler';\nimport { FileDownloadCommands } from '@theia/filesystem/lib/browser/download/file-download-command-contribution';\nimport { FileSystemCommands } from '@theia/filesystem/lib/browser/filesystem-frontend-contribution';\nimport { WorkspaceInputDialog } from './workspace-input-dialog';\nimport { Emitter, EOL, Event, OS } from '@theia/core/lib/common';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { ClipboardService } from '@theia/core/lib/browser/clipboard-service';\n\nconst validFilename: (arg: string) => boolean = require('valid-filename');\n\nexport namespace WorkspaceCommands {\n\n    const WORKSPACE_CATEGORY = 'Workspaces';\n    const FILE_CATEGORY = CommonCommands.FILE_CATEGORY;\n\n    // On Linux and Windows, both files and folders cannot be opened at the same time in electron.\n    // `OPEN_FILE` and `OPEN_FOLDER` must be available only on Linux and Windows in electron.\n    // `OPEN` must *not* be available on Windows and Linux in electron.\n    // VS Code does the same. See: https://github.com/eclipse-theia/theia/pull/3202#issuecomment-430585357\n    export const OPEN: Command & { dialogLabel: string } = {\n        ...Command.toDefaultLocalizedCommand({\n            id: 'workspace:open',\n            category: CommonCommands.FILE_CATEGORY,\n            label: 'Open...'\n        }),\n        dialogLabel: nls.localizeByDefault('Open')\n    };\n    // No `label`. Otherwise, it shows up in the `Command Palette`.\n    export const OPEN_FILE: Command & { dialogLabel: string } = {\n        id: 'workspace:openFile',\n        originalCategory: FILE_CATEGORY,\n        category: nls.localizeByDefault(CommonCommands.FILE_CATEGORY),\n        dialogLabel: nls.localizeByDefault('Open File')\n    };\n    export const OPEN_FOLDER: Command & { dialogLabel: string } = {\n        id: 'workspace:openFolder',\n        dialogLabel: nls.localizeByDefault('Open Folder') // No `label`. Otherwise, it shows up in the `Command Palette`.\n    };\n    export const OPEN_WORKSPACE: Command & { dialogLabel: string } = {\n        ...Command.toDefaultLocalizedCommand({\n            id: 'workspace:openWorkspace',\n            category: CommonCommands.FILE_CATEGORY,\n            label: 'Open Workspace from File...',\n        }),\n        dialogLabel: nls.localizeByDefault('Open Workspace from File')\n    };\n    export const OPEN_RECENT_WORKSPACE = Command.toLocalizedCommand({\n        id: 'workspace:openRecent',\n        category: FILE_CATEGORY,\n        label: 'Open Recent Workspace...'\n    }, 'theia/workspace/openRecentWorkspace', CommonCommands.FILE_CATEGORY_KEY);\n    export const CLOSE = Command.toDefaultLocalizedCommand({\n        id: 'workspace:close',\n        category: WORKSPACE_CATEGORY,\n        label: 'Close Workspace'\n    });\n    export const NEW_FILE = Command.toDefaultLocalizedCommand({\n        id: 'file.newFile',\n        category: FILE_CATEGORY,\n        label: 'New File...'\n    });\n    export const NEW_FOLDER = Command.toDefaultLocalizedCommand({\n        id: 'file.newFolder',\n        category: FILE_CATEGORY,\n        label: 'New Folder...'\n    });\n    export const FILE_OPEN_WITH = (opener: OpenHandler): Command => ({\n        id: `file.openWith.${opener.id}`\n    });\n    export const FILE_RENAME = Command.toDefaultLocalizedCommand({\n        id: 'file.rename',\n        category: FILE_CATEGORY,\n        label: 'Rename'\n    });\n    export const FILE_DELETE = Command.toDefaultLocalizedCommand({\n        id: 'file.delete',\n        category: FILE_CATEGORY,\n        label: 'Delete'\n    });\n    export const FILE_DUPLICATE = Command.toLocalizedCommand({\n        id: 'file.duplicate',\n        category: FILE_CATEGORY,\n        label: 'Duplicate'\n    }, 'theia/workspace/duplicate', CommonCommands.FILE_CATEGORY_KEY);\n    export const FILE_COMPARE = Command.toLocalizedCommand({\n        id: 'file.compare',\n        category: FILE_CATEGORY,\n        label: 'Compare with Each Other'\n    }, 'theia/workspace/compareWithEachOther', CommonCommands.FILE_CATEGORY_KEY);\n    export const ADD_FOLDER = Command.toDefaultLocalizedCommand({\n        id: 'workspace:addFolder',\n        category: WORKSPACE_CATEGORY,\n        label: 'Add Folder to Workspace...'\n    });\n    export const REMOVE_FOLDER = Command.toDefaultLocalizedCommand({\n        id: 'workspace:removeFolder',\n        category: WORKSPACE_CATEGORY,\n        label: 'Remove Folder from Workspace'\n    });\n    export const SAVE_WORKSPACE_AS = Command.toDefaultLocalizedCommand({\n        id: 'workspace:saveAs',\n        category: WORKSPACE_CATEGORY,\n        label: 'Save Workspace As...'\n    });\n    export const OPEN_WORKSPACE_FILE = Command.toDefaultLocalizedCommand({\n        id: 'workspace:openConfigFile',\n        category: WORKSPACE_CATEGORY,\n        label: 'Open Workspace Configuration File'\n    });\n    /** @deprecated @since 1.24.0 Use `CommonCommands.SAVE_AS` instead */\n    export const SAVE_AS = CommonCommands.SAVE_AS;\n    export const COPY_RELATIVE_FILE_PATH = Command.toDefaultLocalizedCommand({\n        id: 'navigator.copyRelativeFilePath',\n        label: 'Copy Relative Path'\n    });\n}\n\n@injectable()\nexport class FileMenuContribution implements MenuContribution {\n\n    registerMenus(registry: MenuModelRegistry): void {\n        registry.registerMenuAction(CommonMenus.FILE_NEW_TEXT, {\n            commandId: WorkspaceCommands.NEW_FOLDER.id,\n            order: 'b'\n        });\n        const downloadUploadMenu = [...CommonMenus.FILE, '4_downloadupload'];\n        registry.registerMenuAction(downloadUploadMenu, {\n            commandId: FileSystemCommands.UPLOAD.id,\n            order: 'a'\n        });\n        registry.registerMenuAction(downloadUploadMenu, {\n            commandId: FileDownloadCommands.DOWNLOAD.id,\n            order: 'b'\n        });\n    }\n\n}\n\n@injectable()\nexport class EditMenuContribution implements MenuContribution {\n\n    registerMenus(registry: MenuModelRegistry): void {\n        registry.registerMenuAction(CommonMenus.EDIT_CLIPBOARD, {\n            commandId: FileDownloadCommands.COPY_DOWNLOAD_LINK.id,\n            order: '9999'\n        });\n    }\n\n}\n\nexport interface DidCreateNewResourceEvent {\n    uri: URI\n    parent: URI\n}\n\n@injectable()\nexport class WorkspaceCommandContribution implements CommandContribution {\n\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(FileService) protected readonly fileService: FileService;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(SelectionService) protected readonly selectionService: SelectionService;\n    @inject(OpenerService) protected readonly openerService: OpenerService;\n    @inject(FrontendApplication) protected readonly app: FrontendApplication;\n    @inject(MessageService) protected readonly messageService: MessageService;\n    @inject(WorkspacePreferences) protected readonly preferences: WorkspacePreferences;\n    @inject(FileDialogService) protected readonly fileDialogService: FileDialogService;\n    @inject(WorkspaceDeleteHandler) protected readonly deleteHandler: WorkspaceDeleteHandler;\n    @inject(WorkspaceDuplicateHandler) protected readonly duplicateHandler: WorkspaceDuplicateHandler;\n    @inject(WorkspaceCompareHandler) protected readonly compareHandler: WorkspaceCompareHandler;\n    @inject(ClipboardService) protected readonly clipboardService: ClipboardService;\n\n    private readonly onDidCreateNewFileEmitter = new Emitter<DidCreateNewResourceEvent>();\n    private readonly onDidCreateNewFolderEmitter = new Emitter<DidCreateNewResourceEvent>();\n\n    get onDidCreateNewFile(): Event<DidCreateNewResourceEvent> {\n        return this.onDidCreateNewFileEmitter.event;\n    }\n\n    get onDidCreateNewFolder(): Event<DidCreateNewResourceEvent> {\n        return this.onDidCreateNewFolderEmitter.event;\n    }\n\n    protected fireCreateNewFile(uri: DidCreateNewResourceEvent): void {\n        this.onDidCreateNewFileEmitter.fire(uri);\n    }\n\n    protected fireCreateNewFolder(uri: DidCreateNewResourceEvent): void {\n        this.onDidCreateNewFolderEmitter.fire(uri);\n    }\n\n    registerCommands(registry: CommandRegistry): void {\n        this.registerOpenWith(registry);\n        registry.registerCommand(WorkspaceCommands.NEW_FILE, this.newWorkspaceRootUriAwareCommandHandler({\n            execute: uri => this.getDirectory(uri).then(parent => {\n                if (parent) {\n                    const parentUri = parent.resource;\n                    const { fileName, fileExtension } = this.getDefaultFileConfig();\n                    const targetUri = parentUri.resolve(fileName + fileExtension);\n                    const vacantChildUri = FileSystemUtils.generateUniqueResourceURI(parent, targetUri, false);\n\n                    const dialog = new WorkspaceInputDialog({\n                        title: nls.localizeByDefault('New File...'),\n                        maxWidth: 400,\n                        parentUri: parentUri,\n                        initialValue: vacantChildUri.path.base,\n                        placeholder: nls.localize('theia/workspace/newFilePlaceholder', 'File Name'),\n                        validate: name => this.validateFileName(name, parent, true)\n                    }, this.labelProvider);\n\n                    dialog.open().then(async name => {\n                        if (name) {\n                            const fileUri = parentUri.resolve(name);\n                            await this.fileService.create(fileUri);\n                            this.fireCreateNewFile({ parent: parentUri, uri: fileUri });\n                            open(this.openerService, fileUri);\n                        }\n                    });\n                }\n            })\n        }));\n        registry.registerCommand(WorkspaceCommands.NEW_FOLDER, this.newWorkspaceRootUriAwareCommandHandler({\n            execute: uri => this.getDirectory(uri).then(parent => {\n                if (parent) {\n                    const parentUri = parent.resource;\n                    const targetUri = parentUri.resolve('Untitled');\n                    const vacantChildUri = FileSystemUtils.generateUniqueResourceURI(parent, targetUri, true);\n                    const dialog = new WorkspaceInputDialog({\n                        title: nls.localizeByDefault('New Folder...'),\n                        maxWidth: 400,\n                        parentUri: parentUri,\n                        initialValue: vacantChildUri.path.base,\n                        placeholder: nls.localize('theia/workspace/newFolderPlaceholder', 'Folder Name'),\n                        validate: name => this.validateFileName(name, parent, true)\n                    }, this.labelProvider);\n                    dialog.open().then(async name => {\n                        if (name) {\n                            const folderUri = parentUri.resolve(name);\n                            await this.fileService.createFolder(folderUri);\n                            this.fireCreateNewFile({ parent: parentUri, uri: folderUri });\n                        }\n                    });\n                }\n            })\n        }));\n        registry.registerCommand(WorkspaceCommands.FILE_RENAME, this.newMultiUriAwareCommandHandler({\n            isEnabled: uris => uris.some(uri => !this.isWorkspaceRoot(uri)) && uris.length === 1,\n            isVisible: uris => uris.some(uri => !this.isWorkspaceRoot(uri)) && uris.length === 1,\n            execute: async uris => {\n                const uri = uris[0]; /* Since there is only one item in the array. */\n                const parent = await this.getParent(uri);\n                if (parent) {\n                    const oldName = uri.path.base;\n                    const dialog = new SingleTextInputDialog({\n                        title: nls.localizeByDefault('Rename'),\n                        maxWidth: 400,\n                        initialValue: oldName,\n                        initialSelectionRange: {\n                            start: 0,\n                            end: uri.path.name.length\n                        },\n                        validate: async (newName, mode) => {\n                            if (oldName === newName && mode === 'preview') {\n                                return false;\n                            }\n                            return this.validateFileRename(oldName, newName, parent);\n                        }\n                    });\n                    const fileName = await dialog.open();\n                    if (fileName) {\n                        const oldUri = uri;\n                        const newUri = uri.parent.resolve(fileName);\n                        return this.fileService.move(oldUri, newUri);\n                    }\n                }\n            }\n        }));\n        registry.registerCommand(WorkspaceCommands.FILE_DUPLICATE, this.newMultiUriAwareCommandHandler(this.duplicateHandler));\n        registry.registerCommand(WorkspaceCommands.FILE_DELETE, this.newMultiUriAwareCommandHandler(this.deleteHandler));\n        registry.registerCommand(WorkspaceCommands.FILE_COMPARE, this.newMultiUriAwareCommandHandler(this.compareHandler));\n        registry.registerCommand(WorkspaceCommands.COPY_RELATIVE_FILE_PATH, UriAwareCommandHandler.MultiSelect(this.selectionService, {\n            isEnabled: uris => !!uris.length,\n            isVisible: uris => !!uris.length,\n            execute: async uris => {\n                const lineDelimiter = EOL;\n                const text = uris.map((uri: URI) => {\n                    const workspaceRoot = this.workspaceService.getWorkspaceRootUri(uri);\n                    if (workspaceRoot) {\n                        return workspaceRoot.relative(uri)?.fsPath();\n                    } else {\n                        return uri.path.fsPath();\n                    }\n                }).join(lineDelimiter);\n                await this.clipboardService.writeText(text);\n            }\n        }));\n        registry.registerCommand(WorkspaceCommands.ADD_FOLDER, {\n            isEnabled: () => this.workspaceService.opened,\n            isVisible: () => this.workspaceService.opened,\n            execute: async () => {\n                const selection = await this.fileDialogService.showOpenDialog({\n                    title: WorkspaceCommands.ADD_FOLDER.label!,\n                    canSelectFiles: false,\n                    canSelectFolders: true,\n                    canSelectMany: true,\n                });\n                if (!selection) {\n                    return;\n                }\n                const uris = Array.isArray(selection) ? selection : [selection];\n                const workspaceSavedBeforeAdding = this.workspaceService.saved;\n                await this.addFolderToWorkspace(...uris);\n                if (!workspaceSavedBeforeAdding) {\n                    this.saveWorkspaceWithPrompt(registry);\n                }\n            }\n        });\n        registry.registerCommand(WorkspaceCommands.REMOVE_FOLDER, this.newMultiUriAwareCommandHandler({\n            execute: uris => this.removeFolderFromWorkspace(uris),\n            isEnabled: () => this.workspaceService.isMultiRootWorkspaceOpened,\n            isVisible: uris => this.areWorkspaceRoots(uris) && this.workspaceService.saved\n        }));\n    }\n\n    openers: OpenHandler[];\n    protected async registerOpenWith(registry: CommandRegistry): Promise<void> {\n        if (this.openerService.onDidChangeOpeners) {\n            this.openerService.onDidChangeOpeners(async e => {\n                this.openers = await this.openerService.getOpeners();\n            });\n        }\n        this.openers = await this.openerService.getOpeners();\n        for (const opener of this.openers) {\n            const openWithCommand = WorkspaceCommands.FILE_OPEN_WITH(opener);\n            registry.registerCommand(openWithCommand, this.newUriAwareCommandHandler({\n                execute: uri => opener.open(uri),\n                isEnabled: uri => opener.canHandle(uri) > 0,\n                isVisible: uri => opener.canHandle(uri) > 0 && this.areMultipleOpenHandlersPresent(this.openers, uri)\n            }));\n        }\n    }\n\n    protected newUriAwareCommandHandler(handler: UriCommandHandler<URI>): UriAwareCommandHandler<URI> {\n        return UriAwareCommandHandler.MonoSelect(this.selectionService, handler);\n    }\n\n    protected newMultiUriAwareCommandHandler(handler: UriCommandHandler<URI[]>): UriAwareCommandHandler<URI[]> {\n        return UriAwareCommandHandler.MultiSelect(this.selectionService, handler);\n    }\n\n    protected newWorkspaceRootUriAwareCommandHandler(handler: UriCommandHandler<URI>): WorkspaceRootUriAwareCommandHandler {\n        return new WorkspaceRootUriAwareCommandHandler(this.workspaceService, this.selectionService, handler);\n    }\n\n    protected async validateFileRename(oldName: string, newName: string, parent: FileStat): Promise<string> {\n        if (OS.backend.isWindows && parent.resource.resolve(newName).isEqual(parent.resource.resolve(oldName), false)) {\n            return '';\n        }\n        return this.validateFileName(newName, parent, false);\n    }\n\n    /**\n     * Returns an error message if the file name is invalid. Otherwise, an empty string.\n     *\n     * @param name the simple file name of the file to validate.\n     * @param parent the parent directory's file stat.\n     * @param allowNested allow file or folder creation using recursive path\n     */\n    protected async validateFileName(name: string, parent: FileStat, allowNested: boolean = false): Promise<string> {\n        if (!name) {\n            return '';\n        }\n        // do not allow recursive rename\n        if (!allowNested && !validFilename(name)) {\n            return nls.localizeByDefault('The name **{0}** is not valid as a file or folder name. Please choose a different name.');\n        }\n        if (name.startsWith('/')) {\n            return nls.localizeByDefault('A file or folder name cannot start with a slash.');\n        } else if (name.startsWith(' ') || name.endsWith(' ')) {\n            return nls.localizeByDefault('Leading or trailing whitespace detected in file or folder name.');\n        }\n        // check and validate each sub-paths\n        if (name.split(/[\\\\/]/).some(file => !file || !validFilename(file) || /^\\s+$/.test(file))) {\n            return nls.localizeByDefault('\\'{0}\\' is not a valid file name', this.trimFileName(name));\n        }\n        const childUri = parent.resource.resolve(name);\n        const exists = await this.fileService.exists(childUri);\n        if (exists) {\n            return nls.localizeByDefault('A file or folder **{0}** already exists at this location. Please choose a different name.', this.trimFileName(name));\n        }\n        return '';\n    }\n\n    protected trimFileName(name: string): string {\n        if (name && name.length > 30) {\n            return `${name.substring(0, 30)}...`;\n        }\n        return name;\n    }\n\n    protected async getDirectory(candidate: URI): Promise<FileStat | undefined> {\n        let stat: FileStat | undefined;\n        try {\n            stat = await this.fileService.resolve(candidate);\n        } catch { }\n        if (stat && stat.isDirectory) {\n            return stat;\n        }\n        return this.getParent(candidate);\n    }\n\n    protected async getParent(candidate: URI): Promise<FileStat | undefined> {\n        try {\n            return await this.fileService.resolve(candidate.parent);\n        } catch {\n            return undefined;\n        }\n    }\n\n    protected async addFolderToWorkspace(...uris: URI[]): Promise<void> {\n        if (uris.length) {\n            const foldersToAdd = [];\n            try {\n                for (const uri of uris) {\n                    const stat = await this.fileService.resolve(uri);\n                    if (stat.isDirectory) {\n                        foldersToAdd.push(uri);\n                    }\n                }\n                await this.workspaceService.addRoot(foldersToAdd);\n            } catch { }\n        }\n    }\n\n    protected areWorkspaceRoots(uris: URI[]): boolean {\n        return this.workspaceService.areWorkspaceRoots(uris);\n    }\n\n    protected isWorkspaceRoot(uri: URI): boolean {\n        const rootUris = new Set(this.workspaceService.tryGetRoots().map(root => root.resource.toString()));\n        return rootUris.has(uri.toString());\n    }\n\n    protected getDefaultFileConfig(): { fileName: string, fileExtension: string } {\n        return {\n            fileName: 'Untitled',\n            fileExtension: '.txt'\n        };\n    }\n\n    /**\n     * Removes the list of folders from the workspace upon confirmation from the user.\n     * @param uris the list of folder uris to remove.\n     */\n    protected async removeFolderFromWorkspace(uris: URI[]): Promise<void> {\n        const roots = new Set(this.workspaceService.tryGetRoots().map(root => root.resource.toString()));\n        const toRemove = uris.filter(uri => roots.has(uri.toString()));\n        if (toRemove.length > 0) {\n            const messageContainer = document.createElement('div');\n            if (toRemove.length > 1) {\n                messageContainer.textContent = nls.localize('theia/workspace/removeFolders',\n                    'Are you sure you want to remove the following folders from the workspace?');\n            } else {\n                messageContainer.textContent = nls.localize('theia/workspace/removeFolder',\n                    'Are you sure you want to remove the following folder from the workspace?');\n            }\n            messageContainer.title = nls.localize('theia/workspace/noErasure', 'Note: Nothing will be erased from disk');\n            const list = document.createElement('div');\n            list.classList.add('theia-dialog-node');\n            toRemove.forEach(uri => {\n                const listItem = document.createElement('div');\n                listItem.classList.add('theia-dialog-node-content');\n                const folderIcon = document.createElement('span');\n                folderIcon.classList.add('codicon', 'codicon-root-folder', 'theia-dialog-icon');\n                listItem.appendChild(folderIcon);\n                listItem.title = this.labelProvider.getLongName(uri);\n                const listContent = document.createElement('span');\n                listContent.classList.add('theia-dialog-node-segment');\n                listContent.appendChild(document.createTextNode(this.labelProvider.getName(uri)));\n                listItem.appendChild(listContent);\n                list.appendChild(listItem);\n            });\n            messageContainer.appendChild(list);\n            const dialog = new ConfirmDialog({\n                title: nls.localizeByDefault('Remove Folder from Workspace'),\n                msg: messageContainer\n            });\n            if (await dialog.open()) {\n                await this.workspaceService.removeRoots(toRemove);\n            }\n        }\n    }\n\n    async saveWorkspaceWithPrompt(registry: CommandRegistry): Promise<void> {\n        const saveCommand = registry.getCommand(WorkspaceCommands.SAVE_WORKSPACE_AS.id);\n        if (saveCommand && await new ConfirmDialog({\n            title: nls.localize('theia/workspace/workspaceFolderAddedTitle', 'Folder added to Workspace'),\n            msg: nls.localize('theia/workspace/workspaceFolderAdded',\n                'A workspace with multiple roots was created. Do you want to save your workspace configuration as a file?'),\n            ok: Dialog.YES,\n            cancel: Dialog.NO\n        }).open()) {\n            return registry.executeCommand(saveCommand.id);\n        }\n    }\n\n    protected areMultipleOpenHandlersPresent(openers: OpenHandler[], uri: URI): boolean {\n        let count = 0;\n        for (const opener of openers) {\n            if (opener.canHandle(uri) > 0) {\n                count++;\n            }\n            if (count > 1) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\nexport class WorkspaceRootUriAwareCommandHandler extends UriAwareCommandHandler<URI> {\n\n    constructor(\n        protected readonly workspaceService: WorkspaceService,\n        selectionService: SelectionService,\n        handler: UriCommandHandler<URI>\n    ) {\n        super(selectionService, handler);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public override isEnabled(...args: any[]): boolean {\n        return super.isEnabled(...args) && !!this.workspaceService.tryGetRoots().length;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public override isVisible(...args: any[]): boolean {\n        return super.isVisible(...args) && !!this.workspaceService.tryGetRoots().length;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected override getUri(...args: any[]): URI | undefined {\n        const uri = super.getUri(...args);\n        // Return the `uri` immediately if the resource exists in any of the workspace roots and is of `file` scheme.\n        if (uri && uri.scheme === 'file' && this.workspaceService.getWorkspaceRootUri(uri)) {\n            return uri;\n        }\n        // Return the first root if available.\n        if (!!this.workspaceService.tryGetRoots().length) {\n            return this.workspaceService.tryGetRoots()[0].resource;\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { UriCommandHandler } from '@theia/core/lib/common/uri-command-handler';\nimport { DiffService } from './diff-service';\n\n@injectable()\nexport class WorkspaceCompareHandler implements UriCommandHandler<URI[]> {\n\n    @inject(DiffService) protected readonly diffService: DiffService;\n\n    /**\n     * Determine if the command is visible.\n     *\n     * @param uris URIs of selected resources.\n     * @returns `true` if the command is visible.\n     */\n    isVisible(uris: URI[]): boolean {\n        return uris.length === 2;\n    }\n\n    /**\n     * Determine if the command is enabled.\n     *\n     * @param uris URIs of selected resources.\n     * @returns `true` if the command is enabled.\n     */\n    isEnabled(uris: URI[]): boolean {\n        return uris.length === 2;\n    }\n\n    /**\n     * Execute the command.\n     *\n     * @param uris URIs of selected resources.\n     */\n    async execute(uris: URI[]): Promise<void> {\n        const [left, right] = uris;\n        await this.diffService.openDiffEditor(left, right);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { ConfirmDialog, ApplicationShell, SaveableWidget, NavigatableWidget } from '@theia/core/lib/browser';\nimport { UriCommandHandler } from '@theia/core/lib/common/uri-command-handler';\nimport { WorkspaceService } from './workspace-service';\nimport { WorkspaceUtils } from './workspace-utils';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { FileSystemPreferences } from '@theia/filesystem/lib/browser/filesystem-preferences';\nimport { FileDeleteOptions, FileSystemProviderCapabilities } from '@theia/filesystem/lib/common/files';\nimport { nls } from '@theia/core/lib/common/nls';\n\n@injectable()\nexport class WorkspaceDeleteHandler implements UriCommandHandler<URI[]> {\n\n    @inject(FileService)\n    protected readonly fileService: FileService;\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    @inject(WorkspaceUtils)\n    protected readonly workspaceUtils: WorkspaceUtils;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    @inject(FileSystemPreferences)\n    protected readonly fsPreferences: FileSystemPreferences;\n\n    /**\n     * Determine if the command is visible.\n     *\n     * @param uris URIs of selected resources.\n     * @returns `true` if the command is visible.\n     */\n    isVisible(uris: URI[]): boolean {\n        return !!uris.length && !this.workspaceUtils.containsRootDirectory(uris);\n    }\n\n    /**\n     * Determine if the command is enabled.\n     *\n     * @param uris URIs of selected resources.\n     * @returns `true` if the command is enabled.\n     */\n    isEnabled(uris: URI[]): boolean {\n        return !!uris.length && !this.workspaceUtils.containsRootDirectory(uris);\n    }\n\n    /**\n     * Execute the command.\n     *\n     * @param uris URIs of selected resources.\n     */\n    async execute(uris: URI[]): Promise<void> {\n        const distinctUris = URI.getDistinctParents(uris);\n        const resolved: FileDeleteOptions = {\n            recursive: true,\n            useTrash: this.fsPreferences['files.enableTrash'] && distinctUris[0] && this.fileService.hasCapability(distinctUris[0], FileSystemProviderCapabilities.Trash)\n        };\n        if (await this.confirm(distinctUris, resolved)) {\n            await Promise.all(distinctUris.map(uri => this.delete(uri, resolved)));\n        }\n    }\n\n    /**\n     * Display dialog to confirm deletion.\n     *\n     * @param uris URIs of selected resources.\n     */\n    protected confirm(uris: URI[], options: FileDeleteOptions): Promise<boolean | undefined> {\n        let title = uris.length === 1 ? nls.localizeByDefault('File') : nls.localizeByDefault('Files');\n        if (options.useTrash) {\n            title = nls.localize('theia/workspace/trashTitle', 'Move {0} to Trash', title);\n        } else {\n            title = nls.localizeByDefault('Delete {0}', title);\n        }\n        return new ConfirmDialog({\n            title,\n            msg: this.getConfirmMessage(uris)\n        }).open();\n    }\n\n    /**\n     * Get the dialog confirmation message for deletion.\n     *\n     * @param uris URIs of selected resources.\n     */\n    protected getConfirmMessage(uris: URI[]): string | HTMLElement {\n        const dirty = this.getDirty(uris);\n        if (dirty.length) {\n            if (dirty.length === 1) {\n                return nls.localize('theia/workspace/confirmMessage.dirtySingle', 'Do you really want to delete {0} with unsaved changes?', dirty[0].path.base);\n            }\n            return nls.localize('theia/workspace/confirmMessage.dirtyMultiple', 'Do you really want to delete {0} files with unsaved changes?', dirty.length);\n        }\n        if (uris.length === 1) {\n            return nls.localize('theia/workspace/confirmMessage.uriSingle', 'Do you really want to delete {0}?', uris[0].path.base);\n        }\n        if (uris.length > 10) {\n            return nls.localize('theia/workspace/confirmMessage.uriMultiple', 'Do you really want to delete all the {0} selected files?', uris.length);\n        }\n        const messageContainer = document.createElement('div');\n        messageContainer.textContent = nls.localize('theia/workspace/confirmMessage.delete', 'Do you really want to delete the following files?');\n        const list = document.createElement('ul');\n        list.style.listStyleType = 'none';\n        for (const uri of uris) {\n            const listItem = document.createElement('li');\n            listItem.textContent = uri.path.base;\n            list.appendChild(listItem);\n        }\n        messageContainer.appendChild(list);\n        return messageContainer;\n    }\n\n    /**\n     * Get which URI are presently dirty.\n     *\n     * @param uris URIs of selected resources.\n     * @returns An array of dirty URI.\n     */\n    protected getDirty(uris: URI[]): URI[] {\n        const dirty = new Map<string, URI>();\n        const widgets = NavigatableWidget.getAffected(SaveableWidget.getDirty(this.shell.widgets), uris);\n        for (const [resourceUri] of widgets) {\n            dirty.set(resourceUri.toString(), resourceUri);\n        }\n        return [...dirty.values()];\n    }\n\n    /**\n     * Perform deletion of a given URI.\n     *\n     * @param uri URI of selected resource.\n     * @param options deletion options.\n     */\n    protected async delete(uri: URI, options: FileDeleteOptions): Promise<void> {\n        try {\n            await Promise.all([\n                this.closeWithoutSaving(uri),\n                options.useTrash ? this.moveFileToTrash(uri, options) : this.deleteFilePermanently(uri, options)\n            ]);\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    protected async deleteFilePermanently(uri: URI, options: FileDeleteOptions): Promise<void> {\n        this.fileService.delete(uri, { ...options, useTrash: false });\n    }\n\n    protected async moveFileToTrash(uri: URI, options: FileDeleteOptions): Promise<void> {\n        try {\n            await this.fileService.delete(uri, { ...options, useTrash: true });\n        } catch (error) {\n            console.error('Error deleting with trash:', error);\n            if (await this.confirmDeletePermanently(uri)) {\n                return this.deleteFilePermanently(uri, options);\n            }\n        }\n    }\n\n    /**\n     * Display dialog to confirm the permanent deletion of a file.\n     *\n     * @param uri URI of selected resource.\n     */\n    protected async confirmDeletePermanently(uri: URI): Promise<boolean> {\n        const title = nls.localize('theia/workspace/confirmDeletePermanently.title', 'Error deleting file');\n\n        const msg = document.createElement('div');\n\n        const question = document.createElement('p');\n        question.textContent = nls.localize('theia/workspace/confirmDeletePermanently.description',\n            'Failed to delete \"{0}\" using the Trash. Do you want to permanently delete instead?',\n            uri.path.base);\n        msg.append(question);\n\n        const info = document.createElement('p');\n        info.textContent = nls.localize('theia/workspace/confirmDeletePermanently.solution', 'You can disable the use of Trash in the preferences.');\n        msg.append(info);\n\n        const response = await new ConfirmDialog({ title, msg }).open();\n        return response || false;\n    }\n\n    /**\n     * Close widget without saving changes.\n     *\n     * @param uri URI of a selected resource.\n     */\n    protected async closeWithoutSaving(uri: URI): Promise<void> {\n        const toClose = [...NavigatableWidget.getAffected(this.shell.widgets, uri)].map(([, widget]) => widget);\n        await this.shell.closeMany(toClose, { save: false });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport URI from '@theia/core/lib/common/uri';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { WorkspaceUtils } from './workspace-utils';\nimport { WorkspaceService } from './workspace-service';\nimport { UriCommandHandler } from '@theia/core/lib/common/uri-command-handler';\nimport { FileSystemUtils } from '@theia/filesystem/lib/common/filesystem-utils';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\n\n@injectable()\nexport class WorkspaceDuplicateHandler implements UriCommandHandler<URI[]> {\n\n    @inject(FileService)\n    protected readonly fileService: FileService;\n\n    @inject(WorkspaceUtils)\n    protected readonly workspaceUtils: WorkspaceUtils;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    /**\n     * Determine if the command is visible.\n     *\n     * @param uris URIs of selected resources.\n     * @returns `true` if the command is visible.\n     */\n    isVisible(uris: URI[]): boolean {\n        return !!uris.length && !this.workspaceUtils.containsRootDirectory(uris);\n    }\n\n    /**\n     * Determine if the command is enabled.\n     *\n     * @param uris URIs of selected resources.\n     * @returns `true` if the command is enabled.\n     */\n    isEnabled(uris: URI[]): boolean {\n        return !!uris.length && !this.workspaceUtils.containsRootDirectory(uris);\n    }\n\n    /**\n     * Execute the command.\n     *\n     * @param uris URIs of selected resources.\n     */\n    async execute(uris: URI[]): Promise<void> {\n        await Promise.all(uris.map(async uri => {\n            try {\n                const parent = await this.fileService.resolve(uri.parent);\n                const targetFileStat = await this.fileService.resolve(uri);\n                const target = FileSystemUtils.generateUniqueResourceURI(parent, uri, targetFileStat.isDirectory, 'copy');\n                await this.fileService.copy(uri, target);\n            } catch (e) {\n                console.error(e);\n            }\n        }));\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { CommandContribution, CommandRegistry, MenuContribution, MenuModelRegistry, MessageService, isWindows, MaybeArray } from '@theia/core/lib/common';\nimport { isOSX, environment } from '@theia/core';\nimport {\n    open, OpenerService, CommonMenus, KeybindingRegistry, KeybindingContribution,\n    FrontendApplicationContribution, SHELL_TABBAR_CONTEXT_COPY, OnWillStopAction, Navigatable, SaveableSource, Widget\n} from '@theia/core/lib/browser';\nimport { FileDialogService, OpenFileDialogProps, FileDialogTreeFilters } from '@theia/filesystem/lib/browser';\nimport { ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nimport { WorkspaceService } from './workspace-service';\nimport { WorkspaceFileService, THEIA_EXT, VSCODE_EXT } from '../common';\nimport { WorkspaceCommands } from './workspace-commands';\nimport { QuickOpenWorkspace } from './quick-open-workspace';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { EncodingRegistry } from '@theia/core/lib/browser/encoding-registry';\nimport { UTF8 } from '@theia/core/lib/common/encodings';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { PreferenceConfigurations } from '@theia/core/lib/browser/preferences/preference-configurations';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { BinaryBuffer } from '@theia/core/lib/common/buffer';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\nimport { UntitledWorkspaceExitDialog } from './untitled-workspace-exit-dialog';\nimport { FilesystemSaveResourceService } from '@theia/filesystem/lib/browser/filesystem-save-resource-service';\nimport { StopReason } from '@theia/core/lib/common/frontend-application-state';\n\nexport enum WorkspaceStates {\n    /**\n     * The state is `empty` when no workspace is opened.\n     */\n    empty = 'empty',\n    /**\n     * The state is `workspace` when a workspace is opened.\n     */\n    workspace = 'workspace',\n    /**\n     * The state is `folder` when a folder is opened. (1 folder)\n     */\n    folder = 'folder',\n};\nexport type WorkspaceState = keyof typeof WorkspaceStates;\nexport type WorkbenchState = keyof typeof WorkspaceStates;\n\n/** Create the workspace section after open {@link CommonMenus.FILE_OPEN}. */\nexport const FILE_WORKSPACE = [...CommonMenus.FILE, '2_workspace'];\n\n@injectable()\nexport class WorkspaceFrontendContribution implements CommandContribution, KeybindingContribution, MenuContribution, FrontendApplicationContribution {\n\n    @inject(MessageService) protected readonly messageService: MessageService;\n    @inject(FileService) protected readonly fileService: FileService;\n    @inject(OpenerService) protected readonly openerService: OpenerService;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(QuickOpenWorkspace) protected readonly quickOpenWorkspace: QuickOpenWorkspace;\n    @inject(FileDialogService) protected readonly fileDialogService: FileDialogService;\n    @inject(ContextKeyService) protected readonly contextKeyService: ContextKeyService;\n    @inject(EncodingRegistry) protected readonly encodingRegistry: EncodingRegistry;\n    @inject(PreferenceConfigurations) protected readonly preferenceConfigurations: PreferenceConfigurations;\n    @inject(FilesystemSaveResourceService) protected readonly saveService: FilesystemSaveResourceService;\n    @inject(WorkspaceFileService) protected readonly workspaceFileService: WorkspaceFileService;\n\n    configure(): void {\n        const workspaceExtensions = this.workspaceFileService.getWorkspaceFileExtensions();\n        for (const extension of workspaceExtensions) {\n            this.encodingRegistry.registerOverride({ encoding: UTF8, extension });\n        }\n\n        this.updateEncodingOverrides();\n\n        const workspaceFolderCountKey = this.contextKeyService.createKey<number>('workspaceFolderCount', 0);\n        const updateWorkspaceFolderCountKey = () => workspaceFolderCountKey.set(this.workspaceService.tryGetRoots().length);\n        updateWorkspaceFolderCountKey();\n\n        const workspaceStateKey = this.contextKeyService.createKey<WorkspaceState>('workspaceState', 'empty');\n        const updateWorkspaceStateKey = () => workspaceStateKey.set(this.updateWorkspaceStateKey());\n        updateWorkspaceStateKey();\n\n        const workbenchStateKey = this.contextKeyService.createKey<WorkbenchState>('workbenchState', 'empty');\n        const updateWorkbenchStateKey = () => workbenchStateKey.set(this.updateWorkbenchStateKey());\n        updateWorkbenchStateKey();\n\n        this.updateStyles();\n        this.workspaceService.onWorkspaceChanged(() => {\n            this.updateEncodingOverrides();\n            updateWorkspaceFolderCountKey();\n            updateWorkspaceStateKey();\n            updateWorkbenchStateKey();\n            this.updateStyles();\n        });\n    }\n\n    protected readonly toDisposeOnUpdateEncodingOverrides = new DisposableCollection();\n    protected updateEncodingOverrides(): void {\n        this.toDisposeOnUpdateEncodingOverrides.dispose();\n        for (const root of this.workspaceService.tryGetRoots()) {\n            for (const configPath of this.preferenceConfigurations.getPaths()) {\n                const parent = root.resource.resolve(configPath);\n                this.toDisposeOnUpdateEncodingOverrides.push(this.encodingRegistry.registerOverride({ encoding: UTF8, parent }));\n            }\n        }\n    }\n\n    protected updateStyles(): void {\n        document.body.classList.remove('theia-no-open-workspace');\n        // Display the 'no workspace opened' theme color when no folders are opened (single-root).\n        if (!this.workspaceService.isMultiRootWorkspaceOpened &&\n            !this.workspaceService.tryGetRoots().length) {\n            document.body.classList.add('theia-no-open-workspace');\n        }\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        // Not visible/enabled on Windows/Linux in electron.\n        commands.registerCommand(WorkspaceCommands.OPEN, {\n            isEnabled: () => isOSX || !this.isElectron(),\n            isVisible: () => isOSX || !this.isElectron(),\n            execute: () => this.doOpen()\n        });\n        // Visible/enabled only on Windows/Linux in electron.\n        commands.registerCommand(WorkspaceCommands.OPEN_FILE, {\n            isEnabled: () => true,\n            execute: () => this.doOpenFile()\n        });\n        // Visible/enabled only on Windows/Linux in electron.\n        commands.registerCommand(WorkspaceCommands.OPEN_FOLDER, {\n            isEnabled: () => true,\n            execute: () => this.doOpenFolder()\n        });\n        commands.registerCommand(WorkspaceCommands.OPEN_WORKSPACE, {\n            isEnabled: () => true,\n            execute: () => this.doOpenWorkspace()\n        });\n        commands.registerCommand(WorkspaceCommands.CLOSE, {\n            isEnabled: () => this.workspaceService.opened,\n            execute: () => this.closeWorkspace()\n        });\n        commands.registerCommand(WorkspaceCommands.OPEN_RECENT_WORKSPACE, {\n            execute: () => this.quickOpenWorkspace.select()\n        });\n        commands.registerCommand(WorkspaceCommands.SAVE_WORKSPACE_AS, {\n            isVisible: () => this.workspaceService.opened,\n            isEnabled: () => this.workspaceService.opened,\n            execute: () => this.saveWorkspaceAs()\n        });\n        commands.registerCommand(WorkspaceCommands.OPEN_WORKSPACE_FILE, {\n            isEnabled: () => this.workspaceService.saved,\n            execute: () => {\n                if (this.workspaceService.saved && this.workspaceService.workspace) {\n                    open(this.openerService, this.workspaceService.workspace.resource);\n                }\n            }\n\n        });\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        if (isOSX || !this.isElectron()) {\n            menus.registerMenuAction(CommonMenus.FILE_OPEN, {\n                commandId: WorkspaceCommands.OPEN.id,\n                order: 'a00'\n            });\n        }\n        if (!isOSX && this.isElectron()) {\n            menus.registerMenuAction(CommonMenus.FILE_OPEN, {\n                commandId: WorkspaceCommands.OPEN_FILE.id,\n                label: `${WorkspaceCommands.OPEN_FILE.dialogLabel}...`,\n                order: 'a01'\n            });\n            menus.registerMenuAction(CommonMenus.FILE_OPEN, {\n                commandId: WorkspaceCommands.OPEN_FOLDER.id,\n                label: `${WorkspaceCommands.OPEN_FOLDER.dialogLabel}...`,\n                order: 'a02'\n            });\n        }\n        menus.registerMenuAction(CommonMenus.FILE_OPEN, {\n            commandId: WorkspaceCommands.OPEN_WORKSPACE.id,\n            order: 'a10'\n        });\n        menus.registerMenuAction(CommonMenus.FILE_OPEN, {\n            commandId: WorkspaceCommands.OPEN_RECENT_WORKSPACE.id,\n            order: 'a20'\n        });\n\n        menus.registerMenuAction(FILE_WORKSPACE, {\n            commandId: WorkspaceCommands.ADD_FOLDER.id,\n            order: 'a10'\n        });\n        menus.registerMenuAction(FILE_WORKSPACE, {\n            commandId: WorkspaceCommands.SAVE_WORKSPACE_AS.id,\n            order: 'a20'\n        });\n\n        menus.registerMenuAction(CommonMenus.FILE_CLOSE, {\n            commandId: WorkspaceCommands.CLOSE.id\n        });\n\n        menus.registerMenuAction(CommonMenus.FILE_SAVE, {\n            commandId: WorkspaceCommands.SAVE_AS.id,\n        });\n\n        menus.registerMenuAction(SHELL_TABBAR_CONTEXT_COPY, {\n            commandId: WorkspaceCommands.COPY_RELATIVE_FILE_PATH.id,\n            label: WorkspaceCommands.COPY_RELATIVE_FILE_PATH.label,\n        });\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        keybindings.registerKeybinding({\n            command: isOSX || !this.isElectron() ? WorkspaceCommands.OPEN.id : WorkspaceCommands.OPEN_FILE.id,\n            keybinding: this.isElectron() ? 'ctrlcmd+o' : 'ctrlcmd+alt+o',\n        });\n        if (!isOSX && this.isElectron()) {\n            keybindings.registerKeybinding({\n                command: WorkspaceCommands.OPEN_FOLDER.id,\n                keybinding: 'ctrl+k ctrl+o',\n            });\n        }\n        keybindings.registerKeybinding({\n            command: WorkspaceCommands.OPEN_WORKSPACE.id,\n            keybinding: 'ctrlcmd+alt+w',\n        });\n        keybindings.registerKeybinding({\n            command: WorkspaceCommands.OPEN_RECENT_WORKSPACE.id,\n            keybinding: 'ctrlcmd+alt+r',\n        });\n        keybindings.registerKeybinding({\n            command: WorkspaceCommands.SAVE_AS.id,\n            keybinding: 'ctrlcmd+shift+s',\n        });\n        keybindings.registerKeybinding({\n            command: WorkspaceCommands.COPY_RELATIVE_FILE_PATH.id,\n            keybinding: isWindows ? 'ctrl+k ctrl+shift+c' : 'ctrlcmd+shift+alt+c',\n            when: '!editorFocus'\n        });\n    }\n\n    /**\n     * This is the generic `Open` method. Opens files and directories too. Resolves to the opened URI.\n     * Except when you are on either Windows or Linux `AND` running in electron. If so, it opens a file.\n     */\n    protected async doOpen(): Promise<URI[] | undefined> {\n        if (!isOSX && this.isElectron()) {\n            return this.doOpenFile();\n        }\n        const [rootStat] = await this.workspaceService.roots;\n        let selectedUris = await this.fileDialogService.showOpenDialog({\n            title: WorkspaceCommands.OPEN.dialogLabel,\n            canSelectFolders: true,\n            canSelectFiles: true,\n            canSelectMany: true\n        }, rootStat);\n        if (selectedUris) {\n            if (!Array.isArray(selectedUris)) {\n                selectedUris = [selectedUris];\n            }\n            const folders: URI[] = [];\n            //  Only open files then open all folders in a new workspace, as done with Electron see doOpenFolder.\n            for (const uri of selectedUris) {\n                const destination = await this.fileService.resolve(uri);\n                if (destination.isDirectory) {\n                    if (this.getCurrentWorkspaceUri()?.toString() !== uri.toString()) {\n                        folders.push(uri);\n                    }\n                } else {\n                    await open(this.openerService, uri);\n                }\n            }\n            if (folders.length > 0) {\n                const openableURI = await this.getOpenableWorkspaceUri(folders);\n                if (openableURI && (!this.workspaceService.workspace || !openableURI.isEqual(this.workspaceService.workspace.resource))) {\n                    this.workspaceService.open(openableURI);\n                }\n            }\n\n            return selectedUris;\n        }\n        return undefined;\n    }\n\n    /**\n     * Opens a set of files after prompting the `Open File` dialog. Resolves to `undefined`, if\n     *  - the workspace root is not set,\n     *  - the file to open does not exist, or\n     *  - it was not a file, but a directory.\n     *\n     * Otherwise, resolves to the set of URIs of the files.\n     */\n    protected async doOpenFile(): Promise<URI[] | undefined> {\n        const props: OpenFileDialogProps = {\n            title: WorkspaceCommands.OPEN_FILE.dialogLabel,\n            canSelectFolders: false,\n            canSelectFiles: true,\n            canSelectMany: true\n        };\n        const [rootStat] = await this.workspaceService.roots;\n        let selectedFilesUris: MaybeArray<URI> | undefined = await this.fileDialogService.showOpenDialog(props, rootStat);\n        if (selectedFilesUris) {\n            if (!Array.isArray(selectedFilesUris)) {\n                selectedFilesUris = [selectedFilesUris];\n            }\n\n            const result = [];\n            for (const uri of selectedFilesUris) {\n                const destination = await this.fileService.resolve(uri);\n                if (destination.isFile) {\n                    await open(this.openerService, uri);\n                    result.push(uri);\n                }\n            }\n            return result;\n        }\n        return undefined;\n    }\n\n    /**\n     * Opens one or more folders after prompting the `Open Folder` dialog. Resolves to `undefined`, if\n     *  - the user's selection is empty or contains only files.\n     *  - the new workspace is equal to the old workspace.\n     *\n     * Otherwise, resolves to the URI of the new workspace:\n     *  - a single folder if a single folder was selected.\n     *  - a new, untitled workspace file if multiple folders were selected.\n     */\n    protected async doOpenFolder(): Promise<URI | undefined> {\n        const props: OpenFileDialogProps = {\n            title: WorkspaceCommands.OPEN_FOLDER.dialogLabel,\n            canSelectFolders: true,\n            canSelectFiles: false,\n            canSelectMany: true,\n        };\n        const [rootStat] = await this.workspaceService.roots;\n        const targetFolders = await this.fileDialogService.showOpenDialog(props, rootStat);\n        if (targetFolders) {\n            const openableUri = await this.getOpenableWorkspaceUri(targetFolders);\n            if (openableUri) {\n                if (!this.workspaceService.workspace || !openableUri.isEqual(this.workspaceService.workspace.resource)) {\n                    this.workspaceService.open(openableUri);\n                    return openableUri;\n                }\n            };\n        }\n        return undefined;\n    }\n\n    protected async getOpenableWorkspaceUri(uris: MaybeArray<URI>): Promise<URI | undefined> {\n        if (Array.isArray(uris)) {\n            if (uris.length < 2) {\n                return uris[0];\n            } else {\n                const foldersToOpen = (await Promise.all(uris.map(uri => this.fileService.resolve(uri))))\n                    .filter(fileStat => !!fileStat?.isDirectory);\n                if (foldersToOpen.length === 1) {\n                    return foldersToOpen[0].resource;\n                } else {\n                    return this.createMultiRootWorkspace(foldersToOpen);\n                }\n            }\n        } else {\n            return uris;\n        }\n    }\n\n    protected async createMultiRootWorkspace(roots: FileStat[]): Promise<URI> {\n        const untitledWorkspace = await this.workspaceService.getUntitledWorkspace();\n        const folders = Array.from(new Set(roots.map(stat => stat.resource.path.toString())), path => ({ path }));\n        const workspaceStat = await this.fileService.createFile(\n            untitledWorkspace,\n            BinaryBuffer.fromString(JSON.stringify({ folders }, null, 4)), // eslint-disable-line no-null/no-null\n            { overwrite: true }\n        );\n        return workspaceStat.resource;\n    }\n\n    /**\n     * Opens a workspace after raising the `Open Workspace` dialog. Resolves to the URI of the recently opened workspace,\n     * if it was successful. Otherwise, resolves to `undefined`.\n     */\n    protected async doOpenWorkspace(): Promise<URI | undefined> {\n        const props = {\n            title: WorkspaceCommands.OPEN_WORKSPACE.dialogLabel,\n            canSelectFiles: true,\n            canSelectFolders: false,\n            filters: this.getWorkspaceDialogFileFilters()\n        };\n        const [rootStat] = await this.workspaceService.roots;\n        const workspaceFileUri = await this.fileDialogService.showOpenDialog(props, rootStat);\n        if (workspaceFileUri &&\n            this.getCurrentWorkspaceUri()?.toString() !== workspaceFileUri.toString()) {\n            if (await this.fileService.exists(workspaceFileUri)) {\n                this.workspaceService.open(workspaceFileUri);\n                return workspaceFileUri;\n            }\n        }\n        return undefined;\n    }\n\n    protected async closeWorkspace(): Promise<void> {\n        await this.workspaceService.close();\n    }\n\n    /**\n     * @returns whether the file was successfully saved.\n     */\n    protected async saveWorkspaceAs(): Promise<boolean> {\n        let exist: boolean = false;\n        let overwrite: boolean = false;\n        let selected: URI | undefined;\n        do {\n            selected = await this.fileDialogService.showSaveDialog({\n                title: WorkspaceCommands.SAVE_WORKSPACE_AS.label!,\n                filters: this.getWorkspaceDialogFileFilters()\n            });\n            if (selected) {\n                const displayName = selected.displayName;\n                const extensions = this.workspaceFileService.getWorkspaceFileExtensions(true);\n                if (!extensions.some(ext => displayName.endsWith(ext))) {\n                    const defaultExtension = extensions[this.workspaceFileService.defaultFileTypeIndex];\n                    selected = selected.parent.resolve(`${displayName}${defaultExtension}`);\n                }\n                exist = await this.fileService.exists(selected);\n                if (exist) {\n                    overwrite = await this.saveService.confirmOverwrite(selected);\n                }\n            }\n        } while (selected && exist && !overwrite);\n\n        if (selected) {\n            try {\n                await this.workspaceService.save(selected);\n                return true;\n            } catch {\n                this.messageService.error(nls.localizeByDefault(\"Unable to save workspace '{0}'\", selected.path.fsPath()));\n            }\n        }\n        return false;\n    }\n\n    canBeSavedAs(widget: Widget | undefined): widget is Widget & SaveableSource & Navigatable {\n        return this.saveService.canSaveAs(widget);\n    }\n\n    async saveAs(widget: Widget & SaveableSource & Navigatable): Promise<void> {\n        return this.saveService.saveAs(widget);\n    }\n\n    protected updateWorkspaceStateKey(): WorkspaceState {\n        return this.doUpdateState();\n    }\n\n    protected updateWorkbenchStateKey(): WorkbenchState {\n        return this.doUpdateState();\n    }\n\n    protected doUpdateState(): WorkspaceState | WorkbenchState {\n        if (this.workspaceService.opened) {\n            return this.workspaceService.isMultiRootWorkspaceOpened ? 'workspace' : 'folder';\n        }\n        return 'empty';\n    }\n\n    protected getWorkspaceDialogFileFilters(): FileDialogTreeFilters {\n        const filters: FileDialogTreeFilters = {};\n        for (const fileType of this.workspaceFileService.getWorkspaceFileTypes()) {\n            filters[`${nls.localizeByDefault('{0} workspace', fileType.name)} (*.${fileType.extension})`] = [fileType.extension];\n        }\n        return filters;\n    }\n\n    private isElectron(): boolean {\n        return environment.electron.is();\n    }\n\n    /**\n     * Get the current workspace URI.\n     *\n     * @returns the current workspace URI.\n     */\n    private getCurrentWorkspaceUri(): URI | undefined {\n        return this.workspaceService.workspace?.resource;\n    }\n\n    onWillStop(): OnWillStopAction<boolean> | undefined {\n        const { workspace } = this.workspaceService;\n        if (workspace && this.workspaceService.isUntitledWorkspace(workspace.resource)) {\n            return {\n                prepare: async reason => reason === StopReason.Reload && this.workspaceService.isSafeToReload(workspace.resource),\n                action: async alreadyConfirmedSafe => {\n                    if (alreadyConfirmedSafe) {\n                        return true;\n                    }\n                    const shouldSaveFile = await new UntitledWorkspaceExitDialog({\n                        title: nls.localizeByDefault('Do you want to save your workspace configuration as a file?')\n                    }).open();\n                    if (shouldSaveFile === \"Don't Save\") {\n                        return true;\n                    } else if (shouldSaveFile === 'Save') {\n                        return this.saveWorkspaceAs();\n                    }\n                    return false; // If cancel, prevent exit.\n\n                },\n                reason: 'Untitled workspace.',\n                // Since deleting the workspace would hobble any future functionality, run this late.\n                priority: 100,\n            };\n        }\n    }\n}\n\nexport namespace WorkspaceFrontendContribution {\n\n    /**\n     * File filter for all Theia and VS Code workspace file types.\n     *\n     * @deprecated Since 1.39.0 Use `WorkspaceFrontendContribution#getWorkspaceDialogFileFilters` instead.\n     */\n    export const DEFAULT_FILE_FILTER: FileDialogTreeFilters = {\n        'Theia Workspace (*.theia-workspace)': [THEIA_EXT],\n        'VS Code Workspace (*.code-workspace)': [VSCODE_EXT]\n    };\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule, interfaces } from '@theia/core/shared/inversify';\nimport { CommandContribution, MenuContribution } from '@theia/core/lib/common';\nimport { WebSocketConnectionProvider, FrontendApplicationContribution, KeybindingContribution } from '@theia/core/lib/browser';\nimport {\n    OpenFileDialogFactory,\n    SaveFileDialogFactory,\n    OpenFileDialogProps,\n    SaveFileDialogProps,\n    createOpenFileDialogContainer,\n    createSaveFileDialogContainer,\n    OpenFileDialog,\n    SaveFileDialog,\n} from '@theia/filesystem/lib/browser';\nimport { StorageService } from '@theia/core/lib/browser/storage-service';\nimport { LabelProviderContribution } from '@theia/core/lib/browser/label-provider';\nimport { VariableContribution } from '@theia/variable-resolver/lib/browser';\nimport { WorkspaceServer, workspacePath, UntitledWorkspaceService, WorkspaceFileService } from '../common';\nimport { WorkspaceFrontendContribution } from './workspace-frontend-contribution';\nimport { WorkspaceService } from './workspace-service';\nimport { WorkspaceCommandContribution, FileMenuContribution, EditMenuContribution } from './workspace-commands';\nimport { WorkspaceVariableContribution } from './workspace-variable-contribution';\nimport { WorkspaceStorageService } from './workspace-storage-service';\nimport { WorkspaceUriLabelProviderContribution } from './workspace-uri-contribution';\nimport { bindWorkspacePreferences } from './workspace-preferences';\nimport { QuickOpenWorkspace } from './quick-open-workspace';\nimport { WorkspaceDeleteHandler } from './workspace-delete-handler';\nimport { WorkspaceDuplicateHandler } from './workspace-duplicate-handler';\nimport { WorkspaceUtils } from './workspace-utils';\nimport { WorkspaceCompareHandler } from './workspace-compare-handler';\nimport { DiffService } from './diff-service';\nimport { JsonSchemaContribution } from '@theia/core/lib/browser/json-schema-store';\nimport { WorkspaceSchemaUpdater } from './workspace-schema-updater';\nimport { WorkspaceBreadcrumbsContribution } from './workspace-breadcrumbs-contribution';\nimport { FilepathBreadcrumbsContribution } from '@theia/filesystem/lib/browser/breadcrumbs/filepath-breadcrumbs-contribution';\nimport { WorkspaceTrustService } from './workspace-trust-service';\nimport { bindWorkspaceTrustPreferences } from './workspace-trust-preferences';\nimport { UserWorkingDirectoryProvider } from '@theia/core/lib/browser/user-working-directory-provider';\nimport { WorkspaceUserWorkingDirectoryProvider } from './workspace-user-working-directory-provider';\nimport { WindowTitleUpdater } from '@theia/core/lib/browser/window/window-title-updater';\nimport { WorkspaceWindowTitleUpdater } from './workspace-window-title-updater';\nimport { CanonicalUriService } from './canonical-uri-service';\n\nexport default new ContainerModule((bind: interfaces.Bind, unbind: interfaces.Unbind, isBound: interfaces.IsBound, rebind: interfaces.Rebind) => {\n    bindWorkspacePreferences(bind);\n    bindWorkspaceTrustPreferences(bind);\n\n    bind(WorkspaceService).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).toService(WorkspaceService);\n    bind(CanonicalUriService).toSelf().inSingletonScope();\n    bind(WorkspaceServer).toDynamicValue(ctx => {\n        const provider = ctx.container.get(WebSocketConnectionProvider);\n        return provider.createProxy<WorkspaceServer>(workspacePath);\n    }).inSingletonScope();\n\n    bind(WorkspaceFrontendContribution).toSelf().inSingletonScope();\n    for (const identifier of [FrontendApplicationContribution, CommandContribution, KeybindingContribution, MenuContribution]) {\n        bind(identifier).toService(WorkspaceFrontendContribution);\n    }\n\n    bind(OpenFileDialogFactory).toFactory(ctx =>\n        (props: OpenFileDialogProps) =>\n            createOpenFileDialogContainer(ctx.container, props).get(OpenFileDialog)\n    );\n\n    bind(SaveFileDialogFactory).toFactory(ctx =>\n        (props: SaveFileDialogProps) =>\n            createSaveFileDialogContainer(ctx.container, props).get(SaveFileDialog)\n    );\n\n    bind(WorkspaceCommandContribution).toSelf().inSingletonScope();\n    bind(CommandContribution).toService(WorkspaceCommandContribution);\n    bind(FileMenuContribution).toSelf().inSingletonScope();\n    bind(MenuContribution).toService(FileMenuContribution);\n    bind(EditMenuContribution).toSelf().inSingletonScope();\n    bind(MenuContribution).toService(EditMenuContribution);\n    bind(WorkspaceDeleteHandler).toSelf().inSingletonScope();\n    bind(WorkspaceDuplicateHandler).toSelf().inSingletonScope();\n    bind(WorkspaceCompareHandler).toSelf().inSingletonScope();\n    bind(DiffService).toSelf().inSingletonScope();\n\n    bind(WorkspaceStorageService).toSelf().inSingletonScope();\n    rebind(StorageService).toService(WorkspaceStorageService);\n\n    bind(LabelProviderContribution).to(WorkspaceUriLabelProviderContribution).inSingletonScope();\n    bind(WorkspaceVariableContribution).toSelf().inSingletonScope();\n    bind(VariableContribution).toService(WorkspaceVariableContribution);\n\n    bind(QuickOpenWorkspace).toSelf().inSingletonScope();\n\n    bind(WorkspaceUtils).toSelf().inSingletonScope();\n    bind(WorkspaceFileService).toSelf().inSingletonScope();\n    bind(UntitledWorkspaceService).toSelf().inSingletonScope();\n\n    bind(WorkspaceSchemaUpdater).toSelf().inSingletonScope();\n    bind(JsonSchemaContribution).toService(WorkspaceSchemaUpdater);\n    rebind(FilepathBreadcrumbsContribution).to(WorkspaceBreadcrumbsContribution).inSingletonScope();\n\n    bind(WorkspaceTrustService).toSelf().inSingletonScope();\n    rebind(UserWorkingDirectoryProvider).to(WorkspaceUserWorkingDirectoryProvider).inSingletonScope();\n\n    rebind(WindowTitleUpdater).to(WorkspaceWindowTitleUpdater).inSingletonScope();\n});\n","// *****************************************************************************\n// Copyright (C) 2019 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { SingleTextInputDialog, SingleTextInputDialogProps, LabelProvider, codiconArray } from '@theia/core/lib/browser';\n\n@injectable()\nexport class WorkspaceInputDialogProps extends SingleTextInputDialogProps {\n    /**\n     * The parent `URI` for the selection present in the explorer.\n     * Used to display the path in which the file/folder is created at.\n     */\n    parentUri: URI;\n}\n\nexport class WorkspaceInputDialog extends SingleTextInputDialog {\n\n    constructor(\n        @inject(WorkspaceInputDialogProps) protected override readonly props: WorkspaceInputDialogProps,\n        @inject(LabelProvider) protected readonly labelProvider: LabelProvider,\n    ) {\n        super(props);\n        this.appendParentPath();\n    }\n\n    /**\n     * Append the human-readable parent `path` to the dialog.\n     * When possible, display the relative path, else display the full path (ex: workspace root).\n     */\n    protected appendParentPath(): void {\n        // Compute the label for the parent URI.\n        const label = this.labelProvider.getLongName(this.props.parentUri);\n        const element = document.createElement('div');\n        // Create the `folder` icon.\n        const icon = document.createElement('i');\n        icon.classList.add(...codiconArray('folder'));\n        icon.style.marginRight = '0.5em';\n        icon.style.verticalAlign = 'middle';\n        element.style.verticalAlign = 'middle';\n        element.style.paddingBottom = '1em';\n        element.title = this.props.parentUri.path.fsPath();\n        element.appendChild(icon);\n        element.appendChild(document.createTextNode(label));\n        // Add the path and icon div before the `inputField`.\n        this.contentNode.insertBefore(element, this.inputField);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { LocalStorageService, StorageService } from '@theia/core/lib/browser/storage-service';\nimport { WorkspaceService } from './workspace-service';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\n\n/*\n * Prefixes any stored data with the current workspace path.\n */\n@injectable()\nexport class WorkspaceStorageService implements StorageService {\n\n    private prefix: string;\n    private initialized: Promise<void>;\n\n    @inject(LocalStorageService) protected storageService: StorageService;\n    @inject(WorkspaceService) protected workspaceService: WorkspaceService;\n\n    @postConstruct()\n    protected init(): void {\n        this.initialized = this.workspaceService.roots.then(() => {\n            this.updatePrefix();\n            this.workspaceService.onWorkspaceLocationChanged(() => this.updatePrefix());\n        });\n    }\n\n    async setData<T>(key: string, data: T): Promise<void> {\n        if (!this.prefix) {\n            await this.initialized;\n        }\n        const fullKey = this.prefixWorkspaceURI(key);\n        return this.storageService.setData(fullKey, data);\n    }\n\n    async getData<T>(key: string, defaultValue?: T): Promise<T | undefined> {\n        await this.initialized;\n        const fullKey = this.prefixWorkspaceURI(key);\n        return this.storageService.getData(fullKey, defaultValue);\n    }\n\n    protected prefixWorkspaceURI(originalKey: string): string {\n        return `${this.prefix}:${originalKey}`;\n    }\n\n    protected getPrefix(workspaceStat: FileStat | undefined): string {\n        return workspaceStat ? workspaceStat.resource.toString() : '_global_';\n    }\n\n    private updatePrefix(): void {\n        this.prefix = this.getPrefix(this.workspaceService.workspace);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport {\n    createPreferenceProxy, PreferenceContribution, PreferenceProxy, PreferenceSchema, PreferenceService\n} from '@theia/core/lib/browser/preferences';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { interfaces } from '@theia/core/shared/inversify';\n\nexport const WORKSPACE_TRUST_ENABLED = 'security.workspace.trust.enabled';\nexport const WORKSPACE_TRUST_STARTUP_PROMPT = 'security.workspace.trust.startupPrompt';\nexport const WORKSPACE_TRUST_EMPTY_WINDOW = 'security.workspace.trust.emptyWindow';\n\nexport enum WorkspaceTrustPrompt {\n    ALWAYS = 'always',\n    ONCE = 'once',\n    NEVER = 'never'\n}\n\nexport const workspaceTrustPreferenceSchema: PreferenceSchema = {\n    type: 'object',\n    properties: {\n        [WORKSPACE_TRUST_ENABLED]: {\n            description: nls.localize('theia/workspace/trustEnabled', 'Controls whether or not workspace trust is enabled. If disabled, all workspaces are trusted.'),\n            type: 'boolean',\n            defaultValue: true\n        },\n        [WORKSPACE_TRUST_STARTUP_PROMPT]: {\n            description: nls.localizeByDefault('Controls when the startup prompt to trust a workspace is shown.'),\n            enum: Object.values(WorkspaceTrustPrompt),\n            defaultValue: WorkspaceTrustPrompt.ALWAYS\n        },\n        [WORKSPACE_TRUST_EMPTY_WINDOW]: {\n            description: nls.localize('theia/workspace/trustEmptyWindow', 'Controls whether or not the empty workspace is trusted by default.'),\n            type: 'boolean',\n            defaultValue: true\n        }\n    }\n};\n\nexport interface WorkspaceTrustConfiguration {\n    [WORKSPACE_TRUST_ENABLED]: boolean,\n    [WORKSPACE_TRUST_STARTUP_PROMPT]: WorkspaceTrustPrompt;\n    [WORKSPACE_TRUST_EMPTY_WINDOW]: boolean;\n}\n\nexport const WorkspaceTrustPreferenceContribution = Symbol('WorkspaceTrustPreferenceContribution');\nexport const WorkspaceTrustPreferences = Symbol('WorkspaceTrustPreferences');\nexport type WorkspaceTrustPreferences = PreferenceProxy<WorkspaceTrustConfiguration>;\n\nexport function createWorkspaceTrustPreferences(preferences: PreferenceService, schema: PreferenceSchema = workspaceTrustPreferenceSchema): WorkspaceTrustPreferences {\n    return createPreferenceProxy(preferences, schema);\n}\n\nexport function bindWorkspaceTrustPreferences(bind: interfaces.Bind): void {\n    bind(WorkspaceTrustPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        const contribution = ctx.container.get<PreferenceContribution>(WorkspaceTrustPreferenceContribution);\n        return createWorkspaceTrustPreferences(preferences, contribution.schema);\n    }).inSingletonScope();\n    bind(WorkspaceTrustPreferenceContribution).toConstantValue({ schema: workspaceTrustPreferenceSchema });\n    bind(PreferenceContribution).toService(WorkspaceTrustPreferenceContribution);\n}\n","// *****************************************************************************\n// Copyright (C) 2021 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ConfirmDialog, Dialog, PreferenceChange, StorageService } from '@theia/core/lib/browser';\nimport { PreferenceService } from '@theia/core/lib/browser/preferences/preference-service';\nimport { MessageService } from '@theia/core/lib/common/message-service';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { WindowService } from '@theia/core/lib/browser/window/window-service';\nimport {\n    WorkspaceTrustPreferences, WORKSPACE_TRUST_EMPTY_WINDOW, WORKSPACE_TRUST_ENABLED, WORKSPACE_TRUST_STARTUP_PROMPT, WorkspaceTrustPrompt\n} from './workspace-trust-preferences';\nimport { FrontendApplicationConfigProvider } from '@theia/core/lib/browser/frontend-application-config-provider';\nimport { WorkspaceService } from './workspace-service';\n\nconst STORAGE_TRUSTED = 'trusted';\n\n@injectable()\nexport class WorkspaceTrustService {\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    @inject(PreferenceService)\n    protected readonly preferences: PreferenceService;\n\n    @inject(StorageService)\n    protected readonly storage: StorageService;\n\n    @inject(MessageService)\n    protected readonly messageService: MessageService;\n\n    @inject(WorkspaceTrustPreferences)\n    protected readonly workspaceTrustPref: WorkspaceTrustPreferences;\n\n    @inject(WindowService)\n    protected readonly windowService: WindowService;\n\n    protected workspaceTrust = new Deferred<boolean>();\n\n    @postConstruct()\n    protected init(): void {\n        this.doInit();\n    }\n\n    protected async doInit(): Promise<void> {\n        await this.workspaceService.ready;\n        await this.resolveWorkspaceTrust();\n        this.preferences.onPreferenceChanged(change => this.handlePreferenceChange(change));\n    }\n\n    getWorkspaceTrust(): Promise<boolean> {\n        return this.workspaceTrust.promise;\n    }\n\n    protected async resolveWorkspaceTrust(givenTrust?: boolean): Promise<void> {\n        if (!this.isWorkspaceTrustResolved()) {\n            const trust = givenTrust ?? await this.calculateWorkspaceTrust();\n            if (trust !== undefined) {\n                await this.storeWorkspaceTrust(trust);\n                this.workspaceTrust.resolve(trust);\n            }\n        }\n    }\n\n    protected isWorkspaceTrustResolved(): boolean {\n        return this.workspaceTrust.state !== 'unresolved';\n    }\n\n    protected async calculateWorkspaceTrust(): Promise<boolean | undefined> {\n        if (!this.workspaceTrustPref[WORKSPACE_TRUST_ENABLED]) {\n            // in VS Code if workspace trust is disabled, we implicitly trust the workspace\n            return true;\n        }\n\n        if (this.workspaceTrustPref[WORKSPACE_TRUST_EMPTY_WINDOW] && !this.workspaceService.workspace) {\n            return true;\n        }\n\n        if (this.workspaceTrustPref[WORKSPACE_TRUST_STARTUP_PROMPT] === WorkspaceTrustPrompt.NEVER) {\n            return false;\n        }\n\n        return this.loadWorkspaceTrust();\n    }\n\n    protected async loadWorkspaceTrust(): Promise<boolean | undefined> {\n        if (this.workspaceTrustPref[WORKSPACE_TRUST_STARTUP_PROMPT] === WorkspaceTrustPrompt.ONCE) {\n            return this.storage.getData<boolean>(STORAGE_TRUSTED);\n        }\n    }\n\n    protected async storeWorkspaceTrust(trust: boolean): Promise<void> {\n        if (this.workspaceTrustPref[WORKSPACE_TRUST_STARTUP_PROMPT] === WorkspaceTrustPrompt.ONCE) {\n            return this.storage.setData(STORAGE_TRUSTED, trust);\n        }\n    }\n\n    protected async handlePreferenceChange(change: PreferenceChange): Promise<void> {\n        if (change.preferenceName === WORKSPACE_TRUST_STARTUP_PROMPT && change.newValue !== WorkspaceTrustPrompt.ONCE) {\n            this.storage.setData(STORAGE_TRUSTED, undefined);\n        }\n\n        if (change.preferenceName === WORKSPACE_TRUST_ENABLED && this.isWorkspaceTrustResolved() && await this.confirmRestart()) {\n            this.windowService.setSafeToShutDown();\n            this.windowService.reload();\n        }\n\n        if (change.preferenceName === WORKSPACE_TRUST_ENABLED || change.preferenceName === WORKSPACE_TRUST_EMPTY_WINDOW) {\n            this.resolveWorkspaceTrust();\n        }\n    }\n\n    protected async confirmRestart(): Promise<boolean> {\n        const shouldRestart = await new ConfirmDialog({\n            title: nls.localizeByDefault('A setting has changed that requires a restart to take effect.'),\n            msg: nls.localizeByDefault('Press the restart button to restart {0} and enable the setting.', FrontendApplicationConfigProvider.get().applicationName),\n            ok: nls.localizeByDefault('Restart'),\n            cancel: Dialog.CANCEL,\n        }).open();\n        return shouldRestart === true;\n    }\n\n    async requestWorkspaceTrust(): Promise<boolean | undefined> {\n        if (!this.isWorkspaceTrustResolved()) {\n            const isTrusted = await this.messageService.info(nls.localize('theia/workspace/trustRequest',\n                'An extension requests workspace trust but the corresponding API is not yet fully supported. Do you want to trust this workspace?'),\n                Dialog.YES, Dialog.NO);\n            const trusted = isTrusted === Dialog.YES;\n            this.resolveWorkspaceTrust(trusted);\n        }\n        return this.workspaceTrust.promise;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { DefaultUriLabelProviderContribution, URIIconReference } from '@theia/core/lib/browser/label-provider';\nimport URI from '@theia/core/lib/common/uri';\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\nimport { WorkspaceService } from './workspace-service';\nimport { WorkspaceVariableContribution } from './workspace-variable-contribution';\n\n@injectable()\nexport class WorkspaceUriLabelProviderContribution extends DefaultUriLabelProviderContribution {\n\n    @inject(WorkspaceVariableContribution) protected readonly workspaceVariable: WorkspaceVariableContribution;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n\n    @postConstruct()\n    override init(): void {\n        // no-op, backward compatibility\n    }\n\n    override canHandle(element: object): number {\n        if ((element instanceof URI && element.scheme === 'file' || URIIconReference.is(element) || FileStat.is(element))) {\n            return 10;\n        }\n        return 0;\n    }\n\n    override getIcon(element: URI | URIIconReference | FileStat): string {\n        return super.getIcon(this.asURIIconReference(element));\n    }\n\n    override getName(element: URI | URIIconReference | FileStat): string | undefined {\n        return super.getName(this.asURIIconReference(element));\n    }\n\n    /**\n     * trims the workspace root from a file uri, if it is a child.\n     */\n    override getLongName(element: URI | URIIconReference | FileStat): string | undefined {\n        const uri = this.getUri(element);\n        if (uri) {\n            const formatting = this.findFormatting(uri);\n            if (formatting) {\n                return this.formatUri(uri, formatting);\n            }\n        }\n        const relativePath = uri && this.workspaceVariable.getWorkspaceRelativePath(uri);\n        return relativePath || super.getLongName(this.asURIIconReference(element));\n    }\n\n    override getDetails(element: URI | URIIconReference | FileStat): string | undefined {\n        const uri = this.getUri(element);\n        if (!uri) {\n            return this.getLongName(element);\n        }\n        // Parent in order to omit the name - that's what comes out of `getName`, and `getDetails` should supplement, not duplicate.\n        const relativePath = uri && this.workspaceVariable.getWorkspaceRelativePath(uri.parent);\n        if (relativePath !== undefined) {\n            const prefix = this.workspaceService.tryGetRoots().length > 1 ? this.getName(this.workspaceVariable.getWorkspaceRootUri(uri)!) : '';\n            const separator = prefix && relativePath ? ' • ' : '';\n            return prefix + separator + relativePath;\n        }\n        return this.getLongName(uri.parent);\n    }\n\n    protected asURIIconReference(element: URI | URIIconReference | FileStat): URI | URIIconReference {\n        if (FileStat.is(element)) {\n            return URIIconReference.create(element.isDirectory ? 'folder' : 'file', element.resource);\n        }\n        const uri = this.getUri(element);\n        if (uri && this.workspaceVariable.getWorkspaceRootUri(uri)?.isEqual(uri)) {\n            return URIIconReference.create('folder', uri);\n        }\n        return element;\n    }\n\n    protected override getUri(element: URI | URIIconReference | FileStat): URI | undefined {\n        if (FileStat.is(element)) {\n            return element.resource;\n        }\n        return super.getUri(element);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { UserWorkingDirectoryProvider } from '@theia/core/lib/browser/user-working-directory-provider';\nimport URI from '@theia/core/lib/common/uri';\nimport { WorkspaceService } from './workspace-service';\nimport { MaybePromise } from '@theia/core';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\n\n@injectable()\nexport class WorkspaceUserWorkingDirectoryProvider extends UserWorkingDirectoryProvider {\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(FileService) protected readonly fileService: FileService;\n\n    override async getUserWorkingDir(): Promise<URI> {\n        return await this.getFromSelection()\n            ?? await this.getFromWorkspace()\n            ?? this.getFromUserHome();\n    }\n\n    protected getFromWorkspace(): MaybePromise<URI | undefined> {\n        return this.workspaceService.tryGetRoots()[0]?.resource;\n    }\n\n    protected override async ensureIsDirectory(uri?: URI): Promise<URI | undefined> {\n        if (uri) {\n            const asFile = uri.withScheme('file');\n            const stat = await this.fileService.resolve(asFile)\n                .catch(() => this.fileService.resolve(asFile.parent))\n                .catch(() => undefined);\n            return stat?.isDirectory ? stat.resource : stat?.resource.parent;\n        }\n    }\n}\n","\n// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n// TODO get rid of util files, replace with methods in a responsible class\n\nimport URI from '@theia/core/lib/common/uri';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { WorkspaceService } from './workspace-service';\n\n/**\n * Collection of workspace utility functions\n * @class\n */\n@injectable()\nexport class WorkspaceUtils {\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    /**\n     * Determine if root directory exists\n     * for a given array of URIs\n     * @param uris\n     */\n    containsRootDirectory(uris: URI[]): boolean {\n        // obtain all roots URIs for a given workspace\n        const rootUris = this.workspaceService.tryGetRoots().map(root => root.resource);\n        // return true if at least a single URI is a root directory\n        return rootUris.some(rootUri => uris.some(uri => uri.isEqualOrParent(rootUri)));\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { Path } from '@theia/core/lib/common/path';\nimport { ApplicationShell, NavigatableWidget, WidgetManager } from '@theia/core/lib/browser';\nimport { VariableContribution, VariableRegistry, Variable } from '@theia/variable-resolver/lib/browser';\nimport { WorkspaceService } from './workspace-service';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\n\n@injectable()\nexport class WorkspaceVariableContribution implements VariableContribution {\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n    @inject(FileService)\n    protected readonly fileService: FileService;\n    @inject(WidgetManager)\n    protected readonly widgetManager: WidgetManager;\n\n    protected currentWidget: NavigatableWidget | undefined;\n\n    @postConstruct()\n    protected init(): void {\n        this.shell.onDidChangeCurrentWidget(() => this.updateCurrentWidget());\n        this.widgetManager.onDidCreateWidget(({ widget }) => {\n            if (NavigatableWidget.is(widget)) {\n                widget.onDidChangeVisibility(() => {\n                    if (widget.isVisible) {\n                        this.addRecentlyVisible(widget);\n                    } else {\n                        this.removeRecentlyVisible(widget);\n                    }\n                    this.updateCurrentWidget();\n                });\n                widget.onDidDispose(() => {\n                    this.removeRecentlyVisible(widget);\n                    this.updateCurrentWidget();\n                });\n            }\n        });\n        for (const widget of this.shell.widgets) {\n            if (NavigatableWidget.is(widget) && widget.isVisible) {\n                this.addRecentlyVisible(widget);\n            }\n        }\n        this.updateCurrentWidget();\n    }\n\n    protected readonly recentlyVisibleIds: string[] = [];\n    protected get recentlyVisible(): NavigatableWidget | undefined {\n        const id = this.recentlyVisibleIds[0];\n        const widget = id && this.shell.getWidgetById(id) || undefined;\n        if (NavigatableWidget.is(widget)) {\n            return widget;\n        }\n        return undefined;\n    }\n    protected addRecentlyVisible(widget: NavigatableWidget): void {\n        this.removeRecentlyVisible(widget);\n        this.recentlyVisibleIds.unshift(widget.id);\n    }\n    protected removeRecentlyVisible(widget: NavigatableWidget): void {\n        const index = this.recentlyVisibleIds.indexOf(widget.id);\n        if (index !== -1) {\n            this.recentlyVisibleIds.splice(index, 1);\n        }\n    }\n\n    protected updateCurrentWidget(): void {\n        const { currentWidget } = this.shell;\n        if (NavigatableWidget.is(currentWidget)) {\n            this.currentWidget = currentWidget;\n        } else if (!this.currentWidget || !this.currentWidget.isVisible) {\n            this.currentWidget = this.recentlyVisible;\n        }\n    }\n\n    registerVariables(variables: VariableRegistry): void {\n        this.registerWorkspaceRootVariables(variables);\n\n        variables.registerVariable({\n            name: 'file',\n            description: 'The path of the currently opened file',\n            resolve: () => {\n                const uri = this.getResourceUri();\n                return uri && this.fileService.fsPath(uri);\n            }\n        });\n        variables.registerVariable({\n            name: 'fileBasename',\n            description: 'The basename of the currently opened file',\n            resolve: () => {\n                const uri = this.getResourceUri();\n                return uri && uri.path.base;\n            }\n        });\n        variables.registerVariable({\n            name: 'fileBasenameNoExtension',\n            description: \"The currently opened file's name without extension\",\n            resolve: () => {\n                const uri = this.getResourceUri();\n                return uri && uri.path.name;\n            }\n        });\n        variables.registerVariable({\n            name: 'fileDirname',\n            description: \"The name of the currently opened file's directory\",\n            resolve: () => {\n                const uri = this.getResourceUri();\n                return uri && uri.path.dir.toString();\n            }\n        });\n        variables.registerVariable({\n            name: 'fileExtname',\n            description: 'The extension of the currently opened file',\n            resolve: () => {\n                const uri = this.getResourceUri();\n                return uri && uri.path.ext;\n            }\n        });\n    }\n\n    protected registerWorkspaceRootVariables(variables: VariableRegistry): void {\n        const scoped = (variable: Variable): Variable => ({\n            name: variable.name,\n            description: variable.description,\n            resolve: (context, workspaceRootName) => {\n                const workspaceRoot = workspaceRootName && this.workspaceService.tryGetRoots().find(r => r.resource.path.name === workspaceRootName);\n                return variable.resolve(workspaceRoot ? workspaceRoot.resource : context);\n            }\n        });\n        variables.registerVariable(scoped({\n            name: 'workspaceRoot',\n            description: 'The path of the workspace root folder',\n            resolve: (context?: URI) => {\n                const uri = this.getWorkspaceRootUri(context);\n                return uri && this.fileService.fsPath(uri);\n            }\n        }));\n        variables.registerVariable(scoped({\n            name: 'workspaceFolder',\n            description: 'The path of the workspace root folder',\n            resolve: (context?: URI) => {\n                const uri = this.getWorkspaceRootUri(context);\n                return uri && this.fileService.fsPath(uri);\n            }\n        }));\n        variables.registerVariable(scoped({\n            name: 'workspaceRootFolderName',\n            description: 'The name of the workspace root folder',\n            resolve: (context?: URI) => {\n                const uri = this.getWorkspaceRootUri(context);\n                return uri && uri.displayName;\n            }\n        }));\n        variables.registerVariable(scoped({\n            name: 'workspaceFolderBasename',\n            description: 'The name of the workspace root folder',\n            resolve: (context?: URI) => {\n                const uri = this.getWorkspaceRootUri(context);\n                return uri && uri.displayName;\n            }\n        }));\n        variables.registerVariable(scoped({\n            name: 'cwd',\n            description: \"The task runner's current working directory on startup\",\n            resolve: (context?: URI) => {\n                const uri = this.getWorkspaceRootUri(context);\n                return (uri && this.fileService.fsPath(uri)) || '';\n            }\n        }));\n        variables.registerVariable(scoped({\n            name: 'relativeFile',\n            description: \"The currently opened file's path relative to the workspace root\",\n            resolve: (context?: URI) => {\n                const uri = this.getResourceUri();\n                return uri && this.getWorkspaceRelativePath(uri, context);\n            }\n        }));\n        variables.registerVariable(scoped({\n            name: 'relativeFileDirname',\n            description: \"The current opened file's dirname relative to ${workspaceFolder}\",\n            resolve: (context?: URI) => {\n                const uri = this.getResourceUri();\n                const relativePath = uri && this.getWorkspaceRelativePath(uri, context);\n                return relativePath && new Path(relativePath).dir.toString();\n            }\n        }));\n    }\n\n    getWorkspaceRootUri(uri: URI | undefined = this.getResourceUri()): URI | undefined {\n        return this.workspaceService.getWorkspaceRootUri(uri);\n    }\n\n    getResourceUri(): URI | undefined {\n        return this.currentWidget && this.currentWidget.getResourceUri();\n    }\n\n    getWorkspaceRelativePath(uri: URI, context?: URI): string | undefined {\n        const workspaceRootUri = this.getWorkspaceRootUri(context || uri);\n        const path = workspaceRootUri && workspaceRootUri.path.relative(uri.path);\n        return path && path.toString();\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2022 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { WindowTitleUpdater } from '@theia/core/lib/browser/window/window-title-updater';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { Widget } from '@theia/core/lib/browser/widgets/widget';\nimport { WorkspaceService } from './workspace-service';\nimport { Navigatable } from '@theia/core/lib/browser/navigatable';\n\n@injectable()\nexport class WorkspaceWindowTitleUpdater extends WindowTitleUpdater {\n\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n\n    protected override updateTitleWidget(widget?: Widget): void {\n        super.updateTitleWidget(widget);\n        let folderName: string | undefined;\n        let folderPath: string | undefined;\n        if (Navigatable.is(widget)) {\n            const folder = this.workspaceService.getWorkspaceRootUri(widget.getResourceUri());\n            if (folder) {\n                folderName = this.labelProvider.getName(folder);\n                folderPath = folder.path.toString();\n            }\n        }\n        this.windowTitleService.update({\n            folderName,\n            folderPath\n        });\n    }\n\n}\n","'use strict';\n/* eslint-disable no-control-regex */\n// TODO: remove parens when Node.js 6 is targeted. Node.js 4 barfs at it.\nmodule.exports = () => (/[<>:\"\\/\\\\|?*\\x00-\\x1F]/g);\nmodule.exports.windowsNames = () => (/^(con|prn|aux|nul|com[0-9]|lpt[0-9])$/i);\n","'use strict';\nconst filenameReservedRegex = require('filename-reserved-regex');\n\nmodule.exports = str => {\n\tif (!str || str.length > 255) {\n\t\treturn false;\n\t}\n\n\tif (filenameReservedRegex().test(str) || filenameReservedRegex.windowsNames().test(str)) {\n\t\treturn false;\n\t}\n\n\tif (/^\\.\\.?$/.test(str)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n"],"names":[],"sourceRoot":""}