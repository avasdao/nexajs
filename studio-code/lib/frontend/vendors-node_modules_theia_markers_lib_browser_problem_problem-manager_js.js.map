{"version":3,"file":"vendors-node_modules_theia_markers_lib_browser_problem_problem-manager_js.js","mappings":"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","sources":["webpack:///./node_modules/@theia/markers/src/browser/marker-manager.ts?","webpack:///./node_modules/@theia/markers/src/browser/problem/problem-manager.ts?","webpack:///./node_modules/@theia/markers/src/common/marker.ts?","webpack:///./node_modules/@theia/markers/src/common/problem-marker.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { Event, Emitter } from '@theia/core/lib/common';\nimport URI from '@theia/core/lib/common/uri';\nimport { Marker } from '../common/marker';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { FileChangesEvent, FileChangeType } from '@theia/filesystem/lib/common/files';\n\n/*\n * argument to the `findMarkers` method.\n */\nexport interface SearchFilter<D> {\n    uri?: URI,\n    owner?: string,\n    dataFilter?: (data: D) => boolean\n}\n\nexport class MarkerCollection<T> {\n\n    protected readonly owner2Markers = new Map<string, Readonly<Marker<T>>[]>();\n\n    constructor(\n        public readonly uri: URI,\n        public readonly kind: string\n    ) { }\n\n    get empty(): boolean {\n        return !this.owner2Markers.size;\n    }\n\n    getOwners(): string[] {\n        return Array.from(this.owner2Markers.keys());\n    }\n\n    getMarkers(owner: string): Readonly<Marker<T>>[] {\n        return this.owner2Markers.get(owner) || [];\n    }\n\n    setMarkers(owner: string, markerData: T[]): Marker<T>[] {\n        const before = this.owner2Markers.get(owner);\n        if (markerData.length > 0) {\n            this.owner2Markers.set(owner, markerData.map(data => this.createMarker(owner, data)));\n        } else {\n            this.owner2Markers.delete(owner);\n        }\n        return before || [];\n    }\n\n    protected createMarker(owner: string, data: T): Readonly<Marker<T>> {\n        return Object.freeze({\n            uri: this.uri.toString(),\n            kind: this.kind,\n            owner: owner,\n            data\n        });\n    }\n\n    findMarkers(filter: SearchFilter<T>): Marker<T>[] {\n        if (filter.owner) {\n            if (this.owner2Markers.has(filter.owner)) {\n                return this.filterMarkers(filter, this.owner2Markers.get(filter.owner));\n            }\n            return [];\n        } else {\n            const result: Marker<T>[] = [];\n            for (const markers of this.owner2Markers.values()) {\n                result.push(...this.filterMarkers(filter, markers));\n            }\n            return result;\n        }\n    }\n\n    protected filterMarkers(filter: SearchFilter<T>, toFilter?: Marker<T>[]): Marker<T>[] {\n        if (!toFilter) {\n            return [];\n        }\n        if (filter.dataFilter) {\n            return toFilter.filter(d => filter.dataFilter!(d.data));\n        } else {\n            return toFilter;\n        }\n    }\n\n}\n\nexport interface Uri2MarkerEntry {\n    uri: string\n    markers: Owner2MarkerEntry[]\n}\n\nexport interface Owner2MarkerEntry {\n    owner: string\n    markerData: object[];\n}\n\n@injectable()\nexport abstract class MarkerManager<D extends object> {\n\n    public abstract getKind(): string;\n\n    protected readonly uri2MarkerCollection = new Map<string, MarkerCollection<D>>();\n    protected readonly onDidChangeMarkersEmitter = new Emitter<URI>();\n\n    @inject(FileService)\n    protected readonly fileService: FileService;\n\n    @postConstruct()\n    protected init(): void {\n        this.fileService.onDidFilesChange(event => {\n            if (event.gotDeleted()) {\n                this.cleanMarkers(event);\n            }\n        });\n    }\n\n    protected cleanMarkers(event: FileChangesEvent): void {\n        for (const uriString of this.uri2MarkerCollection.keys()) {\n            const uri = new URI(uriString);\n            if (event.contains(uri, FileChangeType.DELETED)) {\n                this.cleanAllMarkers(uri);\n            }\n        }\n    }\n\n    get onDidChangeMarkers(): Event<URI> {\n        return this.onDidChangeMarkersEmitter.event;\n    }\n\n    protected fireOnDidChangeMarkers(uri: URI): void {\n        this.onDidChangeMarkersEmitter.fire(uri);\n    }\n\n    /*\n     * replaces the current markers for the given uri and owner with the given data.\n     */\n    setMarkers(uri: URI, owner: string, data: D[]): Marker<D>[] {\n        const uriString = uri.toString();\n        const collection = this.uri2MarkerCollection.get(uriString) || new MarkerCollection<D>(uri, this.getKind());\n        const oldMarkers = collection.setMarkers(owner, data);\n        if (collection.empty) {\n            this.uri2MarkerCollection.delete(uri.toString());\n        } else {\n            this.uri2MarkerCollection.set(uriString, collection);\n        }\n        this.fireOnDidChangeMarkers(uri);\n        return oldMarkers;\n    }\n\n    /*\n     * returns all markers that satisfy the given filter.\n     */\n    findMarkers(filter: SearchFilter<D> = {}): Marker<D>[] {\n        if (filter.uri) {\n            const collection = this.uri2MarkerCollection.get(filter.uri.toString());\n            return collection ? collection.findMarkers(filter) : [];\n        }\n        const result: Marker<D>[] = [];\n        for (const uri of this.getUris()) {\n            result.push(...this.uri2MarkerCollection.get(uri)!.findMarkers(filter));\n        }\n        return result;\n    }\n\n    getMarkersByUri(): IterableIterator<[string, MarkerCollection<D>]> {\n        return this.uri2MarkerCollection.entries();\n    }\n\n    getUris(): IterableIterator<string> {\n        return this.uri2MarkerCollection.keys();\n    }\n\n    cleanAllMarkers(uri?: URI): void {\n        if (uri) {\n            this.doCleanAllMarkers(uri);\n        } else {\n            for (const uriString of this.getUris()) {\n                this.doCleanAllMarkers(new URI(uriString));\n            }\n        }\n    }\n    protected doCleanAllMarkers(uri: URI): void {\n        const uriString = uri.toString();\n        const collection = this.uri2MarkerCollection.get(uriString);\n        if (collection !== undefined) {\n            this.uri2MarkerCollection.delete(uriString);\n            this.fireOnDidChangeMarkers(uri);\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { MarkerManager } from '../marker-manager';\nimport { PROBLEM_KIND } from '../../common/problem-marker';\nimport { Diagnostic } from '@theia/core/shared/vscode-languageserver-protocol';\n\nexport interface ProblemStat {\n    errors: number;\n    warnings: number;\n    infos: number;\n}\n\n@injectable()\nexport class ProblemManager extends MarkerManager<Diagnostic> {\n\n    public getKind(): string {\n        return PROBLEM_KIND;\n    }\n\n    getProblemStat(): ProblemStat {\n        let errors = 0;\n        let warnings = 0;\n        let infos = 0;\n        for (const marker of this.findMarkers()) {\n            if (marker.data.severity === 1) {\n                errors++;\n            } else if (marker.data.severity === 2) {\n                warnings++;\n            } else if (marker.data.severity === 3) {\n                infos++;\n            }\n        }\n        return { errors, warnings, infos };\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { isObject, isString } from '@theia/core/lib/common/types';\n\n/*\n* A marker represents meta information for a given uri\n*/\nexport interface Marker<T> {\n    /**\n     * the uri this marker is associated with.\n     */\n    uri: string;\n    /*\n     * the owner of this marker. Any string provided by the registrar.\n     */\n    owner: string;\n\n    /**\n     * the kind, e.g. 'problem'\n     */\n    kind?: string;\n\n    /*\n     * marker kind specific data\n     */\n    data: T;\n}\nexport namespace Marker {\n    export function is(value: unknown): value is Marker<object>;\n    export function is<T>(value: unknown, subTypeCheck: (value: unknown) => value is T): value is Marker<T>;\n    export function is(value: unknown, subTypeCheck?: (value: unknown) => boolean): boolean {\n        subTypeCheck ??= isObject;\n        return isObject<Marker<object>>(value)\n            && !Array.isArray(value)\n            && subTypeCheck(value.data)\n            && isString(value.uri)\n            && isString(value.owner);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Marker } from './marker';\nimport { Diagnostic } from '@theia/core/shared/vscode-languageserver-protocol';\n\nexport const PROBLEM_KIND = 'problem';\n\nexport interface ProblemMarker extends Marker<Diagnostic> {\n    kind: 'problem';\n}\n\nexport namespace ProblemMarker {\n    export function is(node: unknown): node is ProblemMarker {\n        return Marker.is(node) && node.kind === PROBLEM_KIND;\n    }\n}\n"],"names":[],"sourceRoot":""}