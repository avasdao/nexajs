{"version":3,"file":"vendors-node_modules_theia_navigator_lib_browser_navigator-contribution_js.js","mappings":"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","sources":["webpack:///./node_modules/@theia/navigator/src/browser/file-navigator-commands.ts?","webpack:///./node_modules/@theia/navigator/src/browser/navigator-contribution.ts?","webpack:///./node_modules/@theia/navigator/src/browser/navigator-diff.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { codicon, CommonCommands } from '@theia/core/lib/browser';\nimport { Command } from '@theia/core/lib/common';\nimport { WorkspaceCommands } from '@theia/workspace/lib/browser';\n\nexport namespace FileNavigatorCommands {\n    export const REVEAL_IN_NAVIGATOR = Command.toLocalizedCommand({\n        id: 'navigator.reveal',\n        label: 'Reveal in Explorer'\n    }, 'theia/navigator/reveal');\n    export const TOGGLE_HIDDEN_FILES = Command.toLocalizedCommand({\n        id: 'navigator.toggle.hidden.files',\n        label: 'Toggle Hidden Files'\n    }, 'theia/navigator/toggleHiddenFiles');\n    export const TOGGLE_AUTO_REVEAL = Command.toLocalizedCommand({\n        id: 'navigator.toggle.autoReveal',\n        category: CommonCommands.FILE_CATEGORY,\n        label: 'Auto Reveal'\n    }, 'theia/navigator/autoReveal', CommonCommands.FILE_CATEGORY_KEY);\n    export const REFRESH_NAVIGATOR = Command.toLocalizedCommand({\n        id: 'navigator.refresh',\n        category: CommonCommands.FILE_CATEGORY,\n        label: 'Refresh in Explorer',\n        iconClass: codicon('refresh')\n    }, 'theia/navigator/refresh', CommonCommands.FILE_CATEGORY_KEY);\n    export const COLLAPSE_ALL = Command.toDefaultLocalizedCommand({\n        id: 'navigator.collapse.all',\n        category: CommonCommands.FILE_CATEGORY,\n        label: 'Collapse Folders in Explorer',\n        iconClass: codicon('collapse-all')\n    });\n    export const ADD_ROOT_FOLDER: Command = {\n        id: 'navigator.addRootFolder'\n    };\n    export const FOCUS = Command.toDefaultLocalizedCommand({\n        id: 'workbench.files.action.focusFilesExplorer',\n        category: CommonCommands.FILE_CATEGORY,\n        label: 'Focus on Files Explorer'\n    });\n    export const OPEN = Command.toDefaultLocalizedCommand({\n        id: 'navigator.open',\n        category: CommonCommands.FILE_CATEGORY,\n        label: 'Open'\n    });\n    export const NEW_FILE_TOOLBAR: Command = {\n        id: `${WorkspaceCommands.NEW_FILE.id}.toolbar`,\n        iconClass: codicon('new-file')\n    };\n    export const NEW_FOLDER_TOOLBAR: Command = {\n        id: `${WorkspaceCommands.NEW_FOLDER.id}.toolbar`,\n        iconClass: codicon('new-folder')\n    };\n\n    /**\n     * @deprecated since 1.21.0. Use WorkspaceCommands.COPY_RELATIVE_FILE_COMMAND instead.\n     */\n    export const COPY_RELATIVE_FILE_PATH = WorkspaceCommands.COPY_RELATIVE_FILE_PATH;\n}\n","// *****************************************************************************\n// Copyright (C) 2017-2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { AbstractViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport {\n    CommonCommands,\n    CompositeTreeNode,\n    FrontendApplication,\n    FrontendApplicationContribution,\n    KeybindingRegistry,\n    OpenerService,\n    PreferenceScope,\n    PreferenceService,\n    SelectableTreeNode,\n    Widget,\n    NavigatableWidget,\n    ApplicationShell,\n    TabBar,\n    Title,\n    SHELL_TABBAR_CONTEXT_MENU\n} from '@theia/core/lib/browser';\nimport { FileDownloadCommands } from '@theia/filesystem/lib/browser/download/file-download-command-contribution';\nimport {\n    CommandRegistry,\n    isOSX,\n    MenuModelRegistry,\n    MenuPath,\n    Mutable,\n} from '@theia/core/lib/common';\nimport {\n    DidCreateNewResourceEvent,\n    WorkspaceCommandContribution,\n    WorkspaceCommands,\n    WorkspacePreferences,\n    WorkspaceService\n} from '@theia/workspace/lib/browser';\nimport { EXPLORER_VIEW_CONTAINER_ID, EXPLORER_VIEW_CONTAINER_TITLE_OPTIONS } from './navigator-widget-factory';\nimport { FILE_NAVIGATOR_ID, FileNavigatorWidget } from './navigator-widget';\nimport { FileNavigatorPreferences } from './navigator-preferences';\nimport { FileNavigatorFilter } from './navigator-filter';\nimport { WorkspaceNode } from './navigator-tree';\nimport { NavigatorContextKeyService } from './navigator-context-key-service';\nimport {\n    TabBarToolbarContribution,\n    TabBarToolbarItem,\n    TabBarToolbarRegistry\n} from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { FileSystemCommands } from '@theia/filesystem/lib/browser/filesystem-frontend-contribution';\nimport { NavigatorDiff, NavigatorDiffCommands } from './navigator-diff';\nimport { DirNode, FileNode } from '@theia/filesystem/lib/browser';\nimport { FileNavigatorModel } from './navigator-model';\nimport { ClipboardService } from '@theia/core/lib/browser/clipboard-service';\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { OpenEditorsWidget } from './open-editors-widget/navigator-open-editors-widget';\nimport { OpenEditorsContextMenu } from './open-editors-widget/navigator-open-editors-menus';\nimport { OpenEditorsCommands } from './open-editors-widget/navigator-open-editors-commands';\nimport { nls } from '@theia/core/lib/common/nls';\nimport URI from '@theia/core/lib/common/uri';\nimport { UriAwareCommandHandler } from '@theia/core/lib/common/uri-command-handler';\nimport { FileNavigatorCommands } from './file-navigator-commands';\nexport { FileNavigatorCommands };\n\n/**\n * Navigator `More Actions...` toolbar item groups.\n * Used in order to group items present in the toolbar.\n */\nexport namespace NavigatorMoreToolbarGroups {\n    export const NEW_OPEN = '1_navigator_new_open';\n    export const TOOLS = '2_navigator_tools';\n    export const WORKSPACE = '3_navigator_workspace';\n}\n\nexport const NAVIGATOR_CONTEXT_MENU: MenuPath = ['navigator-context-menu'];\nexport const SHELL_TABBAR_CONTEXT_REVEAL: MenuPath = [...SHELL_TABBAR_CONTEXT_MENU, '2_reveal'];\n\n/**\n * Navigator context menu default groups should be aligned\n * with VS Code default groups: https://code.visualstudio.com/api/references/contribution-points#contributes.menus\n */\nexport namespace NavigatorContextMenu {\n    export const NAVIGATION = [...NAVIGATOR_CONTEXT_MENU, 'navigation'];\n    /** @deprecated use NAVIGATION */\n    export const OPEN = NAVIGATION;\n    /** @deprecated use NAVIGATION */\n    export const NEW = NAVIGATION;\n\n    export const WORKSPACE = [...NAVIGATOR_CONTEXT_MENU, '2_workspace'];\n\n    export const COMPARE = [...NAVIGATOR_CONTEXT_MENU, '3_compare'];\n    /** @deprecated use COMPARE */\n    export const DIFF = COMPARE;\n\n    export const SEARCH = [...NAVIGATOR_CONTEXT_MENU, '4_search'];\n    export const CLIPBOARD = [...NAVIGATOR_CONTEXT_MENU, '5_cutcopypaste'];\n\n    export const MODIFICATION = [...NAVIGATOR_CONTEXT_MENU, '7_modification'];\n    /** @deprecated use MODIFICATION */\n    export const MOVE = MODIFICATION;\n    /** @deprecated use MODIFICATION */\n    export const ACTIONS = MODIFICATION;\n\n    export const OPEN_WITH = [...NAVIGATION, 'open_with'];\n}\n\nexport const FILE_NAVIGATOR_TOGGLE_COMMAND_ID = 'fileNavigator:toggle';\n\n@injectable()\nexport class FileNavigatorContribution extends AbstractViewContribution<FileNavigatorWidget> implements FrontendApplicationContribution, TabBarToolbarContribution {\n\n    @inject(ClipboardService)\n    protected readonly clipboardService: ClipboardService;\n\n    @inject(CommandRegistry)\n    protected readonly commandRegistry: CommandRegistry;\n\n    @inject(TabBarToolbarRegistry)\n    protected readonly tabbarToolbarRegistry: TabBarToolbarRegistry;\n\n    @inject(NavigatorContextKeyService)\n    protected readonly contextKeyService: NavigatorContextKeyService;\n\n    @inject(MenuModelRegistry)\n    protected readonly menuRegistry: MenuModelRegistry;\n\n    @inject(NavigatorDiff)\n    protected readonly navigatorDiff: NavigatorDiff;\n\n    @inject(PreferenceService)\n    protected readonly preferenceService: PreferenceService;\n\n    @inject(SelectionService)\n    protected readonly selectionService: SelectionService;\n\n    @inject(WorkspaceCommandContribution)\n    protected readonly workspaceCommandContribution: WorkspaceCommandContribution;\n\n    constructor(\n        @inject(FileNavigatorPreferences) protected readonly fileNavigatorPreferences: FileNavigatorPreferences,\n        @inject(OpenerService) protected readonly openerService: OpenerService,\n        @inject(FileNavigatorFilter) protected readonly fileNavigatorFilter: FileNavigatorFilter,\n        @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService,\n        @inject(WorkspacePreferences) protected readonly workspacePreferences: WorkspacePreferences\n    ) {\n        super({\n            viewContainerId: EXPLORER_VIEW_CONTAINER_ID,\n            widgetId: FILE_NAVIGATOR_ID,\n            widgetName: EXPLORER_VIEW_CONTAINER_TITLE_OPTIONS.label,\n            defaultWidgetOptions: {\n                area: 'left',\n                rank: 100\n            },\n            toggleCommandId: FILE_NAVIGATOR_TOGGLE_COMMAND_ID,\n            toggleKeybinding: 'ctrlcmd+shift+e'\n        });\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.doInit();\n    }\n\n    protected async doInit(): Promise<void> {\n        await this.fileNavigatorPreferences.ready;\n        this.shell.onDidChangeCurrentWidget(() => this.onCurrentWidgetChangedHandler());\n\n        const updateFocusContextKeys = () => {\n            const hasFocus = this.shell.activeWidget instanceof FileNavigatorWidget;\n            this.contextKeyService.explorerViewletFocus.set(hasFocus);\n            this.contextKeyService.filesExplorerFocus.set(hasFocus);\n        };\n        updateFocusContextKeys();\n        this.shell.onDidChangeActiveWidget(updateFocusContextKeys);\n        this.workspaceCommandContribution.onDidCreateNewFile(async event => this.onDidCreateNewResource(event));\n        this.workspaceCommandContribution.onDidCreateNewFolder(async event => this.onDidCreateNewResource(event));\n    }\n\n    private async onDidCreateNewResource(event: DidCreateNewResourceEvent): Promise<void> {\n        const navigator = this.tryGetWidget();\n        if (!navigator || !navigator.isVisible) {\n            return;\n        }\n        const model: FileNavigatorModel = navigator.model;\n        const parent = await model.revealFile(event.parent);\n        if (DirNode.is(parent)) {\n            await model.refresh(parent);\n        }\n        const node = await model.revealFile(event.uri);\n        if (SelectableTreeNode.is(node)) {\n            model.selectNode(node);\n            if (DirNode.is(node)) {\n                this.openView({ activate: true });\n            }\n        }\n    }\n\n    async initializeLayout(app: FrontendApplication): Promise<void> {\n        await this.openView();\n    }\n\n    override registerCommands(registry: CommandRegistry): void {\n        super.registerCommands(registry);\n        registry.registerCommand(FileNavigatorCommands.FOCUS, {\n            execute: () => this.openView({ activate: true })\n        });\n        registry.registerCommand(FileNavigatorCommands.REVEAL_IN_NAVIGATOR, UriAwareCommandHandler.MonoSelect(this.selectionService, {\n            execute: async uri => {\n                if (await this.selectFileNode(uri)) {\n                    this.openView({ activate: false, reveal: true });\n                }\n            },\n            isEnabled: uri => !!this.workspaceService.getWorkspaceRootUri(uri),\n            isVisible: uri => !!this.workspaceService.getWorkspaceRootUri(uri),\n        }));\n        registry.registerCommand(FileNavigatorCommands.TOGGLE_HIDDEN_FILES, {\n            execute: () => {\n                this.fileNavigatorFilter.toggleHiddenFiles();\n            },\n            isEnabled: () => true,\n            isVisible: () => true\n        });\n        registry.registerCommand(FileNavigatorCommands.TOGGLE_AUTO_REVEAL, {\n            isEnabled: widget => this.withWidget(widget, () => this.workspaceService.opened),\n            isVisible: widget => this.withWidget(widget, () => this.workspaceService.opened),\n            execute: () => {\n                const autoReveal = !this.fileNavigatorPreferences['explorer.autoReveal'];\n                this.preferenceService.set('explorer.autoReveal', autoReveal, PreferenceScope.User);\n                if (autoReveal) {\n                    this.selectWidgetFileNode(this.shell.currentWidget);\n                }\n            },\n            isToggled: () => this.fileNavigatorPreferences['explorer.autoReveal']\n        });\n        registry.registerCommand(FileNavigatorCommands.COLLAPSE_ALL, {\n            execute: widget => this.withWidget(widget, () => this.collapseFileNavigatorTree()),\n            isEnabled: widget => this.withWidget(widget, () => this.workspaceService.opened),\n            isVisible: widget => this.withWidget(widget, () => this.workspaceService.opened)\n        });\n        registry.registerCommand(FileNavigatorCommands.REFRESH_NAVIGATOR, {\n            execute: widget => this.withWidget(widget, () => this.refreshWorkspace()),\n            isEnabled: widget => this.withWidget(widget, () => this.workspaceService.opened),\n            isVisible: widget => this.withWidget(widget, () => this.workspaceService.opened)\n        });\n        registry.registerCommand(FileNavigatorCommands.ADD_ROOT_FOLDER, {\n            execute: (...args) => registry.executeCommand(WorkspaceCommands.ADD_FOLDER.id, ...args),\n            isEnabled: (...args) => registry.isEnabled(WorkspaceCommands.ADD_FOLDER.id, ...args),\n            isVisible: (...args) => {\n                if (!registry.isVisible(WorkspaceCommands.ADD_FOLDER.id, ...args)) {\n                    return false;\n                }\n                const navigator = this.tryGetWidget();\n                const selection = navigator?.model.getFocusedNode();\n                // The node that is selected when the user clicks in empty space.\n                const root = navigator?.getContainerTreeNode();\n                return selection === root;\n            }\n        });\n\n        registry.registerCommand(NavigatorDiffCommands.COMPARE_FIRST, {\n            execute: () => {\n                this.navigatorDiff.addFirstComparisonFile();\n            },\n            isEnabled: () => true,\n            isVisible: () => true\n        });\n        registry.registerCommand(NavigatorDiffCommands.COMPARE_SECOND, {\n            execute: () => {\n                this.navigatorDiff.compareFiles();\n            },\n            isEnabled: () => this.navigatorDiff.isFirstFileSelected,\n            isVisible: () => this.navigatorDiff.isFirstFileSelected\n        });\n        registry.registerCommand(FileNavigatorCommands.OPEN, {\n            isEnabled: () => this.getSelectedFileNodes().length > 0,\n            isVisible: () => this.getSelectedFileNodes().length > 0,\n            execute: () => {\n                this.getSelectedFileNodes().forEach(async node => {\n                    const opener = await this.openerService.getOpener(node.uri);\n                    opener.open(node.uri);\n                });\n            }\n        });\n        registry.registerCommand(OpenEditorsCommands.CLOSE_ALL_TABS_FROM_TOOLBAR, {\n            execute: widget => this.withOpenEditorsWidget(widget, () => this.shell.closeMany(this.editorWidgets)),\n            isEnabled: widget => this.withOpenEditorsWidget(widget, () => true),\n            isVisible: widget => this.withOpenEditorsWidget(widget, () => true)\n        });\n        registry.registerCommand(OpenEditorsCommands.SAVE_ALL_TABS_FROM_TOOLBAR, {\n            execute: widget => this.withOpenEditorsWidget(widget, () => registry.executeCommand(CommonCommands.SAVE_ALL.id)),\n            isEnabled: widget => this.withOpenEditorsWidget(widget, () => true),\n            isVisible: widget => this.withOpenEditorsWidget(widget, () => true)\n        });\n\n        const filterEditorWidgets = (title: Title<Widget>) => {\n            const { owner } = title;\n            return NavigatableWidget.is(owner);\n        };\n        registry.registerCommand(OpenEditorsCommands.CLOSE_ALL_EDITORS_IN_GROUP_FROM_ICON, {\n            execute: (tabBarOrArea: ApplicationShell.Area | TabBar<Widget>): void => {\n                this.shell.closeTabs(tabBarOrArea, filterEditorWidgets);\n            },\n            isVisible: () => false\n        });\n        registry.registerCommand(OpenEditorsCommands.SAVE_ALL_IN_GROUP_FROM_ICON, {\n            execute: (tabBarOrArea: ApplicationShell.Area | TabBar<Widget>) => {\n                this.shell.saveTabs(tabBarOrArea, filterEditorWidgets);\n            },\n            isVisible: () => false\n        });\n\n        registry.registerCommand(FileNavigatorCommands.NEW_FILE_TOOLBAR, {\n            execute: (...args) => registry.executeCommand(WorkspaceCommands.NEW_FILE.id, ...args),\n            isEnabled: widget => this.withWidget(widget, () => this.workspaceService.opened),\n            isVisible: widget => this.withWidget(widget, () => this.workspaceService.opened)\n        });\n        registry.registerCommand(FileNavigatorCommands.NEW_FOLDER_TOOLBAR, {\n            execute: (...args) => registry.executeCommand(WorkspaceCommands.NEW_FOLDER.id, ...args),\n            isEnabled: widget => this.withWidget(widget, () => this.workspaceService.opened),\n            isVisible: widget => this.withWidget(widget, () => this.workspaceService.opened)\n        });\n    }\n\n    protected get editorWidgets(): NavigatableWidget[] {\n        const openEditorsWidget = this.widgetManager.tryGetWidget<OpenEditorsWidget>(OpenEditorsWidget.ID);\n        return openEditorsWidget?.editorWidgets ?? [];\n    }\n\n    protected getSelectedFileNodes(): FileNode[] {\n        return this.tryGetWidget()?.model.selectedNodes.filter(FileNode.is) || [];\n    }\n\n    protected withWidget<T>(widget: Widget | undefined = this.tryGetWidget(), cb: (navigator: FileNavigatorWidget) => T): T | false {\n        if (widget instanceof FileNavigatorWidget && widget.id === FILE_NAVIGATOR_ID) {\n            return cb(widget);\n        }\n        return false;\n    }\n\n    protected withOpenEditorsWidget<T>(widget: Widget, cb: (navigator: OpenEditorsWidget) => T): T | false {\n        if (widget instanceof OpenEditorsWidget && widget.id === OpenEditorsWidget.ID) {\n            return cb(widget);\n        }\n        return false;\n    }\n\n    override registerMenus(registry: MenuModelRegistry): void {\n        super.registerMenus(registry);\n        registry.registerMenuAction(SHELL_TABBAR_CONTEXT_REVEAL, {\n            commandId: FileNavigatorCommands.REVEAL_IN_NAVIGATOR.id,\n            label: FileNavigatorCommands.REVEAL_IN_NAVIGATOR.label,\n            order: '5'\n        });\n\n        registry.registerMenuAction(NavigatorContextMenu.NAVIGATION, {\n            commandId: FileNavigatorCommands.OPEN.id,\n            label: FileNavigatorCommands.OPEN.label\n        });\n        registry.registerSubmenu(NavigatorContextMenu.OPEN_WITH, nls.localizeByDefault('Open With...'));\n        this.openerService.getOpeners().then(openers => {\n            for (const opener of openers) {\n                const openWithCommand = WorkspaceCommands.FILE_OPEN_WITH(opener);\n                registry.registerMenuAction(NavigatorContextMenu.OPEN_WITH, {\n                    commandId: openWithCommand.id,\n                    label: opener.label,\n                    icon: opener.iconClass\n                });\n            }\n        });\n\n        registry.registerMenuAction(NavigatorContextMenu.CLIPBOARD, {\n            commandId: CommonCommands.COPY.id,\n            order: 'a'\n        });\n        registry.registerMenuAction(NavigatorContextMenu.CLIPBOARD, {\n            commandId: CommonCommands.PASTE.id,\n            order: 'b'\n        });\n        registry.registerMenuAction(NavigatorContextMenu.CLIPBOARD, {\n            commandId: CommonCommands.COPY_PATH.id,\n            order: 'c'\n        });\n        registry.registerMenuAction(NavigatorContextMenu.CLIPBOARD, {\n            commandId: WorkspaceCommands.COPY_RELATIVE_FILE_PATH.id,\n            label: WorkspaceCommands.COPY_RELATIVE_FILE_PATH.label,\n            order: 'd'\n        });\n        registry.registerMenuAction(NavigatorContextMenu.CLIPBOARD, {\n            commandId: FileDownloadCommands.COPY_DOWNLOAD_LINK.id,\n            order: 'z'\n        });\n\n        registry.registerMenuAction(NavigatorContextMenu.MODIFICATION, {\n            commandId: WorkspaceCommands.FILE_RENAME.id\n        });\n        registry.registerMenuAction(NavigatorContextMenu.MODIFICATION, {\n            commandId: WorkspaceCommands.FILE_DELETE.id\n        });\n        registry.registerMenuAction(NavigatorContextMenu.MODIFICATION, {\n            commandId: WorkspaceCommands.FILE_DUPLICATE.id\n        });\n\n        const downloadUploadMenu = [...NAVIGATOR_CONTEXT_MENU, '6_downloadupload'];\n        registry.registerMenuAction(downloadUploadMenu, {\n            commandId: FileSystemCommands.UPLOAD.id,\n            order: 'a'\n        });\n        registry.registerMenuAction(downloadUploadMenu, {\n            commandId: FileDownloadCommands.DOWNLOAD.id,\n            order: 'b'\n        });\n\n        registry.registerMenuAction(NavigatorContextMenu.NAVIGATION, {\n            commandId: WorkspaceCommands.NEW_FILE.id,\n            when: 'explorerResourceIsFolder'\n        });\n        registry.registerMenuAction(NavigatorContextMenu.NAVIGATION, {\n            commandId: WorkspaceCommands.NEW_FOLDER.id,\n            when: 'explorerResourceIsFolder'\n        });\n        registry.registerMenuAction(NavigatorContextMenu.COMPARE, {\n            commandId: WorkspaceCommands.FILE_COMPARE.id\n        });\n        registry.registerMenuAction(NavigatorContextMenu.MODIFICATION, {\n            commandId: FileNavigatorCommands.COLLAPSE_ALL.id,\n            label: nls.localizeByDefault('Collapse All'),\n            order: 'z2'\n        });\n\n        registry.registerMenuAction(NavigatorContextMenu.COMPARE, {\n            commandId: NavigatorDiffCommands.COMPARE_FIRST.id,\n            order: 'za'\n        });\n        registry.registerMenuAction(NavigatorContextMenu.COMPARE, {\n            commandId: NavigatorDiffCommands.COMPARE_SECOND.id,\n            order: 'zb'\n        });\n\n        // Open Editors Widget Menu Items\n        registry.registerMenuAction(OpenEditorsContextMenu.CLIPBOARD, {\n            commandId: CommonCommands.COPY_PATH.id,\n            order: 'a'\n        });\n        registry.registerMenuAction(OpenEditorsContextMenu.CLIPBOARD, {\n            commandId: WorkspaceCommands.COPY_RELATIVE_FILE_PATH.id,\n            order: 'b'\n        });\n        registry.registerMenuAction(OpenEditorsContextMenu.SAVE, {\n            commandId: CommonCommands.SAVE.id,\n            order: 'a'\n        });\n\n        registry.registerMenuAction(OpenEditorsContextMenu.COMPARE, {\n            commandId: NavigatorDiffCommands.COMPARE_FIRST.id,\n            order: 'a'\n        });\n        registry.registerMenuAction(OpenEditorsContextMenu.COMPARE, {\n            commandId: NavigatorDiffCommands.COMPARE_SECOND.id,\n            order: 'b'\n        });\n\n        registry.registerMenuAction(OpenEditorsContextMenu.MODIFICATION, {\n            commandId: CommonCommands.CLOSE_TAB.id,\n            label: nls.localizeByDefault('Close'),\n            order: 'a'\n        });\n        registry.registerMenuAction(OpenEditorsContextMenu.MODIFICATION, {\n            commandId: CommonCommands.CLOSE_OTHER_TABS.id,\n            label: nls.localizeByDefault('Close Others'),\n            order: 'b'\n        });\n        registry.registerMenuAction(OpenEditorsContextMenu.MODIFICATION, {\n            commandId: CommonCommands.CLOSE_ALL_MAIN_TABS.id,\n            label: nls.localizeByDefault('Close All'),\n            order: 'c'\n        });\n\n        registry.registerMenuAction(NavigatorContextMenu.WORKSPACE, {\n            commandId: FileNavigatorCommands.ADD_ROOT_FOLDER.id,\n            label: WorkspaceCommands.ADD_FOLDER.label\n        });\n        registry.registerMenuAction(NavigatorContextMenu.WORKSPACE, {\n            commandId: WorkspaceCommands.REMOVE_FOLDER.id\n        });\n    }\n\n    override registerKeybindings(registry: KeybindingRegistry): void {\n        super.registerKeybindings(registry);\n        registry.registerKeybinding({\n            command: FileNavigatorCommands.REVEAL_IN_NAVIGATOR.id,\n            keybinding: 'alt+r'\n        });\n\n        registry.registerKeybinding({\n            command: WorkspaceCommands.FILE_DELETE.id,\n            keybinding: isOSX ? 'cmd+backspace' : 'del',\n            when: 'filesExplorerFocus'\n        });\n\n        registry.registerKeybinding({\n            command: WorkspaceCommands.FILE_RENAME.id,\n            keybinding: 'f2',\n            when: 'filesExplorerFocus'\n        });\n\n        registry.registerKeybinding({\n            command: FileNavigatorCommands.TOGGLE_HIDDEN_FILES.id,\n            keybinding: 'ctrlcmd+i',\n            when: 'filesExplorerFocus'\n        });\n    }\n\n    async registerToolbarItems(toolbarRegistry: TabBarToolbarRegistry): Promise<void> {\n        toolbarRegistry.registerItem({\n            id: FileNavigatorCommands.NEW_FILE_TOOLBAR.id,\n            command: FileNavigatorCommands.NEW_FILE_TOOLBAR.id,\n            tooltip: nls.localizeByDefault('New File...'),\n            priority: 0,\n        });\n        toolbarRegistry.registerItem({\n            id: FileNavigatorCommands.NEW_FOLDER_TOOLBAR.id,\n            command: FileNavigatorCommands.NEW_FOLDER_TOOLBAR.id,\n            tooltip: nls.localizeByDefault('New Folder...'),\n            priority: 1,\n        });\n        toolbarRegistry.registerItem({\n            id: FileNavigatorCommands.REFRESH_NAVIGATOR.id,\n            command: FileNavigatorCommands.REFRESH_NAVIGATOR.id,\n            tooltip: nls.localizeByDefault('Refresh Explorer'),\n            priority: 2,\n        });\n        toolbarRegistry.registerItem({\n            id: FileNavigatorCommands.COLLAPSE_ALL.id,\n            command: FileNavigatorCommands.COLLAPSE_ALL.id,\n            tooltip: nls.localizeByDefault('Collapse All'),\n            priority: 3,\n        });\n\n        // More (...) toolbar items.\n        this.registerMoreToolbarItem({\n            id: FileNavigatorCommands.TOGGLE_AUTO_REVEAL.id,\n            command: FileNavigatorCommands.TOGGLE_AUTO_REVEAL.id,\n            tooltip: FileNavigatorCommands.TOGGLE_AUTO_REVEAL.label,\n            group: NavigatorMoreToolbarGroups.TOOLS,\n        });\n        this.registerMoreToolbarItem({\n            id: WorkspaceCommands.ADD_FOLDER.id,\n            command: WorkspaceCommands.ADD_FOLDER.id,\n            tooltip: WorkspaceCommands.ADD_FOLDER.label,\n            group: NavigatorMoreToolbarGroups.WORKSPACE,\n        });\n\n        // Open Editors toolbar items.\n        toolbarRegistry.registerItem({\n            id: OpenEditorsCommands.SAVE_ALL_TABS_FROM_TOOLBAR.id,\n            command: OpenEditorsCommands.SAVE_ALL_TABS_FROM_TOOLBAR.id,\n            tooltip: OpenEditorsCommands.SAVE_ALL_TABS_FROM_TOOLBAR.label,\n            priority: 0,\n        });\n        toolbarRegistry.registerItem({\n            id: OpenEditorsCommands.CLOSE_ALL_TABS_FROM_TOOLBAR.id,\n            command: OpenEditorsCommands.CLOSE_ALL_TABS_FROM_TOOLBAR.id,\n            tooltip: OpenEditorsCommands.CLOSE_ALL_TABS_FROM_TOOLBAR.label,\n            priority: 1,\n        });\n    }\n\n    /**\n     * Register commands to the `More Actions...` navigator toolbar item.\n     */\n    public registerMoreToolbarItem = (item: Mutable<TabBarToolbarItem>) => {\n        const commandId = item.command;\n        const id = 'navigator.tabbar.toolbar.' + commandId;\n        const command = this.commandRegistry.getCommand(commandId);\n        this.commandRegistry.registerCommand({ id, iconClass: command && command.iconClass }, {\n            execute: (w, ...args) => w instanceof FileNavigatorWidget\n                && this.commandRegistry.executeCommand(commandId, ...args),\n            isEnabled: (w, ...args) => w instanceof FileNavigatorWidget\n                && this.commandRegistry.isEnabled(commandId, ...args),\n            isVisible: (w, ...args) => w instanceof FileNavigatorWidget\n                && this.commandRegistry.isVisible(commandId, ...args),\n            isToggled: (w, ...args) => w instanceof FileNavigatorWidget\n                && this.commandRegistry.isToggled(commandId, ...args),\n        });\n        item.command = id;\n        this.tabbarToolbarRegistry.registerItem(item);\n    };\n\n    /**\n     * Reveals and selects node in the file navigator to which given widget is related.\n     * Does nothing if given widget undefined or doesn't have related resource.\n     *\n     * @param widget widget file resource of which should be revealed and selected\n     */\n    async selectWidgetFileNode(widget: Widget | undefined): Promise<boolean> {\n        return this.selectFileNode(NavigatableWidget.getUri(widget));\n    }\n\n    async selectFileNode(uri?: URI): Promise<boolean> {\n        if (uri) {\n            const { model } = await this.widget;\n            const node = await model.revealFile(uri);\n            if (SelectableTreeNode.is(node)) {\n                model.selectNode(node);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected onCurrentWidgetChangedHandler(): void {\n        if (this.fileNavigatorPreferences['explorer.autoReveal']) {\n            this.selectWidgetFileNode(this.shell.currentWidget);\n        }\n    }\n\n    /**\n     * Collapse file navigator nodes and set focus on first visible node\n     * - single root workspace: collapse all nodes except root\n     * - multiple root workspace: collapse all nodes, even roots\n     */\n    async collapseFileNavigatorTree(): Promise<void> {\n        const { model } = await this.widget;\n\n        // collapse all child nodes which are not the root (single root workspace)\n        // collapse all root nodes (multiple root workspace)\n        let root = model.root as CompositeTreeNode;\n        if (WorkspaceNode.is(root) && root.children.length === 1) {\n            root = root.children[0];\n        }\n        root.children.forEach(child => CompositeTreeNode.is(child) && model.collapseAll(child));\n\n        // select first visible node\n        const firstChild = WorkspaceNode.is(root) ? root.children[0] : root;\n        if (SelectableTreeNode.is(firstChild)) {\n            model.selectNode(firstChild);\n        }\n    }\n\n    /**\n     * force refresh workspace in navigator\n     */\n    async refreshWorkspace(): Promise<void> {\n        const { model } = await this.widget;\n        await model.refresh();\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2019 David Saunders and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { SelectionService, UriSelection } from '@theia/core/lib/common';\nimport { OpenerService, open } from '@theia/core/lib/browser/opener-service';\nimport { MessageService } from '@theia/core/lib/common/message-service';\nimport { Command } from '@theia/core/lib/common/command';\nimport { DiffUris } from '@theia/core/lib/browser/diff-uris';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { FileOperationError, FileOperationResult } from '@theia/filesystem/lib/common/files';\n\nexport namespace NavigatorDiffCommands {\n    const COMPARE_CATEGORY = 'Compare';\n    export const COMPARE_FIRST = Command.toDefaultLocalizedCommand({\n        id: 'compare:first',\n        category: COMPARE_CATEGORY,\n        label: 'Select for Compare'\n    });\n    export const COMPARE_SECOND = Command.toDefaultLocalizedCommand({\n        id: 'compare:second',\n        category: COMPARE_CATEGORY,\n        label: 'Compare with Selected'\n    });\n}\n\n@injectable()\nexport class NavigatorDiff {\n    @inject(FileService)\n    protected readonly fileService: FileService;\n\n    @inject(OpenerService)\n    protected openerService: OpenerService;\n\n    @inject(MessageService)\n    protected readonly notifications: MessageService;\n\n    @inject(SelectionService)\n    protected readonly selectionService: SelectionService;\n\n    constructor(\n    ) {\n    }\n\n    protected _firstCompareFile: URI | undefined = undefined;\n    protected get firstCompareFile(): URI | undefined {\n        return this._firstCompareFile;\n    }\n    protected set firstCompareFile(uri: URI | undefined) {\n        this._firstCompareFile = uri;\n        this._isFirstFileSelected = true;\n    }\n\n    protected _isFirstFileSelected: boolean;\n    get isFirstFileSelected(): boolean {\n        return this._isFirstFileSelected;\n    }\n\n    protected async isDirectory(uri: URI): Promise<boolean> {\n        try {\n            const stat = await this.fileService.resolve(uri);\n            return stat.isDirectory;\n        } catch (e) {\n            if (e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_NOT_FOUND) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    protected async getURISelection(): Promise<URI | undefined> {\n        const uri = UriSelection.getUri(this.selectionService.selection);\n        if (!uri) {\n            return undefined;\n        }\n\n        if (await this.isDirectory(uri)) {\n            return undefined;\n        }\n\n        return uri;\n    }\n\n    /**\n     * Adds the initial file for comparison\n     * @see SelectionService\n     * @see compareFiles\n     * @returns Promise<boolean> indicating whether the uri is valid\n     */\n    async addFirstComparisonFile(): Promise<boolean> {\n        const uriSelected = await this.getURISelection();\n\n        if (uriSelected === undefined) {\n            return false;\n        }\n\n        this.firstCompareFile = uriSelected;\n\n        return true;\n    }\n\n    /**\n     * Compare selected files.  First file is selected through addFirstComparisonFile\n     * @see SelectionService\n     * @see addFirstComparisonFile\n     * @returns Promise<boolean> indicating whether the comparison was completed successfully\n     */\n    async compareFiles(): Promise<boolean> {\n        const uriSelected = await this.getURISelection();\n\n        if (this.firstCompareFile === undefined || uriSelected === undefined) {\n            return false;\n        }\n        const diffUri = DiffUris.encode(this.firstCompareFile, uriSelected);\n\n        open(this.openerService, diffUri).catch(e => {\n            this.notifications.error(e.message);\n        });\n        return true;\n    }\n}\n"],"names":[],"sourceRoot":""}