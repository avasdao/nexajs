{"version":3,"file":"vendors-node_modules_theia_search-in-workspace_lib_browser_search-in-workspace-factory_js.js","mappings":"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","sources":["webpack:///./node_modules/@theia/search-in-workspace/src/browser/components/search-in-workspace-input.tsx?","webpack:///./node_modules/@theia/search-in-workspace/src/browser/components/search-in-workspace-textarea.tsx?","webpack:///./node_modules/@theia/search-in-workspace/src/browser/search-in-workspace-context-key-service.ts?","webpack:///./node_modules/@theia/search-in-workspace/src/browser/search-in-workspace-factory.ts?","webpack:///./node_modules/@theia/search-in-workspace/src/browser/search-in-workspace-preferences.ts?","webpack:///./node_modules/@theia/search-in-workspace/src/browser/search-in-workspace-result-tree-widget.tsx?","webpack:///./node_modules/@theia/search-in-workspace/src/browser/search-in-workspace-service.ts?","webpack:///./node_modules/@theia/search-in-workspace/src/browser/search-in-workspace-widget.tsx?","webpack:///./node_modules/@theia/search-in-workspace/src/common/search-in-workspace-interface.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as React from '@theia/core/shared/react';\nimport { Key, KeyCode } from '@theia/core/lib/browser';\nimport debounce = require('@theia/core/shared/lodash.debounce');\n\ninterface HistoryState {\n    history: string[];\n    index: number;\n};\ntype InputAttributes = React.InputHTMLAttributes<HTMLInputElement>;\n\nexport class SearchInWorkspaceInput extends React.Component<InputAttributes, HistoryState> {\n    static LIMIT = 100;\n\n    private input = React.createRef<HTMLInputElement>();\n\n    constructor(props: InputAttributes) {\n        super(props);\n        this.state = {\n            history: [],\n            index: 0,\n        };\n    }\n\n    updateState(index: number, history?: string[]): void {\n        this.value = history ? history[index] : this.state.history[index];\n        this.setState(prevState => {\n            const newState = {\n                ...prevState,\n                index,\n            };\n            if (history) {\n                newState.history = history;\n            }\n            return newState;\n        });\n    }\n\n    get value(): string {\n        return this.input.current?.value ?? '';\n    }\n\n    set value(value: string) {\n        if (this.input.current) {\n            this.input.current.value = value;\n        }\n    }\n\n    /**\n     * Handle history navigation without overriding the parent's onKeyDown handler, if any.\n     */\n    protected readonly onKeyDown = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n        if (Key.ARROW_UP.keyCode === KeyCode.createKeyCode(e.nativeEvent).key?.keyCode) {\n            e.preventDefault();\n            this.previousValue();\n        } else if (Key.ARROW_DOWN.keyCode === KeyCode.createKeyCode(e.nativeEvent).key?.keyCode) {\n            e.preventDefault();\n            this.nextValue();\n        }\n        this.props.onKeyDown?.(e);\n    };\n\n    /**\n     * Switch the input's text to the previous value, if any.\n     */\n    previousValue(): void {\n        const { history, index } = this.state;\n        if (!this.value) {\n            this.value = history[index];\n        } else if (index > 0 && index < history.length) {\n            this.updateState(index - 1);\n        }\n    }\n\n    /**\n     * Switch the input's text to the next value, if any.\n     */\n    nextValue(): void {\n        const { history, index } = this.state;\n        if (index === history.length - 1) {\n            this.value = '';\n        } else if (!this.value) {\n            this.value = history[index];\n        } else if (index >= 0 && index < history.length - 1) {\n            this.updateState(index + 1);\n        }\n    }\n\n    /**\n     * Handle history collection without overriding the parent's onChange handler, if any.\n     */\n    protected readonly onChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        this.addToHistory();\n        this.props.onChange?.(e);\n    };\n\n    /**\n     * Add a nonempty current value to the history, if not already present. (Debounced, 1 second delay.)\n     */\n    readonly addToHistory = debounce(this.doAddToHistory, 1000);\n\n    private doAddToHistory(): void {\n        if (!this.value) {\n            return;\n        }\n        const history = this.state.history\n            .filter(term => term !== this.value)\n            .concat(this.value)\n            .slice(-SearchInWorkspaceInput.LIMIT);\n        this.updateState(history.length - 1, history);\n    }\n\n    override render(): React.ReactNode {\n        return (\n            <input\n                {...this.props}\n                onKeyDown={this.onKeyDown}\n                onChange={this.onChange}\n                spellCheck={false}\n                ref={this.input}\n            />\n        );\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Key, KeyCode } from '@theia/core/lib/browser';\nimport * as React from '@theia/core/shared/react';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport debounce = require('@theia/core/shared/lodash.debounce');\n\ninterface HistoryState {\n    history: string[];\n    index: number;\n};\ntype TextareaAttributes = React.TextareaHTMLAttributes<HTMLTextAreaElement>;\n\nexport class SearchInWorkspaceTextArea extends React.Component<TextareaAttributes, HistoryState> {\n    static LIMIT = 100;\n\n    private textarea = React.createRef<HTMLTextAreaElement>();\n\n    constructor(props: TextareaAttributes) {\n        super(props);\n        this.state = {\n            history: [],\n            index: 0,\n        };\n    }\n\n    updateState(index: number, history?: string[]): void {\n        this.value = history ? history[index] : this.state.history[index];\n        this.setState(prevState => {\n            const newState = {\n                ...prevState,\n                index,\n            };\n            if (history) {\n                newState.history = history;\n            }\n            return newState;\n        });\n    }\n\n    get value(): string {\n        return this.textarea.current?.value ?? '';\n    }\n\n    set value(value: string) {\n        if (this.textarea.current) {\n            this.textarea.current.value = value;\n        }\n    }\n\n    /**\n     * Handle history navigation without overriding the parent's onKeyDown handler, if any.\n     */\n    protected readonly onKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>): void => {\n        // Navigate history only when cursor is at first or last position of the textarea\n        if (Key.ARROW_UP.keyCode === KeyCode.createKeyCode(e.nativeEvent).key?.keyCode && e.currentTarget.selectionStart === 0) {\n            e.preventDefault();\n            this.previousValue();\n        } else if (Key.ARROW_DOWN.keyCode === KeyCode.createKeyCode(e.nativeEvent).key?.keyCode && e.currentTarget.selectionEnd === e.currentTarget.value.length) {\n            e.preventDefault();\n            this.nextValue();\n        }\n\n        // Prevent newline on enter\n        if (Key.ENTER.keyCode === KeyCode.createKeyCode(e.nativeEvent).key?.keyCode && !e.nativeEvent.shiftKey) {\n            e.preventDefault();\n        }\n\n        this.props.onKeyDown?.(e);\n    };\n\n    /**\n     * Switch the textarea's text to the previous value, if any.\n     */\n    previousValue(): void {\n        const { history, index } = this.state;\n        if (!this.value) {\n            this.value = history[index];\n        } else if (index > 0 && index < history.length) {\n            this.updateState(index - 1);\n        }\n    }\n\n    /**\n     * Switch the textarea's text to the next value, if any.\n     */\n    nextValue(): void {\n        const { history, index } = this.state;\n        if (index === history.length - 1) {\n            this.value = '';\n        } else if (!this.value) {\n            this.value = history[index];\n        } else if (index >= 0 && index < history.length - 1) {\n            this.updateState(index + 1);\n        }\n    }\n\n    /**\n     * Handle history collection and textarea resizing without overriding the parent's onChange handler, if any.\n     */\n    protected readonly onChange = (e: React.ChangeEvent<HTMLTextAreaElement>): void => {\n        this.addToHistory();\n        this.props.onChange?.(e);\n    };\n\n    /**\n     * Add a nonempty current value to the history, if not already present. (Debounced, 1 second delay.)\n     */\n    readonly addToHistory = debounce(this.doAddToHistory, 1000);\n\n    private doAddToHistory(): void {\n        if (!this.value) {\n            return;\n        }\n        const history = this.state.history\n            .filter(term => term !== this.value)\n            .concat(this.value)\n            .slice(-SearchInWorkspaceTextArea.LIMIT);\n        this.updateState(history.length - 1, history);\n    }\n\n    override render(): React.ReactNode {\n        const { onResize, ...filteredProps } = this.props;\n        return (\n            <TextareaAutosize\n                {...filteredProps}\n                autoCapitalize=\"off\"\n                autoCorrect=\"off\"\n                maxRows={7} /* from VS Code */\n                onChange={this.onChange}\n                onKeyDown={this.onKeyDown}\n                ref={this.textarea}\n                rows={1}\n                spellCheck={false}\n            >\n            </TextareaAutosize>\n        );\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { ContextKeyService, ContextKey } from '@theia/core/lib/browser/context-key-service';\n\n@injectable()\nexport class SearchInWorkspaceContextKeyService {\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    protected _searchViewletVisible: ContextKey<boolean>;\n    get searchViewletVisible(): ContextKey<boolean> {\n        return this._searchViewletVisible;\n    }\n\n    protected _searchViewletFocus: ContextKey<boolean>;\n    get searchViewletFocus(): ContextKey<boolean> {\n        return this._searchViewletFocus;\n    }\n\n    protected searchInputBoxFocus: ContextKey<boolean>;\n    setSearchInputBoxFocus(searchInputBoxFocus: boolean): void {\n        this.searchInputBoxFocus.set(searchInputBoxFocus);\n        this.updateInputBoxFocus();\n    }\n\n    protected replaceInputBoxFocus: ContextKey<boolean>;\n    setReplaceInputBoxFocus(replaceInputBoxFocus: boolean): void {\n        this.replaceInputBoxFocus.set(replaceInputBoxFocus);\n        this.updateInputBoxFocus();\n    }\n\n    protected patternIncludesInputBoxFocus: ContextKey<boolean>;\n    setPatternIncludesInputBoxFocus(patternIncludesInputBoxFocus: boolean): void {\n        this.patternIncludesInputBoxFocus.set(patternIncludesInputBoxFocus);\n        this.updateInputBoxFocus();\n    }\n\n    protected patternExcludesInputBoxFocus: ContextKey<boolean>;\n    setPatternExcludesInputBoxFocus(patternExcludesInputBoxFocus: boolean): void {\n        this.patternExcludesInputBoxFocus.set(patternExcludesInputBoxFocus);\n        this.updateInputBoxFocus();\n    }\n\n    protected inputBoxFocus: ContextKey<boolean>;\n    protected updateInputBoxFocus(): void {\n        this.inputBoxFocus.set(\n            this.searchInputBoxFocus.get() ||\n            this.replaceInputBoxFocus.get() ||\n            this.patternIncludesInputBoxFocus.get() ||\n            this.patternExcludesInputBoxFocus.get()\n        );\n    }\n\n    protected _replaceActive: ContextKey<boolean>;\n    get replaceActive(): ContextKey<boolean> {\n        return this._replaceActive;\n    }\n\n    protected _hasSearchResult: ContextKey<boolean>;\n    get hasSearchResult(): ContextKey<boolean> {\n        return this._hasSearchResult;\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this._searchViewletVisible = this.contextKeyService.createKey<boolean>('searchViewletVisible', false);\n        this._searchViewletFocus = this.contextKeyService.createKey<boolean>('searchViewletFocus', false);\n        this.inputBoxFocus = this.contextKeyService.createKey<boolean>('inputBoxFocus', false);\n        this.searchInputBoxFocus = this.contextKeyService.createKey<boolean>('searchInputBoxFocus', false);\n        this.replaceInputBoxFocus = this.contextKeyService.createKey<boolean>('replaceInputBoxFocus', false);\n        this.patternIncludesInputBoxFocus = this.contextKeyService.createKey<boolean>('patternIncludesInputBoxFocus', false);\n        this.patternExcludesInputBoxFocus = this.contextKeyService.createKey<boolean>('patternExcludesInputBoxFocus', false);\n        this._replaceActive = this.contextKeyService.createKey<boolean>('replaceActive', false);\n        this._hasSearchResult = this.contextKeyService.createKey<boolean>('hasSearchResult', false);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2021 SAP SE or an SAP affiliate company and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport {\n    codicon,\n    ViewContainer,\n    ViewContainerTitleOptions,\n    WidgetFactory,\n    WidgetManager\n} from '@theia/core/lib/browser';\nimport { SearchInWorkspaceWidget } from './search-in-workspace-widget';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport const SEARCH_VIEW_CONTAINER_ID = 'search-view-container';\nexport const SEARCH_VIEW_CONTAINER_TITLE_OPTIONS: ViewContainerTitleOptions = {\n    label: nls.localizeByDefault('Search'),\n    iconClass: codicon('search'),\n    closeable: true\n};\n\n@injectable()\nexport class SearchInWorkspaceFactory implements WidgetFactory {\n\n    readonly id = SEARCH_VIEW_CONTAINER_ID;\n\n    protected searchWidgetOptions: ViewContainer.Factory.WidgetOptions = {\n        canHide: false,\n        initiallyCollapsed: false\n    };\n\n    @inject(ViewContainer.Factory)\n    protected readonly viewContainerFactory: ViewContainer.Factory;\n    @inject(WidgetManager) protected readonly widgetManager: WidgetManager;\n\n    async createWidget(): Promise<ViewContainer> {\n        const viewContainer = this.viewContainerFactory({\n            id: SEARCH_VIEW_CONTAINER_ID,\n            progressLocationId: 'search'\n        });\n        viewContainer.setTitleOptions(SEARCH_VIEW_CONTAINER_TITLE_OPTIONS);\n        const widget = await this.widgetManager.getOrCreateWidget(SearchInWorkspaceWidget.ID);\n        viewContainer.addWidget(widget, this.searchWidgetOptions);\n        return viewContainer;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { nls } from '@theia/core/lib/common/nls';\nimport { PreferenceSchema, PreferenceProxy, PreferenceService, createPreferenceProxy, PreferenceContribution } from '@theia/core/lib/browser/preferences';\nimport { interfaces } from '@theia/core/shared/inversify';\n\nexport const searchInWorkspacePreferencesSchema: PreferenceSchema = {\n    type: 'object',\n    properties: {\n        'search.lineNumbers': {\n            description: nls.localizeByDefault('Controls whether to show line numbers for search results.'),\n            default: false,\n            type: 'boolean',\n        },\n        'search.collapseResults': {\n            description: nls.localizeByDefault('Controls whether the search results will be collapsed or expanded.'),\n            default: 'auto',\n            type: 'string',\n            enum: ['auto', 'alwaysCollapse', 'alwaysExpand'],\n        },\n        'search.quickOpen.includeHistory': {\n            description: nls.localizeByDefault('Whether to include results from recently opened files in the file results for Quick Open.'),\n            default: true,\n            type: 'boolean',\n        },\n        'search.searchOnType': {\n            description: nls.localizeByDefault('Search all files as you type.'),\n            default: true,\n            type: 'boolean',\n        },\n        'search.searchOnTypeDebouncePeriod': {\n            // eslint-disable-next-line max-len\n            markdownDescription: nls.localizeByDefault('When {0} is enabled, controls the timeout in milliseconds between a character being typed and the search starting. Has no effect when {0} is disabled.', '`#search.searchOnType#`'),\n            default: 300,\n            type: 'number',\n        },\n        'search.searchOnEditorModification': {\n            description: nls.localize('theia/search-in-workspace/searchOnEditorModification', 'Search the active editor when modified.'),\n            default: true,\n            type: 'boolean',\n        },\n        'search.smartCase': {\n            // eslint-disable-next-line max-len\n            description: nls.localizeByDefault('Search case-insensitively if the pattern is all lowercase, otherwise, search case-sensitively.'),\n            default: false,\n            type: 'boolean',\n        },\n        'search.followSymlinks': {\n            description: nls.localizeByDefault('Controls whether to follow symlinks while searching.'),\n            default: true,\n            type: 'boolean',\n        }\n    }\n};\n\nexport class SearchInWorkspaceConfiguration {\n    'search.lineNumbers': boolean;\n    'search.collapseResults': string;\n    'search.searchOnType': boolean;\n    'search.searchOnTypeDebouncePeriod': number;\n    'search.searchOnEditorModification': boolean;\n    'search.smartCase': boolean;\n    'search.followSymlinks': boolean;\n}\n\nexport const SearchInWorkspacePreferenceContribution = Symbol('SearchInWorkspacePreferenceContribution');\nexport const SearchInWorkspacePreferences = Symbol('SearchInWorkspacePreferences');\nexport type SearchInWorkspacePreferences = PreferenceProxy<SearchInWorkspaceConfiguration>;\n\nexport function createSearchInWorkspacePreferences(preferences: PreferenceService, schema: PreferenceSchema = searchInWorkspacePreferencesSchema): SearchInWorkspacePreferences {\n    return createPreferenceProxy(preferences, schema);\n}\n\nexport function bindSearchInWorkspacePreferences(bind: interfaces.Bind): void {\n    bind(SearchInWorkspacePreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        const contribution = ctx.container.get<PreferenceContribution>(SearchInWorkspacePreferenceContribution);\n        return createSearchInWorkspacePreferences(preferences, contribution.schema);\n    }).inSingletonScope();\n    bind(SearchInWorkspacePreferenceContribution).toConstantValue({ schema: searchInWorkspacePreferencesSchema });\n    bind(PreferenceContribution).toService(SearchInWorkspacePreferenceContribution);\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport {\n    TreeWidget,\n    CompositeTreeNode,\n    ConfirmDialog,\n    ContextMenuRenderer,\n    ExpandableTreeNode,\n    SelectableTreeNode,\n    TreeModel,\n    TreeNode,\n    NodeProps,\n    TreeProps,\n    TreeExpansionService,\n    ApplicationShell,\n    DiffUris,\n    TREE_NODE_INFO_CLASS,\n    codicon,\n    TopDownTreeIterator\n} from '@theia/core/lib/browser';\nimport { CancellationTokenSource, Emitter, EOL, Event, ProgressService } from '@theia/core';\nimport {\n    EditorManager, EditorDecoration, TrackedRangeStickiness, OverviewRulerLane,\n    EditorWidget, EditorOpenerOptions, FindMatch, Position\n} from '@theia/editor/lib/browser';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { FileResourceResolver, FileSystemPreferences } from '@theia/filesystem/lib/browser';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { SearchInWorkspaceResult, SearchInWorkspaceOptions, SearchMatch } from '../common/search-in-workspace-interface';\nimport { SearchInWorkspaceService } from './search-in-workspace-service';\nimport { MEMORY_TEXT } from '@theia/core/lib/common';\nimport URI from '@theia/core/lib/common/uri';\nimport * as React from '@theia/core/shared/react';\nimport { SearchInWorkspacePreferences } from './search-in-workspace-preferences';\nimport { ColorRegistry } from '@theia/core/lib/browser/color-registry';\nimport * as minimatch from 'minimatch';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport debounce = require('@theia/core/shared/lodash.debounce');\nimport { nls } from '@theia/core/lib/common/nls';\n\nconst ROOT_ID = 'ResultTree';\n\nexport interface SearchInWorkspaceRoot extends CompositeTreeNode {\n    children: SearchInWorkspaceRootFolderNode[];\n}\nexport namespace SearchInWorkspaceRoot {\n    export function is(node: unknown): node is SearchInWorkspaceRoot {\n        return CompositeTreeNode.is(node) && node.id === ROOT_ID;\n    }\n}\nexport interface SearchInWorkspaceRootFolderNode extends ExpandableTreeNode, SelectableTreeNode { // root folder node\n    name?: undefined\n    icon?: undefined\n    children: SearchInWorkspaceFileNode[];\n    parent: SearchInWorkspaceRoot;\n    path: string;\n    folderUri: string;\n    uri: URI;\n}\nexport namespace SearchInWorkspaceRootFolderNode {\n    export function is(node: unknown): node is SearchInWorkspaceRootFolderNode {\n        return ExpandableTreeNode.is(node) && SelectableTreeNode.is(node) && 'path' in node && 'folderUri' in node && !('fileUri' in node);\n    }\n}\n\nexport interface SearchInWorkspaceFileNode extends ExpandableTreeNode, SelectableTreeNode { // file node\n    name?: undefined\n    icon?: undefined\n    children: SearchInWorkspaceResultLineNode[];\n    parent: SearchInWorkspaceRootFolderNode;\n    path: string;\n    fileUri: string;\n    uri: URI;\n}\nexport namespace SearchInWorkspaceFileNode {\n    export function is(node: unknown): node is SearchInWorkspaceFileNode {\n        return ExpandableTreeNode.is(node) && SelectableTreeNode.is(node) && 'path' in node && 'fileUri' in node && !('folderUri' in node);\n    }\n}\n\nexport interface SearchInWorkspaceResultLineNode extends SelectableTreeNode, SearchInWorkspaceResult, SearchMatch { // line node\n    parent: SearchInWorkspaceFileNode\n}\nexport namespace SearchInWorkspaceResultLineNode {\n    export function is(node: unknown): node is SearchInWorkspaceResultLineNode {\n        return SelectableTreeNode.is(node) && 'line' in node && 'character' in node && 'lineText' in node;\n    }\n}\n\n@injectable()\nexport class SearchInWorkspaceResultTreeWidget extends TreeWidget {\n\n    protected resultTree: Map<string, SearchInWorkspaceRootFolderNode>;\n\n    protected _showReplaceButtons = false;\n    protected _replaceTerm = '';\n    protected searchTerm = '';\n    protected searchOptions: SearchInWorkspaceOptions;\n\n    protected readonly startSearchOnModification = (activeEditor: EditorWidget) => debounce(\n        () => this.searchActiveEditor(activeEditor, this.searchTerm, this.searchOptions),\n        this.searchOnEditorModificationDelay\n    );\n\n    protected readonly searchOnEditorModificationDelay = 300;\n    protected readonly toDisposeOnActiveEditorChanged = new DisposableCollection();\n\n    // The default root name to add external search results in the case that a workspace is opened.\n    protected readonly defaultRootName = nls.localizeByDefault('Other files');\n    protected forceVisibleRootNode = false;\n\n    protected appliedDecorations = new Map<string, string[]>();\n\n    cancelIndicator?: CancellationTokenSource;\n\n    protected changeEmitter = new Emitter<Map<string, SearchInWorkspaceRootFolderNode>>();\n\n    protected onExpansionChangedEmitter = new Emitter();\n    readonly onExpansionChanged: Event<void> = this.onExpansionChangedEmitter.event;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected focusInputEmitter = new Emitter<any>();\n\n    @inject(SearchInWorkspaceService) protected readonly searchService: SearchInWorkspaceService;\n    @inject(EditorManager) protected readonly editorManager: EditorManager;\n    @inject(FileResourceResolver) protected readonly fileResourceResolver: FileResourceResolver;\n    @inject(ApplicationShell) protected readonly shell: ApplicationShell;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(TreeExpansionService) protected readonly expansionService: TreeExpansionService;\n    @inject(SearchInWorkspacePreferences) protected readonly searchInWorkspacePreferences: SearchInWorkspacePreferences;\n    @inject(ProgressService) protected readonly progressService: ProgressService;\n    @inject(ColorRegistry) protected readonly colorRegistry: ColorRegistry;\n    @inject(FileSystemPreferences) protected readonly filesystemPreferences: FileSystemPreferences;\n    @inject(FileService) protected readonly fileService: FileService;\n\n    constructor(\n        @inject(TreeProps) props: TreeProps,\n        @inject(TreeModel) model: TreeModel,\n        @inject(ContextMenuRenderer) contextMenuRenderer: ContextMenuRenderer\n    ) {\n        super(props, model, contextMenuRenderer);\n\n        model.root = {\n            id: ROOT_ID,\n            parent: undefined,\n            visible: false,\n            children: []\n        } as SearchInWorkspaceRoot;\n\n        this.toDispose.push(model.onSelectionChanged(nodes => {\n            const node = nodes[0];\n            if (SearchInWorkspaceResultLineNode.is(node)) {\n                this.doOpen(node, true, true);\n            }\n        }));\n        this.toDispose.push(model.onOpenNode(node => {\n            if (SearchInWorkspaceResultLineNode.is(node)) {\n                this.doOpen(node, true, false);\n            }\n        }));\n\n        this.resultTree = new Map<string, SearchInWorkspaceRootFolderNode>();\n        this.toDispose.push(model.onNodeRefreshed(() => this.changeEmitter.fire(this.resultTree)));\n    }\n\n    @postConstruct()\n    protected override init(): void {\n        super.init();\n        this.addClass('resultContainer');\n\n        this.toDispose.push(this.changeEmitter);\n        this.toDispose.push(this.focusInputEmitter);\n\n        this.toDispose.push(this.editorManager.onActiveEditorChanged(activeEditor => {\n            this.updateCurrentEditorDecorations();\n            this.toDisposeOnActiveEditorChanged.dispose();\n            this.toDispose.push(this.toDisposeOnActiveEditorChanged);\n            if (activeEditor) {\n                this.toDisposeOnActiveEditorChanged.push(activeEditor.editor.onDocumentContentChanged(() => {\n                    if (this.searchTerm !== '' && this.searchInWorkspacePreferences['search.searchOnEditorModification']) {\n                        this.startSearchOnModification(activeEditor)();\n                    }\n                }));\n            }\n        }));\n\n        this.toDispose.push(this.searchInWorkspacePreferences.onPreferenceChanged(() => {\n            this.update();\n        }));\n\n        this.toDispose.push(this.fileService.onDidFilesChange(event => {\n            if (event.gotDeleted()) {\n                event.getDeleted().forEach(deletedFile => {\n                    const fileNodes = this.getFileNodesByUri(deletedFile.resource);\n                    fileNodes.forEach(node => this.removeFileNode(node));\n                });\n                this.model.refresh();\n            }\n        }));\n\n        this.toDispose.push(this.model.onExpansionChanged(() => {\n            this.onExpansionChangedEmitter.fire(undefined);\n        }));\n    }\n\n    get fileNumber(): number {\n        let num = 0;\n        for (const rootFolderNode of this.resultTree.values()) {\n            num += rootFolderNode.children.length;\n        }\n        return num;\n    }\n\n    set showReplaceButtons(srb: boolean) {\n        this._showReplaceButtons = srb;\n        this.update();\n    }\n\n    set replaceTerm(rt: string) {\n        this._replaceTerm = rt;\n        this.update();\n    }\n\n    get isReplacing(): boolean {\n        return this._replaceTerm !== '' && this._showReplaceButtons;\n    }\n\n    get onChange(): Event<Map<string, SearchInWorkspaceRootFolderNode>> {\n        return this.changeEmitter.event;\n    }\n\n    get onFocusInput(): Event<void> {\n        return this.focusInputEmitter.event;\n    }\n\n    collapseAll(): void {\n        for (const rootFolderNode of this.resultTree.values()) {\n            for (const fileNode of rootFolderNode.children) {\n                this.expansionService.collapseNode(fileNode);\n            }\n            if (rootFolderNode.visible) {\n                this.expansionService.collapseNode(rootFolderNode);\n            }\n        }\n    }\n\n    expandAll(): void {\n        for (const rootFolderNode of this.resultTree.values()) {\n            for (const fileNode of rootFolderNode.children) {\n                this.expansionService.expandNode(fileNode);\n            }\n            if (rootFolderNode.visible) {\n                this.expansionService.expandNode(rootFolderNode);\n            }\n        }\n    }\n\n    areResultsCollapsed(): boolean {\n        for (const rootFolderNode of this.resultTree.values()) {\n            for (const fileNode of rootFolderNode.children) {\n                if (!ExpandableTreeNode.isCollapsed(fileNode)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Find matches for the given editor.\n     * @param searchTerm the search term.\n     * @param widget the editor widget.\n     * @param searchOptions the search options to apply.\n     *\n     * @returns the list of matches.\n     */\n    protected findMatches(searchTerm: string, widget: EditorWidget, searchOptions: SearchInWorkspaceOptions): SearchMatch[] {\n        if (!widget.editor.document.findMatches) {\n            return [];\n        }\n        const results: FindMatch[] = widget.editor.document.findMatches({\n            searchString: searchTerm,\n            isRegex: !!searchOptions.useRegExp,\n            matchCase: !!searchOptions.matchCase,\n            matchWholeWord: !!searchOptions.matchWholeWord,\n            limitResultCount: searchOptions.maxResults\n        });\n\n        const matches: SearchMatch[] = [];\n        results.forEach(r => {\n            const numberOfLines = searchTerm.split('\\n').length;\n            const lineTexts = [];\n            for (let i = 0; i < numberOfLines; i++) {\n                lineTexts.push(widget.editor.document.getLineContent(r.range.start.line + i));\n            }\n            matches.push({\n                line: r.range.start.line,\n                character: r.range.start.character,\n                length: searchTerm.length,\n                lineText: lineTexts.join('\\n')\n            });\n        });\n\n        return matches;\n    }\n\n    /**\n     * Convert a pattern to match all directories.\n     * @param workspaceRootUri the uri of the current workspace root.\n     * @param pattern the pattern to be converted.\n     */\n    protected convertPatternToGlob(workspaceRootUri: URI | undefined, pattern: string): string {\n        if (pattern.startsWith('**/')) {\n            return pattern;\n        }\n        if (pattern.startsWith('./')) {\n            if (workspaceRootUri === undefined) {\n                return pattern;\n            }\n            return workspaceRootUri.toString() + pattern.replace('./', '/');\n        }\n        return pattern.startsWith('/')\n            ? '**' + pattern\n            : '**/' + pattern;\n    }\n\n    /**\n     * Determine if the URI matches any of the patterns.\n     * @param uri the editor URI.\n     * @param patterns the glob patterns to verify.\n     */\n    protected inPatternList(uri: URI, patterns: string[]): boolean {\n        const opts: minimatch.IOptions = { dot: true, matchBase: true };\n        return patterns.some(pattern => minimatch(\n            uri.toString(),\n            this.convertPatternToGlob(this.workspaceService.getWorkspaceRootUri(uri), pattern),\n            opts\n        ));\n    }\n\n    /**\n     * Determine if the given editor satisfies the filtering criteria.\n     * An editor should be searched only if:\n     * - it is not excluded through the `excludes` list.\n     * - it is not explicitly present in a non-empty `includes` list.\n     */\n    protected shouldApplySearch(editorWidget: EditorWidget, searchOptions: SearchInWorkspaceOptions): boolean {\n        const excludePatterns = this.getExcludeGlobs(searchOptions.exclude);\n        if (this.inPatternList(editorWidget.editor.uri, excludePatterns)) {\n            return false;\n        }\n\n        const includePatterns = searchOptions.include;\n        if (!!includePatterns?.length && !this.inPatternList(editorWidget.editor.uri, includePatterns)) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Search the active editor only and update the tree with those results.\n     */\n    protected searchActiveEditor(activeEditor: EditorWidget, searchTerm: string, searchOptions: SearchInWorkspaceOptions): void {\n        const includesExternalResults = () => !!this.resultTree.get(this.defaultRootName);\n\n        // Check if outside workspace results are present before searching.\n        const hasExternalResultsBefore = includesExternalResults();\n\n        // Collect search results for the given editor.\n        const results = this.searchInEditor(activeEditor, searchTerm, searchOptions);\n\n        // Update the tree by removing the result node, and add new results if applicable.\n        this.getFileNodesByUri(activeEditor.editor.uri).forEach(fileNode => this.removeFileNode(fileNode));\n        if (results) {\n            this.appendToResultTree(results);\n        }\n\n        // Check if outside workspace results are present after searching.\n        const hasExternalResultsAfter = includesExternalResults();\n\n        // Redo a search to update the tree node visibility if:\n        // + `Other files` node was present, now it is not.\n        // + `Other files` node was not present, now it is.\n        if (hasExternalResultsBefore ? !hasExternalResultsAfter : hasExternalResultsAfter) {\n            this.search(this.searchTerm, this.searchOptions);\n            return;\n        }\n\n        this.handleSearchCompleted();\n    }\n\n    /**\n     * Perform a search in all open editors.\n     * @param searchTerm the search term.\n     * @param searchOptions the search options to apply.\n     *\n     * @returns the tuple of result count, and the list of search results.\n     */\n    protected searchInOpenEditors(searchTerm: string, searchOptions: SearchInWorkspaceOptions): {\n        numberOfResults: number,\n        matches: SearchInWorkspaceResult[]\n    } {\n        // Track the number of results found.\n        let numberOfResults = 0;\n\n        const searchResults: SearchInWorkspaceResult[] = [];\n\n        this.editorManager.all.forEach(e => {\n            const editorResults = this.searchInEditor(e, searchTerm, searchOptions);\n            if (editorResults) {\n                numberOfResults += editorResults.matches.length;\n                searchResults.push(editorResults);\n            }\n        });\n\n        return {\n            numberOfResults,\n            matches: searchResults\n        };\n    }\n\n    /**\n     * Perform a search in the target editor.\n     * @param editorWidget the editor widget.\n     * @param searchTerm the search term.\n     * @param searchOptions the search options to apply.\n     *\n     * @returns the search results from the given editor, undefined if the editor is either filtered or has no matches found.\n     */\n    protected searchInEditor(editorWidget: EditorWidget, searchTerm: string, searchOptions: SearchInWorkspaceOptions): SearchInWorkspaceResult | undefined {\n        if (!this.shouldApplySearch(editorWidget, searchOptions)) {\n            return undefined;\n        }\n\n        const matches: SearchMatch[] = this.findMatches(searchTerm, editorWidget, searchOptions);\n        if (matches.length <= 0) {\n            return undefined;\n        }\n\n        const fileUri = editorWidget.editor.uri.toString();\n        const root: string | undefined = this.workspaceService.getWorkspaceRootUri(editorWidget.editor.uri)?.toString();\n        return {\n            root: root ?? this.defaultRootName,\n            fileUri,\n            matches\n        };\n    }\n\n    /**\n     * Append search results to the result tree.\n     * @param result Search result.\n     */\n    protected appendToResultTree(result: SearchInWorkspaceResult): void {\n        const collapseValue: string = this.searchInWorkspacePreferences['search.collapseResults'];\n        let path: string;\n        if (result.root === this.defaultRootName) {\n            path = new URI(result.fileUri).path.dir.fsPath();\n        } else {\n            path = this.filenameAndPath(result.root, result.fileUri).path;\n        }\n        const tree = this.resultTree;\n        let rootFolderNode = tree.get(result.root);\n        if (!rootFolderNode) {\n            rootFolderNode = this.createRootFolderNode(result.root);\n            tree.set(result.root, rootFolderNode);\n        }\n        let fileNode = rootFolderNode.children.find(f => f.fileUri === result.fileUri);\n        if (!fileNode) {\n            fileNode = this.createFileNode(result.root, path, result.fileUri, rootFolderNode);\n            rootFolderNode.children.push(fileNode);\n        }\n        for (const match of result.matches) {\n            const line = this.createResultLineNode(result, match, fileNode);\n            if (fileNode.children.findIndex(lineNode => lineNode.id === line.id) < 0) {\n                fileNode.children.push(line);\n            }\n        }\n        this.collapseFileNode(fileNode, collapseValue);\n    }\n\n    /**\n     * Handle when searching completed.\n     */\n    protected handleSearchCompleted(cancelIndicator?: CancellationTokenSource): void {\n        if (cancelIndicator) {\n            cancelIndicator.cancel();\n        }\n        this.sortResultTree();\n        this.refreshModelChildren();\n    }\n\n    /**\n     * Sort the result tree by URIs.\n     */\n    protected sortResultTree(): void {\n        // Sort the result map by folder URI.\n        const entries = [...this.resultTree.entries()];\n        entries.sort(([, a], [, b]) => this.compare(a.folderUri, b.folderUri));\n        this.resultTree = new Map(entries);\n        // Update the list of children nodes, sorting them by their file URI.\n        entries.forEach(([, folder]) => {\n            folder.children.sort((a, b) => this.compare(a.fileUri, b.fileUri));\n        });\n    }\n\n    /**\n     * Search and populate the result tree with matches.\n     * @param searchTerm the search term.\n     * @param searchOptions the search options to apply.\n     */\n    async search(searchTerm: string, searchOptions: SearchInWorkspaceOptions): Promise<void> {\n        this.searchTerm = searchTerm;\n        this.searchOptions = searchOptions;\n        searchOptions = {\n            ...searchOptions,\n            exclude: this.getExcludeGlobs(searchOptions.exclude)\n        };\n        this.resultTree.clear();\n        this.forceVisibleRootNode = false;\n        if (this.cancelIndicator) {\n            this.cancelIndicator.cancel();\n        }\n        if (searchTerm === '') {\n            this.refreshModelChildren();\n            return;\n        }\n        this.cancelIndicator = new CancellationTokenSource();\n        const cancelIndicator = this.cancelIndicator;\n        const token = this.cancelIndicator.token;\n        const progress = await this.progressService.showProgress({ text: `search: ${searchTerm}`, options: { location: 'search' } });\n        token.onCancellationRequested(() => {\n            progress.cancel();\n            if (searchId) {\n                this.searchService.cancel(searchId);\n            }\n            this.cancelIndicator = undefined;\n            this.changeEmitter.fire(this.resultTree);\n        });\n\n        // Collect search results for opened editors which otherwise may not be found by ripgrep (ex: dirty editors).\n        const { numberOfResults, matches } = this.searchInOpenEditors(searchTerm, searchOptions);\n\n        // The root node is visible if outside workspace results are found and workspace root(s) are present.\n        this.forceVisibleRootNode = matches.some(m => m.root === this.defaultRootName) && this.workspaceService.opened;\n\n        matches.forEach(m => this.appendToResultTree(m));\n\n        // Exclude files already covered by searching open editors.\n        this.editorManager.all.forEach(e => {\n            const excludePath: string = e.editor.uri.path.toString();\n            searchOptions.exclude = searchOptions.exclude ? searchOptions.exclude.concat(excludePath) : [excludePath];\n        });\n\n        // Reduce `maxResults` due to editor results.\n        if (searchOptions.maxResults) {\n            searchOptions.maxResults -= numberOfResults;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let pendingRefreshTimeout: any;\n        const searchId = await this.searchService.search(searchTerm, {\n            onResult: (aSearchId: number, result: SearchInWorkspaceResult) => {\n                if (token.isCancellationRequested || aSearchId !== searchId) {\n                    return;\n                }\n                this.appendToResultTree(result);\n                if (pendingRefreshTimeout) {\n                    clearTimeout(pendingRefreshTimeout);\n                }\n                pendingRefreshTimeout = setTimeout(() => this.refreshModelChildren(), 100);\n            },\n            onDone: () => {\n                this.handleSearchCompleted(cancelIndicator);\n            }\n        }, searchOptions).catch(() => {\n            this.handleSearchCompleted(cancelIndicator);\n        });\n    }\n\n    focusFirstResult(): void {\n        if (SearchInWorkspaceRoot.is(this.model.root) && this.model.root.children.length > 0) {\n            const node = this.model.root.children[0];\n            if (SelectableTreeNode.is(node)) {\n                this.node.focus();\n                this.model.selectNode(node);\n            }\n        }\n    }\n\n    /**\n     * Collapse the search-in-workspace file node\n     * based on the preference value.\n     */\n    protected collapseFileNode(node: SearchInWorkspaceFileNode, preferenceValue: string): void {\n        if (preferenceValue === 'auto' && node.children.length >= 10) {\n            node.expanded = false;\n        } else if (preferenceValue === 'alwaysCollapse') {\n            node.expanded = false;\n        } else if (preferenceValue === 'alwaysExpand') {\n            node.expanded = true;\n        }\n    }\n\n    protected override handleUp(event: KeyboardEvent): void {\n        if (!this.model.getPrevSelectableNode(this.model.getFocusedNode())) {\n            this.focusInputEmitter.fire(true);\n        } else {\n            super.handleUp(event);\n        }\n    }\n\n    protected async refreshModelChildren(): Promise<void> {\n        if (SearchInWorkspaceRoot.is(this.model.root)) {\n            this.model.root.children = Array.from(this.resultTree.values());\n            this.model.refresh();\n            this.updateCurrentEditorDecorations();\n        }\n    }\n\n    protected updateCurrentEditorDecorations(): void {\n        this.shell.allTabBars.forEach(tb => {\n            const currentTitle = tb.currentTitle;\n            if (currentTitle && currentTitle.owner instanceof EditorWidget) {\n                const widget = currentTitle.owner;\n                const fileNodes = this.getFileNodesByUri(widget.editor.uri);\n                if (fileNodes.length > 0) {\n                    fileNodes.forEach(node => {\n                        this.decorateEditor(node, widget);\n                    });\n                } else {\n                    this.decorateEditor(undefined, widget);\n                }\n            }\n        });\n\n        const currentWidget = this.editorManager.currentEditor;\n        if (currentWidget) {\n            const fileNodes = this.getFileNodesByUri(currentWidget.editor.uri);\n            fileNodes.forEach(node => {\n                this.decorateEditor(node, currentWidget);\n            });\n        }\n    }\n\n    protected createRootFolderNode(rootUri: string): SearchInWorkspaceRootFolderNode {\n        const uri = new URI(rootUri);\n        return {\n            selected: false,\n            path: uri.path.fsPath(),\n            folderUri: rootUri,\n            uri: new URI(rootUri),\n            children: [],\n            expanded: true,\n            id: rootUri,\n            parent: this.model.root as SearchInWorkspaceRoot,\n            visible: this.forceVisibleRootNode || this.workspaceService.isMultiRootWorkspaceOpened\n        };\n    }\n\n    protected createFileNode(rootUri: string, path: string, fileUri: string, parent: SearchInWorkspaceRootFolderNode): SearchInWorkspaceFileNode {\n        return {\n            selected: false,\n            path,\n            children: [],\n            expanded: true,\n            id: `${rootUri}::${fileUri}`,\n            parent,\n            fileUri,\n            uri: new URI(fileUri),\n        };\n    }\n\n    protected createResultLineNode(result: SearchInWorkspaceResult, match: SearchMatch, fileNode: SearchInWorkspaceFileNode): SearchInWorkspaceResultLineNode {\n        return {\n            ...result,\n            ...match,\n            selected: false,\n            id: result.fileUri + '-' + match.line + '-' + match.character + '-' + match.length,\n            name: typeof match.lineText === 'string' ? match.lineText : match.lineText.text,\n            parent: fileNode\n        };\n    }\n\n    protected getFileNodesByUri(uri: URI): SearchInWorkspaceFileNode[] {\n        const nodes: SearchInWorkspaceFileNode[] = [];\n        const fileUri = uri.withScheme('file').toString();\n        for (const rootFolderNode of this.resultTree.values()) {\n            const rootUri = new URI(rootFolderNode.path).withScheme('file');\n            if (rootUri.isEqualOrParent(uri) || rootFolderNode.id === this.defaultRootName) {\n                for (const fileNode of rootFolderNode.children) {\n                    if (fileNode.fileUri === fileUri) {\n                        nodes.push(fileNode);\n                    }\n                }\n            }\n        }\n        return nodes;\n    }\n\n    protected filenameAndPath(rootUriStr: string, uriStr: string): { name: string, path: string } {\n        const uri: URI = new URI(uriStr);\n        const relativePath = new URI(rootUriStr).relative(uri.parent);\n        return {\n            name: this.labelProvider.getName(uri),\n            path: relativePath ? relativePath.fsPath() : ''\n        };\n    }\n\n    protected override getDepthPadding(depth: number): number {\n        return super.getDepthPadding(depth) + 5;\n    }\n\n    protected override renderCaption(node: TreeNode, props: NodeProps): React.ReactNode {\n        if (SearchInWorkspaceRootFolderNode.is(node)) {\n            return this.renderRootFolderNode(node);\n        } else if (SearchInWorkspaceFileNode.is(node)) {\n            return this.renderFileNode(node);\n        } else if (SearchInWorkspaceResultLineNode.is(node)) {\n            return this.renderResultLineNode(node);\n        }\n        return '';\n    }\n\n    protected override renderTailDecorations(node: TreeNode, props: NodeProps): React.ReactNode {\n        return <div className='result-node-buttons'>\n            {this._showReplaceButtons && this.renderReplaceButton(node)}\n            {this.renderRemoveButton(node)}\n        </div>;\n    }\n\n    protected doReplace(node: TreeNode, e: React.MouseEvent<HTMLElement>): void {\n        const selection = SelectableTreeNode.isSelected(node) ? (this.selectionService.selection as SelectableTreeNode[]) : [node];\n        selection.forEach(n => this.replace(n));\n        e.stopPropagation();\n    }\n\n    protected renderReplaceButton(node: TreeNode): React.ReactNode {\n        const isResultLineNode = SearchInWorkspaceResultLineNode.is(node);\n        return <span className={isResultLineNode ? codicon('replace') : codicon('replace-all')}\n            onClick={e => this.doReplace(node, e)}\n            title={isResultLineNode\n                ? nls.localizeByDefault('Replace')\n                : nls.localizeByDefault('Replace All')\n            }></span>;\n    }\n\n    protected getFileCount(node: TreeNode): number {\n        if (SearchInWorkspaceRoot.is(node)) {\n            return node.children.reduce((acc, current) => acc + this.getFileCount(current), 0);\n        } else if (SearchInWorkspaceRootFolderNode.is(node)) {\n            return node.children.length;\n        } else if (SearchInWorkspaceFileNode.is(node)) {\n            return 1;\n        }\n        return 0;\n    }\n\n    protected getResultCount(node: TreeNode): number {\n        if (SearchInWorkspaceRoot.is(node)) {\n            return node.children.reduce((acc, current) => acc + this.getResultCount(current), 0);\n        } else if (SearchInWorkspaceRootFolderNode.is(node)) {\n            return node.children.reduce((acc, current) => acc + this.getResultCount(current), 0);\n        } else if (SearchInWorkspaceFileNode.is(node)) {\n            return node.children.length;\n        } else if (SearchInWorkspaceResultLineNode.is(node)) {\n            return 1;\n        }\n        return 0;\n    }\n\n    /**\n     * Replace results under the node passed into the function. If node is undefined, replace all results.\n     * @param node Node in the tree widget where the \"replace all\" operation is performed\n     */\n    async replace(node: TreeNode | undefined): Promise<void> {\n        const replaceForNode = node || this.model.root!;\n        const needConfirm = !SearchInWorkspaceFileNode.is(node) && !SearchInWorkspaceResultLineNode.is(node);\n        const replacementText = this._replaceTerm;\n        if (!needConfirm || await this.confirmReplaceAll(this.getResultCount(replaceForNode), this.getFileCount(replaceForNode), replacementText)) {\n            (node ? [node] : Array.from(this.resultTree.values())).forEach(n => {\n                this.replaceResult(n, !!node, replacementText);\n                this.removeNode(n);\n            });\n        }\n    }\n\n    protected confirmReplaceAll(resultNumber: number, fileNumber: number, replacementText: string): Promise<boolean | undefined> {\n        return new ConfirmDialog({\n            title: nls.localizeByDefault('Replace All'),\n            msg: this.buildReplaceAllConfirmationMessage(resultNumber, fileNumber, replacementText)\n        }).open();\n    }\n\n    protected buildReplaceAllConfirmationMessage(occurrences: number, fileCount: number, replaceValue: string): string {\n        if (occurrences === 1) {\n            if (fileCount === 1) {\n                if (replaceValue) {\n                    return nls.localizeByDefault(\n                        \"Replace {0} occurrence across {1} file with '{2}'?\", occurrences, fileCount, replaceValue);\n                }\n\n                return nls.localizeByDefault(\n                    'Replace {0} occurrence across {1} file?', occurrences, fileCount);\n            }\n\n            if (replaceValue) {\n                return nls.localizeByDefault(\n                    \"Replace {0} occurrence across {1} files with '{2}'?\", occurrences, fileCount, replaceValue);\n            }\n\n            return nls.localizeByDefault(\n                'Replace {0} occurrence across {1} files?', occurrences, fileCount);\n        }\n\n        if (fileCount === 1) {\n            if (replaceValue) {\n                return nls.localizeByDefault(\n                    \"Replace {0} occurrences across {1} file with '{2}'?\", occurrences, fileCount, replaceValue);\n            }\n\n            return nls.localizeByDefault(\n                'Replace {0} occurrences across {1} file?', occurrences, fileCount);\n        }\n\n        if (replaceValue) {\n            return nls.localizeByDefault(\n                \"Replace {0} occurrences across {1} files with '{2}'?\", occurrences, fileCount, replaceValue);\n        }\n\n        return nls.localizeByDefault(\n            'Replace {0} occurrences across {1} files?', occurrences, fileCount);\n    }\n\n    protected updateRightResults(node: SearchInWorkspaceResultLineNode): void {\n        const fileNode = node.parent;\n        const rightPositionedNodes = fileNode.children.filter(rl => rl.line === node.line && rl.character > node.character);\n        const diff = this._replaceTerm.length - this.searchTerm.length;\n        rightPositionedNodes.forEach(r => r.character += diff);\n    }\n\n    /**\n     * Replace text either in all search matches under a node or in all search matches, and save the changes.\n     * @param node - node in the tree widget in which the \"replace all\" is performed.\n     * @param {boolean} replaceOne - whether the function is to replace all matches under a node. If it is false, replace all.\n     * @param replacementText - text to be used for all replacements in the current replacement cycle.\n     */\n    protected async replaceResult(node: TreeNode, replaceOne: boolean, replacementText: string): Promise<void> {\n        const toReplace: SearchInWorkspaceResultLineNode[] = [];\n        if (SearchInWorkspaceRootFolderNode.is(node)) {\n            node.children.forEach(fileNode => this.replaceResult(fileNode, replaceOne, replacementText));\n        } else if (SearchInWorkspaceFileNode.is(node)) {\n            toReplace.push(...node.children);\n        } else if (SearchInWorkspaceResultLineNode.is(node)) {\n            toReplace.push(node);\n            this.updateRightResults(node);\n        }\n\n        if (toReplace.length > 0) {\n            // Store the state of all tracked editors before another editor widget might be created for text replacing.\n            const trackedEditors: EditorWidget[] = this.editorManager.all;\n            // Open the file only if the function is called to replace all matches under a specific node.\n            const widget: EditorWidget = replaceOne ? await this.doOpen(toReplace[0]) : await this.doGetWidget(toReplace[0]);\n            const source: string = widget.editor.document.getText();\n\n            const replaceOperations = toReplace.map(resultLineNode => ({\n                text: replacementText,\n                range: {\n                    start: {\n                        line: resultLineNode.line - 1,\n                        character: resultLineNode.character - 1\n                    },\n                    end: this.findEndCharacterPosition(resultLineNode),\n                }\n            }));\n\n            // Replace the text.\n            await widget.editor.replaceText({\n                source,\n                replaceOperations\n            });\n            // Save the text replacement changes in the editor.\n            await widget.saveable.save();\n            // Dispose the widget if it is not opened but created for `replaceAll`.\n            if (!replaceOne) {\n                if (trackedEditors.indexOf(widget) === -1) {\n                    widget.dispose();\n                }\n            }\n        }\n    }\n\n    protected readonly remove = (node: TreeNode, e: React.MouseEvent<HTMLElement>) => this.doRemove(node, e);\n    protected doRemove(node: TreeNode, e: React.MouseEvent<HTMLElement>): void {\n        const selection = SelectableTreeNode.isSelected(node) ? (this.selectionService.selection as SelectableTreeNode[]) : [node];\n        selection.forEach(n => this.removeNode(n));\n        e.stopPropagation();\n    }\n\n    protected renderRemoveButton(node: TreeNode): React.ReactNode {\n        return <span className={codicon('close')} onClick={e => this.remove(node, e)} title='Dismiss'></span>;\n    }\n\n    removeNode(node: TreeNode): void {\n        if (SearchInWorkspaceRootFolderNode.is(node)) {\n            this.removeRootFolderNode(node);\n        } else if (SearchInWorkspaceFileNode.is(node)) {\n            this.removeFileNode(node);\n        } else if (SearchInWorkspaceResultLineNode.is(node)) {\n            this.removeResultLineNode(node);\n        }\n        this.refreshModelChildren();\n    }\n\n    private removeRootFolderNode(node: SearchInWorkspaceRootFolderNode): void {\n        for (const rootUri of this.resultTree.keys()) {\n            if (rootUri === node.folderUri) {\n                this.resultTree.delete(rootUri);\n                break;\n            }\n        }\n    }\n\n    private removeFileNode(node: SearchInWorkspaceFileNode): void {\n        const rootFolderNode = node.parent;\n        const index = rootFolderNode.children.findIndex(fileNode => fileNode.id === node.id);\n        if (index > -1) {\n            rootFolderNode.children.splice(index, 1);\n        }\n        if (this.getFileCount(rootFolderNode) === 0) {\n            this.removeRootFolderNode(rootFolderNode);\n        }\n    }\n\n    private removeResultLineNode(node: SearchInWorkspaceResultLineNode): void {\n        const fileNode = node.parent;\n        const index = fileNode.children.findIndex(n => n.fileUri === node.fileUri && n.line === node.line && n.character === node.character);\n        if (index > -1) {\n            fileNode.children.splice(index, 1);\n            if (this.getResultCount(fileNode) === 0) {\n                this.removeFileNode(fileNode);\n            }\n        }\n    }\n\n    private findEndCharacterPosition(node: SearchInWorkspaceResultLineNode): Position {\n        const lineText = typeof node.lineText === 'string' ? node.lineText : node.lineText.text;\n        const lines = lineText.split('\\n');\n        const line = node.line + lines.length - 2;\n        let character = node.character - 1 + node.length;\n        if (lines.length > 1) {\n            character = node.length - lines[0].length + node.character - lines.length;\n            if (lines.length > 2) {\n                for (const lineNum of Array(lines.length - 2).keys()) {\n                    character -= lines[lineNum + 1].length;\n                }\n            }\n        }\n\n        return { line, character };\n    }\n\n    protected renderRootFolderNode(node: SearchInWorkspaceRootFolderNode): React.ReactNode {\n        return <div className='result'>\n            <div className='result-head'>\n                <div className={`result-head-info noWrapInfo noselect ${node.selected ? 'selected' : ''}`}>\n                    <span className={`file-icon ${this.toNodeIcon(node) || ''}`}></span>\n                    <div className='noWrapInfo'>\n                        <span className={'file-name'}>\n                            {this.toNodeName(node)}\n                        </span>\n                        {node.path !== '/' + this.defaultRootName &&\n                            <span className={'file-path ' + TREE_NODE_INFO_CLASS}>\n                                {node.path}\n                            </span>\n                        }\n                    </div>\n                </div>\n                <span className='notification-count-container highlighted-count-container'>\n                    <span className='notification-count'>\n                        {this.getFileCount(node)}\n                    </span>\n                </span>\n            </div>\n        </div>;\n    }\n\n    protected renderFileNode(node: SearchInWorkspaceFileNode): React.ReactNode {\n        return <div className='result'>\n            <div className='result-head'>\n                <div className={`result-head-info noWrapInfo noselect ${node.selected ? 'selected' : ''}`}\n                    title={new URI(node.fileUri).path.fsPath()}>\n                    <span className={`file-icon ${this.toNodeIcon(node)}`}></span>\n                    <div className='noWrapInfo'>\n                        <span className={'file-name'}>\n                            {this.toNodeName(node)}\n                        </span>\n                        <span className={'file-path ' + TREE_NODE_INFO_CLASS}>\n                            {node.path}\n                        </span>\n                    </div>\n                </div>\n                <span className='notification-count-container'>\n                    <span className='notification-count'>\n                        {this.getResultCount(node)}\n                    </span>\n                </span>\n            </div>\n        </div>;\n    }\n\n    protected renderResultLineNode(node: SearchInWorkspaceResultLineNode): React.ReactNode {\n        const character = typeof node.lineText === 'string' ? node.character : node.lineText.character;\n        const lineText = typeof node.lineText === 'string' ? node.lineText : node.lineText.text;\n        let start = Math.max(0, character - 26);\n        const wordBreak = /\\b/g;\n        while (start > 0 && wordBreak.test(lineText) && wordBreak.lastIndex < character) {\n            if (character - wordBreak.lastIndex < 26) {\n                break;\n            }\n            start = wordBreak.lastIndex;\n            wordBreak.lastIndex++;\n        }\n\n        const before = lineText.slice(start, character - 1).trimStart();\n        const lineCount = lineText.split('\\n').length;\n\n        return <>\n            <div className={`resultLine noWrapInfo noselect ${node.selected ? 'selected' : ''}`} title={lineText.trim()}>\n                {this.searchInWorkspacePreferences['search.lineNumbers'] && <span className='theia-siw-lineNumber'>{node.line}</span>}\n                <span>\n                    {before}\n                </span>\n                {this.renderMatchLinePart(node)}\n                {lineCount > 1 || <span>\n                    {lineText.slice(node.character + node.length - 1, 250 - before.length + node.length)}\n                </span>}\n            </div>\n            {lineCount > 1 && <div className='match-line-num'>+{lineCount - 1}</div>}\n        </>;\n    }\n\n    protected renderMatchLinePart(node: SearchInWorkspaceResultLineNode): React.ReactNode {\n        const replaceTermLines = this._replaceTerm.split('\\n');\n        const replaceTerm = this.isReplacing ? <span className='replace-term'>{replaceTermLines[0]}</span> : '';\n        const className = `match${this.isReplacing ? ' strike-through' : ''}`;\n        const text = typeof node.lineText === 'string' ? node.lineText : node.lineText.text;\n        const match = text.substring(node.character - 1, node.character + node.length - 1);\n        const matchLines = match.split('\\n');\n        return <React.Fragment>\n            <span className={className}>{matchLines[0]}</span>\n            {replaceTerm}\n        </React.Fragment>;\n    }\n\n    /**\n     * Get the editor widget by the node.\n     * @param {SearchInWorkspaceResultLineNode} node - the node representing a match in the search results.\n     * @returns The editor widget to which the text replace will be done.\n     */\n    protected async doGetWidget(node: SearchInWorkspaceResultLineNode): Promise<EditorWidget> {\n        const fileUri = new URI(node.fileUri);\n        const editorWidget = await this.editorManager.getOrCreateByUri(fileUri);\n        return editorWidget;\n    }\n\n    protected async doOpen(node: SearchInWorkspaceResultLineNode, asDiffWidget = false, preview = false): Promise<EditorWidget> {\n        let fileUri: URI;\n        const resultNode = node.parent;\n        if (resultNode && this.isReplacing && asDiffWidget) {\n            const leftUri = new URI(node.fileUri);\n            const rightUri = await this.createReplacePreview(resultNode);\n            fileUri = DiffUris.encode(leftUri, rightUri);\n        } else {\n            fileUri = new URI(node.fileUri);\n        }\n\n        const opts: EditorOpenerOptions = {\n            selection: {\n                start: {\n                    line: node.line - 1,\n                    character: node.character - 1\n                },\n                end: this.findEndCharacterPosition(node),\n            },\n            mode: preview ? 'reveal' : 'activate',\n            preview,\n        };\n\n        const editorWidget = await this.editorManager.open(fileUri, opts);\n\n        if (!DiffUris.isDiffUri(fileUri)) {\n            this.decorateEditor(resultNode, editorWidget);\n        }\n\n        return editorWidget;\n    }\n\n    protected async createReplacePreview(node: SearchInWorkspaceFileNode): Promise<URI> {\n        const fileUri = new URI(node.fileUri).withScheme('file');\n        const openedEditor = this.editorManager.all.find(({ editor }) => editor.uri.toString() === fileUri.toString());\n        let content: string;\n        if (openedEditor) {\n            content = openedEditor.editor.document.getText();\n        } else {\n            const resource = await this.fileResourceResolver.resolve(fileUri);\n            content = await resource.readContents();\n        }\n\n        const searchTermRegExp = new RegExp(this.searchTerm, 'g');\n        return fileUri.withScheme(MEMORY_TEXT).withQuery(content.replace(searchTermRegExp, this._replaceTerm));\n    }\n\n    protected decorateEditor(node: SearchInWorkspaceFileNode | undefined, editorWidget: EditorWidget): void {\n        if (!DiffUris.isDiffUri(editorWidget.editor.uri)) {\n            const key = `${editorWidget.editor.uri.toString()}#search-in-workspace-matches`;\n            const oldDecorations = this.appliedDecorations.get(key) || [];\n            const newDecorations = this.createEditorDecorations(node);\n            const appliedDecorations = editorWidget.editor.deltaDecorations({\n                newDecorations,\n                oldDecorations,\n            });\n            this.appliedDecorations.set(key, appliedDecorations);\n        }\n    }\n\n    protected createEditorDecorations(resultNode: SearchInWorkspaceFileNode | undefined): EditorDecoration[] {\n        const decorations: EditorDecoration[] = [];\n        if (resultNode) {\n            resultNode.children.forEach(res => {\n                decorations.push({\n                    range: {\n                        start: {\n                            line: res.line - 1,\n                            character: res.character - 1\n                        },\n                        end: {\n                            line: res.line - 1,\n                            character: res.character - 1 + res.length\n                        }\n                    },\n                    options: {\n                        overviewRuler: {\n                            color: {\n                                id: 'editor.findMatchHighlightBackground'\n                            },\n                            position: OverviewRulerLane.Center\n                        },\n                        className: res.selected ? 'current-search-in-workspace-editor-match' : 'search-in-workspace-editor-match',\n                        stickiness: TrackedRangeStickiness.GrowsOnlyWhenTypingBefore\n                    }\n                });\n            });\n        }\n        return decorations;\n    }\n\n    /**\n     * Get the list of exclude globs.\n     * @param excludeOptions the exclude search option.\n     *\n     * @returns the list of exclude globs.\n     */\n    protected getExcludeGlobs(excludeOptions?: string[]): string[] {\n        const excludePreferences = this.filesystemPreferences['files.exclude'];\n        const excludePreferencesGlobs = Object.keys(excludePreferences).filter(key => !!excludePreferences[key]);\n        return [...new Set([...excludePreferencesGlobs, ...excludeOptions || []])];\n    }\n\n    /**\n     * Compare two normalized strings.\n     *\n     * @param a {string} the first string.\n     * @param b {string} the second string.\n     */\n    private compare(a: string, b: string): number {\n        const itemA: string = a.toLowerCase().trim();\n        const itemB: string = b.toLowerCase().trim();\n        return itemA.localeCompare(itemB);\n    }\n\n    /**\n     * @param recursive if true, all child nodes will be included in the stringified result.\n     */\n    nodeToString(node: TreeNode, recursive: boolean): string {\n        if (SearchInWorkspaceFileNode.is(node) || SearchInWorkspaceRootFolderNode.is(node)) {\n            if (recursive) {\n                return this.nodeIteratorToString(new TopDownTreeIterator(node, { pruneSiblings: true }));\n            }\n            return this.labelProvider.getLongName(node.uri);\n        }\n        if (SearchInWorkspaceResultLineNode.is(node)) {\n            return `  ${node.line}:${node.character}: ${node.lineText}`;\n        }\n        return '';\n    }\n\n    treeToString(): string {\n        return this.nodeIteratorToString(this.getVisibleNodes());\n    }\n\n    protected *getVisibleNodes(): IterableIterator<TreeNode> {\n        for (const { node } of this.rows.values()) {\n            yield node;\n        }\n    }\n\n    protected nodeIteratorToString(nodes: Iterable<TreeNode>): string {\n        const strings = [];\n        for (const node of nodes) {\n            const string = this.nodeToString(node, false);\n            if (string.length !== 0) {\n                strings.push(string);\n            }\n        }\n        return strings.join(EOL);\n    }\n}\n\nexport namespace SearchInWorkspaceResultTreeWidget {\n    export namespace Menus {\n        export const BASE = ['siw-tree-context-menu'];\n        /** Dismiss command, or others that only affect the widget itself */\n        export const INTERNAL = [...BASE, '1_internal'];\n        /** Copy a stringified representation of content */\n        export const COPY = [...BASE, '2_copy'];\n        /** Commands that lead out of the widget, like revealing a file in the navigator */\n        export const EXTERNAL = [...BASE, '3_external'];\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017-2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport {\n    SearchInWorkspaceServer,\n    SearchInWorkspaceClient,\n    SearchInWorkspaceResult,\n    SearchInWorkspaceOptions\n} from '../common/search-in-workspace-interface';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { ILogger } from '@theia/core';\n\n/**\n * Class that will receive the search results from the server.  This is separate\n * from the SearchInWorkspaceService class only to avoid a cycle in the\n * dependency injection.\n */\n\n@injectable()\nexport class SearchInWorkspaceClientImpl implements SearchInWorkspaceClient {\n    private service: SearchInWorkspaceClient;\n\n    onResult(searchId: number, result: SearchInWorkspaceResult): void {\n        this.service.onResult(searchId, result);\n    }\n    onDone(searchId: number, error?: string): void {\n        this.service.onDone(searchId, error);\n    }\n\n    setService(service: SearchInWorkspaceClient): void {\n        this.service = service;\n    }\n}\n\nexport type SearchInWorkspaceCallbacks = SearchInWorkspaceClient;\n\n/**\n * Service to search text in the workspace files.\n */\n@injectable()\nexport class SearchInWorkspaceService implements SearchInWorkspaceClient {\n\n    // All the searches that we have started, that are not done yet (onDone\n    // with that searchId has not been called).\n    private pendingSearches = new Map<number, SearchInWorkspaceCallbacks>();\n\n    // Due to the asynchronicity of the node backend, it's possible that we\n    // start a search, receive an event for that search, and then receive\n    // the search id for that search.We therefore need to keep those\n    // events until we get the search id and return it to the caller.\n    // Otherwise the caller would discard the event because it doesn't know\n    // the search id yet.\n    private pendingOnDones: Map<number, string | undefined> = new Map();\n\n    private lastKnownSearchId: number = -1;\n\n    @inject(SearchInWorkspaceServer) protected readonly searchServer: SearchInWorkspaceServer;\n    @inject(SearchInWorkspaceClientImpl) protected readonly client: SearchInWorkspaceClientImpl;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(ILogger) protected readonly logger: ILogger;\n\n    @postConstruct()\n    protected init(): void {\n        this.client.setService(this);\n    }\n\n    isEnabled(): boolean {\n        return this.workspaceService.opened;\n    }\n\n    onResult(searchId: number, result: SearchInWorkspaceResult): void {\n        const callbacks = this.pendingSearches.get(searchId);\n\n        if (callbacks) {\n            callbacks.onResult(searchId, result);\n        }\n    }\n\n    onDone(searchId: number, error?: string): void {\n        const callbacks = this.pendingSearches.get(searchId);\n\n        if (callbacks) {\n            this.pendingSearches.delete(searchId);\n            callbacks.onDone(searchId, error);\n        } else {\n            if (searchId > this.lastKnownSearchId) {\n                this.logger.debug(`Got an onDone for a searchId we don't know about (${searchId}), stashing it for later with error = `, error);\n                this.pendingOnDones.set(searchId, error);\n            } else {\n                // It's possible to receive an onDone for a search we have cancelled.  Just ignore it.\n                this.logger.debug(`Got an onDone for a searchId we don't know about (${searchId}), but it's probably an old one, error = `, error);\n            }\n        }\n    }\n\n    // Start a search of the string \"what\" in the workspace.\n    async search(what: string, callbacks: SearchInWorkspaceCallbacks, opts?: SearchInWorkspaceOptions): Promise<number> {\n        if (!this.workspaceService.opened) {\n            throw new Error('Search failed: no workspace root.');\n        }\n\n        const roots = await this.workspaceService.roots;\n        return this.doSearch(what, roots.map(r => r.resource.toString()), callbacks, opts);\n    }\n\n    protected async doSearch(what: string, rootsUris: string[], callbacks: SearchInWorkspaceCallbacks, opts?: SearchInWorkspaceOptions): Promise<number> {\n        const searchId = await this.searchServer.search(what, rootsUris, opts);\n        this.pendingSearches.set(searchId, callbacks);\n        this.lastKnownSearchId = searchId;\n\n        this.logger.debug('Service launched search ' + searchId);\n\n        // Check if we received an onDone before search() returned.\n        if (this.pendingOnDones.has(searchId)) {\n            this.logger.debug('Ohh, we have a stashed onDone for that searchId');\n            const error = this.pendingOnDones.get(searchId);\n            this.pendingOnDones.delete(searchId);\n\n            // Call the client's searchId, but first give it a\n            // chance to record the returned searchId.\n            setTimeout(() => {\n                this.onDone(searchId, error);\n            }, 0);\n        }\n\n        return searchId;\n    }\n\n    async searchWithCallback(what: string, rootsUris: string[], callbacks: SearchInWorkspaceClient, opts?: SearchInWorkspaceOptions | undefined): Promise<number> {\n        return this.doSearch(what, rootsUris, callbacks, opts);\n    }\n\n    // Cancel an ongoing search.\n    cancel(searchId: number): void {\n        this.pendingSearches.delete(searchId);\n        this.searchServer.cancel(searchId);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Widget, Message, BaseWidget, Key, StatefulWidget, MessageLoop, KeyCode, codicon } from '@theia/core/lib/browser';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { SearchInWorkspaceResultTreeWidget } from './search-in-workspace-result-tree-widget';\nimport { SearchInWorkspaceOptions } from '../common/search-in-workspace-interface';\nimport * as React from '@theia/core/shared/react';\nimport { createRoot, Root } from '@theia/core/shared/react-dom/client';\nimport { Event, Emitter, Disposable } from '@theia/core/lib/common';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { SearchInWorkspaceContextKeyService } from './search-in-workspace-context-key-service';\nimport { CancellationTokenSource } from '@theia/core';\nimport { ProgressBarFactory } from '@theia/core/lib/browser/progress-bar-factory';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport { SearchInWorkspacePreferences } from './search-in-workspace-preferences';\nimport { SearchInWorkspaceInput } from './components/search-in-workspace-input';\nimport { SearchInWorkspaceTextArea } from './components/search-in-workspace-textarea';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport interface SearchFieldState {\n    className: string;\n    enabled: boolean;\n    title: string;\n}\n\n@injectable()\nexport class SearchInWorkspaceWidget extends BaseWidget implements StatefulWidget {\n\n    static ID = 'search-in-workspace';\n    static LABEL = nls.localizeByDefault('Search');\n\n    protected matchCaseState: SearchFieldState;\n    protected wholeWordState: SearchFieldState;\n    protected regExpState: SearchFieldState;\n    protected includeIgnoredState: SearchFieldState;\n\n    protected showSearchDetails = false;\n    protected _hasResults = false;\n    protected get hasResults(): boolean {\n        return this._hasResults;\n    }\n    protected set hasResults(hasResults: boolean) {\n        this.contextKeyService.hasSearchResult.set(hasResults);\n        this._hasResults = hasResults;\n    }\n    protected resultNumber = 0;\n\n    protected searchFieldContainerIsFocused = false;\n\n    protected searchInWorkspaceOptions: SearchInWorkspaceOptions;\n\n    protected searchTerm = '';\n    protected replaceTerm = '';\n\n    private searchRef = React.createRef<SearchInWorkspaceTextArea>();\n    private replaceRef = React.createRef<SearchInWorkspaceTextArea>();\n    private includeRef = React.createRef<SearchInWorkspaceInput>();\n    private excludeRef = React.createRef<SearchInWorkspaceInput>();\n\n    protected _showReplaceField = false;\n    protected get showReplaceField(): boolean {\n        return this._showReplaceField;\n    }\n    protected set showReplaceField(showReplaceField: boolean) {\n        this.contextKeyService.replaceActive.set(showReplaceField);\n        this._showReplaceField = showReplaceField;\n    }\n\n    protected contentNode: HTMLElement;\n    protected searchFormContainer: HTMLElement;\n    protected resultContainer: HTMLElement;\n\n    protected readonly onDidUpdateEmitter = new Emitter<void>();\n    readonly onDidUpdate: Event<void> = this.onDidUpdateEmitter.event;\n\n    @inject(SearchInWorkspaceResultTreeWidget) readonly resultTreeWidget: SearchInWorkspaceResultTreeWidget;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n\n    @inject(SearchInWorkspaceContextKeyService)\n    protected readonly contextKeyService: SearchInWorkspaceContextKeyService;\n\n    @inject(ProgressBarFactory)\n    protected readonly progressBarFactory: ProgressBarFactory;\n\n    @inject(EditorManager) protected readonly editorManager: EditorManager;\n\n    @inject(SearchInWorkspacePreferences)\n    protected readonly searchInWorkspacePreferences: SearchInWorkspacePreferences;\n\n    protected searchFormContainerRoot: Root;\n\n    @postConstruct()\n    protected init(): void {\n        this.id = SearchInWorkspaceWidget.ID;\n        this.title.label = SearchInWorkspaceWidget.LABEL;\n        this.title.caption = SearchInWorkspaceWidget.LABEL;\n        this.title.iconClass = codicon('search');\n        this.title.closable = true;\n        this.contentNode = document.createElement('div');\n        this.contentNode.classList.add('t-siw-search-container');\n        this.searchFormContainer = document.createElement('div');\n        this.searchFormContainer.classList.add('searchHeader');\n        this.contentNode.appendChild(this.searchFormContainer);\n        this.searchFormContainerRoot = createRoot(this.searchFormContainer);\n        this.node.tabIndex = 0;\n        this.node.appendChild(this.contentNode);\n\n        this.matchCaseState = {\n            className: codicon('case-sensitive'),\n            enabled: false,\n            title: nls.localizeByDefault('Match Case')\n        };\n        this.wholeWordState = {\n            className: codicon('whole-word'),\n            enabled: false,\n            title: nls.localizeByDefault('Match Whole Word')\n        };\n        this.regExpState = {\n            className: codicon('regex'),\n            enabled: false,\n            title: nls.localizeByDefault('Use Regular Expression')\n        };\n        this.includeIgnoredState = {\n            className: codicon('eye'),\n            enabled: false,\n            title: nls.localize('theia/search-in-workspace/includeIgnoredFiles', 'Include Ignored Files')\n        };\n        this.searchInWorkspaceOptions = {\n            matchCase: false,\n            matchWholeWord: false,\n            useRegExp: false,\n            multiline: false,\n            includeIgnored: false,\n            include: [],\n            exclude: [],\n            maxResults: 2000\n        };\n        this.toDispose.push(this.resultTreeWidget.onChange(r => {\n            this.hasResults = r.size > 0;\n            this.resultNumber = 0;\n            const results = Array.from(r.values());\n            results.forEach(rootFolder =>\n                rootFolder.children.forEach(file => this.resultNumber += file.children.length)\n            );\n            this.update();\n        }));\n\n        this.toDispose.push(this.resultTreeWidget.onFocusInput(b => {\n            this.focusInputField();\n        }));\n\n        this.toDispose.push(this.searchInWorkspacePreferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'search.smartCase') {\n                this.performSearch();\n            }\n        }));\n\n        this.toDispose.push(this.resultTreeWidget);\n        this.toDispose.push(this.resultTreeWidget.onExpansionChanged(() => {\n            this.onDidUpdateEmitter.fire();\n        }));\n\n        this.toDispose.push(this.progressBarFactory({ container: this.node, insertMode: 'prepend', locationId: 'search' }));\n    }\n\n    storeState(): object {\n        return {\n            matchCaseState: this.matchCaseState,\n            wholeWordState: this.wholeWordState,\n            regExpState: this.regExpState,\n            includeIgnoredState: this.includeIgnoredState,\n            showSearchDetails: this.showSearchDetails,\n            searchInWorkspaceOptions: this.searchInWorkspaceOptions,\n            searchTerm: this.searchTerm,\n            replaceTerm: this.replaceTerm,\n            showReplaceField: this.showReplaceField,\n            searchHistoryState: this.searchRef.current?.state,\n            replaceHistoryState: this.replaceRef.current?.state,\n            includeHistoryState: this.includeRef.current?.state,\n            excludeHistoryState: this.excludeRef.current?.state,\n        };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    restoreState(oldState: any): void {\n        this.matchCaseState = oldState.matchCaseState;\n        this.wholeWordState = oldState.wholeWordState;\n        this.regExpState = oldState.regExpState;\n        this.includeIgnoredState = oldState.includeIgnoredState;\n        // Override the title of the restored state, as we could have changed languages in between\n        this.matchCaseState.title = nls.localizeByDefault('Match Case');\n        this.wholeWordState.title = nls.localizeByDefault('Match Whole Word');\n        this.regExpState.title = nls.localizeByDefault('Use Regular Expression');\n        this.includeIgnoredState.title = nls.localize('theia/search-in-workspace/includeIgnoredFiles', 'Include Ignored Files');\n        this.showSearchDetails = oldState.showSearchDetails;\n        this.searchInWorkspaceOptions = oldState.searchInWorkspaceOptions;\n        this.searchTerm = oldState.searchTerm;\n        this.replaceTerm = oldState.replaceTerm;\n        this.showReplaceField = oldState.showReplaceField;\n        this.resultTreeWidget.replaceTerm = this.replaceTerm;\n        this.resultTreeWidget.showReplaceButtons = this.showReplaceField;\n        this.searchRef.current?.setState(oldState.searchHistoryState);\n        this.replaceRef.current?.setState(oldState.replaceHistoryState);\n        this.includeRef.current?.setState(oldState.includeHistoryState);\n        this.excludeRef.current?.setState(oldState.excludeHistoryState);\n        this.refresh();\n    }\n\n    findInFolder(uris: string[]): void {\n        this.showSearchDetails = true;\n        const values = Array.from(new Set(uris.map(uri => `${uri}/**`)));\n        const value = values.join(', ');\n        this.searchInWorkspaceOptions.include = values;\n        if (this.includeRef.current) {\n            this.includeRef.current.value = value;\n            this.includeRef.current.addToHistory();\n        }\n        this.update();\n    }\n\n    /**\n     * Update the search term and input field.\n     * @param term the search term.\n     * @param showReplaceField controls if the replace field should be displayed.\n     */\n    updateSearchTerm(term: string, showReplaceField?: boolean): void {\n        this.searchTerm = term;\n        if (this.searchRef.current) {\n            this.searchRef.current.value = term;\n            this.searchRef.current.addToHistory();\n        }\n        if (showReplaceField) {\n            this.showReplaceField = true;\n        }\n        this.refresh();\n    }\n\n    hasResultList(): boolean {\n        return this.hasResults;\n    }\n\n    hasSearchTerm(): boolean {\n        return this.searchTerm !== '';\n    }\n\n    refresh(): void {\n        this.performSearch();\n        this.update();\n    }\n\n    getCancelIndicator(): CancellationTokenSource | undefined {\n        return this.resultTreeWidget.cancelIndicator;\n    }\n\n    collapseAll(): void {\n        this.resultTreeWidget.collapseAll();\n        this.update();\n    }\n\n    expandAll(): void {\n        this.resultTreeWidget.expandAll();\n        this.update();\n    }\n\n    areResultsCollapsed(): boolean {\n        return this.resultTreeWidget.areResultsCollapsed();\n    }\n\n    clear(): void {\n        this.searchTerm = '';\n        this.replaceTerm = '';\n        this.searchInWorkspaceOptions.include = [];\n        this.searchInWorkspaceOptions.exclude = [];\n        this.includeIgnoredState.enabled = false;\n        this.matchCaseState.enabled = false;\n        this.wholeWordState.enabled = false;\n        this.regExpState.enabled = false;\n        if (this.searchRef.current) {\n            this.searchRef.current.value = '';\n        }\n        if (this.replaceRef.current) {\n            this.replaceRef.current.value = '';\n        }\n        if (this.includeRef.current) {\n            this.includeRef.current.value = '';\n        }\n        if (this.excludeRef.current) {\n            this.excludeRef.current.value = '';\n        }\n        this.performSearch();\n        this.update();\n    }\n\n    protected override onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        this.searchFormContainerRoot.render(<React.Fragment>{this.renderSearchHeader()}{this.renderSearchInfo()}</React.Fragment>);\n        Widget.attach(this.resultTreeWidget, this.contentNode);\n        this.toDisposeOnDetach.push(Disposable.create(() => {\n            Widget.detach(this.resultTreeWidget);\n        }));\n    }\n\n    protected override onUpdateRequest(msg: Message): void {\n        super.onUpdateRequest(msg);\n        const searchInfo = this.renderSearchInfo();\n        if (searchInfo) {\n            this.searchFormContainerRoot.render(<React.Fragment>{this.renderSearchHeader()}{searchInfo}</React.Fragment>);\n            this.onDidUpdateEmitter.fire(undefined);\n        }\n    }\n\n    protected override onResize(msg: Widget.ResizeMessage): void {\n        super.onResize(msg);\n        this.searchRef.current?.forceUpdate();\n        this.replaceRef.current?.forceUpdate();\n        MessageLoop.sendMessage(this.resultTreeWidget, Widget.ResizeMessage.UnknownSize);\n    }\n\n    protected override onAfterShow(msg: Message): void {\n        super.onAfterShow(msg);\n        this.focusInputField();\n        this.contextKeyService.searchViewletVisible.set(true);\n    }\n\n    protected override onAfterHide(msg: Message): void {\n        super.onAfterHide(msg);\n        this.contextKeyService.searchViewletVisible.set(false);\n    }\n\n    protected override onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.focusInputField();\n    }\n\n    protected focusInputField(): void {\n        const f = document.getElementById('search-input-field');\n        if (f) {\n            (f as HTMLInputElement).focus();\n            (f as HTMLInputElement).select();\n        }\n    }\n\n    protected renderSearchHeader(): React.ReactNode {\n        const searchAndReplaceContainer = this.renderSearchAndReplace();\n        const searchDetails = this.renderSearchDetails();\n        return <div>{searchAndReplaceContainer}{searchDetails}</div>;\n    }\n\n    protected renderSearchAndReplace(): React.ReactNode {\n        const toggleContainer = this.renderReplaceFieldToggle();\n        const searchField = this.renderSearchField();\n        const replaceField = this.renderReplaceField();\n        return <div className='search-and-replace-container'>\n            {toggleContainer}\n            <div className='search-and-replace-fields'>\n                {searchField}\n                {replaceField}\n            </div>\n        </div>;\n    }\n\n    protected renderReplaceFieldToggle(): React.ReactNode {\n        const toggle = <span className={codicon(this.showReplaceField ? 'chevron-down' : 'chevron-right')}></span>;\n        return <div\n            title={nls.localizeByDefault('Toggle Replace')}\n            className='replace-toggle'\n            tabIndex={0}\n            onClick={e => {\n                const elArr = document.getElementsByClassName('replace-toggle');\n                if (elArr && elArr.length > 0) {\n                    (elArr[0] as HTMLElement).focus();\n                }\n                this.showReplaceField = !this.showReplaceField;\n                this.resultTreeWidget.showReplaceButtons = this.showReplaceField;\n                this.update();\n            }}>\n            {toggle}\n        </div>;\n    }\n\n    protected renderNotification(): React.ReactNode {\n        if (this.workspaceService.tryGetRoots().length <= 0 && this.editorManager.all.length <= 0) {\n            return <div className='search-notification show'>\n                <div>{nls.localize('theia/search-in-workspace/noFolderSpecified', 'You have not opened or specified a folder. Only open files are currently searched.')}</div>\n            </div>;\n        }\n        return <div\n            className={`search-notification ${this.searchInWorkspaceOptions.maxResults && this.resultNumber >= this.searchInWorkspaceOptions.maxResults ? 'show' : ''}`}>\n            <div>{nls.localize('theia/search-in-workspace/resultSubset',\n                'This is only a subset of all results. Use a more specific search term to narrow down the result list.')}</div>\n        </div>;\n    }\n\n    protected readonly focusSearchFieldContainer = () => this.doFocusSearchFieldContainer();\n    protected doFocusSearchFieldContainer(): void {\n        this.searchFieldContainerIsFocused = true;\n        this.update();\n    }\n\n    protected readonly blurSearchFieldContainer = () => this.doBlurSearchFieldContainer();\n    protected doBlurSearchFieldContainer(): void {\n        this.searchFieldContainerIsFocused = false;\n        this.update();\n    }\n\n    private _searchTimeout: number;\n    protected readonly search = (e: React.KeyboardEvent) => {\n        e.persist();\n        const searchOnType = this.searchInWorkspacePreferences['search.searchOnType'];\n        if (searchOnType) {\n            const delay = this.searchInWorkspacePreferences['search.searchOnTypeDebouncePeriod'] || 0;\n            window.clearTimeout(this._searchTimeout);\n            this._searchTimeout = window.setTimeout(() => this.doSearch(e), delay);\n        }\n    };\n\n    protected readonly onKeyDownSearch = (e: React.KeyboardEvent) => {\n        if (Key.ENTER.keyCode === KeyCode.createKeyCode(e.nativeEvent).key?.keyCode) {\n            this.searchTerm = (e.target as HTMLInputElement).value;\n            this.performSearch();\n        }\n    };\n\n    protected doSearch(e: React.KeyboardEvent): void {\n        if (e.target) {\n            const searchValue = (e.target as HTMLInputElement).value;\n            if (this.searchTerm === searchValue && Key.ENTER.keyCode !== KeyCode.createKeyCode(e.nativeEvent).key?.keyCode) {\n                return;\n            } else {\n                this.searchTerm = searchValue;\n                this.performSearch();\n            }\n        }\n    }\n\n    protected performSearch(): void {\n        const searchOptions: SearchInWorkspaceOptions = {\n            ...this.searchInWorkspaceOptions,\n            followSymlinks: this.shouldFollowSymlinks(),\n            matchCase: this.shouldMatchCase(),\n            multiline: this.searchTerm.includes('\\n')\n        };\n        this.resultTreeWidget.search(this.searchTerm, searchOptions);\n    }\n\n    protected shouldFollowSymlinks(): boolean {\n        return this.searchInWorkspacePreferences['search.followSymlinks'];\n    }\n\n    /**\n     * Determine if search should be case sensitive.\n     */\n    protected shouldMatchCase(): boolean {\n        if (this.matchCaseState.enabled) {\n            return this.matchCaseState.enabled;\n        }\n        // search.smartCase makes siw search case-sensitive if the search term contains uppercase letter(s).\n        return (\n            !!this.searchInWorkspacePreferences['search.smartCase']\n            && this.searchTerm !== this.searchTerm.toLowerCase()\n        );\n    }\n\n    protected renderSearchField(): React.ReactNode {\n        const input = <SearchInWorkspaceTextArea\n            id='search-input-field'\n            className='theia-input'\n            title={SearchInWorkspaceWidget.LABEL}\n            placeholder={SearchInWorkspaceWidget.LABEL}\n            defaultValue={this.searchTerm}\n            autoComplete='off'\n            onKeyUp={this.search}\n            onKeyDown={this.onKeyDownSearch}\n            onFocus={this.handleFocusSearchInputBox}\n            onBlur={this.handleBlurSearchInputBox}\n            ref={this.searchRef}\n        />;\n        const notification = this.renderNotification();\n        const optionContainer = this.renderOptionContainer();\n        const tooMany = this.searchInWorkspaceOptions.maxResults && this.resultNumber >= this.searchInWorkspaceOptions.maxResults ? 'tooManyResults' : '';\n        const className = `search-field-container ${tooMany} ${this.searchFieldContainerIsFocused ? 'focused' : ''}`;\n        return <div className={className}>\n            <div className='search-field' tabIndex={-1} onFocus={this.focusSearchFieldContainer} onBlur={this.blurSearchFieldContainer}>\n                {input}\n                {optionContainer}\n            </div>\n            {notification}\n        </div>;\n    }\n\n    protected handleFocusSearchInputBox = () => this.contextKeyService.setSearchInputBoxFocus(true);\n    protected handleBlurSearchInputBox = () => this.contextKeyService.setSearchInputBoxFocus(false);\n\n    protected readonly updateReplaceTerm = (e: React.KeyboardEvent) => this.doUpdateReplaceTerm(e);\n    protected doUpdateReplaceTerm(e: React.KeyboardEvent): void {\n        if (e.target) {\n            this.replaceTerm = (e.target as HTMLInputElement).value;\n            this.resultTreeWidget.replaceTerm = this.replaceTerm;\n            if (KeyCode.createKeyCode(e.nativeEvent).key?.keyCode === Key.ENTER.keyCode) { this.performSearch(); }\n            this.update();\n        }\n    }\n\n    protected renderReplaceField(): React.ReactNode {\n        const replaceAllButtonContainer = this.renderReplaceAllButtonContainer();\n        const replace = nls.localizeByDefault('Replace');\n        return <div className={`replace-field${this.showReplaceField ? '' : ' hidden'}`}>\n            <SearchInWorkspaceTextArea\n                id='replace-input-field'\n                className='theia-input'\n                title={replace}\n                placeholder={replace}\n                defaultValue={this.replaceTerm}\n                autoComplete='off'\n                onKeyUp={this.updateReplaceTerm}\n                onFocus={this.handleFocusReplaceInputBox}\n                onBlur={this.handleBlurReplaceInputBox}\n                ref={this.replaceRef}\n            />\n            {replaceAllButtonContainer}\n        </div>;\n    }\n\n    protected handleFocusReplaceInputBox = () => this.contextKeyService.setReplaceInputBoxFocus(true);\n    protected handleBlurReplaceInputBox = () => this.contextKeyService.setReplaceInputBoxFocus(false);\n\n    protected renderReplaceAllButtonContainer(): React.ReactNode {\n        // The `Replace All` button is enabled if there is a search term present with results.\n        const enabled: boolean = this.searchTerm !== '' && this.resultNumber > 0;\n        return <div className='replace-all-button-container'>\n            <span\n                title={nls.localizeByDefault('Replace All')}\n                className={`${codicon('replace-all', true)} ${enabled ? ' ' : ' disabled'}`}\n                onClick={() => {\n                    if (enabled) {\n                        this.resultTreeWidget.replace(undefined);\n                    }\n                }}>\n            </span>\n        </div>;\n    }\n\n    protected renderOptionContainer(): React.ReactNode {\n        const matchCaseOption = this.renderOptionElement(this.matchCaseState);\n        const wholeWordOption = this.renderOptionElement(this.wholeWordState);\n        const regexOption = this.renderOptionElement(this.regExpState);\n        const includeIgnoredOption = this.renderOptionElement(this.includeIgnoredState);\n        return <div className='option-buttons'>{matchCaseOption}{wholeWordOption}{regexOption}{includeIgnoredOption}</div>;\n    }\n\n    protected renderOptionElement(opt: SearchFieldState): React.ReactNode {\n        return <span\n            className={`${opt.className} option action-label ${opt.enabled ? 'enabled' : ''}`}\n            title={opt.title}\n            onClick={() => this.handleOptionClick(opt)}></span>;\n    }\n\n    protected handleOptionClick(option: SearchFieldState): void {\n        option.enabled = !option.enabled;\n        this.updateSearchOptions();\n        this.searchFieldContainerIsFocused = true;\n        this.performSearch();\n        this.update();\n    }\n\n    protected updateSearchOptions(): void {\n        this.searchInWorkspaceOptions.matchCase = this.matchCaseState.enabled;\n        this.searchInWorkspaceOptions.matchWholeWord = this.wholeWordState.enabled;\n        this.searchInWorkspaceOptions.useRegExp = this.regExpState.enabled;\n        this.searchInWorkspaceOptions.includeIgnored = this.includeIgnoredState.enabled;\n    }\n\n    protected renderSearchDetails(): React.ReactNode {\n        const expandButton = this.renderExpandGlobFieldsButton();\n        const globFieldContainer = this.renderGlobFieldContainer();\n        return <div className='search-details'>{expandButton}{globFieldContainer}</div>;\n    }\n\n    protected renderGlobFieldContainer(): React.ReactNode {\n        const includeField = this.renderGlobField('include');\n        const excludeField = this.renderGlobField('exclude');\n        return <div className={`glob-field-container${!this.showSearchDetails ? ' hidden' : ''}`}>{includeField}{excludeField}</div>;\n    }\n\n    protected renderExpandGlobFieldsButton(): React.ReactNode {\n        return <div className='button-container'>\n            <span\n                title={nls.localizeByDefault('Toggle Search Details')}\n                className={codicon('ellipsis')}\n                onClick={() => {\n                    this.showSearchDetails = !this.showSearchDetails;\n                    this.update();\n                }}></span>\n        </div>;\n    }\n\n    protected renderGlobField(kind: 'include' | 'exclude'): React.ReactNode {\n        const currentValue = this.searchInWorkspaceOptions[kind];\n        const value = currentValue && currentValue.join(', ') || '';\n        return <div className='glob-field'>\n            <div className='label'>{nls.localizeByDefault('files to ' + kind)}</div>\n            <SearchInWorkspaceInput\n                className='theia-input'\n                type='text'\n                size={1}\n                defaultValue={value}\n                autoComplete='off'\n                id={kind + '-glob-field'}\n                placeholder={kind === 'include'\n                    ? nls.localizeByDefault('e.g. *.ts, src/**/include')\n                    : nls.localizeByDefault('e.g. *.ts, src/**/exclude')\n                }\n                onKeyUp={e => {\n                    if (e.target) {\n                        const targetValue = (e.target as HTMLInputElement).value || '';\n                        let shouldSearch = Key.ENTER.keyCode === KeyCode.createKeyCode(e.nativeEvent).key?.keyCode;\n                        const currentOptions = (this.searchInWorkspaceOptions[kind] || []).slice().map(s => s.trim()).sort();\n                        const candidateOptions = this.splitOnComma(targetValue).map(s => s.trim()).sort();\n                        const sameAs = (left: string[], right: string[]) => {\n                            if (left.length !== right.length) {\n                                return false;\n                            }\n                            for (let i = 0; i < left.length; i++) {\n                                if (left[i] !== right[i]) {\n                                    return false;\n                                }\n                            }\n                            return true;\n                        };\n                        if (!sameAs(currentOptions, candidateOptions)) {\n                            this.searchInWorkspaceOptions[kind] = this.splitOnComma(targetValue);\n                            shouldSearch = true;\n                        }\n                        if (shouldSearch) {\n                            this.performSearch();\n                        }\n                    }\n                }}\n                onFocus={kind === 'include' ? this.handleFocusIncludesInputBox : this.handleFocusExcludesInputBox}\n                onBlur={kind === 'include' ? this.handleBlurIncludesInputBox : this.handleBlurExcludesInputBox}\n                ref={kind === 'include' ? this.includeRef : this.excludeRef}\n            />\n        </div>;\n    }\n\n    protected handleFocusIncludesInputBox = () => this.contextKeyService.setPatternIncludesInputBoxFocus(true);\n    protected handleBlurIncludesInputBox = () => this.contextKeyService.setPatternIncludesInputBoxFocus(false);\n\n    protected handleFocusExcludesInputBox = () => this.contextKeyService.setPatternExcludesInputBoxFocus(true);\n    protected handleBlurExcludesInputBox = () => this.contextKeyService.setPatternExcludesInputBoxFocus(false);\n\n    protected splitOnComma(patterns: string): string[] {\n        return patterns.length > 0 ? patterns.split(',').map(s => s.trim()) : [];\n    }\n\n    protected renderSearchInfo(): React.ReactNode {\n        const message = this.getSearchResultMessage() || '';\n        return <div className='search-info'>{message}</div>;\n    }\n\n    protected getSearchResultMessage(): string | undefined {\n\n        if (!this.searchTerm) {\n            return undefined;\n        }\n\n        if (this.resultNumber === 0) {\n            const isIncludesPresent = this.searchInWorkspaceOptions.include && this.searchInWorkspaceOptions.include.length > 0;\n            const isExcludesPresent = this.searchInWorkspaceOptions.exclude && this.searchInWorkspaceOptions.exclude.length > 0;\n\n            let message: string;\n            if (isIncludesPresent && isExcludesPresent) {\n                message = nls.localizeByDefault(\"No results found in '{0}' excluding '{1}' - \",\n                    this.searchInWorkspaceOptions.include!.toString(), this.searchInWorkspaceOptions.exclude!.toString());\n            } else if (isIncludesPresent) {\n                message = nls.localizeByDefault(\"No results found in '{0}' - \",\n                    this.searchInWorkspaceOptions.include!.toString());\n            } else if (isExcludesPresent) {\n                message = nls.localizeByDefault(\"No results found excluding '{0}' - \",\n                    this.searchInWorkspaceOptions.exclude!.toString());\n            } else {\n                message = nls.localizeByDefault('No results found') + ' - ';\n            }\n            // We have to trim here as vscode will always add a trailing \" - \" string\n            return message.substring(0, message.length - 2).trim();\n        } else {\n            if (this.resultNumber === 1 && this.resultTreeWidget.fileNumber === 1) {\n                return nls.localizeByDefault('{0} result in {1} file',\n                    this.resultNumber.toString(), this.resultTreeWidget.fileNumber.toString());\n            } else if (this.resultTreeWidget.fileNumber === 1) {\n                return nls.localizeByDefault('{0} results in {1} file',\n                    this.resultNumber.toString(), this.resultTreeWidget.fileNumber.toString());\n            } else if (this.resultTreeWidget.fileNumber > 0) {\n                return nls.localizeByDefault('{0} results in {1} files',\n                    this.resultNumber.toString(), this.resultTreeWidget.fileNumber.toString());\n            } else {\n                // if fileNumber === 0, return undefined so that `onUpdateRequest()` would not re-render component\n                return undefined;\n            }\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017-2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { RpcServer } from '@theia/core';\n\nexport interface SearchInWorkspaceOptions {\n    /**\n     * Maximum number of results to return.  Defaults to unlimited.\n     */\n    maxResults?: number;\n    /**\n     * accepts suffixes of K, M or G which correspond to kilobytes,\n     * megabytes and gigabytes, respectively. If no suffix is provided the input is\n     * treated as bytes.\n     *\n     * defaults to '20M'\n     */\n    maxFileSize?: string;\n    /**\n     * Search case sensitively if true.\n     */\n    matchCase?: boolean;\n    /**\n     * Search whole words only if true.\n     */\n    matchWholeWord?: boolean;\n    /**\n     * Use regular expressions for search if true.\n     */\n    useRegExp?: boolean;\n    /**\n     * Use multiline search if true.\n     */\n    multiline?: boolean;\n    /**\n     * Include all .gitignored and hidden files.\n     */\n    includeIgnored?: boolean;\n    /**\n     * Glob pattern for matching files and directories to include the search.\n     */\n    include?: string[];\n    /**\n     * Glob pattern for matching files and directories to exclude the search.\n     */\n    exclude?: string[];\n    /**\n     * Whether symlinks should be followed while searching.\n     */\n    followSymlinks?: boolean;\n}\n\nexport interface SearchInWorkspaceResult {\n    /**\n     * The string uri to the root folder that the search was performed.\n     */\n    root: string;\n\n    /**\n     * The string uri to the file containing the result.\n     */\n    fileUri: string;\n\n    /**\n     * matches found in the file\n     */\n    matches: SearchMatch[];\n}\n\nexport interface SearchMatch {\n    /**\n     * The (1-based) line number of the result.\n     */\n    line: number;\n\n    /**\n     * The (1-based) character number in the result line.  For UTF-8 files,\n     * one multi-byte character counts as one character.\n     */\n    character: number;\n\n    /**\n     * The length of the match, in characters.  For UTF-8 files, one\n     * multi-byte character counts as one character.\n     */\n    length: number;\n\n    /**\n     * The text of the line containing the result.\n     */\n    lineText: string | LinePreview;\n\n}\n\nexport interface LinePreview {\n    text: string;\n    character: number;\n}\n\nexport namespace SearchInWorkspaceResult {\n    /**\n     * Sort search in workspace results according to file, line, character position\n     * and then length.\n     */\n    export function compare(a: SearchInWorkspaceResult, b: SearchInWorkspaceResult): number {\n        if (a.fileUri !== b.fileUri) {\n            return a.fileUri < b.fileUri ? -1 : 1;\n        }\n        return 0;\n    }\n}\n\nexport const SearchInWorkspaceClient = Symbol('SearchInWorkspaceClient');\nexport interface SearchInWorkspaceClient {\n    /**\n     * Called by the server for every search match.\n     */\n    onResult(searchId: number, result: SearchInWorkspaceResult): void;\n\n    /**\n     * Called when no more search matches will come.\n     */\n    onDone(searchId: number, error?: string): void;\n}\n\nexport const SIW_WS_PATH = '/services/search-in-workspace';\nexport const SearchInWorkspaceServer = Symbol('SearchInWorkspaceServer');\nexport interface SearchInWorkspaceServer extends RpcServer<SearchInWorkspaceClient> {\n    /**\n     * Start a search for WHAT in directories ROOTURIS. Return a unique search id.\n     */\n    search(what: string, rootUris: string[], opts?: SearchInWorkspaceOptions): Promise<number>;\n\n    /**\n     * Cancel an ongoing search.\n     */\n    cancel(searchId: number): Promise<void>;\n\n    dispose(): void;\n}\n"],"names":[],"sourceRoot":""}