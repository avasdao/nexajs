{"version":3,"file":"vendors-node_modules_theia_editor_lib_browser_editor-menu_js.js","mappings":"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","sources":["webpack:///./node_modules/@theia/core/shared/@phosphor/algorithm/index.js?","webpack:///./node_modules/@theia/editor/src/browser/editor-command.ts?","webpack:///./node_modules/@theia/editor/src/browser/editor-manager.ts?","webpack:///./node_modules/@theia/editor/src/browser/editor-menu.ts?","webpack:///./node_modules/@theia/editor/src/browser/editor-preferences.ts?","webpack:///./node_modules/@theia/editor/src/browser/editor-widget-factory.ts?","webpack:///./node_modules/@theia/editor/src/browser/editor-widget.ts?","webpack:///./node_modules/@theia/editor/src/browser/editor.ts?"],"sourcesContent":["module.exports = require('@phosphor/algorithm');\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, optional, postConstruct } from '@theia/core/shared/inversify';\nimport { CommandContribution, CommandRegistry, Command } from '@theia/core/lib/common';\nimport URI from '@theia/core/lib/common/uri';\nimport { CommonCommands, PreferenceService, LabelProvider, ApplicationShell, QuickInputService, QuickPickValue, QuickPickItemOrSeparator } from '@theia/core/lib/browser';\nimport { EditorManager } from './editor-manager';\nimport { EditorPreferences } from './editor-preferences';\nimport { ResourceProvider, MessageService } from '@theia/core';\nimport { LanguageService, Language } from '@theia/core/lib/browser/language-service';\nimport { SUPPORTED_ENCODINGS } from '@theia/core/lib/browser/supported-encodings';\nimport { EncodingMode } from './editor';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport namespace EditorCommands {\n\n    const EDITOR_CATEGORY = 'Editor';\n    const EDITOR_CATEGORY_KEY = nls.getDefaultKey(EDITOR_CATEGORY);\n\n    export const GOTO_LINE_COLUMN = Command.toDefaultLocalizedCommand({\n        id: 'editor.action.gotoLine',\n        label: 'Go to Line/Column'\n    });\n\n    /**\n     * Show editor references\n     */\n    export const SHOW_REFERENCES: Command = {\n        id: 'textEditor.commands.showReferences'\n    };\n    /**\n     * Change indentation configuration (i.e., indent using tabs / spaces, and how many spaces per tab)\n     */\n    export const CONFIG_INDENTATION: Command = {\n        id: 'textEditor.commands.configIndentation'\n    };\n\n    export const CONFIG_EOL = Command.toDefaultLocalizedCommand({\n        id: 'textEditor.commands.configEol',\n        category: EDITOR_CATEGORY,\n        label: 'Change End of Line Sequence'\n    });\n\n    export const INDENT_USING_SPACES = Command.toDefaultLocalizedCommand({\n        id: 'textEditor.commands.indentUsingSpaces',\n        category: EDITOR_CATEGORY,\n        label: 'Indent Using Spaces'\n    });\n    export const INDENT_USING_TABS = Command.toDefaultLocalizedCommand({\n        id: 'textEditor.commands.indentUsingTabs',\n        category: EDITOR_CATEGORY,\n        label: 'Indent Using Tabs'\n    });\n    export const CHANGE_LANGUAGE = Command.toDefaultLocalizedCommand({\n        id: 'textEditor.change.language',\n        category: EDITOR_CATEGORY,\n        label: 'Change Language Mode'\n    });\n    export const CHANGE_ENCODING = Command.toDefaultLocalizedCommand({\n        id: 'textEditor.change.encoding',\n        category: EDITOR_CATEGORY,\n        label: 'Change File Encoding'\n    });\n    export const REVERT_EDITOR = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.files.revert',\n        category: CommonCommands.FILE_CATEGORY,\n        label: 'Revert File',\n    });\n    export const REVERT_AND_CLOSE = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.revertAndCloseActiveEditor',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Revert and Close Editor'\n    });\n\n    /**\n     * Command for going back to the last editor navigation location.\n     */\n    export const GO_BACK = Command.toDefaultLocalizedCommand({\n        id: 'textEditor.commands.go.back',\n        category: EDITOR_CATEGORY,\n        label: 'Go Back'\n    });\n    /**\n     * Command for going to the forthcoming editor navigation location.\n     */\n    export const GO_FORWARD = Command.toDefaultLocalizedCommand({\n        id: 'textEditor.commands.go.forward',\n        category: EDITOR_CATEGORY,\n        label: 'Go Forward'\n    });\n    /**\n     * Command that reveals the last text edit location, if any.\n     */\n    export const GO_LAST_EDIT = Command.toDefaultLocalizedCommand({\n        id: 'textEditor.commands.go.lastEdit',\n        category: EDITOR_CATEGORY,\n        label: 'Go to Last Edit Location'\n    });\n    /**\n     * Command that clears the editor navigation history.\n     */\n    export const CLEAR_EDITOR_HISTORY = Command.toDefaultLocalizedCommand({\n        id: 'textEditor.commands.clear.history',\n        category: EDITOR_CATEGORY,\n        label: 'Clear Editor History'\n    });\n    /**\n     * Command that displays all editors that are currently opened.\n     */\n    export const SHOW_ALL_OPENED_EDITORS = Command.toLocalizedCommand({\n        id: 'workbench.action.showAllEditors',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Show All Opened Editors'\n    }, 'theia/editor/showAllEditors', EDITOR_CATEGORY_KEY);\n    /**\n     * Command that toggles the minimap.\n     */\n    export const TOGGLE_MINIMAP = Command.toDefaultLocalizedCommand({\n        id: 'editor.action.toggleMinimap',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Toggle Minimap'\n    });\n    /**\n     * Command that toggles the rendering of whitespace characters in the editor.\n     */\n    export const TOGGLE_RENDER_WHITESPACE = Command.toDefaultLocalizedCommand({\n        id: 'editor.action.toggleRenderWhitespace',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Toggle Render Whitespace'\n    });\n    /**\n     * Command that toggles the word wrap.\n     */\n    export const TOGGLE_WORD_WRAP = Command.toDefaultLocalizedCommand({\n        id: 'editor.action.toggleWordWrap',\n        label: 'View: Toggle Word Wrap'\n    });\n    /**\n     * Command that toggles sticky scroll.\n     */\n    export const TOGGLE_STICKY_SCROLL = Command.toLocalizedCommand({\n        id: 'editor.action.toggleStickyScroll',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Toggle Sticky Scroll',\n    }, 'theia/editor/toggleStickyScroll', EDITOR_CATEGORY_KEY);\n    /**\n     * Command that re-opens the last closed editor.\n     */\n    export const REOPEN_CLOSED_EDITOR = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.reopenClosedEditor',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Reopen Closed Editor'\n    });\n    /**\n     * Opens a second instance of the current editor, splitting the view in the direction specified.\n     */\n    export const SPLIT_EDITOR_RIGHT = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.splitEditorRight',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Split Editor Right'\n    });\n    export const SPLIT_EDITOR_DOWN = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.splitEditorDown',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Split Editor Down'\n    });\n    export const SPLIT_EDITOR_UP = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.splitEditorUp',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Split Editor Up'\n    });\n    export const SPLIT_EDITOR_LEFT = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.splitEditorLeft',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Split Editor Left'\n    });\n    /**\n     * Default horizontal split: right.\n     */\n    export const SPLIT_EDITOR_HORIZONTAL = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.splitEditor',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Split Editor'\n    });\n    /**\n     * Default vertical split: down.\n     */\n    export const SPLIT_EDITOR_VERTICAL = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.splitEditorOrthogonal',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Split Editor Orthogonal'\n    });\n}\n\n@injectable()\nexport class EditorCommandContribution implements CommandContribution {\n\n    public static readonly AUTOSAVE_PREFERENCE: string = 'files.autoSave';\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    @inject(PreferenceService)\n    protected readonly preferencesService: PreferenceService;\n\n    @inject(EditorPreferences)\n    protected readonly editorPreferences: EditorPreferences;\n\n    @inject(QuickInputService) @optional()\n    protected readonly quickInputService: QuickInputService;\n\n    @inject(MessageService) protected readonly messageService: MessageService;\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(LanguageService)\n    protected readonly languages: LanguageService;\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    @inject(ResourceProvider)\n    protected readonly resourceProvider: ResourceProvider;\n\n    @postConstruct()\n    protected init(): void {\n        this.editorPreferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'files.autoSave' && e.newValue !== 'off') {\n                this.shell.saveAll();\n            }\n        });\n    }\n\n    registerCommands(registry: CommandRegistry): void {\n        registry.registerCommand(EditorCommands.SHOW_REFERENCES);\n        registry.registerCommand(EditorCommands.CONFIG_INDENTATION);\n        registry.registerCommand(EditorCommands.CONFIG_EOL);\n        registry.registerCommand(EditorCommands.INDENT_USING_SPACES);\n        registry.registerCommand(EditorCommands.INDENT_USING_TABS);\n        registry.registerCommand(EditorCommands.REVERT_EDITOR);\n        registry.registerCommand(EditorCommands.REVERT_AND_CLOSE);\n        registry.registerCommand(EditorCommands.CHANGE_LANGUAGE, {\n            isEnabled: () => this.canConfigureLanguage(),\n            isVisible: () => this.canConfigureLanguage(),\n            execute: () => this.configureLanguage()\n        });\n        registry.registerCommand(EditorCommands.CHANGE_ENCODING, {\n            isEnabled: () => this.canConfigureEncoding(),\n            isVisible: () => this.canConfigureEncoding(),\n            execute: () => this.configureEncoding()\n        });\n\n        registry.registerCommand(EditorCommands.GO_BACK);\n        registry.registerCommand(EditorCommands.GO_FORWARD);\n        registry.registerCommand(EditorCommands.GO_LAST_EDIT);\n        registry.registerCommand(EditorCommands.CLEAR_EDITOR_HISTORY);\n        registry.registerCommand(EditorCommands.TOGGLE_MINIMAP);\n        registry.registerCommand(EditorCommands.TOGGLE_RENDER_WHITESPACE);\n        registry.registerCommand(EditorCommands.TOGGLE_WORD_WRAP);\n        registry.registerCommand(EditorCommands.TOGGLE_STICKY_SCROLL);\n        registry.registerCommand(EditorCommands.REOPEN_CLOSED_EDITOR);\n\n        registry.registerCommand(CommonCommands.AUTO_SAVE, {\n            isToggled: () => this.isAutoSaveOn(),\n            execute: () => this.toggleAutoSave()\n        });\n    }\n\n    protected canConfigureLanguage(): boolean {\n        const widget = this.editorManager.currentEditor;\n        const editor = widget && widget.editor;\n        return !!editor && !!this.languages.languages;\n    }\n    protected async configureLanguage(): Promise<void> {\n        const widget = this.editorManager.currentEditor;\n        const editor = widget && widget.editor;\n        if (!editor || !this.languages.languages) {\n            return;\n        }\n        const current = editor.document.languageId;\n        const items: Array<QuickPickValue<'autoDetect' | Language> | QuickPickItemOrSeparator> = [\n            { label: nls.localizeByDefault('Auto Detect'), value: 'autoDetect' },\n            { type: 'separator', label: nls.localizeByDefault('languages (identifier)') },\n            ... (this.languages.languages.map(language => this.toQuickPickLanguage(language, current))).sort((e, e2) => e.label.localeCompare(e2.label))\n        ];\n        const selectedMode = await this.quickInputService?.showQuickPick(items, { placeholder: nls.localizeByDefault('Select Language Mode') });\n        if (selectedMode && ('value' in selectedMode)) {\n            if (selectedMode.value === 'autoDetect') {\n                editor.detectLanguage();\n            } else if (selectedMode.value) {\n                editor.setLanguage(selectedMode.value.id);\n            }\n        }\n    }\n\n    protected canConfigureEncoding(): boolean {\n        const widget = this.editorManager.currentEditor;\n        const editor = widget && widget.editor;\n        return !!editor;\n    }\n    protected async configureEncoding(): Promise<void> {\n        const widget = this.editorManager.currentEditor;\n        const editor = widget && widget.editor;\n        if (!editor) {\n            return;\n        }\n        const reopenWithEncodingPick = { label: nls.localizeByDefault('Reopen with Encoding'), value: 'reopen' };\n        const saveWithEncodingPick = { label: nls.localizeByDefault('Save with Encoding'), value: 'save' };\n        const actionItems: QuickPickValue<string>[] = [\n            reopenWithEncodingPick,\n            saveWithEncodingPick\n        ];\n        const selectedEncoding = await this.quickInputService?.showQuickPick(actionItems, { placeholder: nls.localizeByDefault('Select Action') });\n        if (!selectedEncoding) {\n            return;\n        }\n        const isReopenWithEncoding = (selectedEncoding.value === reopenWithEncodingPick.value);\n\n        const configuredEncoding = this.preferencesService.get<string>('files.encoding', 'utf8', editor.uri.toString());\n\n        const resource = await this.resourceProvider(editor.uri);\n        const guessedEncoding = resource.guessEncoding ? await resource.guessEncoding() : undefined;\n        resource.dispose();\n\n        const encodingItems: QuickPickValue<{ id: string, description: string }>[] = Object.keys(SUPPORTED_ENCODINGS)\n            .sort((k1, k2) => {\n                if (k1 === configuredEncoding) {\n                    return -1;\n                } else if (k2 === configuredEncoding) {\n                    return 1;\n                }\n                return SUPPORTED_ENCODINGS[k1].order - SUPPORTED_ENCODINGS[k2].order;\n            })\n            .filter(k => {\n                if (k === guessedEncoding && guessedEncoding !== configuredEncoding) {\n                    return false; // do not show encoding if it is the guessed encoding that does not match the configured\n                }\n\n                return !isReopenWithEncoding || !SUPPORTED_ENCODINGS[k].encodeOnly; // hide those that can only be used for encoding if we are about to decode\n            })\n            .map(key => ({ label: SUPPORTED_ENCODINGS[key].labelLong, value: { id: key, description: key } }));\n\n        // Insert guessed encoding\n        if (guessedEncoding && configuredEncoding !== guessedEncoding && SUPPORTED_ENCODINGS[guessedEncoding]) {\n            encodingItems.unshift({\n                label: `${nls.localizeByDefault('Guessed from content')}: ${SUPPORTED_ENCODINGS[guessedEncoding].labelLong}`,\n                value: { id: guessedEncoding, description: guessedEncoding }\n            });\n        }\n        const selectedFileEncoding = await this.quickInputService?.showQuickPick<QuickPickValue<{ id: string, description: string }>>(encodingItems, {\n            placeholder: isReopenWithEncoding ?\n                nls.localizeByDefault('Select File Encoding to Reopen File') :\n                nls.localizeByDefault('Select File Encoding to Save with')\n        });\n\n        if (!selectedFileEncoding) {\n            return;\n        }\n        if (editor.document.dirty && isReopenWithEncoding) {\n            this.messageService.info(nls.localize('theia/editor/dirtyEncoding', 'The file is dirty. Please save it first before reopening it with another encoding.'));\n            return;\n        } else if (selectedFileEncoding.value) {\n            editor.setEncoding(selectedFileEncoding.value.id, isReopenWithEncoding ? EncodingMode.Decode : EncodingMode.Encode);\n        }\n    }\n\n    protected toQuickPickLanguage(value: Language, current: string): QuickPickValue<Language> {\n        const languageUri = this.toLanguageUri(value);\n        const icon = this.labelProvider.getIcon(languageUri);\n        const iconClasses = icon !== '' ? [icon + ' file-icon'] : undefined;\n        const configured = current === value.id;\n        return {\n            value,\n            label: value.name,\n            description: nls.localizeByDefault(`({0})${configured ? ' - Configured Language' : ''}`, value.id),\n            iconClasses\n        };\n    }\n    protected toLanguageUri(language: Language): URI {\n        const extension = language.extensions.values().next();\n        if (extension.value) {\n            return new URI('file:///' + extension.value);\n        }\n        const filename = language.filenames.values().next();\n        if (filename.value) {\n            return new URI('file:///' + filename.value);\n        }\n        return new URI('file:///.txt');\n    }\n\n    protected isAutoSaveOn(): boolean {\n        const autoSave = this.preferencesService.get(EditorCommandContribution.AUTOSAVE_PREFERENCE);\n        return autoSave !== 'off';\n    }\n\n    protected async toggleAutoSave(): Promise<void> {\n        this.preferencesService.updateValue(EditorCommandContribution.AUTOSAVE_PREFERENCE, this.isAutoSaveOn() ? 'off' : 'afterDelay');\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, postConstruct, inject } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { RecursivePartial, Emitter, Event, MaybePromise, CommandService } from '@theia/core/lib/common';\nimport { WidgetOpenerOptions, NavigatableWidgetOpenHandler, NavigatableWidgetOptions, Widget, PreferenceService, CommonCommands } from '@theia/core/lib/browser';\nimport { EditorWidget } from './editor-widget';\nimport { Range, Position, Location, TextEditor } from './editor';\nimport { EditorWidgetFactory } from './editor-widget-factory';\n\nexport interface WidgetId {\n    id: number;\n    uri: string;\n}\n\nexport interface EditorOpenerOptions extends WidgetOpenerOptions {\n    selection?: RecursivePartial<Range>;\n    preview?: boolean;\n    counter?: number\n}\n\n@injectable()\nexport class EditorManager extends NavigatableWidgetOpenHandler<EditorWidget> {\n\n    readonly id = EditorWidgetFactory.ID;\n\n    readonly label = 'Code Editor';\n\n    protected readonly editorCounters = new Map<string, number>();\n\n    protected readonly onActiveEditorChangedEmitter = new Emitter<EditorWidget | undefined>();\n    /**\n     * Emit when the active editor is changed.\n     */\n    readonly onActiveEditorChanged: Event<EditorWidget | undefined> = this.onActiveEditorChangedEmitter.event;\n\n    protected readonly onCurrentEditorChangedEmitter = new Emitter<EditorWidget | undefined>();\n    /**\n     * Emit when the current editor is changed.\n     */\n    readonly onCurrentEditorChanged: Event<EditorWidget | undefined> = this.onCurrentEditorChangedEmitter.event;\n\n    @inject(CommandService) protected readonly commands: CommandService;\n    @inject(PreferenceService) protected readonly preferenceService: PreferenceService;\n\n    @postConstruct()\n    protected override init(): void {\n        super.init();\n        this.shell.onDidChangeActiveWidget(() => this.updateActiveEditor());\n        this.shell.onDidChangeCurrentWidget(() => this.updateCurrentEditor());\n        this.shell.onDidDoubleClickMainArea(() =>\n            this.commands.executeCommand(CommonCommands.NEW_UNTITLED_TEXT_FILE.id)\n        );\n        this.onCreated(widget => {\n            widget.onDidChangeVisibility(() => {\n                if (widget.isVisible) {\n                    this.addRecentlyVisible(widget);\n                }\n                this.updateCurrentEditor();\n            });\n            this.checkCounterForWidget(widget);\n            widget.disposed.connect(() => {\n                this.removeFromCounter(widget);\n                this.removeRecentlyVisible(widget);\n                this.updateCurrentEditor();\n            });\n        });\n        for (const widget of this.all) {\n            if (widget.isVisible) {\n                this.addRecentlyVisible(widget);\n            }\n        }\n        this.updateCurrentEditor();\n    }\n\n    override getByUri(uri: URI, options?: EditorOpenerOptions): Promise<EditorWidget | undefined> {\n        return this.getWidget(uri, options);\n    }\n\n    override getOrCreateByUri(uri: URI, options?: EditorOpenerOptions): Promise<EditorWidget> {\n        return this.getOrCreateWidget(uri, options);\n    }\n\n    protected override tryGetPendingWidget(uri: URI, options?: EditorOpenerOptions): MaybePromise<EditorWidget> | undefined {\n        const editorPromise = super.tryGetPendingWidget(uri, options);\n        if (editorPromise) {\n            // Reveal selection before attachment to manage nav stack. (https://github.com/eclipse-theia/theia/issues/8955)\n            if (!(editorPromise instanceof Widget)) {\n                editorPromise.then(editor => this.revealSelection(editor, options, uri));\n            } else {\n                this.revealSelection(editorPromise, options);\n            }\n        }\n        return editorPromise;\n    }\n\n    protected override async getWidget(uri: URI, options?: EditorOpenerOptions): Promise<EditorWidget | undefined> {\n        const editor = await super.getWidget(uri, options);\n        if (editor) {\n            // Reveal selection before attachment to manage nav stack. (https://github.com/eclipse-theia/theia/issues/8955)\n            this.revealSelection(editor, options, uri);\n        }\n        return editor;\n    }\n\n    protected override async getOrCreateWidget(uri: URI, options?: EditorOpenerOptions): Promise<EditorWidget> {\n        const editor = await super.getOrCreateWidget(uri, options);\n        // Reveal selection before attachment to manage nav stack. (https://github.com/eclipse-theia/theia/issues/8955)\n        this.revealSelection(editor, options, uri);\n        return editor;\n    }\n\n    protected readonly recentlyVisibleIds: string[] = [];\n    protected get recentlyVisible(): EditorWidget | undefined {\n        const id = this.recentlyVisibleIds[0];\n        return id && this.all.find(w => w.id === id) || undefined;\n    }\n    protected addRecentlyVisible(widget: EditorWidget): void {\n        this.removeRecentlyVisible(widget);\n        this.recentlyVisibleIds.unshift(widget.id);\n    }\n    protected removeRecentlyVisible(widget: EditorWidget): void {\n        const index = this.recentlyVisibleIds.indexOf(widget.id);\n        if (index !== -1) {\n            this.recentlyVisibleIds.splice(index, 1);\n        }\n    }\n\n    protected _activeEditor: EditorWidget | undefined;\n    /**\n     * The active editor.\n     * If there is an active editor (one that has focus), active and current are the same.\n     */\n    get activeEditor(): EditorWidget | undefined {\n        return this._activeEditor;\n    }\n    protected setActiveEditor(active: EditorWidget | undefined): void {\n        if (this._activeEditor !== active) {\n            this._activeEditor = active;\n            this.onActiveEditorChangedEmitter.fire(this._activeEditor);\n        }\n    }\n    protected updateActiveEditor(): void {\n        const widget = this.shell.activeWidget;\n        if (widget instanceof EditorWidget) {\n            this.addRecentlyVisible(widget);\n            this.setActiveEditor(widget);\n        } else {\n            this.setActiveEditor(undefined);\n        }\n    }\n\n    protected _currentEditor: EditorWidget | undefined;\n    /**\n     * The most recently activated editor (which might not have the focus anymore, hence it is not active).\n     * If no editor has focus, e.g. when a context menu is shown, the active editor is `undefined`, but current might be the editor that was active before the menu popped up.\n     */\n    get currentEditor(): EditorWidget | undefined {\n        return this._currentEditor;\n    }\n    protected setCurrentEditor(current: EditorWidget | undefined): void {\n        if (this._currentEditor !== current) {\n            this._currentEditor = current;\n            this.onCurrentEditorChangedEmitter.fire(this._currentEditor);\n        }\n    }\n    protected updateCurrentEditor(): void {\n        const widget = this.shell.currentWidget;\n        if (widget instanceof EditorWidget) {\n            this.setCurrentEditor(widget);\n        } else if (!this._currentEditor || !this._currentEditor.isVisible || this.currentEditor !== this.recentlyVisible) {\n            this.setCurrentEditor(this.recentlyVisible);\n        }\n    }\n\n    canHandle(uri: URI, options?: WidgetOpenerOptions): number {\n        return 100;\n    }\n\n    override open(uri: URI, options?: EditorOpenerOptions): Promise<EditorWidget> {\n        if (options?.counter === undefined) {\n            const insertionOptions = this.shell.getInsertionOptions(options?.widgetOptions);\n            // Definitely creating a new tabbar - no widget can match.\n            if (insertionOptions.addOptions.mode?.startsWith('split')) {\n                return super.open(uri, { counter: this.createCounterForUri(uri), ...options });\n            }\n            // Check the target tabbar for an existing widget.\n            const tabbar = insertionOptions.addOptions.ref && this.shell.getTabBarFor(insertionOptions.addOptions.ref);\n            if (tabbar) {\n                const currentUri = uri.toString();\n                for (const title of tabbar.titles) {\n                    if (title.owner instanceof EditorWidget) {\n                        const { uri: otherWidgetUri, id } = this.extractIdFromWidget(title.owner);\n                        if (otherWidgetUri === currentUri) {\n                            return super.open(uri, { counter: id, ...options });\n                        }\n                    }\n                }\n            }\n            // If the user has opted to prefer to open an existing editor even if it's on a different tab, check if we have anything about the URI.\n            if (this.preferenceService.get('workbench.editor.revealIfOpen', false)) {\n                const counter = this.getCounterForUri(uri);\n                if (counter !== undefined) {\n                    return super.open(uri, { counter, ...options });\n                }\n            }\n            // Open a new widget.\n            return super.open(uri, { counter: this.createCounterForUri(uri), ...options });\n        }\n\n        return super.open(uri, options);\n    }\n\n    /**\n     * Opens an editor to the side of the current editor. Defaults to opening to the right.\n     * To modify direction, pass options with `{widgetOptions: {mode: ...}}`\n     */\n    openToSide(uri: URI, options?: EditorOpenerOptions): Promise<EditorWidget> {\n        const counter = this.createCounterForUri(uri);\n        const splitOptions: EditorOpenerOptions = { widgetOptions: { mode: 'split-right' }, ...options, counter };\n        return this.open(uri, splitOptions);\n    }\n\n    protected revealSelection(widget: EditorWidget, input?: EditorOpenerOptions, uri?: URI): void {\n        let inputSelection = input?.selection;\n        if (!inputSelection && uri) {\n            const match = /^L?(\\d+)(?:,(\\d+))?/.exec(uri.fragment);\n            if (match) {\n                // support file:///some/file.js#73,84\n                // support file:///some/file.js#L73\n                inputSelection = {\n                    start: {\n                        line: parseInt(match[1]) - 1,\n                        character: match[2] ? parseInt(match[2]) - 1 : 0\n                    }\n                };\n            }\n        }\n        if (inputSelection) {\n            const editor = widget.editor;\n            const selection = this.getSelection(widget, inputSelection);\n            if (Position.is(selection)) {\n                editor.cursor = selection;\n                editor.revealPosition(selection);\n            } else if (Range.is(selection)) {\n                editor.cursor = selection.end;\n                editor.selection = selection;\n                editor.revealRange(selection);\n            }\n        }\n    }\n\n    protected getSelection(widget: EditorWidget, selection: RecursivePartial<Range>): Range | Position | undefined {\n        const { start, end } = selection;\n        if (Position.is(start)) {\n            if (Position.is(end)) {\n                return widget.editor.document.toValidRange({ start, end });\n            }\n            return widget.editor.document.toValidPosition(start);\n        }\n        const line = start && start.line !== undefined && start.line >= 0 ? start.line : undefined;\n        if (line === undefined) {\n            return undefined;\n        }\n        const character = start && start.character !== undefined && start.character >= 0 ? start.character : widget.editor.document.getLineMaxColumn(line);\n        const endLine = end && end.line !== undefined && end.line >= 0 ? end.line : undefined;\n        if (endLine === undefined) {\n            return { line, character };\n        }\n        const endCharacter = end && end.character !== undefined && end.character >= 0 ? end.character : widget.editor.document.getLineMaxColumn(endLine);\n        return {\n            start: { line, character },\n            end: { line: endLine, character: endCharacter }\n        };\n    }\n\n    protected removeFromCounter(widget: EditorWidget): void {\n        const { id, uri } = this.extractIdFromWidget(widget);\n        if (uri && !Number.isNaN(id)) {\n            let max = -Infinity;\n            this.all.forEach(editor => {\n                const candidateID = this.extractIdFromWidget(editor);\n                if ((candidateID.uri === uri) && (candidateID.id > max)) {\n                    max = candidateID.id!;\n                }\n            });\n\n            if (max > -Infinity) {\n                this.editorCounters.set(uri, max);\n            } else {\n                this.editorCounters.delete(uri);\n            }\n        }\n    }\n\n    protected extractIdFromWidget(widget: EditorWidget): WidgetId {\n        const uri = widget.editor.uri.toString();\n        const id = Number(widget.id.slice(widget.id.lastIndexOf(':') + 1));\n        return { id, uri };\n    }\n\n    protected checkCounterForWidget(widget: EditorWidget): void {\n        const { id, uri } = this.extractIdFromWidget(widget);\n        const numericalId = Number(id);\n        if (uri && !Number.isNaN(numericalId)) {\n            const highestKnownId = this.editorCounters.get(uri) ?? -Infinity;\n            if (numericalId > highestKnownId) {\n                this.editorCounters.set(uri, numericalId);\n            }\n        }\n    }\n\n    protected createCounterForUri(uri: URI): number {\n        const identifier = uri.toString();\n        const next = (this.editorCounters.get(identifier) ?? 0) + 1;\n        return next;\n    }\n\n    protected getCounterForUri(uri: URI): number | undefined {\n        const idWithoutCounter = EditorWidgetFactory.createID(uri);\n        const counterOfMostRecentlyVisibleEditor = this.recentlyVisibleIds.find(id => id.startsWith(idWithoutCounter))?.slice(idWithoutCounter.length + 1);\n        return counterOfMostRecentlyVisibleEditor === undefined ? undefined : parseInt(counterOfMostRecentlyVisibleEditor);\n    }\n\n    protected getOrCreateCounterForUri(uri: URI): number {\n        return this.getCounterForUri(uri) ?? this.createCounterForUri(uri);\n    }\n\n    protected override createWidgetOptions(uri: URI, options?: EditorOpenerOptions): NavigatableWidgetOptions {\n        const navigatableOptions = super.createWidgetOptions(uri, options);\n        navigatableOptions.counter = options?.counter ?? this.getOrCreateCounterForUri(uri);\n        return navigatableOptions;\n    }\n}\n\n/**\n * Provides direct access to the underlying text editor.\n */\n@injectable()\nexport abstract class EditorAccess {\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    /**\n     * The URI of the underlying document from the editor.\n     */\n    get uri(): string | undefined {\n        const editor = this.editor;\n        if (editor) {\n            return editor.uri.toString();\n        }\n        return undefined;\n    }\n\n    /**\n     * The selection location from the text editor.\n     */\n    get selection(): Location | undefined {\n        const editor = this.editor;\n        if (editor) {\n            const uri = editor.uri.toString();\n            const range = editor.selection;\n            return {\n                range,\n                uri\n            };\n        }\n        return undefined;\n    }\n\n    /**\n     * The unique identifier of the language the current editor belongs to.\n     */\n    get languageId(): string | undefined {\n        const editor = this.editor;\n        if (editor) {\n            return editor.document.languageId;\n        }\n        return undefined;\n    }\n\n    /**\n     * The text editor.\n     */\n    get editor(): TextEditor | undefined {\n        const editorWidget = this.editorWidget();\n        if (editorWidget) {\n            return editorWidget.editor;\n        }\n        return undefined;\n    }\n\n    /**\n     * The editor widget, or `undefined` if not applicable.\n     */\n    protected abstract editorWidget(): EditorWidget | undefined;\n\n}\n\n/**\n * Provides direct access to the currently active text editor.\n */\n@injectable()\nexport class CurrentEditorAccess extends EditorAccess {\n\n    protected editorWidget(): EditorWidget | undefined {\n        return this.editorManager.currentEditor;\n    }\n\n}\n\n/**\n * Provides access to the active text editor.\n */\n@injectable()\nexport class ActiveEditorAccess extends EditorAccess {\n\n    protected editorWidget(): EditorWidget | undefined {\n        return this.editorManager.activeEditor;\n    }\n\n}\n\nexport namespace EditorAccess {\n    export const CURRENT = 'current-editor-access';\n    export const ACTIVE = 'active-editor-access';\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { MenuContribution, MenuModelRegistry, MenuPath, MAIN_MENU_BAR } from '@theia/core';\nimport { CommonCommands, CommonMenus } from '@theia/core/lib/browser';\nimport { EditorCommands } from './editor-command';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport const EDITOR_CONTEXT_MENU: MenuPath = ['editor_context_menu'];\n\n/**\n * Editor context menu default groups should be aligned\n * with VS Code default groups: https://code.visualstudio.com/api/references/contribution-points#contributes.menus\n */\nexport namespace EditorContextMenu {\n    export const NAVIGATION = [...EDITOR_CONTEXT_MENU, 'navigation'];\n    export const MODIFICATION = [...EDITOR_CONTEXT_MENU, '1_modification'];\n    export const CUT_COPY_PASTE = [...EDITOR_CONTEXT_MENU, '9_cutcopypaste'];\n    export const COMMANDS = [...EDITOR_CONTEXT_MENU, 'z_commands'];\n    export const UNDO_REDO = [...EDITOR_CONTEXT_MENU, '1_undo'];\n}\n\nexport namespace EditorMainMenu {\n\n    /**\n     * The main `Go` menu item.\n     */\n    export const GO = [...MAIN_MENU_BAR, '5_go'];\n\n    /**\n     * Navigation menu group in the `Go` main-menu.\n     */\n    export const NAVIGATION_GROUP = [...GO, '1_navigation_group'];\n\n    /**\n     * Context management group in the `Go` main menu: Pane and editor switching commands.\n     */\n    export const CONTEXT_GROUP = [...GO, '1.1_context_group'];\n\n    /**\n     * Submenu for switching panes in the main area.\n     */\n    export const PANE_GROUP = [...CONTEXT_GROUP, '2_pane_group'];\n    export const BY_NUMBER = [...EditorMainMenu.PANE_GROUP, '1_by_number'];\n    export const NEXT_PREVIOUS = [...EditorMainMenu.PANE_GROUP, '2_by_location'];\n\n    /**\n     * Workspace menu group in the `Go` main-menu.\n     */\n    export const WORKSPACE_GROUP = [...GO, '2_workspace_group'];\n\n    /**\n     * Language features menu group in the `Go` main-menu.\n     */\n    export const LANGUAGE_FEATURES_GROUP = [...GO, '3_language_features_group'];\n\n    /**\n     * Location menu group in the `Go` main-menu.\n     */\n    export const LOCATION_GROUP = [...GO, '4_locations'];\n\n}\n\n@injectable()\nexport class EditorMenuContribution implements MenuContribution {\n\n    registerMenus(registry: MenuModelRegistry): void {\n        registry.registerMenuAction(EditorContextMenu.UNDO_REDO, {\n            commandId: CommonCommands.UNDO.id\n        });\n        registry.registerMenuAction(EditorContextMenu.UNDO_REDO, {\n            commandId: CommonCommands.REDO.id\n        });\n\n        registry.registerMenuAction(EditorContextMenu.CUT_COPY_PASTE, {\n            commandId: CommonCommands.CUT.id,\n            order: '0'\n        });\n        registry.registerMenuAction(EditorContextMenu.CUT_COPY_PASTE, {\n            commandId: CommonCommands.COPY.id,\n            order: '1'\n        });\n        registry.registerMenuAction(EditorContextMenu.CUT_COPY_PASTE, {\n            commandId: CommonCommands.PASTE.id,\n            order: '2'\n        });\n\n        // Editor navigation. Go > Back and Go > Forward.\n        registry.registerSubmenu(EditorMainMenu.GO, nls.localizeByDefault('Go'));\n        registry.registerMenuAction(EditorMainMenu.NAVIGATION_GROUP, {\n            commandId: EditorCommands.GO_BACK.id,\n            label: EditorCommands.GO_BACK.label,\n            order: '1'\n        });\n        registry.registerMenuAction(EditorMainMenu.NAVIGATION_GROUP, {\n            commandId: EditorCommands.GO_FORWARD.id,\n            label: EditorCommands.GO_FORWARD.label,\n            order: '2'\n        });\n        registry.registerMenuAction(EditorMainMenu.NAVIGATION_GROUP, {\n            commandId: EditorCommands.GO_LAST_EDIT.id,\n            label: nls.localizeByDefault('Last Edit Location'),\n            order: '3'\n        });\n\n        registry.registerSubmenu(EditorMainMenu.PANE_GROUP, nls.localizeByDefault('Switch Group'));\n\n        registry.registerMenuAction(EditorMainMenu.BY_NUMBER, {\n            commandId: 'workbench.action.focusFirstEditorGroup',\n            label: nls.localizeByDefault('Group 1'),\n        });\n        registry.registerMenuAction(EditorMainMenu.BY_NUMBER, {\n            commandId: 'workbench.action.focusSecondEditorGroup',\n            label: nls.localizeByDefault('Group 2'),\n        });\n        registry.registerMenuAction(EditorMainMenu.BY_NUMBER, {\n            commandId: 'workbench.action.focusThirdEditorGroup',\n            label: nls.localizeByDefault('Group 3'),\n        });\n        registry.registerMenuAction(EditorMainMenu.BY_NUMBER, {\n            commandId: 'workbench.action.focusFourthEditorGroup',\n            label: nls.localizeByDefault('Group 4'),\n        });\n        registry.registerMenuAction(EditorMainMenu.BY_NUMBER, {\n            commandId: 'workbench.action.focusFifthEditorGroup',\n            label: nls.localizeByDefault('Group 5'),\n        });\n\n        registry.registerMenuAction(EditorMainMenu.NEXT_PREVIOUS, {\n            commandId: CommonCommands.NEXT_TAB_GROUP.id,\n            label: nls.localizeByDefault('Next Group'),\n            order: '1'\n        });\n        registry.registerMenuAction(EditorMainMenu.NEXT_PREVIOUS, {\n            commandId: CommonCommands.PREVIOUS_TAB_GROUP.id,\n            label: nls.localizeByDefault('Previous Group'),\n            order: '2'\n        });\n\n        registry.registerMenuAction(EditorMainMenu.LOCATION_GROUP, {\n            commandId: EditorCommands.GOTO_LINE_COLUMN.id,\n            order: '1'\n        });\n\n        // Toggle Commands.\n        registry.registerMenuAction(CommonMenus.VIEW_TOGGLE, {\n            commandId: EditorCommands.TOGGLE_WORD_WRAP.id,\n            order: '0'\n        });\n        registry.registerMenuAction(CommonMenus.VIEW_TOGGLE, {\n            commandId: EditorCommands.TOGGLE_MINIMAP.id,\n            order: '1',\n        });\n        registry.registerMenuAction(CommonMenus.VIEW_TOGGLE, {\n            commandId: CommonCommands.TOGGLE_BREADCRUMBS.id,\n            order: '2',\n        });\n        registry.registerMenuAction(CommonMenus.VIEW_TOGGLE, {\n            commandId: EditorCommands.TOGGLE_RENDER_WHITESPACE.id,\n            order: '3'\n        });\n        registry.registerMenuAction(CommonMenus.VIEW_TOGGLE, {\n            commandId: EditorCommands.TOGGLE_STICKY_SCROLL.id,\n            order: '4'\n        });\n        registry.registerMenuAction(CommonMenus.FILE_CLOSE, {\n            commandId: CommonCommands.CLOSE_MAIN_TAB.id,\n            label: nls.localizeByDefault('Close Editor'),\n            order: '1'\n        });\n        registry.registerMenuAction(CommonMenus.VIEW_EDITOR_SUBMENU_SPLIT, {\n            commandId: EditorCommands.SPLIT_EDITOR_RIGHT.id,\n            label: nls.localizeByDefault('Split Editor Right'),\n            order: '0'\n        });\n\n        registry.registerMenuAction(CommonMenus.VIEW_EDITOR_SUBMENU_SPLIT, {\n            commandId: EditorCommands.SPLIT_EDITOR_LEFT.id,\n            label: nls.localizeByDefault('Split Editor Left'),\n            order: '1'\n        });\n\n        registry.registerMenuAction(CommonMenus.VIEW_EDITOR_SUBMENU_SPLIT, {\n            commandId: EditorCommands.SPLIT_EDITOR_UP.id,\n            label: nls.localizeByDefault('Split Editor Up'),\n            order: '2'\n        });\n\n        registry.registerMenuAction(CommonMenus.VIEW_EDITOR_SUBMENU_SPLIT, {\n            commandId: EditorCommands.SPLIT_EDITOR_DOWN.id,\n            label: nls.localizeByDefault('Split Editor Down'),\n            order: '3'\n        });\n\n        registry.registerMenuAction(CommonMenus.VIEW_EDITOR_SUBMENU_ORTHO, {\n            commandId: EditorCommands.SPLIT_EDITOR_HORIZONTAL.id,\n            label: nls.localize('theia/editor/splitHorizontal', 'Split Editor Horizontal'),\n            order: '1'\n        });\n\n        registry.registerMenuAction(CommonMenus.VIEW_EDITOR_SUBMENU_ORTHO, {\n            commandId: EditorCommands.SPLIT_EDITOR_VERTICAL.id,\n            label: nls.localize('theia/editor/splitVertical', 'Split Editor Vertical'),\n            order: '2'\n        });\n\n        registry.registerSubmenu(CommonMenus.VIEW_EDITOR_SUBMENU, nls.localizeByDefault('Editor Layout'));\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport {\n    createPreferenceProxy,\n    PreferenceProxy,\n    PreferenceService,\n    PreferenceContribution,\n    PreferenceSchema,\n    PreferenceChangeEvent,\n    PreferenceScope,\n} from '@theia/core/lib/browser/preferences';\nimport { PreferenceProxyFactory } from '@theia/core/lib/browser/preferences/injectable-preference-proxy';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { environment } from '@theia/core';\nimport { editorGeneratedPreferenceProperties, GeneratedEditorPreferences } from './editor-generated-preference-schema';\n\n/* eslint-disable @theia/localization-check,max-len,no-null/no-null */\n// #region src/vs/workbench/contrib/codeActions/browser/codeActionsContribution.ts\n\nconst codeActionsContributionSchema: PreferenceSchema['properties'] = {\n    'editor.codeActionsOnSave': {\n        oneOf: [\n            {\n                type: 'object',\n                properties: {\n                    'source.fixAll': {\n                        type: 'boolean',\n                        description: nls.localizeByDefault('Controls whether auto fix action should be run on file save.')\n                    }\n                },\n                additionalProperties: {\n                    type: 'boolean'\n                },\n            },\n            {\n                type: 'array',\n                items: { type: 'string' }\n            }\n        ],\n        default: {},\n        description: nls.localizeByDefault('Code action kinds to be run on save.'),\n        scope: 'language-overridable',\n    }\n};\n\ninterface CodeActionsContributionProperties {\n    'editor.codeActionsOnSave': string[] | ({ 'source.fixAll': boolean } & Record<string, boolean>)\n}\n\n// #endregion\n\n// #region src/vs/workbench/contrib/files/browser/files.contribution.ts\nconst fileContributionSchema: PreferenceSchema['properties'] = {\n    'editor.formatOnSave': {\n        'type': 'boolean',\n        'description': nls.localizeByDefault('Format a file on save. A formatter must be available, the file must not be saved after delay, and the editor must not be shutting down.'),\n        'scope': PreferenceScope.fromString('language-overridable'),\n    },\n    'editor.formatOnSaveMode': {\n        'type': 'string',\n        'default': 'file',\n        'enum': [\n            'file',\n            'modifications',\n            'modificationsIfAvailable'\n        ],\n        'enumDescriptions': [\n            nls.localizeByDefault('Format the whole file.'),\n            nls.localizeByDefault('Format modifications (requires source control).'),\n            nls.localize('theia/editor/editor.formatOnSaveMode.modificationsIfAvailable', \"Will attempt to format modifications only (requires source control). If source control can't be used, then the whole file will be formatted.\"),\n        ],\n        'markdownDescription': nls.localizeByDefault('Controls if format on save formats the whole file or only modifications. Only applies when `#editor.formatOnSave#` is enabled.'),\n        'scope': PreferenceScope.fromString('language-overridable'),\n    },\n    // Include this, even though it is not strictly an `editor`preference.\n    'files.eol': {\n        'type': 'string',\n        'enum': [\n            '\\n',\n            '\\r\\n',\n            'auto'\n        ],\n        'enumDescriptions': [\n            nls.localizeByDefault('LF'),\n            nls.localizeByDefault('CRLF'),\n            nls.localizeByDefault('Uses operating system specific end of line character.')\n        ],\n        'default': 'auto',\n        'description': nls.localizeByDefault('The default end of line character.'),\n        'scope': PreferenceScope.fromString('language-overridable')\n    },\n    // We used to call these `editor.autoSave` and `editor.autoSaveDelay`.\n    'files.autoSave': {\n        'type': 'string',\n        'enum': ['off', 'afterDelay', 'onFocusChange', 'onWindowChange'],\n        'markdownEnumDescriptions': [\n            nls.localize('theia/editor/files.autoSave.off', 'An editor with changes is never automatically saved.'),\n            nls.localize('theia/editor/files.autoSave.afterDelay', 'An editor with changes is automatically saved after the configured `#files.autoSaveDelay#`.'),\n            nls.localize('theia/editor/files.autoSave.onFocusChange', 'An editor with changes is automatically saved when the editor loses focus.'),\n            nls.localize('theia/editor/files.autoSave.onWindowChange', 'An editor with changes is automatically saved when the window loses focus.')\n        ],\n        'default': environment.electron.is() ? 'off' : 'afterDelay',\n        'markdownDescription': nls.localize('theia/editor/files.autoSave', 'Controls [auto save](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save) of editors that have unsaved changes.', 'off', 'afterDelay', 'onFocusChange', 'onWindowChange', 'afterDelay')\n    },\n    'files.autoSaveDelay': {\n        'type': 'number',\n        'default': 1000,\n        'minimum': 0,\n        'markdownDescription': nls.localizeByDefault('Controls the delay in milliseconds after which an editor with unsaved changes is saved automatically. Only applies when `#files.autoSave#` is set to `{0}`.', 'afterDelay')\n    },\n    'files.refactoring.autoSave': {\n        'type': 'boolean',\n        'default': true,\n        'description': nls.localizeByDefault('Controls if files that were part of a refactoring are saved automatically')\n    }\n};\n\ninterface FileContributionEditorPreferences {\n    'editor.formatOnSave': boolean;\n    'editor.formatOnSaveMode': 'file' | 'modifications' | 'modificationsIfAvailable';\n    'files.eol': '\\n' | '\\r\\n' | 'auto';\n    'files.autoSave': 'off' | 'afterDelay' | 'onFocusChange' | 'onWindowChange';\n    'files.autoSaveDelay': number;\n    'files.refactoring.autoSave': boolean\n}\n// #endregion\n\n// #region src/vs/workbench/contrib/format/browser/formatActionsMultiple.ts\n// This schema depends on a lot of private stuff in the file, so this is a stripped down version.\nconst formatActionsMultipleSchema: PreferenceSchema['properties'] = {\n    'editor.defaultFormatter': {\n        description: nls.localizeByDefault('Defines a default formatter which takes precedence over all other formatter settings. Must be the identifier of an extension contributing a formatter.'),\n        type: ['string', 'null'],\n        default: null,\n    }\n};\ninterface FormatActionsMultipleProperties {\n    'editor.defaultFormatter': string | null;\n}\n// #endregion\n\n// #region Custom Theia extensions to editor preferences\n\nconst theiaEditorSchema: PreferenceSchema['properties'] = {\n    'editor.formatOnSaveTimeout': {\n        'type': 'number',\n        'default': 750,\n        'description': nls.localize('theia/editor/formatOnSaveTimeout', 'Timeout in milliseconds after which the formatting that is run on file save is cancelled.')\n    },\n    'editor.history.persistClosedEditors': {\n        'type': 'boolean',\n        'default': false,\n        'description': nls.localize('theia/editor/persistClosedEditors', 'Controls whether to persist closed editor history for the workspace across window reloads.')\n    },\n};\n\ninterface TheiaEditorProperties {\n    'editor.formatOnSaveTimeout': number;\n    'editor.history.persistClosedEditors': boolean;\n}\n\n// #endregion\n\nconst combinedProperties = {\n    ...editorGeneratedPreferenceProperties,\n    ...codeActionsContributionSchema,\n    ...fileContributionSchema,\n    ...formatActionsMultipleSchema,\n    ...theiaEditorSchema\n};\n\nexport const editorPreferenceSchema: PreferenceSchema = {\n    'type': 'object',\n    'scope': 'resource',\n    'overridable': true,\n    'properties': combinedProperties,\n};\n\nexport interface EditorConfiguration extends GeneratedEditorPreferences,\n    CodeActionsContributionProperties,\n    FileContributionEditorPreferences,\n    FormatActionsMultipleProperties,\n    TheiaEditorProperties { }\n\nexport type EndOfLinePreference = '\\n' | '\\r\\n' | 'auto';\n\nexport type EditorPreferenceChange = PreferenceChangeEvent<EditorConfiguration>;\n\nexport const EditorPreferenceContribution = Symbol('EditorPreferenceContribution');\nexport const EditorPreferences = Symbol('EditorPreferences');\nexport type EditorPreferences = PreferenceProxy<EditorConfiguration>;\n\n/**\n * @deprecated @since 1.23.0\n *\n * By default, editor preferences now use a validated preference proxy created by the PreferenceProxyFactory binding.\n * This function will create an unvalidated preference proxy.\n * See {@link bindEditorPreferences}\n */\nexport function createEditorPreferences(preferences: PreferenceService, schema: PreferenceSchema = editorPreferenceSchema): EditorPreferences {\n    return createPreferenceProxy(preferences, schema);\n}\n\nexport function bindEditorPreferences(bind: interfaces.Bind): void {\n    bind(EditorPreferences).toDynamicValue(ctx => {\n        const factory = ctx.container.get<PreferenceProxyFactory>(PreferenceProxyFactory);\n        return factory(editorPreferenceSchema);\n    }).inSingletonScope();\n    bind(EditorPreferenceContribution).toConstantValue({ schema: editorPreferenceSchema });\n    bind(PreferenceContribution).toService(EditorPreferenceContribution);\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { nls, SelectionService } from '@theia/core/lib/common';\nimport { NavigatableWidgetOptions, WidgetFactory, LabelProvider } from '@theia/core/lib/browser';\nimport { EditorWidget } from './editor-widget';\nimport { TextEditorProvider } from './editor';\n\n@injectable()\nexport class EditorWidgetFactory implements WidgetFactory {\n\n    static createID(uri: URI, counter?: number): string {\n        return EditorWidgetFactory.ID\n            + `:${uri.toString()}`\n            + (counter !== undefined ? `:${counter}` : '');\n    }\n\n    static ID = 'code-editor-opener';\n\n    readonly id = EditorWidgetFactory.ID;\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(TextEditorProvider)\n    protected readonly editorProvider: TextEditorProvider;\n\n    @inject(SelectionService)\n    protected readonly selectionService: SelectionService;\n\n    createWidget(options: NavigatableWidgetOptions): Promise<EditorWidget> {\n        const uri = new URI(options.uri);\n        return this.createEditor(uri, options);\n    }\n\n    protected async createEditor(uri: URI, options?: NavigatableWidgetOptions): Promise<EditorWidget> {\n        const newEditor = await this.constructEditor(uri);\n\n        this.setLabels(newEditor, uri);\n        const labelListener = this.labelProvider.onDidChange(event => {\n            if (event.affects(uri)) {\n                this.setLabels(newEditor, uri);\n            }\n        });\n        newEditor.onDispose(() => labelListener.dispose());\n\n        newEditor.id = EditorWidgetFactory.createID(uri, options?.counter);\n\n        newEditor.title.closable = true;\n        return newEditor;\n    }\n\n    protected async constructEditor(uri: URI): Promise<EditorWidget> {\n        const textEditor = await this.editorProvider(uri);\n        return new EditorWidget(textEditor, this.selectionService);\n    }\n\n    private setLabels(editor: EditorWidget, uri: URI): void {\n        editor.title.caption = uri.path.fsPath();\n        if (editor.editor.isReadonly) {\n            editor.title.caption += ` • ${nls.localizeByDefault('Read-only')}`;\n        }\n        const icon = this.labelProvider.getIcon(uri);\n        editor.title.label = this.labelProvider.getName(uri);\n        editor.title.iconClass = icon + ' file-icon';\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Disposable, SelectionService, Event, UNTITLED_SCHEME, DisposableCollection } from '@theia/core/lib/common';\nimport { Widget, BaseWidget, Message, Saveable, SaveableSource, Navigatable, StatefulWidget, lock, TabBar, DockPanel } from '@theia/core/lib/browser';\nimport URI from '@theia/core/lib/common/uri';\nimport { find } from '@theia/core/shared/@phosphor/algorithm';\nimport { TextEditor } from './editor';\n\nexport class EditorWidget extends BaseWidget implements SaveableSource, Navigatable, StatefulWidget {\n\n    protected toDisposeOnTabbarChange = new DisposableCollection();\n    protected currentTabbar: TabBar<Widget> | undefined;\n\n    constructor(\n        readonly editor: TextEditor,\n        protected readonly selectionService: SelectionService\n    ) {\n        super(editor);\n        this.addClass('theia-editor');\n        if (editor.isReadonly) {\n            lock(this.title);\n        }\n        this.toDispose.push(this.editor);\n        this.toDispose.push(this.toDisposeOnTabbarChange);\n        this.toDispose.push(this.editor.onSelectionChanged(() => this.setSelection()));\n        this.toDispose.push(this.editor.onFocusChanged(() => this.setSelection()));\n        this.toDispose.push(Disposable.create(() => {\n            if (this.selectionService.selection === this.editor) {\n                this.selectionService.selection = undefined;\n            }\n        }));\n    }\n\n    setSelection(): void {\n        if (this.editor.isFocused() && this.selectionService.selection !== this.editor) {\n            this.selectionService.selection = this.editor;\n        }\n    }\n\n    get saveable(): Saveable {\n        return this.editor.document;\n    }\n\n    getResourceUri(): URI | undefined {\n        return this.editor.getResourceUri();\n    }\n    createMoveToUri(resourceUri: URI): URI | undefined {\n        return this.editor.createMoveToUri(resourceUri);\n    }\n\n    protected override onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.editor.focus();\n        this.selectionService.selection = this.editor;\n    }\n\n    protected override onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        if (this.isVisible) {\n            this.editor.refresh();\n        }\n        this.checkForTabbarChange();\n    }\n\n    protected checkForTabbarChange(): void {\n        const { parent } = this;\n        if (parent instanceof DockPanel) {\n            const newTabbar = find(parent.tabBars(), tabbar => !!tabbar.titles.find(title => title === this.title));\n            if (this.currentTabbar !== newTabbar) {\n                this.toDisposeOnTabbarChange.dispose();\n                const listener = () => this.checkForTabbarChange();\n                parent.layoutModified.connect(listener);\n                this.toDisposeOnTabbarChange.push(Disposable.create(() => parent.layoutModified.disconnect(listener)));\n                const last = this.currentTabbar;\n                this.currentTabbar = newTabbar;\n                this.handleTabBarChange(last, newTabbar);\n            }\n        }\n    }\n\n    protected handleTabBarChange(oldTabBar?: TabBar<Widget>, newTabBar?: TabBar<Widget>): void {\n        const ownSaveable = Saveable.get(this);\n        const competingEditors = ownSaveable && newTabBar?.titles.filter(title => title !== this.title\n            && (title.owner instanceof EditorWidget)\n            && title.owner.editor.uri.isEqual(this.editor.uri)\n            && Saveable.get(title.owner) === ownSaveable\n        );\n        competingEditors?.forEach(title => title.owner.close());\n    }\n\n    protected override onAfterShow(msg: Message): void {\n        super.onAfterShow(msg);\n        this.editor.refresh();\n    }\n\n    protected override onResize(msg: Widget.ResizeMessage): void {\n        if (msg.width < 0 || msg.height < 0) {\n            this.editor.resizeToFit();\n        } else {\n            this.editor.setSize(msg);\n        }\n    }\n\n    storeState(): object | undefined {\n        return this.getResourceUri()?.scheme === UNTITLED_SCHEME ? undefined : this.editor.storeViewState();\n    }\n\n    restoreState(oldState: object): void {\n        this.editor.restoreViewState(oldState);\n    }\n\n    get onDispose(): Event<void> {\n        return this.toDispose.onDispose;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Position, Range, Location } from '@theia/core/shared/vscode-languageserver-protocol';\nimport * as lsp from '@theia/core/shared/vscode-languageserver-protocol';\nimport URI from '@theia/core/lib/common/uri';\nimport { Event, Disposable, TextDocumentContentChangeDelta, Reference, isObject } from '@theia/core/lib/common';\nimport { Saveable, Navigatable, Widget } from '@theia/core/lib/browser';\nimport { EditorDecoration } from './decorations/editor-decoration';\n\nexport { Position, Range, Location };\n\nexport const TextEditorProvider = Symbol('TextEditorProvider');\nexport type TextEditorProvider = (uri: URI) => Promise<TextEditor>;\n\nexport interface TextEditorDocument extends lsp.TextDocument, Saveable, Disposable {\n    getLineContent(lineNumber: number): string;\n    getLineMaxColumn(lineNumber: number): number;\n    /**\n     * @since 1.8.0\n     */\n    findMatches?(options: FindMatchesOptions): FindMatch[];\n    /**\n     * Creates a valid position. If the position is outside of the backing document, this method will return a position that is ensured to be inside the document and valid.\n     * For example, when the `position` is `{ line: 1, character: 0 }` and the document is empty, this method will return with `{ line: 0, character: 0 }`.\n     */\n    toValidPosition(position: Position): Position;\n    /**\n     * Creates a valid range. If the `range` argument is outside of the document, this method will return with a new range that does not exceed the boundaries of the document.\n     * For example, if the argument is `{ start: { line: 1, character: 0 }, end: { line: 1, character: 0 } }` and the document is empty, the return value is\n     * `{ start: { line: 0, character: 0 }, end: { line: 0, character: 0 } }`.\n     */\n    toValidRange(range: Range): Range;\n}\n\n// Refactoring\nexport { TextDocumentContentChangeDelta };\n\nexport interface TextDocumentChangeEvent {\n    readonly document: TextEditorDocument;\n    readonly contentChanges: TextDocumentContentChangeDelta[];\n}\n\n/**\n * Type of hit element with the mouse in the editor.\n * Copied from monaco editor.\n */\nexport enum MouseTargetType {\n    /**\n     * Mouse is on top of an unknown element.\n     */\n    UNKNOWN = 0,\n    /**\n     * Mouse is on top of the textarea used for input.\n     */\n    TEXTAREA = 1,\n    /**\n     * Mouse is on top of the glyph margin\n     */\n    GUTTER_GLYPH_MARGIN = 2,\n    /**\n     * Mouse is on top of the line numbers\n     */\n    GUTTER_LINE_NUMBERS = 3,\n    /**\n     * Mouse is on top of the line decorations\n     */\n    GUTTER_LINE_DECORATIONS = 4,\n    /**\n     * Mouse is on top of the whitespace left in the gutter by a view zone.\n     */\n    GUTTER_VIEW_ZONE = 5,\n    /**\n     * Mouse is on top of text in the content.\n     */\n    CONTENT_TEXT = 6,\n    /**\n     * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n     */\n    CONTENT_EMPTY = 7,\n    /**\n     * Mouse is on top of a view zone in the content.\n     */\n    CONTENT_VIEW_ZONE = 8,\n    /**\n     * Mouse is on top of a content widget.\n     */\n    CONTENT_WIDGET = 9,\n    /**\n     * Mouse is on top of the decorations overview ruler.\n     */\n    OVERVIEW_RULER = 10,\n    /**\n     * Mouse is on top of a scrollbar.\n     */\n    SCROLLBAR = 11,\n    /**\n     * Mouse is on top of an overlay widget.\n     */\n    OVERLAY_WIDGET = 12,\n    /**\n     * Mouse is outside of the editor.\n     */\n    OUTSIDE_EDITOR = 13,\n}\n\nexport interface MouseTarget {\n    /**\n     * The target element\n     */\n    readonly element?: Element;\n    /**\n     * The target type\n     */\n    readonly type: MouseTargetType;\n    /**\n     * The 'approximate' editor position\n     */\n    readonly position?: Position;\n    /**\n     * Desired mouse column (e.g. when position.column gets clamped to text length -- clicking after text on a line).\n     */\n    readonly mouseColumn: number;\n    /**\n     * The 'approximate' editor range\n     */\n    readonly range?: Range;\n    /**\n     * Some extra detail.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    readonly detail: any;\n}\n\nexport interface EditorMouseEvent {\n    readonly event: MouseEvent;\n    readonly target: MouseTarget;\n}\n\nexport const enum EncodingMode {\n\n    /**\n     * Instructs the encoding support to encode the current input with the provided encoding\n     */\n    Encode,\n\n    /**\n     * Instructs the encoding support to decode the current input with the provided encoding\n     */\n    Decode\n}\n\n/**\n * Options for searching in an editor.\n */\nexport interface FindMatchesOptions {\n    /**\n     * The string used to search. If it is a regular expression, set `isRegex` to true.\n     */\n    searchString: string;\n    /**\n     * Used to indicate that `searchString` is a regular expression.\n     */\n    isRegex: boolean;\n    /**\n     * Force the matching to match lower/upper case exactly.\n     */\n    matchCase: boolean;\n    /**\n     * Force the matching to match entire words only.\n     */\n    matchWholeWord: boolean;\n    /**\n     * Limit the number of results.\n     */\n    limitResultCount?: number;\n}\n\n/**\n * Representation of a find match.\n */\nexport interface FindMatch {\n    /**\n     * The textual match.\n     */\n    readonly matches: string[];\n    /**\n     * The range for the given match.\n     */\n    readonly range: Range;\n}\n\nexport interface TextEditor extends Disposable, TextEditorSelection, Navigatable {\n    readonly node: HTMLElement;\n\n    readonly uri: URI;\n    readonly isReadonly: boolean;\n    readonly document: TextEditorDocument;\n    readonly onDocumentContentChanged: Event<TextDocumentChangeEvent>;\n\n    cursor: Position;\n    readonly onCursorPositionChanged: Event<Position>;\n\n    selection: Range;\n    readonly onSelectionChanged: Event<Range>;\n\n    /**\n     * The text editor should be revealed,\n     * otherwise it won't receive the focus.\n     */\n    focus(): void;\n    blur(): void;\n    isFocused(): boolean;\n    readonly onFocusChanged: Event<boolean>;\n\n    readonly onMouseDown: Event<EditorMouseEvent>;\n\n    readonly onScrollChanged: Event<void>;\n    getVisibleRanges(): Range[];\n\n    revealPosition(position: Position, options?: RevealPositionOptions): void;\n    revealRange(range: Range, options?: RevealRangeOptions): void;\n\n    /**\n     * Rerender the editor.\n     */\n    refresh(): void;\n    /**\n     * Resize the editor to fit its node.\n     */\n    resizeToFit(): void;\n    setSize(size: Dimension): void;\n\n    /**\n     * Applies given new decorations, and removes old decorations identified by ids.\n     *\n     * @returns identifiers of applied decorations, which can be removed in next call.\n     */\n    deltaDecorations(params: DeltaDecorationParams): string[];\n\n    /**\n     * Gets all the decorations for the lines between `startLineNumber` and `endLineNumber` as an array.\n     * @param startLineNumber The start line number.\n     * @param endLineNumber The end line number.\n     * @return An array with the decorations.\n     */\n    getLinesDecorations(startLineNumber: number, endLineNumber: number): EditorDecoration[];\n\n    getVisibleColumn(position: Position): number;\n\n    /**\n     * Replaces the text of source given in ReplaceTextParams.\n     * @param params: ReplaceTextParams\n     */\n    replaceText(params: ReplaceTextParams): Promise<boolean>;\n\n    /**\n     * Execute edits on the editor.\n     * @param edits: edits created with `lsp.TextEdit.replace`, `lsp.TextEdit.insert`, `lsp.TextEdit.del`\n     */\n    executeEdits(edits: lsp.TextEdit[]): boolean;\n\n    storeViewState(): object;\n    restoreViewState(state: object): void;\n\n    detectLanguage(): void;\n    setLanguage(languageId: string): void;\n    readonly onLanguageChanged: Event<string>;\n\n    /**\n     * Gets the encoding of the input if known.\n     */\n    getEncoding(): string;\n\n    /**\n     * Sets the encoding for the input for saving.\n     */\n    setEncoding(encoding: string, mode: EncodingMode): void;\n\n    readonly onEncodingChanged: Event<string>;\n}\n\nexport interface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface TextEditorSelection {\n    uri: URI\n    cursor?: Position\n    selection?: Range\n}\n\nexport interface RevealPositionOptions {\n    vertical: 'auto' | 'center' | 'centerIfOutsideViewport';\n    horizontal?: boolean;\n}\n\nexport interface RevealRangeOptions {\n    at: 'auto' | 'center' | 'top' | 'centerIfOutsideViewport';\n}\n\nexport interface DeltaDecorationParams {\n    oldDecorations: string[];\n    newDecorations: EditorDecoration[];\n}\n\nexport interface ReplaceTextParams {\n    /**\n     * the source to edit\n     */\n    source: string;\n    /**\n     * the replace operations\n     */\n    replaceOperations: ReplaceOperation[];\n}\n\nexport interface ReplaceOperation {\n    /**\n     * the position that shall be replaced\n     */\n    range: Range;\n    /**\n     * the text to replace with\n     */\n    text: string;\n}\n\nexport namespace TextEditorSelection {\n    export function is(arg: unknown): arg is TextEditorSelection {\n        return isObject<TextEditorSelection>(arg) && arg.uri instanceof URI;\n    }\n}\n\nexport namespace CustomEditorWidget {\n    export function is(arg: Widget | undefined): arg is CustomEditorWidget {\n        return !!arg && 'modelRef' in arg;\n    }\n}\n\nexport interface CustomEditorWidget extends Widget {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    readonly modelRef: Reference<any>;\n}\n"],"names":[],"sourceRoot":""}