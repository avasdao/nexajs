{"version":3,"file":"vendors-node_modules_theia_core_shared_react-dom_client_index_js-node_modules_theia_debug_lib-3784bc.js","mappings":"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","sources":["webpack:///./node_modules/@theia/core/shared/react-dom/client/index.js?","webpack:///./node_modules/@theia/debug/src/browser/breakpoint/breakpoint-manager.ts?","webpack:///./node_modules/@theia/debug/src/browser/breakpoint/breakpoint-marker.ts?","webpack:///./node_modules/@theia/debug/src/browser/console/debug-console-items.tsx?","webpack:///./node_modules/@theia/debug/src/browser/debug-call-stack-item-type-key.ts?","webpack:///./node_modules/@theia/debug/src/browser/debug-configuration-manager.ts?","webpack:///./node_modules/@theia/debug/src/browser/debug-configuration-model.ts?","webpack:///./node_modules/@theia/debug/src/browser/debug-contribution.ts?","webpack:///./node_modules/@theia/debug/src/browser/debug-preferences.ts?","webpack:///./node_modules/@theia/debug/src/browser/debug-session-connection.ts?","webpack:///./node_modules/@theia/debug/src/browser/debug-session-contribution.ts?","webpack:///./node_modules/@theia/debug/src/browser/debug-session-manager.ts?","webpack:///./node_modules/@theia/debug/src/browser/debug-session-options.ts?","webpack:///./node_modules/@theia/debug/src/browser/debug-session.tsx?","webpack:///./node_modules/@theia/debug/src/browser/debug-watch-manager.ts?","webpack:///./node_modules/@theia/debug/src/browser/model/debug-breakpoint.tsx?","webpack:///./node_modules/@theia/debug/src/browser/model/debug-function-breakpoint.tsx?","webpack:///./node_modules/@theia/debug/src/browser/model/debug-instruction-breakpoint.tsx?","webpack:///./node_modules/@theia/debug/src/browser/model/debug-source-breakpoint.tsx?","webpack:///./node_modules/@theia/debug/src/browser/model/debug-source.ts?","webpack:///./node_modules/@theia/debug/src/browser/model/debug-stack-frame.tsx?","webpack:///./node_modules/@theia/debug/src/browser/model/debug-thread.tsx?","webpack:///./node_modules/@theia/debug/src/browser/view/debug-action.tsx?","webpack:///./node_modules/@theia/debug/src/browser/view/debug-stack-frames-source.tsx?","webpack:///./node_modules/@theia/debug/src/browser/view/debug-stack-frames-widget.ts?","webpack:///./node_modules/@theia/debug/src/browser/view/debug-threads-source.tsx?","webpack:///./node_modules/@theia/debug/src/browser/view/debug-threads-widget.ts?","webpack:///./node_modules/@theia/debug/src/browser/view/debug-toolbar-widget.tsx?","webpack:///./node_modules/@theia/debug/src/browser/view/debug-variables-source.ts?","webpack:///./node_modules/@theia/debug/src/browser/view/debug-variables-widget.ts?","webpack:///./node_modules/@theia/debug/src/browser/view/debug-view-model.ts?","webpack:///./node_modules/@theia/debug/src/browser/view/debug-watch-expression.tsx?","webpack:///./node_modules/@theia/debug/src/common/debug-common.ts?","webpack:///./node_modules/@theia/debug/src/common/debug-compound.ts?","webpack:///./node_modules/@theia/debug/src/common/debug-configuration.ts?","webpack:///./node_modules/@theia/debug/src/common/debug-service.ts?","webpack:///./node_modules/@theia/monaco/src/browser/monaco-editor-zone-widget.ts?"],"sourcesContent":["module.exports = require('react-dom/client');\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as deepEqual from 'fast-deep-equal';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { Emitter } from '@theia/core/lib/common';\nimport { StorageService } from '@theia/core/lib/browser';\nimport { Marker } from '@theia/markers/lib/common/marker';\nimport { MarkerManager } from '@theia/markers/lib/browser/marker-manager';\nimport URI from '@theia/core/lib/common/uri';\nimport { SourceBreakpoint, BREAKPOINT_KIND, ExceptionBreakpoint, FunctionBreakpoint, BaseBreakpoint, InstructionBreakpoint } from './breakpoint-marker';\n\nexport interface BreakpointsChangeEvent<T extends BaseBreakpoint> {\n    uri: URI\n    added: T[]\n    removed: T[]\n    changed: T[]\n}\nexport type SourceBreakpointsChangeEvent = BreakpointsChangeEvent<SourceBreakpoint>;\nexport type FunctionBreakpointsChangeEvent = BreakpointsChangeEvent<FunctionBreakpoint>;\nexport type InstructionBreakpointsChangeEvent = BreakpointsChangeEvent<InstructionBreakpoint>;\n\n@injectable()\nexport class BreakpointManager extends MarkerManager<SourceBreakpoint> {\n\n    static EXCEPTION_URI = new URI('debug:exception://');\n\n    static FUNCTION_URI = new URI('debug:function://');\n\n    static INSTRUCTION_URI = new URI('debug:instruction://');\n\n    protected readonly owner = 'breakpoint';\n\n    @inject(StorageService)\n    protected readonly storage: StorageService;\n\n    getKind(): string {\n        return BREAKPOINT_KIND;\n    }\n\n    protected readonly onDidChangeBreakpointsEmitter = new Emitter<SourceBreakpointsChangeEvent>();\n    readonly onDidChangeBreakpoints = this.onDidChangeBreakpointsEmitter.event;\n\n    protected readonly onDidChangeFunctionBreakpointsEmitter = new Emitter<FunctionBreakpointsChangeEvent>();\n    readonly onDidChangeFunctionBreakpoints = this.onDidChangeFunctionBreakpointsEmitter.event;\n\n    protected readonly onDidChangeInstructionBreakpointsEmitter = new Emitter<InstructionBreakpointsChangeEvent>();\n    readonly onDidChangeInstructionBreakpoints = this.onDidChangeInstructionBreakpointsEmitter.event;\n\n    override setMarkers(uri: URI, owner: string, newMarkers: SourceBreakpoint[]): Marker<SourceBreakpoint>[] {\n        const result = this.findMarkers({ uri, owner });\n        const added: SourceBreakpoint[] = [];\n        const removed: SourceBreakpoint[] = [];\n        const changed: SourceBreakpoint[] = [];\n        const oldMarkers = new Map(result.map(({ data }) => [data.id, data]));\n        const ids = new Set<string>();\n        let didChangeMarkers = false;\n        for (const newMarker of newMarkers) {\n            ids.add(newMarker.id);\n            const oldMarker = oldMarkers.get(newMarker.id);\n            if (!oldMarker) {\n                added.push(newMarker);\n            } else {\n                // We emit all existing markers as 'changed', but we only fire an event if something really did change.\n                didChangeMarkers ||= !!added.length || !deepEqual(oldMarker, newMarker);\n                changed.push(newMarker);\n            }\n        }\n        for (const [id, data] of oldMarkers.entries()) {\n            if (!ids.has(id)) {\n                removed.push(data);\n            }\n        }\n        if (added.length || removed.length || didChangeMarkers) {\n            super.setMarkers(uri, owner, newMarkers);\n            this.onDidChangeBreakpointsEmitter.fire({ uri, added, removed, changed });\n        }\n        return result;\n    }\n\n    getLineBreakpoints(uri: URI, line: number): SourceBreakpoint[] {\n        return this.findMarkers({\n            uri,\n            dataFilter: breakpoint => breakpoint.raw.line === line\n        }).map(({ data }) => data);\n    }\n\n    getInlineBreakpoint(uri: URI, line: number, column: number): SourceBreakpoint | undefined {\n        const marker = this.findMarkers({\n            uri,\n            dataFilter: breakpoint => breakpoint.raw.line === line && breakpoint.raw.column === column\n        })[0];\n        return marker && marker.data;\n    }\n\n    getBreakpoints(uri?: URI): SourceBreakpoint[] {\n        return this.findMarkers({ uri }).map(marker => marker.data);\n    }\n\n    setBreakpoints(uri: URI, breakpoints: SourceBreakpoint[]): void {\n        this.setMarkers(uri, this.owner, breakpoints.sort((a, b) => (a.raw.line - b.raw.line) || ((a.raw.column || 0) - (b.raw.column || 0))));\n    }\n\n    addBreakpoint(breakpoint: SourceBreakpoint): boolean {\n        const uri = new URI(breakpoint.uri);\n        const breakpoints = this.getBreakpoints(uri);\n        const newBreakpoints = breakpoints.filter(({ raw }) => !(raw.line === breakpoint.raw.line && raw.column === breakpoint.raw.column));\n        if (breakpoints.length === newBreakpoints.length) {\n            newBreakpoints.push(breakpoint);\n            this.setBreakpoints(uri, newBreakpoints);\n            return true;\n        }\n        return false;\n    }\n\n    enableAllBreakpoints(enabled: boolean): void {\n        for (const uriString of this.getUris()) {\n            let didChange = false;\n            const uri = new URI(uriString);\n            const markers = this.findMarkers({ uri });\n            for (const marker of markers) {\n                if (marker.data.enabled !== enabled) {\n                    marker.data.enabled = enabled;\n                    didChange = true;\n                }\n            }\n            if (didChange) {\n                this.fireOnDidChangeMarkers(uri);\n            }\n        }\n        let didChangeFunction = false;\n        for (const breakpoint of (this.getFunctionBreakpoints() as BaseBreakpoint[]).concat(this.getInstructionBreakpoints())) {\n            if (breakpoint.enabled !== enabled) {\n                breakpoint.enabled = enabled;\n                didChangeFunction = true;\n\n            }\n        }\n        if (didChangeFunction) {\n            this.fireOnDidChangeMarkers(BreakpointManager.FUNCTION_URI);\n        }\n    }\n\n    protected _breakpointsEnabled = true;\n    get breakpointsEnabled(): boolean {\n        return this._breakpointsEnabled;\n    }\n    set breakpointsEnabled(breakpointsEnabled: boolean) {\n        if (this._breakpointsEnabled !== breakpointsEnabled) {\n            this._breakpointsEnabled = breakpointsEnabled;\n            for (const uri of this.getUris()) {\n                this.fireOnDidChangeMarkers(new URI(uri));\n            }\n            this.fireOnDidChangeMarkers(BreakpointManager.FUNCTION_URI);\n        }\n    }\n\n    protected readonly exceptionBreakpoints = new Map<string, ExceptionBreakpoint>();\n\n    getExceptionBreakpoint(filter: string): ExceptionBreakpoint | undefined {\n        return this.exceptionBreakpoints.get(filter);\n    }\n\n    getExceptionBreakpoints(): IterableIterator<ExceptionBreakpoint> {\n        return this.exceptionBreakpoints.values();\n    }\n\n    setExceptionBreakpoints(exceptionBreakpoints: ExceptionBreakpoint[]): void {\n        const toRemove = new Set(this.exceptionBreakpoints.keys());\n        for (const exceptionBreakpoint of exceptionBreakpoints) {\n            const filter = exceptionBreakpoint.raw.filter;\n            toRemove.delete(filter);\n            this.exceptionBreakpoints.set(filter, exceptionBreakpoint);\n        }\n        for (const filter of toRemove) {\n            this.exceptionBreakpoints.delete(filter);\n        }\n        if (toRemove.size || exceptionBreakpoints.length) {\n            this.fireOnDidChangeMarkers(BreakpointManager.EXCEPTION_URI);\n        }\n    }\n\n    toggleExceptionBreakpoint(filter: string): void {\n        const breakpoint = this.getExceptionBreakpoint(filter);\n        if (breakpoint) {\n            breakpoint.enabled = !breakpoint.enabled;\n            this.fireOnDidChangeMarkers(BreakpointManager.EXCEPTION_URI);\n        }\n    }\n\n    updateExceptionBreakpoint(filter: string, options: Partial<Pick<ExceptionBreakpoint, 'condition' | 'enabled'>>): void {\n        const breakpoint = this.getExceptionBreakpoint(filter);\n        if (breakpoint) {\n            Object.assign(breakpoint, options);\n            this.fireOnDidChangeMarkers(BreakpointManager.EXCEPTION_URI);\n        }\n    }\n\n    protected functionBreakpoints: FunctionBreakpoint[] = [];\n\n    getFunctionBreakpoints(): FunctionBreakpoint[] {\n        return this.functionBreakpoints;\n    }\n\n    setFunctionBreakpoints(functionBreakpoints: FunctionBreakpoint[]): void {\n        const oldBreakpoints = new Map(this.functionBreakpoints.map(b => [b.id, b] as [string, FunctionBreakpoint]));\n\n        this.functionBreakpoints = functionBreakpoints;\n        this.fireOnDidChangeMarkers(BreakpointManager.FUNCTION_URI);\n\n        const added: FunctionBreakpoint[] = [];\n        const removed: FunctionBreakpoint[] = [];\n        const changed: FunctionBreakpoint[] = [];\n        const ids = new Set<string>();\n        for (const newBreakpoint of functionBreakpoints) {\n            ids.add(newBreakpoint.id);\n            if (oldBreakpoints.has(newBreakpoint.id)) {\n                changed.push(newBreakpoint);\n            } else {\n                added.push(newBreakpoint);\n            }\n        }\n        for (const [id, breakpoint] of oldBreakpoints.entries()) {\n            if (!ids.has(id)) {\n                removed.push(breakpoint);\n            }\n        }\n        this.onDidChangeFunctionBreakpointsEmitter.fire({ uri: BreakpointManager.FUNCTION_URI, added, removed, changed });\n    }\n\n    protected instructionBreakpoints: InstructionBreakpoint[] = [];\n\n    getInstructionBreakpoints(): ReadonlyArray<InstructionBreakpoint> {\n        return Object.freeze(this.instructionBreakpoints.slice());\n    }\n\n    hasBreakpoints(): boolean {\n        return Boolean(this.getUris().next().value || this.functionBreakpoints.length || this.instructionBreakpoints.length);\n    }\n\n    protected setInstructionBreakpoints(newBreakpoints: InstructionBreakpoint[]): void {\n        const oldBreakpoints = new Map(this.instructionBreakpoints.map(breakpoint => [breakpoint.id, breakpoint]));\n        const currentBreakpoints = new Map(newBreakpoints.map(breakpoint => [breakpoint.id, breakpoint]));\n        const added = [];\n        const changed = [];\n        for (const [id, breakpoint] of currentBreakpoints.entries()) {\n            const old = oldBreakpoints.get(id);\n            if (old) {\n                changed.push(old);\n            } else {\n                added.push(breakpoint);\n            }\n            oldBreakpoints.delete(id);\n        }\n        const removed = Array.from(oldBreakpoints.values());\n        this.instructionBreakpoints = Array.from(currentBreakpoints.values());\n        this.fireOnDidChangeMarkers(BreakpointManager.INSTRUCTION_URI);\n        this.onDidChangeInstructionBreakpointsEmitter.fire({ uri: BreakpointManager.INSTRUCTION_URI, added, removed, changed });\n    }\n\n    addInstructionBreakpoint(address: string, offset: number, condition?: string, hitCondition?: string): void {\n        this.setInstructionBreakpoints(this.instructionBreakpoints.concat(InstructionBreakpoint.create({\n            instructionReference: address,\n            offset,\n            condition,\n            hitCondition,\n        })));\n    }\n\n    updateInstructionBreakpoint(id: string, options: Partial<Pick<InstructionBreakpoint, 'condition' | 'hitCondition' | 'enabled'>>): void {\n        const breakpoint = this.instructionBreakpoints.find(candidate => id === candidate.id);\n        if (breakpoint) {\n            Object.assign(breakpoint, options);\n            this.fireOnDidChangeMarkers(BreakpointManager.INSTRUCTION_URI);\n            this.onDidChangeInstructionBreakpointsEmitter.fire({ uri: BreakpointManager.INSTRUCTION_URI, changed: [breakpoint], added: [], removed: [] });\n        }\n    }\n\n    removeInstructionBreakpoint(address?: string): void {\n        if (!address) {\n            this.clearInstructionBreakpoints();\n        }\n        const breakpointIndex = this.instructionBreakpoints.findIndex(breakpoint => breakpoint.instructionReference === address);\n        if (breakpointIndex !== -1) {\n            const removed = this.instructionBreakpoints.splice(breakpointIndex, 1);\n            this.fireOnDidChangeMarkers(BreakpointManager.INSTRUCTION_URI);\n            this.onDidChangeInstructionBreakpointsEmitter.fire({ uri: BreakpointManager.INSTRUCTION_URI, added: [], changed: [], removed });\n        }\n    }\n\n    clearInstructionBreakpoints(): void {\n        this.setInstructionBreakpoints([]);\n    }\n\n    removeBreakpoints(): void {\n        this.cleanAllMarkers();\n        this.setFunctionBreakpoints([]);\n        this.setInstructionBreakpoints([]);\n    }\n\n    async load(): Promise<void> {\n        const data = await this.storage.getData<BreakpointManager.Data>('breakpoints', {\n            breakpointsEnabled: true,\n            breakpoints: {}\n        });\n        this._breakpointsEnabled = data.breakpointsEnabled;\n        // eslint-disable-next-line guard-for-in\n        for (const uri in data.breakpoints) {\n            this.setBreakpoints(new URI(uri), data.breakpoints[uri]);\n        }\n        if (data.functionBreakpoints) {\n            this.setFunctionBreakpoints(data.functionBreakpoints);\n        }\n        if (data.exceptionBreakpoints) {\n            this.setExceptionBreakpoints(data.exceptionBreakpoints);\n        }\n        if (data.instructionBreakpoints) {\n            this.setInstructionBreakpoints(data.instructionBreakpoints);\n        }\n    }\n\n    save(): void {\n        const data: BreakpointManager.Data = {\n            breakpointsEnabled: this._breakpointsEnabled,\n            breakpoints: {}\n        };\n        const uris = this.getUris();\n        for (const uri of uris) {\n            data.breakpoints[uri] = this.findMarkers({ uri: new URI(uri) }).map(marker => marker.data);\n        }\n        if (this.functionBreakpoints.length) {\n            data.functionBreakpoints = this.functionBreakpoints;\n        }\n        if (this.exceptionBreakpoints.size) {\n            data.exceptionBreakpoints = [...this.exceptionBreakpoints.values()];\n        }\n        if (this.instructionBreakpoints.length) {\n            data.instructionBreakpoints = this.instructionBreakpoints;\n        }\n        this.storage.setData('breakpoints', data);\n    }\n\n}\nexport namespace BreakpointManager {\n    export interface Data {\n        breakpointsEnabled: boolean;\n        breakpoints: {\n            [uri: string]: SourceBreakpoint[];\n        }\n        exceptionBreakpoints?: ExceptionBreakpoint[];\n        functionBreakpoints?: FunctionBreakpoint[];\n        instructionBreakpoints?: InstructionBreakpoint[];\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { UUID } from '@theia/core/shared/@phosphor/coreutils';\nimport { Marker } from '@theia/markers/lib/common/marker';\nimport { DebugProtocol } from '@vscode/debugprotocol/lib/debugProtocol';\nimport { isObject, isString, URI } from '@theia/core/lib/common';\n\nexport const BREAKPOINT_KIND = 'breakpoint';\n\nexport interface BaseBreakpoint {\n    id: string;\n    enabled: boolean;\n}\n\nexport interface SourceBreakpoint extends BaseBreakpoint {\n    uri: string;\n    raw: DebugProtocol.SourceBreakpoint;\n}\nexport namespace SourceBreakpoint {\n    export function create(uri: URI, data: DebugProtocol.SourceBreakpoint, origin?: SourceBreakpoint): SourceBreakpoint {\n        return {\n            id: origin ? origin.id : UUID.uuid4(),\n            uri: uri.toString(),\n            enabled: origin ? origin.enabled : true,\n            raw: {\n                ...(origin && origin.raw),\n                ...data\n            }\n        };\n    }\n}\n\nexport interface BreakpointMarker extends Marker<SourceBreakpoint> {\n    kind: 'breakpoint'\n}\nexport namespace BreakpointMarker {\n    export function is(node: Marker<object>): node is BreakpointMarker {\n        return 'kind' in node && node.kind === BREAKPOINT_KIND;\n    }\n}\n\nexport interface ExceptionBreakpoint {\n    enabled: boolean;\n    condition?: string;\n    raw: DebugProtocol.ExceptionBreakpointsFilter;\n}\nexport namespace ExceptionBreakpoint {\n    export function create(data: DebugProtocol.ExceptionBreakpointsFilter, origin?: ExceptionBreakpoint): ExceptionBreakpoint {\n        return {\n            enabled: origin ? origin.enabled : false,\n            condition: origin ? origin.condition : undefined,\n            raw: {\n                ...(origin && origin.raw),\n                ...data\n            }\n        };\n    }\n}\n\nexport interface FunctionBreakpoint extends BaseBreakpoint {\n    raw: DebugProtocol.FunctionBreakpoint;\n}\nexport namespace FunctionBreakpoint {\n    export function create(data: DebugProtocol.FunctionBreakpoint, origin?: FunctionBreakpoint): FunctionBreakpoint {\n        return {\n            id: origin ? origin.id : UUID.uuid4(),\n            enabled: origin ? origin.enabled : true,\n            raw: {\n                ...(origin && origin.raw),\n                ...data\n            }\n        };\n    }\n}\n\nexport interface InstructionBreakpoint extends BaseBreakpoint, DebugProtocol.InstructionBreakpoint { }\n\nexport namespace InstructionBreakpoint {\n    export function create(raw: DebugProtocol.InstructionBreakpoint, existing?: InstructionBreakpoint): InstructionBreakpoint {\n        return {\n            ...raw,\n            id: existing?.id ?? UUID.uuid4(),\n            enabled: existing?.enabled ?? true,\n        };\n    }\n\n    export function is(arg: BaseBreakpoint): arg is InstructionBreakpoint {\n        return isObject<InstructionBreakpoint>(arg) && isString(arg.instructionReference);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as React from '@theia/core/shared/react';\nimport { DebugProtocol } from '@vscode/debugprotocol/lib/debugProtocol';\nimport { SingleTextInputDialog } from '@theia/core/lib/browser';\nimport { ConsoleItem, CompositeConsoleItem } from '@theia/console/lib/browser/console-session';\nimport { DebugSession } from '../debug-session';\nimport { Severity } from '@theia/core/lib/common/severity';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { nls } from '@theia/core';\n\nexport type DebugSessionProvider = () => DebugSession | undefined;\n\nexport class ExpressionContainer implements CompositeConsoleItem {\n\n    private static readonly BASE_CHUNK_SIZE = 100;\n\n    protected readonly sessionProvider: DebugSessionProvider;\n    protected get session(): DebugSession | undefined {\n        return this.sessionProvider();\n    }\n\n    protected variablesReference: number;\n    protected namedVariables: number | undefined;\n    protected indexedVariables: number | undefined;\n    protected readonly startOfVariables: number;\n\n    constructor(options: ExpressionContainer.Options) {\n        this.sessionProvider = options.session;\n        this.variablesReference = options.variablesReference || 0;\n        this.namedVariables = options.namedVariables;\n        this.indexedVariables = options.indexedVariables;\n        this.startOfVariables = options.startOfVariables || 0;\n    }\n\n    render(): React.ReactNode {\n        return undefined;\n    }\n\n    get hasElements(): boolean {\n        return !!this.variablesReference;\n    }\n\n    protected elements: Promise<ExpressionContainer[]> | undefined;\n    async getElements(): Promise<IterableIterator<ExpressionContainer>> {\n        if (!this.hasElements || !this.session) {\n            return [][Symbol.iterator]();\n        }\n        if (!this.elements) {\n            this.elements = this.doResolve();\n        }\n        return (await this.elements)[Symbol.iterator]();\n    }\n    protected async doResolve(): Promise<ExpressionContainer[]> {\n        const result: ExpressionContainer[] = [];\n        if (this.namedVariables) {\n            await this.fetch(result, 'named');\n        }\n        if (this.indexedVariables) {\n            let chunkSize = ExpressionContainer.BASE_CHUNK_SIZE;\n            while (this.indexedVariables > chunkSize * ExpressionContainer.BASE_CHUNK_SIZE) {\n                chunkSize *= ExpressionContainer.BASE_CHUNK_SIZE;\n            }\n            if (this.indexedVariables > chunkSize) {\n                const numberOfChunks = Math.ceil(this.indexedVariables / chunkSize);\n                for (let i = 0; i < numberOfChunks; i++) {\n                    const start = this.startOfVariables + i * chunkSize;\n                    const count = Math.min(chunkSize, this.indexedVariables - i * chunkSize);\n                    const { variablesReference } = this;\n                    result.push(new DebugVirtualVariable({\n                        session: this.sessionProvider,\n                        variablesReference,\n                        namedVariables: 0,\n                        indexedVariables: count,\n                        startOfVariables: start,\n                        name: `[${start}..${start + count - 1}]`\n                    }));\n                }\n                return result;\n            }\n        }\n        await this.fetch(result, 'indexed', this.startOfVariables, this.indexedVariables);\n        return result;\n    }\n\n    protected fetch(result: ConsoleItem[], filter: 'named'): Promise<void>;\n    protected fetch(result: ConsoleItem[], filter: 'indexed', start: number, count?: number): Promise<void>;\n    protected async fetch(result: ConsoleItem[], filter: 'indexed' | 'named', start?: number, count?: number): Promise<void> {\n        try {\n            const { variablesReference } = this;\n            const response = await this.session!.sendRequest('variables', { variablesReference, filter, start, count });\n            const { variables } = response.body;\n            const names = new Set<string>();\n            for (const variable of variables) {\n                if (!names.has(variable.name)) {\n                    result.push(new DebugVariable(this.sessionProvider, variable, this));\n                    names.add(variable.name);\n                }\n            }\n        } catch (e) {\n            result.push({\n                severity: Severity.Error,\n                visible: !!e.message,\n                render: () => e.message\n            });\n        }\n    }\n\n}\nexport namespace ExpressionContainer {\n    export interface Options {\n        session: DebugSessionProvider,\n        variablesReference?: number\n        namedVariables?: number\n        indexedVariables?: number\n        startOfVariables?: number\n    }\n}\n\nexport class DebugVariable extends ExpressionContainer {\n\n    static booleanRegex = /^true|false$/i;\n    static stringRegex = /^(['\"]).*\\1$/;\n\n    constructor(\n        session: DebugSessionProvider,\n        protected readonly variable: DebugProtocol.Variable,\n        readonly parent: ExpressionContainer\n    ) {\n        super({\n            session,\n            variablesReference: variable.variablesReference,\n            namedVariables: variable.namedVariables,\n            indexedVariables: variable.indexedVariables\n        });\n    }\n\n    get name(): string {\n        return this.variable.name;\n    }\n    protected _type: string | undefined;\n    get type(): string | undefined {\n        return this._type || this.variable.type;\n    }\n    protected _value: string | undefined;\n    get value(): string {\n        return this._value || this.variable.value;\n    }\n\n    override render(): React.ReactNode {\n        const { type, value, name } = this;\n        return <div className={this.variableClassName}>\n            <span title={type || name} className='name' ref={this.setNameRef}>{name}{!!value && ': '}</span>\n            <span title={value} ref={this.setValueRef}>{value}</span>\n        </div>;\n    }\n\n    protected get variableClassName(): string {\n        const { type, value } = this;\n        const classNames = ['theia-debug-console-variable'];\n        if (type === 'number' || type === 'boolean' || type === 'string') {\n            classNames.push(type);\n        } else if (!isNaN(+value)) {\n            classNames.push('number');\n        } else if (DebugVariable.booleanRegex.test(value)) {\n            classNames.push('boolean');\n        } else if (DebugVariable.stringRegex.test(value)) {\n            classNames.push('string');\n        }\n        return classNames.join(' ');\n    }\n\n    get supportSetVariable(): boolean {\n        return !!this.session && !!this.session.capabilities.supportsSetVariable;\n    }\n    async setValue(value: string): Promise<void> {\n        if (!this.session) {\n            return;\n        }\n        const { name, parent } = this;\n        const variablesReference = parent['variablesReference'];\n        try {\n            const response = await this.session.sendRequest('setVariable', { variablesReference, name, value });\n            this._value = response.body.value;\n            this._type = response.body.type;\n            this.variablesReference = response.body.variablesReference || 0;\n            this.namedVariables = response.body.namedVariables;\n            this.indexedVariables = response.body.indexedVariables;\n            this.elements = undefined;\n            this.session['fireDidChange']();\n        } catch (error) {\n            console.error('setValue failed:', error);\n        }\n    }\n\n    get supportCopyValue(): boolean {\n        return !!this.valueRef && document.queryCommandSupported('copy');\n    }\n    copyValue(): void {\n        const selection = document.getSelection();\n        if (this.valueRef && selection) {\n            selection.selectAllChildren(this.valueRef);\n            document.execCommand('copy');\n        }\n    }\n    protected valueRef: HTMLSpanElement | undefined;\n    protected setValueRef = (valueRef: HTMLSpanElement | null) => this.valueRef = valueRef || undefined;\n\n    get supportCopyAsExpression(): boolean {\n        return !!this.nameRef && document.queryCommandSupported('copy');\n    }\n    copyAsExpression(): void {\n        const selection = document.getSelection();\n        if (this.nameRef && selection) {\n            selection.selectAllChildren(this.nameRef);\n            document.execCommand('copy');\n        }\n    }\n    protected nameRef: HTMLSpanElement | undefined;\n    protected setNameRef = (nameRef: HTMLSpanElement | null) => this.nameRef = nameRef || undefined;\n\n    async open(): Promise<void> {\n        if (!this.supportSetVariable) {\n            return;\n        }\n        const input = new SingleTextInputDialog({\n            title: nls.localize('theia/debug/debugVariableInput', 'Set {0} Value', this.name),\n            initialValue: this.value,\n            placeholder: nls.localizeByDefault('Value')\n        });\n        const newValue = await input.open();\n        if (newValue) {\n            await this.setValue(newValue);\n        }\n    }\n\n}\n\nexport class DebugVirtualVariable extends ExpressionContainer {\n\n    constructor(\n        protected readonly options: VirtualVariableItem.Options\n    ) {\n        super(options);\n    }\n\n    override render(): React.ReactNode {\n        return this.options.name;\n    }\n}\nexport namespace VirtualVariableItem {\n    export interface Options extends ExpressionContainer.Options {\n        name: string\n    }\n}\n\nexport class ExpressionItem extends ExpressionContainer {\n\n    severity?: Severity;\n    static notAvailable = 'not available';\n\n    protected _value = ExpressionItem.notAvailable;\n    get value(): string {\n        return this._value;\n    }\n    protected _type: string | undefined;\n    get type(): string | undefined {\n        return this._type;\n    }\n\n    protected _available = false;\n    get available(): boolean {\n        return this._available;\n    }\n\n    constructor(\n        protected _expression: string,\n        session: DebugSessionProvider\n    ) {\n        super({ session });\n    }\n\n    get expression(): string {\n        return this._expression;\n    }\n\n    override render(): React.ReactNode {\n        const valueClassNames: string[] = [];\n        if (!this._available) {\n            valueClassNames.push(ConsoleItem.errorClassName);\n            valueClassNames.push('theia-debug-console-unavailable');\n        }\n        return <div className={'theia-debug-console-expression'}>\n            <div>{this._expression}</div>\n            <div className={valueClassNames.join(' ')}>{this._value}</div>\n        </div>;\n    }\n\n    async evaluate(context: string = 'repl'): Promise<void> {\n        const session = this.session;\n        if (session) {\n            try {\n                const body = await session.evaluate(this._expression, context);\n                this.setResult(body);\n            } catch (err) {\n                this.setResult(undefined, err.message);\n            }\n        } else {\n            this.setResult(undefined, 'Please start a debug session to evaluate');\n        }\n    }\n\n    protected setResult(body?: DebugProtocol.EvaluateResponse['body'], error: string = ExpressionItem.notAvailable): void {\n        if (body) {\n            this._value = body.result;\n            this._type = body.type;\n            this._available = true;\n            this.variablesReference = body.variablesReference;\n            this.namedVariables = body.namedVariables;\n            this.indexedVariables = body.indexedVariables;\n            this.severity = Severity.Log;\n        } else {\n            this._value = error;\n            this._type = undefined;\n            this._available = false;\n            this.variablesReference = 0;\n            this.namedVariables = undefined;\n            this.indexedVariables = undefined;\n            this.severity = Severity.Error;\n        }\n        this.elements = undefined;\n    }\n\n}\n\nexport class DebugScope extends ExpressionContainer {\n\n    constructor(\n        protected readonly raw: DebugProtocol.Scope,\n        session: DebugSessionProvider\n    ) {\n        super({\n            session,\n            variablesReference: raw.variablesReference,\n            namedVariables: raw.namedVariables,\n            indexedVariables: raw.indexedVariables\n        });\n    }\n\n    override render(): React.ReactNode {\n        return this.name;\n    }\n\n    get expensive(): boolean {\n        return this.raw.expensive;\n    }\n\n    get range(): monaco.Range | undefined {\n        const { line, column, endLine, endColumn } = this.raw;\n        if (line !== undefined && column !== undefined && endLine !== undefined && endColumn !== undefined) {\n            return new monaco.Range(line, column, endLine, endColumn);\n        }\n        return undefined;\n    }\n\n    get name(): string {\n        return this.raw.name;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContextKey } from '@theia/core/lib/browser/context-key-service';\n\nexport const DebugCallStackItemTypeKey = Symbol('DebugCallStackItemTypeKey');\nexport type DebugCallStackItemTypeKey = ContextKey<'session' | 'thread' | 'stackFrame'>;\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\n\nimport debounce = require('p-debounce');\nimport { visit, parse } from 'jsonc-parser';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { Emitter, Event, WaitUntilEvent } from '@theia/core/lib/common/event';\nimport { EditorManager, EditorWidget } from '@theia/editor/lib/browser';\nimport { MonacoEditor } from '@theia/monaco/lib/browser/monaco-editor';\nimport { LabelProvider, PreferenceScope, PreferenceService, QuickPickValue, StorageService } from '@theia/core/lib/browser';\nimport { QuickPickService } from '@theia/core/lib/common/quick-pick-service';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\nimport { DebugConfigurationModel } from './debug-configuration-model';\nimport { DebugSessionOptions, DynamicDebugConfigurationSessionOptions } from './debug-session-options';\nimport { DebugService } from '../common/debug-service';\nimport { ContextKey, ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nimport { DebugConfiguration } from '../common/debug-common';\nimport { WorkspaceVariableContribution } from '@theia/workspace/lib/browser/workspace-variable-contribution';\nimport { PreferenceConfigurations } from '@theia/core/lib/browser/preferences/preference-configurations';\nimport { MonacoTextModelService } from '@theia/monaco/lib/browser/monaco-text-model-service';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { ICommandService } from '@theia/monaco-editor-core/esm/vs/platform/commands/common/commands';\nimport { StandaloneServices } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneServices';\nimport { nls } from '@theia/core';\nimport { DebugCompound } from '../common/debug-compound';\n\nexport interface WillProvideDebugConfiguration extends WaitUntilEvent {\n}\n\n@injectable()\nexport class DebugConfigurationManager {\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n    @inject(DebugService)\n    protected readonly debug: DebugService;\n    @inject(QuickPickService)\n    protected readonly quickPickService: QuickPickService;\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(MonacoTextModelService)\n    protected readonly textModelService: MonacoTextModelService;\n\n    @inject(PreferenceService)\n    protected readonly preferences: PreferenceService;\n\n    @inject(PreferenceConfigurations)\n    protected readonly preferenceConfigurations: PreferenceConfigurations;\n\n    @inject(WorkspaceVariableContribution)\n    protected readonly workspaceVariables: WorkspaceVariableContribution;\n\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n    readonly onDidChange: Event<void> = this.onDidChangeEmitter.event;\n\n    protected readonly onWillProvideDebugConfigurationEmitter = new Emitter<WillProvideDebugConfiguration>();\n    readonly onWillProvideDebugConfiguration: Event<WillProvideDebugConfiguration> = this.onWillProvideDebugConfigurationEmitter.event;\n\n    protected readonly onWillProvideDynamicDebugConfigurationEmitter = new Emitter<WillProvideDebugConfiguration>();\n    get onWillProvideDynamicDebugConfiguration(): Event<WillProvideDebugConfiguration> {\n        return this.onWillProvideDynamicDebugConfigurationEmitter.event;\n    }\n\n    get onDidChangeConfigurationProviders(): Event<void> {\n        return this.debug.onDidChangeDebugConfigurationProviders;\n    }\n\n    protected debugConfigurationTypeKey: ContextKey<string>;\n\n    protected initialized: Promise<void>;\n\n    protected recentDynamicOptionsTracker: DynamicDebugConfigurationSessionOptions[] = [];\n\n    @postConstruct()\n    protected init(): void {\n        this.doInit();\n    }\n\n    protected async doInit(): Promise<void> {\n        this.debugConfigurationTypeKey = this.contextKeyService.createKey<string>('debugConfigurationType', undefined);\n        this.initialized = this.preferences.ready.then(() => {\n            this.workspaceService.onWorkspaceChanged(this.updateModels);\n            this.preferences.onPreferenceChanged(e => {\n                if (e.preferenceName === 'launch') {\n                    this.updateModels();\n                }\n            });\n            return this.updateModels();\n        });\n    }\n\n    protected readonly models = new Map<string, DebugConfigurationModel>();\n    protected updateModels = debounce(async () => {\n        const roots = await this.workspaceService.roots;\n        const toDelete = new Set(this.models.keys());\n        for (const rootStat of roots) {\n            const key = rootStat.resource.toString();\n            toDelete.delete(key);\n            if (!this.models.has(key)) {\n                const model = new DebugConfigurationModel(key, this.preferences);\n                model.onDidChange(() => this.updateCurrent());\n                model.onDispose(() => this.models.delete(key));\n                this.models.set(key, model);\n            }\n        }\n        for (const uri of toDelete) {\n            const model = this.models.get(uri);\n            if (model) {\n                model.dispose();\n            }\n        }\n        this.updateCurrent();\n    }, 500);\n\n    /**\n     * All _non-dynamic_ debug configurations.\n     */\n    get all(): IterableIterator<DebugSessionOptions> {\n        return this.getAll();\n    }\n    protected *getAll(): IterableIterator<DebugSessionOptions> {\n        for (const model of this.models.values()) {\n            for (const configuration of model.configurations) {\n                yield this.configurationToOptions(configuration, model.workspaceFolderUri);\n            }\n            for (const compound of model.compounds) {\n                yield this.compoundToOptions(compound, model.workspaceFolderUri);\n            }\n        }\n    }\n\n    get supported(): Promise<IterableIterator<DebugSessionOptions>> {\n        return this.getSupported();\n    }\n    protected async getSupported(): Promise<IterableIterator<DebugSessionOptions>> {\n        await this.initialized;\n        const debugTypes = await this.debug.debugTypes();\n        return this.doGetSupported(new Set(debugTypes));\n    }\n    protected *doGetSupported(debugTypes: Set<string>): IterableIterator<DebugSessionOptions> {\n        for (const options of this.getAll()) {\n            if (options.configuration && debugTypes.has(options.configuration.type)) {\n                yield options;\n            }\n        }\n    }\n\n    protected _currentOptions: DebugSessionOptions | undefined;\n    get current(): DebugSessionOptions | undefined {\n        return this._currentOptions;\n    }\n\n    async getSelectedConfiguration(): Promise<DebugSessionOptions | undefined> {\n        if (!DebugSessionOptions.isDynamic(this._currentOptions)) {\n            return this._currentOptions;\n        }\n\n        // Refresh a dynamic configuration from the provider.\n        // This allow providers to update properties before the execution e.g. program\n        const { providerType, workspaceFolderUri, configuration: { name } } = this._currentOptions;\n        const configuration = await this.fetchDynamicDebugConfiguration(name, providerType, workspaceFolderUri);\n\n        if (!configuration) {\n            const message = nls.localize(\n                'theia/debug/missingConfiguration',\n                \"Dynamic configuration '{0}:{1}' is missing or not applicable\", providerType, name);\n            throw new Error(message);\n        }\n\n        return { name, configuration, providerType, workspaceFolderUri };\n    }\n\n    set current(option: DebugSessionOptions | undefined) {\n        this.updateCurrent(option);\n        this.updateRecentlyUsedDynamicConfigurationOptions(option);\n    }\n\n    protected updateRecentlyUsedDynamicConfigurationOptions(option: DebugSessionOptions | undefined): void {\n        if (DebugSessionOptions.isDynamic(option)) {\n            // Removing an item already present in the list\n            const index = this.recentDynamicOptionsTracker.findIndex(item => this.dynamicOptionsMatch(item, option));\n            if (index > -1) {\n                this.recentDynamicOptionsTracker.splice(index, 1);\n            }\n            // Adding new item, most recent at the top of the list\n            const recentMax = 3;\n            if (this.recentDynamicOptionsTracker.unshift(option) > recentMax) {\n                // Keep the latest 3 dynamic configuration options to not clutter the dropdown.\n                this.recentDynamicOptionsTracker.splice(recentMax);\n            }\n        }\n    }\n\n    protected dynamicOptionsMatch(one: DynamicDebugConfigurationSessionOptions, other: DynamicDebugConfigurationSessionOptions): boolean {\n        return one.providerType !== undefined\n            && one.configuration.name === other.configuration.name\n            && one.providerType === other.providerType\n            && one.workspaceFolderUri === other.workspaceFolderUri;\n    }\n\n    get recentDynamicOptions(): readonly DynamicDebugConfigurationSessionOptions[] {\n        return this.recentDynamicOptionsTracker;\n    }\n\n    protected updateCurrent(options: DebugSessionOptions | undefined = this._currentOptions): void {\n        if (DebugSessionOptions.isCompound(options)) {\n            this._currentOptions = options && this.find(options.compound, options.workspaceFolderUri);\n        } else {\n            this._currentOptions = options && this.find(options.configuration, options.workspaceFolderUri, options.providerType);\n        }\n\n        if (!this._currentOptions) {\n            const model = this.getModel();\n            if (model) {\n                const configuration = model.configurations[0];\n                if (configuration) {\n                    this._currentOptions = this.configurationToOptions(configuration, model.workspaceFolderUri);\n                }\n            }\n        }\n        this.debugConfigurationTypeKey.set(this.current && this.current.configuration?.type);\n        this.onDidChangeEmitter.fire(undefined);\n    }\n\n    /**\n     * @deprecated since v1.27.0\n     */\n    find(name: string, workspaceFolderUri: string): DebugSessionOptions | undefined;\n    /**\n     * Find / Resolve DebugSessionOptions from a given target debug configuration\n     */\n    find(compound: DebugCompound, workspaceFolderUri?: string): DebugSessionOptions | undefined;\n    find(configuration: DebugConfiguration, workspaceFolderUri?: string, providerType?: string): DebugSessionOptions | undefined;\n    find(name: string, workspaceFolderUri?: string, providerType?: string): DebugSessionOptions | undefined;\n    find(nameOrConfigurationOrCompound: string | DebugConfiguration | DebugCompound, workspaceFolderUri?: string, providerType?: string): DebugSessionOptions | undefined {\n        if (DebugConfiguration.is(nameOrConfigurationOrCompound) && providerType) {\n            // providerType is only applicable to dynamic debug configurations and may only be created if we have a configuration given\n            return this.configurationToOptions(nameOrConfigurationOrCompound, workspaceFolderUri, providerType);\n        }\n        const name = typeof nameOrConfigurationOrCompound === 'string' ? nameOrConfigurationOrCompound : nameOrConfigurationOrCompound.name;\n        const configuration = this.findConfiguration(name, workspaceFolderUri);\n        if (configuration) {\n            return this.configurationToOptions(configuration, workspaceFolderUri);\n        }\n        const compound = this.findCompound(name, workspaceFolderUri);\n        if (compound) {\n            return this.compoundToOptions(compound, workspaceFolderUri);\n        }\n    }\n\n    findConfigurations(name: string, workspaceFolderUri?: string): DebugConfiguration[] {\n        const matches = [];\n        for (const model of this.models.values()) {\n            if (model.workspaceFolderUri === workspaceFolderUri) {\n                for (const configuration of model.configurations) {\n                    if (configuration.name === name) {\n                        matches.push(configuration);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n\n    findConfiguration(name: string, workspaceFolderUri?: string): DebugConfiguration | undefined {\n        for (const model of this.models.values()) {\n            if (model.workspaceFolderUri === workspaceFolderUri) {\n                for (const configuration of model.configurations) {\n                    if (configuration.name === name) {\n                        return configuration;\n                    }\n                }\n            }\n        }\n    }\n\n    findCompound(name: string, workspaceFolderUri?: string): DebugCompound | undefined {\n        for (const model of this.models.values()) {\n            if (model.workspaceFolderUri === workspaceFolderUri) {\n                for (const compound of model.compounds) {\n                    if (compound.name === name) {\n                        return compound;\n                    }\n                }\n            }\n        }\n    }\n\n    async openConfiguration(): Promise<void> {\n        const currentUri = new URI(this.current?.workspaceFolderUri);\n        const model = this.getModel(currentUri);\n        if (model) {\n            await this.doOpen(model);\n        }\n    }\n\n    protected configurationToOptions(configuration: DebugConfiguration, workspaceFolderUri?: string, providerType?: string): DebugSessionOptions {\n        return { name: configuration.name, configuration, providerType, workspaceFolderUri };\n    }\n\n    protected compoundToOptions(compound: DebugCompound, workspaceFolderUri?: string): DebugSessionOptions {\n        return { name: compound.name, compound, workspaceFolderUri };\n    }\n\n    async addConfiguration(): Promise<void> {\n        let rootUri: URI | undefined = undefined;\n        if (this.workspaceService.saved && this.workspaceService.tryGetRoots().length > 1) {\n            rootUri = await this.selectRootUri();\n            // Do not continue if the user explicitly does not choose a location.\n            if (!rootUri) {\n                return;\n            }\n        }\n\n        const model = this.getModel(rootUri);\n        if (!model) {\n            return;\n        }\n        const widget = await this.doOpen(model);\n        if (!(widget.editor instanceof MonacoEditor)) {\n            return;\n        }\n        const editor = widget.editor.getControl();\n        const commandService = StandaloneServices.get(ICommandService);\n        let position: monaco.Position | undefined;\n        let depthInArray = 0;\n        let lastProperty = '';\n        visit(editor.getValue(), {\n            onObjectProperty: property => {\n                lastProperty = property;\n            },\n            onArrayBegin: offset => {\n                if (lastProperty === 'configurations' && depthInArray === 0) {\n                    position = editor.getModel()!.getPositionAt(offset + 1);\n                }\n                depthInArray++;\n            },\n            onArrayEnd: () => {\n                depthInArray--;\n            }\n        });\n        if (!position) {\n            return;\n        }\n        // Check if there are more characters on a line after a \"configurations\": [, if yes enter a newline\n        if (editor.getModel()!.getLineLastNonWhitespaceColumn(position.lineNumber) > position.column) {\n            editor.setPosition(position);\n            editor.trigger('debug', 'lineBreakInsert', undefined);\n        }\n        // Check if there is already an empty line to insert suggest, if yes just place the cursor\n        if (editor.getModel()!.getLineLastNonWhitespaceColumn(position.lineNumber + 1) === 0) {\n            editor.setPosition({ lineNumber: position.lineNumber + 1, column: 1 << 30 });\n            await commandService.executeCommand('editor.action.deleteLines');\n        }\n        editor.setPosition(position);\n        await commandService.executeCommand('editor.action.insertLineAfter');\n        await commandService.executeCommand('editor.action.triggerSuggest');\n    }\n\n    protected async selectRootUri(): Promise<URI | undefined> {\n        const workspaceRoots = this.workspaceService.tryGetRoots();\n        const items: QuickPickValue<URI>[] = [];\n        for (const workspaceRoot of workspaceRoots) {\n            items.push({\n                label: this.labelProvider.getName(workspaceRoot.resource),\n                description: this.labelProvider.getLongName(workspaceRoot.resource),\n                value: workspaceRoot.resource\n            });\n        }\n        const root = await this.quickPickService.show(items, {\n            placeholder: nls.localize('theia/debug/addConfigurationPlaceholder', 'Select workspace root to add configuration to'),\n        });\n        return root?.value;\n    }\n\n    protected getModel(uri?: URI): DebugConfigurationModel | undefined {\n        const workspaceFolderUri = this.workspaceVariables.getWorkspaceRootUri(uri);\n        if (workspaceFolderUri) {\n            const key = workspaceFolderUri.toString();\n            for (const model of this.models.values()) {\n                if (model.workspaceFolderUri === key) {\n                    return model;\n                }\n            }\n        }\n        for (const model of this.models.values()) {\n            if (model.uri) {\n                return model;\n            }\n        }\n        return this.models.values().next().value;\n    }\n\n    protected async doOpen(model: DebugConfigurationModel): Promise<EditorWidget> {\n        const uri = await this.doCreate(model);\n\n        return this.editorManager.open(uri, {\n            mode: 'activate'\n        });\n    }\n\n    protected async doCreate(model: DebugConfigurationModel): Promise<URI> {\n        const uri = model.uri ?? this.preferences.getConfigUri(PreferenceScope.Folder, model.workspaceFolderUri, 'launch');\n        if (!uri) { // Since we are requesting information about a known workspace folder, this should never happen.\n            throw new Error('PreferenceService.getConfigUri has returned undefined when a URI was expected.');\n        }\n        const settingsUri = this.preferences.getConfigUri(PreferenceScope.Folder, model.workspaceFolderUri);\n        // Users may have placed their debug configurations in a `settings.json`, in which case we shouldn't modify the file.\n        if (settingsUri && !uri.isEqual(settingsUri)) {\n            await this.ensureContent(uri, model);\n        }\n        return uri;\n    }\n\n    /**\n     * Checks whether a `launch.json` file contains the minimum necessary content.\n     * If content not found, provides content and populates the file using Monaco.\n     */\n    protected async ensureContent(uri: URI, model: DebugConfigurationModel): Promise<void> {\n        const textModel = await this.textModelService.createModelReference(uri);\n        const currentContent = textModel.object.valid ? textModel.object.getText() : '';\n        try { // Look for the minimal well-formed launch.json content: {configurations: []}\n            const parsedContent = parse(currentContent);\n            if (Array.isArray(parsedContent.configurations)) {\n                return;\n            }\n        } catch {\n            // Just keep going\n        }\n        const debugType = await this.selectDebugType();\n        const configurations = debugType ? await this.provideDebugConfigurations(debugType, model.workspaceFolderUri) : [];\n        const content = this.getInitialConfigurationContent(configurations);\n        textModel.object.textEditorModel.setValue(content); // Will clobber anything the user has entered!\n        await textModel.object.save();\n    }\n\n    protected async provideDebugConfigurations(debugType: string, workspaceFolderUri: string | undefined): Promise<DebugConfiguration[]> {\n        await this.fireWillProvideDebugConfiguration();\n        return this.debug.provideDebugConfigurations(debugType, workspaceFolderUri);\n    }\n    protected async fireWillProvideDebugConfiguration(): Promise<void> {\n        await WaitUntilEvent.fire(this.onWillProvideDebugConfigurationEmitter, {});\n    }\n\n    async provideDynamicDebugConfigurations(): Promise<Record<string, DynamicDebugConfigurationSessionOptions[]>> {\n        await this.fireWillProvideDynamicDebugConfiguration();\n        const roots = this.workspaceService.tryGetRoots();\n        const promises = roots.map(async root => {\n            const configsMap = await this.debug.provideDynamicDebugConfigurations!(root.resource.toString());\n            const optionsMap = Object.fromEntries(Object.entries(configsMap).map(([type, configs]) => {\n                const options = configs.map(config => ({\n                    name: config.name,\n                    providerType: type,\n                    configuration: config,\n                    workspaceFolderUri: root.resource.toString()\n                }));\n                return [type, options];\n            }));\n            return optionsMap;\n        });\n\n        const typesToOptionsRecords = await Promise.all(promises);\n        const consolidatedTypesToOptions: Record<string, DynamicDebugConfigurationSessionOptions[]> = {};\n\n        for (const typesToOptionsInstance of typesToOptionsRecords) {\n            for (const [providerType, configurationsOptions] of Object.entries(typesToOptionsInstance)) {\n                if (!consolidatedTypesToOptions[providerType]) {\n                    consolidatedTypesToOptions[providerType] = [];\n                }\n                consolidatedTypesToOptions[providerType].push(...configurationsOptions);\n            }\n        }\n        return consolidatedTypesToOptions;\n    }\n\n    async fetchDynamicDebugConfiguration(name: string, type: string, folder?: string): Promise<DebugConfiguration | undefined> {\n        await this.fireWillProvideDynamicDebugConfiguration();\n        return this.debug.fetchDynamicDebugConfiguration(name, type, folder);\n    }\n\n    protected async fireWillProvideDynamicDebugConfiguration(): Promise<void> {\n        await this.initialized;\n        await WaitUntilEvent.fire(this.onWillProvideDynamicDebugConfigurationEmitter, {});\n    }\n\n    protected getInitialConfigurationContent(initialConfigurations: DebugConfiguration[]): string {\n        return `{\n  // Use IntelliSense to learn about possible attributes.\n  // Hover to view descriptions of existing attributes.\n  \"version\": \"0.2.0\",\n  \"configurations\": ${JSON.stringify(initialConfigurations, undefined, '  ').split('\\n').map(line => '  ' + line).join('\\n').trim()}\n}\n`;\n    }\n\n    protected async selectDebugType(): Promise<string | undefined> {\n        const widget = this.editorManager.currentEditor;\n        if (!widget) {\n            return undefined;\n        }\n        const { languageId } = widget.editor.document;\n        const debuggers = await this.debug.getDebuggersForLanguage(languageId);\n        if (debuggers.length === 0) {\n            return undefined;\n        }\n        const items: Array<QuickPickValue<string>> = debuggers.map(({ label, type }) => ({ label, value: type }));\n        const selectedItem = await this.quickPickService.show(items, { placeholder: 'Select Environment' });\n        return selectedItem?.value;\n    }\n\n    @inject(StorageService)\n    protected readonly storage: StorageService;\n\n    async load(): Promise<void> {\n        await this.initialized;\n        const data = await this.storage.getData<DebugConfigurationManager.Data>('debug.configurations', {});\n        this.resolveRecentDynamicOptionsFromData(data.recentDynamicOptions);\n\n        // Between versions v1.26 and v1.27, the expected format of the data changed so that old stored data\n        // may not contain the configuration key.\n        if (DebugSessionOptions.isConfiguration(data.current)) {\n            // ensure options name is reflected from old configurations data\n            data.current.name = data.current.name ?? data.current.configuration?.name;\n            this.current = this.find(data.current.configuration, data.current.workspaceFolderUri, data.current.providerType);\n        } else if (DebugSessionOptions.isCompound(data.current)) {\n            this.current = this.find(data.current.name, data.current.workspaceFolderUri);\n        }\n    }\n\n    protected resolveRecentDynamicOptionsFromData(options?: DynamicDebugConfigurationSessionOptions[]): void {\n        if (!options || this.recentDynamicOptionsTracker.length !== 0) {\n            return;\n        }\n\n        // ensure options name is reflected from old configurations data\n        const dynamicOptions = options.map(option => {\n            option.name = option.name ?? option.configuration.name;\n            return option;\n        }).filter(DebugSessionOptions.isDynamic);\n        this.recentDynamicOptionsTracker = dynamicOptions;\n    }\n\n    save(): void {\n        const data: DebugConfigurationManager.Data = {};\n        const { current, recentDynamicOptionsTracker } = this;\n        if (current) {\n            data.current = current;\n        }\n\n        if (this.recentDynamicOptionsTracker.length > 0) {\n            data.recentDynamicOptions = recentDynamicOptionsTracker;\n        }\n\n        if (Object.keys(data).length > 0) {\n            this.storage.setData('debug.configurations', data);\n        }\n    }\n}\n\nexport namespace DebugConfigurationManager {\n    export interface Data {\n        current?: DebugSessionOptions,\n        recentDynamicOptions?: DynamicDebugConfigurationSessionOptions[]\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport URI from '@theia/core/lib/common/uri';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { DebugConfiguration } from '../common/debug-common';\nimport { PreferenceService } from '@theia/core/lib/browser/preferences/preference-service';\nimport { DebugCompound } from '../common/debug-compound';\nimport { isObject } from '@theia/core/lib/common';\n\nexport class DebugConfigurationModel implements Disposable {\n\n    protected json: DebugConfigurationModel.JsonContent;\n\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n    readonly onDidChange: Event<void> = this.onDidChangeEmitter.event;\n\n    protected readonly toDispose = new DisposableCollection(\n        this.onDidChangeEmitter\n    );\n\n    constructor(\n        readonly workspaceFolderUri: string,\n        protected readonly preferences: PreferenceService\n    ) {\n        this.reconcile();\n        this.toDispose.push(this.preferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'launch' && e.affects(workspaceFolderUri)) {\n                this.reconcile();\n            }\n        }));\n    }\n\n    get uri(): URI | undefined {\n        return this.json.uri;\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n    get onDispose(): Event<void> {\n        return this.toDispose.onDispose;\n    }\n\n    get configurations(): DebugConfiguration[] {\n        return this.json.configurations;\n    }\n\n    get compounds(): DebugCompound[] {\n        return this.json.compounds;\n    }\n\n    async reconcile(): Promise<void> {\n        this.json = this.parseConfigurations();\n        this.onDidChangeEmitter.fire(undefined);\n    }\n    protected parseConfigurations(): DebugConfigurationModel.JsonContent {\n        const configurations: DebugConfiguration[] = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const { configUri, value } = this.preferences.resolve<any>('launch', undefined, this.workspaceFolderUri);\n        if (isObject(value) && Array.isArray(value.configurations)) {\n            for (const configuration of value.configurations) {\n                if (DebugConfiguration.is(configuration)) {\n                    configurations.push(configuration);\n                }\n            }\n        }\n        const compounds: DebugCompound[] = [];\n        if (isObject(value) && Array.isArray(value.compounds)) {\n            for (const compound of value.compounds) {\n                if (DebugCompound.is(compound)) {\n                    compounds.push(compound);\n                }\n            }\n        }\n        return { uri: configUri, configurations, compounds };\n    }\n\n}\nexport namespace DebugConfigurationModel {\n    export interface JsonContent {\n        uri?: URI\n        configurations: DebugConfiguration[]\n        compounds: DebugCompound[]\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 SAP SE or an SAP affiliate company and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { DebugProtocol } from '@vscode/debugprotocol';\nimport { DebugSessionConnection } from './debug-session-connection';\n\nexport const DebugContribution = Symbol('DebugContribution');\n\nexport interface DebugContribution {\n    register(configType: string, connection: DebugSessionConnection): void;\n}\n\n// copied from https://github.com/microsoft/vscode-node-debug2/blob/bcd333ef87642b817ac96d28fde7ab96fee3f6a9/src/nodeDebugInterfaces.d.ts\nexport interface LaunchVSCodeRequest extends DebugProtocol.Request {\n    arguments: LaunchVSCodeArguments;\n}\n\nexport interface LaunchVSCodeArguments {\n    args: LaunchVSCodeArgument[];\n    env?: { [key: string]: string | null; };\n}\n\nexport interface LaunchVSCodeArgument {\n    prefix?: string;\n    path?: string;\n}\n\nexport interface LaunchVSCodeResult {\n    rendererDebugPort?: number;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { nls } from '@theia/core/lib/common/nls';\nimport { PreferenceSchema, PreferenceProxy, PreferenceService, createPreferenceProxy, PreferenceContribution } from '@theia/core/lib/browser/preferences';\nimport { interfaces } from '@theia/core/shared/inversify';\n\nexport const debugPreferencesSchema: PreferenceSchema = {\n    type: 'object',\n    properties: {\n        'debug.trace': {\n            type: 'boolean',\n            default: false,\n            description: nls.localize('theia/debug/toggleTracing', 'Enable/disable tracing communications with debug adapters')\n        },\n        'debug.openDebug': {\n            enum: ['neverOpen', 'openOnSessionStart', 'openOnFirstSessionStart', 'openOnDebugBreak'],\n            default: 'openOnSessionStart',\n            description: nls.localizeByDefault('Controls when the debug view should open.')\n        },\n        'debug.internalConsoleOptions': {\n            enum: ['neverOpen', 'openOnSessionStart', 'openOnFirstSessionStart'],\n            default: 'openOnFirstSessionStart',\n            description: nls.localizeByDefault('Controls when the internal Debug Console should open.')\n        },\n        'debug.inlineValues': {\n            type: 'boolean',\n            default: false,\n            description: nls.localizeByDefault('Show variable values inline in editor while debugging.')\n        },\n        'debug.showInStatusBar': {\n            enum: ['never', 'always', 'onFirstSessionStart'],\n            enumDescriptions: [\n                nls.localizeByDefault('Never show debug in Status bar'),\n                nls.localizeByDefault('Always show debug in Status bar'),\n                nls.localizeByDefault('Show debug in Status bar only after debug was started for the first time')\n            ],\n            description: nls.localizeByDefault('Controls when the debug Status bar should be visible.'),\n            default: 'onFirstSessionStart'\n        },\n        'debug.confirmOnExit': {\n            description: 'Controls whether to confirm when the window closes if there are active debug sessions.',\n            type: 'string',\n            enum: ['never', 'always'],\n            enumDescriptions: [\n                'Never confirm.',\n                'Always confirm if there are debug sessions.',\n            ],\n            default: 'never'\n        },\n        'debug.disassemblyView.showSourceCode': {\n            description: nls.localizeByDefault('Show Source Code in Disassembly View.'),\n            type: 'boolean',\n            default: true,\n        }\n    }\n};\n\nexport class DebugConfiguration {\n    'debug.trace': boolean;\n    'debug.openDebug': 'neverOpen' | 'openOnSessionStart' | 'openOnFirstSessionStart' | 'openOnDebugBreak';\n    'debug.internalConsoleOptions': 'neverOpen' | 'openOnSessionStart' | 'openOnFirstSessionStart';\n    'debug.inlineValues': boolean;\n    'debug.showInStatusBar': 'never' | 'always' | 'onFirstSessionStart';\n    'debug.confirmOnExit': 'never' | 'always';\n    'debug.disassemblyView.showSourceCode': boolean;\n}\n\nexport const DebugPreferenceContribution = Symbol('DebugPreferenceContribution');\nexport const DebugPreferences = Symbol('DebugPreferences');\nexport type DebugPreferences = PreferenceProxy<DebugConfiguration>;\n\nexport function createDebugPreferences(preferences: PreferenceService, schema: PreferenceSchema = debugPreferencesSchema): DebugPreferences {\n    return createPreferenceProxy(preferences, schema);\n}\n\nexport function bindDebugPreferences(bind: interfaces.Bind): void {\n    bind(DebugPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        const contribution = ctx.container.get<PreferenceContribution>(DebugPreferenceContribution);\n        return createDebugPreferences(preferences, contribution.schema);\n    }).inSingletonScope();\n    bind(DebugPreferenceContribution).toConstantValue({ schema: debugPreferencesSchema });\n    bind(PreferenceContribution).toService(DebugPreferenceContribution);\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { DebugProtocol } from '@vscode/debugprotocol';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { Event, Emitter, DisposableCollection, Disposable, MaybePromise } from '@theia/core';\nimport { OutputChannel } from '@theia/output/lib/browser/output-channel';\n\nimport { DebugChannel } from '../common/debug-service';\n\nexport type DebugRequestHandler = (request: DebugProtocol.Request) => MaybePromise<any>;\n\nexport interface DebugRequestTypes {\n    'attach': [DebugProtocol.AttachRequestArguments, DebugProtocol.AttachResponse]\n    'breakpointLocations': [DebugProtocol.BreakpointLocationsArguments, DebugProtocol.BreakpointLocationsResponse]\n    'cancel': [DebugProtocol.CancelArguments, DebugProtocol.CancelResponse]\n    'completions': [DebugProtocol.CompletionsArguments, DebugProtocol.CompletionsResponse]\n    'configurationDone': [DebugProtocol.ConfigurationDoneArguments, DebugProtocol.ConfigurationDoneResponse]\n    'continue': [DebugProtocol.ContinueArguments, DebugProtocol.ContinueResponse]\n    'dataBreakpointInfo': [DebugProtocol.DataBreakpointInfoArguments, DebugProtocol.DataBreakpointInfoResponse]\n    'disassemble': [DebugProtocol.DisassembleArguments, DebugProtocol.DisassembleResponse]\n    'disconnect': [DebugProtocol.DisconnectArguments, DebugProtocol.DisconnectResponse]\n    'evaluate': [DebugProtocol.EvaluateArguments, DebugProtocol.EvaluateResponse]\n    'exceptionInfo': [DebugProtocol.ExceptionInfoArguments, DebugProtocol.ExceptionInfoResponse]\n    'goto': [DebugProtocol.GotoArguments, DebugProtocol.GotoResponse]\n    'gotoTargets': [DebugProtocol.GotoTargetsArguments, DebugProtocol.GotoTargetsResponse]\n    'initialize': [DebugProtocol.InitializeRequestArguments, DebugProtocol.InitializeResponse]\n    'launch': [DebugProtocol.LaunchRequestArguments, DebugProtocol.LaunchResponse]\n    'loadedSources': [DebugProtocol.LoadedSourcesArguments, DebugProtocol.LoadedSourcesResponse]\n    'modules': [DebugProtocol.ModulesArguments, DebugProtocol.ModulesResponse]\n    'next': [DebugProtocol.NextArguments, DebugProtocol.NextResponse]\n    'pause': [DebugProtocol.PauseArguments, DebugProtocol.PauseResponse]\n    'readMemory': [DebugProtocol.ReadMemoryArguments, DebugProtocol.ReadMemoryResponse]\n    'restart': [DebugProtocol.RestartArguments, DebugProtocol.RestartResponse]\n    'restartFrame': [DebugProtocol.RestartFrameArguments, DebugProtocol.RestartFrameResponse]\n    'reverseContinue': [DebugProtocol.ReverseContinueArguments, DebugProtocol.ReverseContinueResponse]\n    'scopes': [DebugProtocol.ScopesArguments, DebugProtocol.ScopesResponse]\n    'setBreakpoints': [DebugProtocol.SetBreakpointsArguments, DebugProtocol.SetBreakpointsResponse]\n    'setDataBreakpoints': [DebugProtocol.SetDataBreakpointsArguments, DebugProtocol.SetDataBreakpointsResponse]\n    'setExceptionBreakpoints': [DebugProtocol.SetExceptionBreakpointsArguments, DebugProtocol.SetExceptionBreakpointsResponse]\n    'setExpression': [DebugProtocol.SetExpressionArguments, DebugProtocol.SetExpressionResponse]\n    'setFunctionBreakpoints': [DebugProtocol.SetFunctionBreakpointsArguments, DebugProtocol.SetFunctionBreakpointsResponse]\n    'setInstructionBreakpoints': [DebugProtocol.SetInstructionBreakpointsArguments, DebugProtocol.SetInstructionBreakpointsResponse]\n    'setVariable': [DebugProtocol.SetVariableArguments, DebugProtocol.SetVariableResponse]\n    'source': [DebugProtocol.SourceArguments, DebugProtocol.SourceResponse]\n    'stackTrace': [DebugProtocol.StackTraceArguments, DebugProtocol.StackTraceResponse]\n    'stepBack': [DebugProtocol.StepBackArguments, DebugProtocol.StepBackResponse]\n    'stepIn': [DebugProtocol.StepInArguments, DebugProtocol.StepInResponse]\n    'stepInTargets': [DebugProtocol.StepInTargetsArguments, DebugProtocol.StepInTargetsResponse]\n    'stepOut': [DebugProtocol.StepOutArguments, DebugProtocol.StepOutResponse]\n    'terminate': [DebugProtocol.TerminateArguments, DebugProtocol.TerminateResponse]\n    'terminateThreads': [DebugProtocol.TerminateThreadsArguments, DebugProtocol.TerminateThreadsResponse]\n    'threads': [{}, DebugProtocol.ThreadsResponse]\n    'variables': [DebugProtocol.VariablesArguments, DebugProtocol.VariablesResponse]\n    'writeMemory': [DebugProtocol.WriteMemoryArguments, DebugProtocol.WriteMemoryResponse]\n}\n\nexport interface DebugEventTypes {\n    'breakpoint': DebugProtocol.BreakpointEvent\n    'capabilities': DebugProtocol.CapabilitiesEvent\n    'continued': DebugProtocol.ContinuedEvent\n    'exited': DebugProtocol.ExitedEvent,\n    'initialized': DebugProtocol.InitializedEvent\n    'invalidated': DebugProtocol.InvalidatedEvent\n    'loadedSource': DebugProtocol.LoadedSourceEvent\n    'module': DebugProtocol.ModuleEvent\n    'output': DebugProtocol.OutputEvent\n    'process': DebugProtocol.ProcessEvent\n    'progressEnd': DebugProtocol.ProgressEndEvent\n    'progressStart': DebugProtocol.ProgressStartEvent\n    'progressUpdate': DebugProtocol.ProgressUpdateEvent\n    'stopped': DebugProtocol.StoppedEvent\n    'terminated': DebugProtocol.TerminatedEvent\n    'thread': DebugProtocol.ThreadEvent\n}\n\nexport type DebugEventNames = keyof DebugEventTypes;\n\nexport namespace DebugEventTypes {\n    export function isStandardEvent(event: string): event is DebugEventNames {\n        return standardDebugEvents.has(event);\n    };\n}\n\nconst standardDebugEvents = new Set<string>([\n    'breakpoint',\n    'capabilities',\n    'continued',\n    'exited',\n    'initialized',\n    'invalidated',\n    'loadedSource',\n    'module',\n    'output',\n    'process',\n    'progressEnd',\n    'progressStart',\n    'progressUpdate',\n    'stopped',\n    'terminated',\n    'thread'\n]);\n\nexport class DebugSessionConnection implements Disposable {\n\n    private sequence = 1;\n\n    protected readonly pendingRequests = new Map<number, Deferred<DebugProtocol.Response>>();\n    protected readonly connectionPromise: Promise<DebugChannel>;\n\n    protected readonly requestHandlers = new Map<string, DebugRequestHandler>();\n\n    protected readonly onDidCustomEventEmitter = new Emitter<DebugProtocol.Event>();\n    readonly onDidCustomEvent: Event<DebugProtocol.Event> = this.onDidCustomEventEmitter.event;\n\n    protected readonly onDidCloseEmitter = new Emitter<void>();\n    readonly onDidClose: Event<void> = this.onDidCloseEmitter.event;\n\n    protected isClosed = false;\n\n    protected readonly toDispose = new DisposableCollection(\n        this.onDidCustomEventEmitter,\n        Disposable.create(() => this.pendingRequests.clear()),\n        Disposable.create(() => this.emitters.clear())\n    );\n\n    constructor(\n        readonly sessionId: string,\n        connectionFactory: (sessionId: string) => Promise<DebugChannel>,\n        protected readonly traceOutputChannel: OutputChannel | undefined\n    ) {\n        this.connectionPromise = this.createConnection(connectionFactory);\n    }\n\n    get disposed(): boolean {\n        return this.toDispose.disposed;\n    }\n\n    protected checkDisposed(): void {\n        if (this.disposed) {\n            throw new Error('the debug session connection is disposed, id: ' + this.sessionId);\n        }\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    protected async createConnection(connectionFactory: (sessionId: string) => Promise<DebugChannel>): Promise<DebugChannel> {\n        const connection = await connectionFactory(this.sessionId);\n        connection.onClose(() => {\n            this.isClosed = true;\n            this.cancelPendingRequests();\n            this.onDidCloseEmitter.fire();\n        });\n        connection.onMessage(data => this.handleMessage(data));\n        return connection;\n    }\n\n    protected allThreadsContinued = true;\n    async sendRequest<K extends keyof DebugRequestTypes>(command: K, args: DebugRequestTypes[K][0], timeout?: number): Promise<DebugRequestTypes[K][1]> {\n        const result = await this.doSendRequest(command, args, timeout);\n        if (command === 'next' || command === 'stepIn' ||\n            command === 'stepOut' || command === 'stepBack' ||\n            command === 'reverseContinue' || command === 'restartFrame') {\n            this.fireContinuedEvent((args as any).threadId);\n        }\n        if (command === 'continue') {\n            const response = result as DebugProtocol.ContinueResponse;\n            const allThreadsContinued = response && response.body && response.body.allThreadsContinued;\n            if (allThreadsContinued !== undefined) {\n                this.allThreadsContinued = result.body.allThreadsContinued;\n            }\n            this.fireContinuedEvent((args as any).threadId, this.allThreadsContinued);\n            return result;\n        }\n        return result;\n    }\n    sendCustomRequest<T extends DebugProtocol.Response>(command: string, args?: any): Promise<T> {\n        return this.doSendRequest<T>(command, args);\n    }\n\n    protected cancelPendingRequests(): void {\n        this.pendingRequests.forEach((deferred, requestId) => {\n            deferred.reject(new Error(`Request ${requestId} cancelled on connection close`));\n        });\n    }\n\n    protected doSendRequest<K extends DebugProtocol.Response>(command: string, args?: any, timeout?: number): Promise<K> {\n        const result = new Deferred<K>();\n\n        if (this.isClosed) {\n            result.reject(new Error('Connection is closed'));\n        } else {\n            const request: DebugProtocol.Request = {\n                seq: this.sequence++,\n                type: 'request',\n                command: command,\n                arguments: args\n            };\n\n            this.pendingRequests.set(request.seq, result);\n            if (timeout) {\n                const handle = setTimeout(() => {\n                    const pendingRequest = this.pendingRequests.get(request.seq);\n                    if (pendingRequest) {\n                        // request has not been handled\n                        this.pendingRequests.delete(request.seq);\n                        const error: DebugProtocol.Response = {\n                            type: 'response',\n                            seq: 0,\n                            request_seq: request.seq,\n                            success: false,\n                            command,\n                            message: `Request #${request.seq}: ${request.command} timed out`\n                        };\n                        pendingRequest.reject(error);\n                    }\n                }, timeout);\n                result.promise.finally(() => clearTimeout(handle));\n            }\n            this.send(request);\n        }\n        return result.promise;\n    }\n\n    protected async send(message: DebugProtocol.ProtocolMessage): Promise<void> {\n        const connection = await this.connectionPromise;\n        const messageStr = JSON.stringify(message);\n        if (this.traceOutputChannel) {\n            const now = new Date();\n            const dateStr = `${now.toLocaleString(undefined, { hour12: false })}.${now.getMilliseconds()}`;\n            this.traceOutputChannel.appendLine(`${this.sessionId.substring(0, 8)} ${dateStr} theia -> adapter: ${JSON.stringify(message, undefined, 4)}`);\n        }\n        connection.send(messageStr);\n    }\n\n    protected handleMessage(data: string): void {\n        const message: DebugProtocol.ProtocolMessage = JSON.parse(data);\n        if (this.traceOutputChannel) {\n            const now = new Date();\n            const dateStr = `${now.toLocaleString(undefined, { hour12: false })}.${now.getMilliseconds()}`;\n            this.traceOutputChannel.appendLine(`${this.sessionId.substring(0, 8)} ${dateStr} theia <- adapter: ${JSON.stringify(message, undefined, 4)}`);\n        }\n        if (message.type === 'request') {\n            this.handleRequest(message as DebugProtocol.Request);\n        } else if (message.type === 'response') {\n            this.handleResponse(message as DebugProtocol.Response);\n        } else if (message.type === 'event') {\n            this.handleEvent(message as DebugProtocol.Event);\n        }\n    }\n\n    protected handleResponse(response: DebugProtocol.Response): void {\n        const pendingRequest = this.pendingRequests.get(response.request_seq);\n        if (pendingRequest) {\n            this.pendingRequests.delete(response.request_seq);\n            if (!response.success) {\n                pendingRequest.reject(response);\n            } else {\n                pendingRequest.resolve(response);\n            }\n        }\n    }\n\n    onRequest(command: string, handler: DebugRequestHandler): void {\n        this.requestHandlers.set(command, handler);\n    }\n\n    protected async handleRequest(request: DebugProtocol.Request): Promise<void> {\n        const response: DebugProtocol.Response = {\n            type: 'response',\n            seq: 0,\n            command: request.command,\n            request_seq: request.seq,\n            success: true,\n        };\n        const handler = this.requestHandlers.get(request.command);\n        if (handler) {\n            try {\n                response.body = await handler(request);\n            } catch (error) {\n                response.success = false;\n                response.message = error.message;\n            }\n        } else {\n            console.error('Unhandled request', request);\n        }\n        await this.send(response);\n    }\n\n    protected handleEvent(event: DebugProtocol.Event): void {\n        if (event.event === 'continued') {\n            this.allThreadsContinued = (<DebugProtocol.ContinuedEvent>event).body.allThreadsContinued === false ? false : true;\n        }\n        if (DebugEventTypes.isStandardEvent(event.event)) {\n            this.doFire(event.event, event);\n        } else {\n            this.onDidCustomEventEmitter.fire(event);\n        }\n    }\n\n    protected readonly emitters = new Map<string, Emitter<DebugProtocol.Event>>();\n    on<K extends keyof DebugEventTypes>(kind: K, listener: (e: DebugEventTypes[K]) => any): Disposable {\n        return this.getEmitter(kind).event(listener);\n    }\n\n    onEvent<K extends keyof DebugEventTypes>(kind: K): Event<DebugEventTypes[K]> {\n        return this.getEmitter(kind).event;\n    }\n\n    protected fire<K extends keyof DebugEventTypes>(kind: K, e: DebugEventTypes[K]): void {\n        this.doFire(kind, e);\n    }\n    protected doFire<K extends keyof DebugEventTypes>(kind: K, e: DebugEventTypes[K]): void {\n        this.getEmitter(kind).fire(e);\n    }\n    protected getEmitter<K extends keyof DebugEventTypes>(kind: K): Emitter<DebugEventTypes[K]> {\n        const emitter = this.emitters.get(kind) || this.newEmitter();\n        this.emitters.set(kind, emitter);\n        return <Emitter<DebugEventTypes[K]>>emitter;\n    }\n    protected newEmitter(): Emitter<DebugProtocol.Event> {\n        const emitter = new Emitter();\n        this.checkDisposed();\n        this.toDispose.push(emitter);\n        return emitter;\n    }\n\n    protected fireContinuedEvent(threadId: number, allThreadsContinued = false): void {\n        this.fire('continued', {\n            type: 'event',\n            event: 'continued',\n            body: {\n                threadId,\n                allThreadsContinued\n            },\n            seq: -1\n        });\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, named, postConstruct } from '@theia/core/shared/inversify';\nimport { MessageClient } from '@theia/core/lib/common';\nimport { LabelProvider } from '@theia/core/lib/browser';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport { TerminalService } from '@theia/terminal/lib/browser/base/terminal-service';\nimport { WebSocketConnectionProvider } from '@theia/core/lib/browser/messaging/ws-connection-provider';\nimport { DebugSession } from './debug-session';\nimport { BreakpointManager } from './breakpoint/breakpoint-manager';\nimport { DebugConfigurationSessionOptions, DebugSessionOptions } from './debug-session-options';\nimport { OutputChannelManager, OutputChannel } from '@theia/output/lib/browser/output-channel';\nimport { DebugPreferences } from './debug-preferences';\nimport { DebugSessionConnection } from './debug-session-connection';\nimport { DebugChannel, DebugAdapterPath, ForwardingDebugChannel } from '../common/debug-service';\nimport { ContributionProvider } from '@theia/core/lib/common/contribution-provider';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { DebugContribution } from './debug-contribution';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\n\n/**\n * DebugSessionContribution symbol for DI.\n */\nexport const DebugSessionContribution = Symbol('DebugSessionContribution');\n/**\n * The [debug session](#DebugSession) contribution.\n * Can be used to instantiate a specific debug sessions.\n */\nexport interface DebugSessionContribution {\n    /**\n     * The debug type.\n     */\n    debugType: string;\n\n    /**\n     * The [debug session](#DebugSession) factory.\n     */\n    debugSessionFactory(): DebugSessionFactory;\n}\n/**\n * DebugSessionContributionRegistry symbol for DI.\n */\nexport const DebugSessionContributionRegistry = Symbol('DebugSessionContributionRegistry');\n/**\n * Debug session contribution registry.\n */\nexport interface DebugSessionContributionRegistry {\n    get(debugType: string): DebugSessionContribution | undefined;\n}\n\n@injectable()\nexport class DebugSessionContributionRegistryImpl implements DebugSessionContributionRegistry {\n    protected readonly contribs = new Map<string, DebugSessionContribution>();\n\n    @inject(ContributionProvider) @named(DebugSessionContribution)\n    protected readonly contributions: ContributionProvider<DebugSessionContribution>;\n\n    @postConstruct()\n    protected init(): void {\n        for (const contrib of this.contributions.getContributions()) {\n            this.contribs.set(contrib.debugType, contrib);\n        }\n    }\n\n    get(debugType: string): DebugSessionContribution | undefined {\n        return this.contribs.get(debugType);\n    }\n}\n\n/**\n * DebugSessionFactory symbol for DI.\n */\nexport const DebugSessionFactory = Symbol('DebugSessionFactory');\n\n/**\n * The [debug session](#DebugSession) factory.\n */\nexport interface DebugSessionFactory {\n    get(sessionId: string, options: DebugSessionOptions, parentSession?: DebugSession): DebugSession;\n}\n\n@injectable()\nexport class DefaultDebugSessionFactory implements DebugSessionFactory {\n    @inject(WebSocketConnectionProvider)\n    protected readonly connectionProvider: WebSocketConnectionProvider;\n    @inject(TerminalService)\n    protected readonly terminalService: TerminalService;\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n    @inject(BreakpointManager)\n    protected readonly breakpoints: BreakpointManager;\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n    @inject(MessageClient)\n    protected readonly messages: MessageClient;\n    @inject(OutputChannelManager)\n    protected readonly outputChannelManager: OutputChannelManager;\n    @inject(DebugPreferences)\n    protected readonly debugPreferences: DebugPreferences;\n    @inject(FileService)\n    protected readonly fileService: FileService;\n    @inject(ContributionProvider) @named(DebugContribution)\n    protected readonly debugContributionProvider: ContributionProvider<DebugContribution>;\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    get(sessionId: string, options: DebugConfigurationSessionOptions, parentSession?: DebugSession): DebugSession {\n        const connection = new DebugSessionConnection(\n            sessionId,\n            () => new Promise<DebugChannel>(resolve =>\n                this.connectionProvider.openChannel(`${DebugAdapterPath}/${sessionId}`, wsChannel => {\n                    resolve(new ForwardingDebugChannel(wsChannel));\n                }, { reconnecting: false })\n            ),\n            this.getTraceOutputChannel());\n        return new DebugSession(\n            sessionId,\n            options,\n            parentSession,\n            connection,\n            this.terminalService,\n            this.editorManager,\n            this.breakpoints,\n            this.labelProvider,\n            this.messages,\n            this.fileService,\n            this.debugContributionProvider,\n            this.workspaceService);\n    }\n\n    protected getTraceOutputChannel(): OutputChannel | undefined {\n        if (this.debugPreferences['debug.trace']) {\n            return this.outputChannelManager.getChannel('Debug adapters');\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { DisposableCollection, Emitter, Event, MessageService, nls, ProgressService, WaitUntilEvent } from '@theia/core';\nimport { LabelProvider, ApplicationShell } from '@theia/core/lib/browser';\nimport { ContextKey, ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nimport URI from '@theia/core/lib/common/uri';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport { QuickOpenTask } from '@theia/task/lib/browser/quick-open-task';\nimport { TaskService, TaskEndedInfo, TaskEndedTypes } from '@theia/task/lib/browser/task-service';\nimport { VariableResolverService } from '@theia/variable-resolver/lib/browser';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { DebugConfiguration } from '../common/debug-common';\nimport { DebugError, DebugService } from '../common/debug-service';\nimport { BreakpointManager } from './breakpoint/breakpoint-manager';\nimport { DebugConfigurationManager } from './debug-configuration-manager';\nimport { DebugSession, DebugState, debugStateContextValue } from './debug-session';\nimport { DebugSessionContributionRegistry, DebugSessionFactory } from './debug-session-contribution';\nimport { DebugCompoundRoot, DebugCompoundSessionOptions, DebugConfigurationSessionOptions, DebugSessionOptions, InternalDebugSessionOptions } from './debug-session-options';\nimport { DebugStackFrame } from './model/debug-stack-frame';\nimport { DebugThread } from './model/debug-thread';\nimport { TaskIdentifier } from '@theia/task/lib/common';\nimport { DebugSourceBreakpoint } from './model/debug-source-breakpoint';\nimport { DebugFunctionBreakpoint } from './model/debug-function-breakpoint';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { DebugInstructionBreakpoint } from './model/debug-instruction-breakpoint';\n\nexport interface WillStartDebugSession extends WaitUntilEvent {\n}\n\nexport interface WillResolveDebugConfiguration extends WaitUntilEvent {\n    debugType: string\n}\n\nexport interface DidChangeActiveDebugSession {\n    previous: DebugSession | undefined\n    current: DebugSession | undefined\n}\n\nexport interface DidChangeBreakpointsEvent {\n    session?: DebugSession\n    uri: URI\n}\n\nexport interface DidFocusStackFrameEvent {\n    session: DebugSession;\n    frame: DebugStackFrame | undefined;\n}\n\nexport interface DebugSessionCustomEvent {\n    readonly body?: any // eslint-disable-line @typescript-eslint/no-explicit-any\n    readonly event: string\n    readonly session: DebugSession\n}\n\n@injectable()\nexport class DebugSessionManager {\n    protected readonly _sessions = new Map<string, DebugSession>();\n\n    protected readonly onWillStartDebugSessionEmitter = new Emitter<WillStartDebugSession>();\n    readonly onWillStartDebugSession: Event<WillStartDebugSession> = this.onWillStartDebugSessionEmitter.event;\n\n    protected readonly onWillResolveDebugConfigurationEmitter = new Emitter<WillResolveDebugConfiguration>();\n    readonly onWillResolveDebugConfiguration: Event<WillResolveDebugConfiguration> = this.onWillResolveDebugConfigurationEmitter.event;\n\n    protected readonly onDidCreateDebugSessionEmitter = new Emitter<DebugSession>();\n    readonly onDidCreateDebugSession: Event<DebugSession> = this.onDidCreateDebugSessionEmitter.event;\n\n    protected readonly onDidStartDebugSessionEmitter = new Emitter<DebugSession>();\n    readonly onDidStartDebugSession: Event<DebugSession> = this.onDidStartDebugSessionEmitter.event;\n\n    protected readonly onDidStopDebugSessionEmitter = new Emitter<DebugSession>();\n    readonly onDidStopDebugSession: Event<DebugSession> = this.onDidStopDebugSessionEmitter.event;\n\n    protected readonly onDidChangeActiveDebugSessionEmitter = new Emitter<DidChangeActiveDebugSession>();\n    readonly onDidChangeActiveDebugSession: Event<DidChangeActiveDebugSession> = this.onDidChangeActiveDebugSessionEmitter.event;\n\n    protected readonly onDidDestroyDebugSessionEmitter = new Emitter<DebugSession>();\n    readonly onDidDestroyDebugSession: Event<DebugSession> = this.onDidDestroyDebugSessionEmitter.event;\n\n    protected readonly onDidReceiveDebugSessionCustomEventEmitter = new Emitter<DebugSessionCustomEvent>();\n    readonly onDidReceiveDebugSessionCustomEvent: Event<DebugSessionCustomEvent> = this.onDidReceiveDebugSessionCustomEventEmitter.event;\n\n    protected readonly onDidFocusStackFrameEmitter = new Emitter<DidFocusStackFrameEvent>();\n    readonly onDidFocusStackFrame = this.onDidFocusStackFrameEmitter.event;\n\n    protected readonly onDidChangeBreakpointsEmitter = new Emitter<DidChangeBreakpointsEvent>();\n    readonly onDidChangeBreakpoints = this.onDidChangeBreakpointsEmitter.event;\n    protected fireDidChangeBreakpoints(event: DidChangeBreakpointsEvent): void {\n        this.onDidChangeBreakpointsEmitter.fire(event);\n    }\n\n    protected readonly onDidChangeEmitter = new Emitter<DebugSession | undefined>();\n    readonly onDidChange: Event<DebugSession | undefined> = this.onDidChangeEmitter.event;\n    protected fireDidChange(current: DebugSession | undefined): void {\n        this.debugTypeKey.set(current?.configuration.type);\n        this.inDebugModeKey.set(this.inDebugMode);\n        this.debugStateKey.set(debugStateContextValue(this.state));\n        this.onDidChangeEmitter.fire(current);\n    }\n\n    @inject(DebugSessionFactory)\n    protected readonly debugSessionFactory: DebugSessionFactory;\n\n    @inject(DebugService)\n    protected readonly debug: DebugService;\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    @inject(BreakpointManager)\n    protected readonly breakpoints: BreakpointManager;\n\n    @inject(VariableResolverService)\n    protected readonly variableResolver: VariableResolverService;\n\n    @inject(DebugSessionContributionRegistry)\n    protected readonly sessionContributionRegistry: DebugSessionContributionRegistry;\n\n    @inject(MessageService)\n    protected readonly messageService: MessageService;\n\n    @inject(ProgressService)\n    protected readonly progressService: ProgressService;\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    @inject(TaskService)\n    protected readonly taskService: TaskService;\n\n    @inject(DebugConfigurationManager)\n    protected readonly debugConfigurationManager: DebugConfigurationManager;\n\n    @inject(QuickOpenTask)\n    protected readonly quickOpenTask: QuickOpenTask;\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    protected debugTypeKey: ContextKey<string>;\n    protected inDebugModeKey: ContextKey<boolean>;\n    protected debugStateKey: ContextKey<string>;\n\n    @postConstruct()\n    protected init(): void {\n        this.debugTypeKey = this.contextKeyService.createKey<string>('debugType', undefined);\n        this.inDebugModeKey = this.contextKeyService.createKey<boolean>('inDebugMode', this.inDebugMode);\n        this.debugStateKey = this.contextKeyService.createKey<string>('debugState', debugStateContextValue(this.state));\n        this.breakpoints.onDidChangeMarkers(uri => this.fireDidChangeBreakpoints({ uri }));\n        this.labelProvider.onDidChange(event => {\n            for (const uriString of this.breakpoints.getUris()) {\n                const uri = new URI(uriString);\n                if (event.affects(uri)) {\n                    this.fireDidChangeBreakpoints({ uri });\n                }\n            }\n        });\n    }\n\n    get inDebugMode(): boolean {\n        return this.state > DebugState.Inactive;\n    }\n\n    isCurrentEditorFrame(uri: URI | string | monaco.Uri): boolean {\n        return this.currentFrame?.source?.uri.toString() === (uri instanceof URI ? uri : new URI(uri)).toString();\n    }\n\n    protected async saveAll(): Promise<boolean> {\n        if (!this.shell.canSaveAll()) {\n            return true; // Nothing to save.\n        }\n        try {\n            await this.shell.saveAll();\n            return true;\n        } catch (error) {\n            console.error('saveAll failed:', error);\n            return false;\n        }\n    }\n\n    async start(options: DebugCompoundSessionOptions): Promise<boolean | undefined>;\n    async start(options: DebugConfigurationSessionOptions): Promise<DebugSession | undefined>;\n    async start(options: DebugSessionOptions): Promise<DebugSession | boolean | undefined>;\n    async start(name: string): Promise<DebugSession | boolean | undefined>;\n    async start(optionsOrName: DebugSessionOptions | string): Promise<DebugSession | boolean | undefined> {\n        if (typeof optionsOrName === 'string') {\n            const options = this.debugConfigurationManager.find(optionsOrName);\n            return !!options && this.start(options);\n        }\n        return optionsOrName.configuration ? this.startConfiguration(optionsOrName) : this.startCompound(optionsOrName);\n    }\n\n    protected async startConfiguration(options: DebugConfigurationSessionOptions): Promise<DebugSession | undefined> {\n        return this.progressService.withProgress('Start...', 'debug', async () => {\n            try {\n                // If a parent session is available saving should be handled by the parent\n                if (!options.configuration.parentSessionId && !options.configuration.suppressSaveBeforeStart && !await this.saveAll()) {\n                    return undefined;\n                }\n                await this.fireWillStartDebugSession();\n                const resolved = await this.resolveConfiguration(options);\n\n                if (!resolved || !resolved.configuration) {\n                    // As per vscode API: https://code.visualstudio.com/api/references/vscode-api#DebugConfigurationProvider\n                    // \"Returning the value 'undefined' prevents the debug session from starting.\n                    // Returning the value 'null' prevents the debug session from starting and opens the\n                    // underlying debug configuration instead.\"\n\n                    // eslint-disable-next-line no-null/no-null\n                    if (resolved === null) {\n                        this.debugConfigurationManager.openConfiguration();\n                    }\n                    return undefined;\n                }\n\n                // preLaunchTask isn't run in case of auto restart as well as postDebugTask\n                if (!options.configuration.__restart) {\n                    const taskRun = await this.runTask(options.workspaceFolderUri, resolved.configuration.preLaunchTask, true);\n                    if (!taskRun) {\n                        return undefined;\n                    }\n                }\n\n                const sessionId = await this.debug.createDebugSession(resolved.configuration, options.workspaceFolderUri);\n                return this.doStart(sessionId, resolved);\n            } catch (e) {\n                if (DebugError.NotFound.is(e)) {\n                    this.messageService.error(`The debug session type \"${e.data.type}\" is not supported.`);\n                    return undefined;\n                }\n\n                this.messageService.error('There was an error starting the debug session, check the logs for more details.');\n                console.error('Error starting the debug session', e);\n                throw e;\n            }\n        });\n    }\n\n    protected async startCompound(options: DebugCompoundSessionOptions): Promise<boolean | undefined> {\n        let configurations: DebugConfigurationSessionOptions[] = [];\n        const compoundRoot = options.compound.stopAll ? new DebugCompoundRoot() : undefined;\n        try {\n            configurations = this.getCompoundConfigurations(options, compoundRoot);\n        } catch (error) {\n            this.messageService.error(error.message);\n            return;\n        }\n\n        if (options.compound.preLaunchTask) {\n            const taskRun = await this.runTask(options.workspaceFolderUri, options.compound.preLaunchTask, true);\n            if (!taskRun) {\n                return undefined;\n            }\n        }\n\n        // Compound launch is a success only if each configuration launched successfully\n        const values = await Promise.all(configurations.map(async configuration => {\n            const newSession = await this.startConfiguration(configuration);\n            if (newSession) {\n                compoundRoot?.onDidSessionStop(() => newSession.stop(false, () => this.debug.terminateDebugSession(newSession.id)));\n            }\n            return newSession;\n        }));\n        const result = values.every(success => !!success);\n        return result;\n    }\n\n    protected getCompoundConfigurations(options: DebugCompoundSessionOptions, compoundRoot: DebugCompoundRoot | undefined): DebugConfigurationSessionOptions[] {\n        const compound = options.compound;\n        if (!compound.configurations) {\n            throw new Error(nls.localizeByDefault('Compound must have \"configurations\" attribute set in order to start multiple configurations.'));\n        }\n\n        const configurations: DebugConfigurationSessionOptions[] = [];\n\n        for (const configData of compound.configurations) {\n            const name = typeof configData === 'string' ? configData : configData.name;\n            if (name === compound.name) {\n                throw new Error(nls.localize('theia/debug/compound-cycle', \"Launch configuration '{0}' contains a cycle with itself\", name));\n            }\n\n            const workspaceFolderUri = typeof configData === 'string' ? options.workspaceFolderUri : configData.folder;\n            const matchingOptions = [...this.debugConfigurationManager.all]\n                .filter(option => option.name === name && !!option.configuration && option.workspaceFolderUri === workspaceFolderUri);\n            if (matchingOptions.length === 1) {\n                const match = matchingOptions[0];\n                if (DebugSessionOptions.isConfiguration(match)) {\n                    configurations.push({ ...match, compoundRoot, configuration: { ...match.configuration, noDebug: options.noDebug } });\n                } else {\n                    throw new Error(nls.localizeByDefault(\"Could not find launch configuration '{0}' in the workspace.\", name));\n                }\n            } else {\n                throw new Error(matchingOptions.length === 0\n                    ? workspaceFolderUri\n                        ? nls.localizeByDefault(\"Can not find folder with name '{0}' for configuration '{1}' in compound '{2}'.\", workspaceFolderUri, name, compound.name)\n                        : nls.localizeByDefault(\"Could not find launch configuration '{0}' in the workspace.\", name)\n                    : nls.localizeByDefault(\"There are multiple launch configurations '{0}' in the workspace. Use folder name to qualify the configuration.\", name));\n            }\n        }\n        return configurations;\n    }\n\n    protected async fireWillStartDebugSession(): Promise<void> {\n        await WaitUntilEvent.fire(this.onWillStartDebugSessionEmitter, {});\n    }\n\n    protected configurationIds = new Map<string, number>();\n    protected async resolveConfiguration(\n        options: Readonly<DebugConfigurationSessionOptions>\n    ): Promise<InternalDebugSessionOptions | undefined | null> {\n        if (InternalDebugSessionOptions.is(options)) {\n            return options;\n        }\n        const { workspaceFolderUri } = options;\n        let configuration = await this.resolveDebugConfiguration(options.configuration, workspaceFolderUri);\n\n        if (configuration) {\n            // Resolve command variables provided by the debugger\n            const commandIdVariables = await this.debug.provideDebuggerVariables(configuration.type);\n            configuration = await this.variableResolver.resolve(configuration, {\n                context: options.workspaceFolderUri ? new URI(options.workspaceFolderUri) : undefined,\n                configurationSection: 'launch',\n                commandIdVariables,\n                configuration\n            });\n\n            if (configuration) {\n                configuration = await this.resolveDebugConfigurationWithSubstitutedVariables(\n                    configuration,\n                    workspaceFolderUri\n                );\n            }\n        }\n\n        if (!configuration) {\n            return configuration;\n        }\n\n        const key = configuration.name + workspaceFolderUri;\n        const id = this.configurationIds.has(key) ? this.configurationIds.get(key)! + 1 : 0;\n        this.configurationIds.set(key, id);\n\n        return {\n            id,\n            ...options,\n            name: configuration.name,\n            configuration\n        };\n    }\n\n    protected async resolveDebugConfiguration(\n        configuration: DebugConfiguration,\n        workspaceFolderUri: string | undefined\n    ): Promise<DebugConfiguration | undefined | null> {\n        await this.fireWillResolveDebugConfiguration(configuration.type);\n        return this.debug.resolveDebugConfiguration(configuration, workspaceFolderUri);\n    }\n\n    protected async fireWillResolveDebugConfiguration(debugType: string): Promise<void> {\n        await WaitUntilEvent.fire(this.onWillResolveDebugConfigurationEmitter, { debugType });\n    }\n\n    protected async resolveDebugConfigurationWithSubstitutedVariables(\n        configuration: DebugConfiguration,\n        workspaceFolderUri: string | undefined\n    ): Promise<DebugConfiguration | undefined | null> {\n        return this.debug.resolveDebugConfigurationWithSubstitutedVariables(configuration, workspaceFolderUri);\n    }\n\n    protected async doStart(sessionId: string, options: DebugConfigurationSessionOptions): Promise<DebugSession> {\n        const parentSession = options.configuration.parentSessionId ? this._sessions.get(options.configuration.parentSessionId) : undefined;\n        const contrib = this.sessionContributionRegistry.get(options.configuration.type);\n        const sessionFactory = contrib ? contrib.debugSessionFactory() : this.debugSessionFactory;\n        const session = sessionFactory.get(sessionId, options, parentSession);\n        this._sessions.set(sessionId, session);\n\n        this.debugTypeKey.set(session.configuration.type);\n        this.onDidCreateDebugSessionEmitter.fire(session);\n\n        let state = DebugState.Inactive;\n        session.onDidChange(() => {\n            if (state !== session.state) {\n                state = session.state;\n                if (state === DebugState.Stopped) {\n                    this.onDidStopDebugSessionEmitter.fire(session);\n                }\n            }\n            this.updateCurrentSession(session);\n        });\n        session.onDidChangeBreakpoints(uri => this.fireDidChangeBreakpoints({ session, uri }));\n        session.on('terminated', async event => {\n            const restart = event.body && event.body.restart;\n            if (restart) {\n                // postDebugTask isn't run in case of auto restart as well as preLaunchTask\n                this.doRestart(session, !!restart);\n            } else {\n                await session.disconnect(false, () => this.debug.terminateDebugSession(session.id));\n                await this.runTask(session.options.workspaceFolderUri, session.configuration.postDebugTask);\n            }\n        });\n\n        session.on('exited', async event => {\n            await session.disconnect(false, () => this.debug.terminateDebugSession(session.id));\n        });\n\n        session.onDispose(() => this.cleanup(session));\n        session.start().then(() => this.onDidStartDebugSessionEmitter.fire(session)).catch(e => {\n            session.stop(false, () => {\n                this.debug.terminateDebugSession(session.id);\n            });\n        });\n        session.onDidCustomEvent(({ event, body }) =>\n            this.onDidReceiveDebugSessionCustomEventEmitter.fire({ event, body, session })\n        );\n        return session;\n    }\n\n    protected cleanup(session: DebugSession): void {\n        if (this.remove(session.id)) {\n            this.onDidDestroyDebugSessionEmitter.fire(session);\n        }\n    }\n\n    protected async doRestart(session: DebugSession, isRestart: boolean): Promise<DebugSession | undefined> {\n        if (session.canRestart()) {\n            await session.restart();\n            return session;\n        }\n\n        const { options, configuration } = session;\n        session.stop(isRestart, () => this.debug.terminateDebugSession(session.id));\n        configuration.__restart = isRestart;\n        return this.start(options);\n    }\n\n    async terminateSession(session?: DebugSession): Promise<void> {\n        if (!session) {\n            this.updateCurrentSession(this._currentSession);\n            session = this._currentSession;\n        }\n        if (session) {\n            if (session.options.compoundRoot) {\n                session.options.compoundRoot.stopSession();\n            } else if (session.parentSession && session.configuration.lifecycleManagedByParent) {\n                this.terminateSession(session.parentSession);\n            } else {\n                session.stop(false, () => this.debug.terminateDebugSession(session!.id));\n            }\n        }\n    }\n\n    async restartSession(session?: DebugSession): Promise<DebugSession | undefined> {\n        if (!session) {\n            this.updateCurrentSession(this._currentSession);\n            session = this._currentSession;\n        }\n\n        if (session) {\n            if (session.parentSession && session.configuration.lifecycleManagedByParent) {\n                return this.restartSession(session.parentSession);\n            } else {\n                return this.doRestart(session, true);\n            }\n        }\n    }\n\n    protected remove(sessionId: string): boolean {\n        const existed = this._sessions.delete(sessionId);\n        const { currentSession } = this;\n        if (currentSession && currentSession.id === sessionId) {\n            this.updateCurrentSession(undefined);\n        }\n        return existed;\n    }\n\n    getSession(sessionId: string): DebugSession | undefined {\n        return this._sessions.get(sessionId);\n    }\n\n    get sessions(): DebugSession[] {\n        return Array.from(this._sessions.values()).filter(session => session.state > DebugState.Inactive);\n    }\n\n    protected _currentSession: DebugSession | undefined;\n    protected readonly disposeOnCurrentSessionChanged = new DisposableCollection();\n    get currentSession(): DebugSession | undefined {\n        return this._currentSession;\n    }\n    set currentSession(current: DebugSession | undefined) {\n        if (this._currentSession === current) {\n            return;\n        }\n        this.disposeOnCurrentSessionChanged.dispose();\n        const previous = this.currentSession;\n        this._currentSession = current;\n        this.onDidChangeActiveDebugSessionEmitter.fire({ previous, current });\n        if (current) {\n            this.disposeOnCurrentSessionChanged.push(current.onDidChange(() => {\n                if (this.currentFrame === this.topFrame) {\n                    this.open();\n                }\n                this.fireDidChange(current);\n            }));\n            this.disposeOnCurrentSessionChanged.push(current.onDidFocusStackFrame(frame => this.onDidFocusStackFrameEmitter.fire({ session: current, frame })));\n        }\n        this.updateBreakpoints(previous, current);\n        this.open();\n        this.fireDidChange(current);\n    }\n    open(): void {\n        const { currentFrame } = this;\n        if (currentFrame) {\n            currentFrame.open();\n        }\n    }\n    protected updateBreakpoints(previous: DebugSession | undefined, current: DebugSession | undefined): void {\n        const affectedUri = new Set();\n        for (const session of [previous, current]) {\n            if (session) {\n                for (const uriString of session.breakpointUris) {\n                    if (!affectedUri.has(uriString)) {\n                        affectedUri.add(uriString);\n                        this.fireDidChangeBreakpoints({\n                            session: current,\n                            uri: new URI(uriString)\n                        });\n                    }\n                }\n            }\n        }\n    }\n    protected updateCurrentSession(session: DebugSession | undefined): void {\n        this.currentSession = session || this.sessions[0];\n    }\n\n    get currentThread(): DebugThread | undefined {\n        const session = this.currentSession;\n        return session && session.currentThread;\n    }\n\n    get state(): DebugState {\n        const session = this.currentSession;\n        return session ? session.state : DebugState.Inactive;\n    }\n\n    get currentFrame(): DebugStackFrame | undefined {\n        const { currentThread } = this;\n        return currentThread && currentThread.currentFrame;\n    }\n    get topFrame(): DebugStackFrame | undefined {\n        const { currentThread } = this;\n        return currentThread && currentThread.topFrame;\n    }\n\n    getFunctionBreakpoints(session: DebugSession | undefined = this.currentSession): DebugFunctionBreakpoint[] {\n        if (session && session.state > DebugState.Initializing) {\n            return session.getFunctionBreakpoints();\n        }\n        const { labelProvider, breakpoints, editorManager } = this;\n        return this.breakpoints.getFunctionBreakpoints().map(origin => new DebugFunctionBreakpoint(origin, { labelProvider, breakpoints, editorManager }));\n    }\n\n    getInstructionBreakpoints(session = this.currentSession): DebugInstructionBreakpoint[] {\n        if (session && session.state > DebugState.Initializing) {\n            return session.getInstructionBreakpoints();\n        }\n        const { labelProvider, breakpoints, editorManager } = this;\n        return this.breakpoints.getInstructionBreakpoints().map(origin => new DebugInstructionBreakpoint(origin, { labelProvider, breakpoints, editorManager }));\n    }\n\n    getBreakpoints(session?: DebugSession): DebugSourceBreakpoint[];\n    getBreakpoints(uri: URI, session?: DebugSession): DebugSourceBreakpoint[];\n    getBreakpoints(arg?: URI | DebugSession, arg2?: DebugSession): DebugSourceBreakpoint[] {\n        const uri = arg instanceof URI ? arg : undefined;\n        const session = arg instanceof DebugSession ? arg : arg2 instanceof DebugSession ? arg2 : this.currentSession;\n        if (session && session.state > DebugState.Initializing) {\n            return session.getSourceBreakpoints(uri);\n        }\n        const { labelProvider, breakpoints, editorManager } = this;\n        return this.breakpoints.findMarkers({ uri }).map(({ data }) => new DebugSourceBreakpoint(data, { labelProvider, breakpoints, editorManager }));\n    }\n\n    getLineBreakpoints(uri: URI, line: number): DebugSourceBreakpoint[] {\n        const session = this.currentSession;\n        if (session && session.state > DebugState.Initializing) {\n            return session.getSourceBreakpoints(uri).filter(breakpoint => breakpoint.line === line);\n        }\n        const { labelProvider, breakpoints, editorManager } = this;\n        return this.breakpoints.getLineBreakpoints(uri, line).map(origin =>\n            new DebugSourceBreakpoint(origin, { labelProvider, breakpoints, editorManager })\n        );\n    }\n\n    getInlineBreakpoint(uri: URI, line: number, column: number): DebugSourceBreakpoint | undefined {\n        const session = this.currentSession;\n        if (session && session.state > DebugState.Initializing) {\n            return session.getSourceBreakpoints(uri).filter(breakpoint => breakpoint.line === line && breakpoint.column === column)[0];\n        }\n        const origin = this.breakpoints.getInlineBreakpoint(uri, line, column);\n        const { labelProvider, breakpoints, editorManager } = this;\n        return origin && new DebugSourceBreakpoint(origin, { labelProvider, breakpoints, editorManager });\n    }\n\n    /**\n     * Runs the given tasks.\n     * @param taskName the task name to run, see [TaskNameResolver](#TaskNameResolver)\n     * @return true if it allowed to continue debugging otherwise it returns false\n     */\n    protected async runTask(workspaceFolderUri: string | undefined, taskName: string | TaskIdentifier | undefined, checkErrors?: boolean): Promise<boolean> {\n        if (!taskName) {\n            return true;\n        }\n\n        const taskInfo = await this.taskService.runWorkspaceTask(this.taskService.startUserAction(), workspaceFolderUri, taskName);\n        if (!checkErrors) {\n            return true;\n        }\n\n        if (!taskInfo) {\n            return this.doPostTaskAction(`Could not run the task '${taskName}'.`);\n        }\n\n        const getExitCodePromise: Promise<TaskEndedInfo> = this.taskService.getExitCode(taskInfo.taskId).then(result =>\n            ({ taskEndedType: TaskEndedTypes.TaskExited, value: result }));\n        const isBackgroundTaskEndedPromise: Promise<TaskEndedInfo> = this.taskService.isBackgroundTaskEnded(taskInfo.taskId).then(result =>\n            ({ taskEndedType: TaskEndedTypes.BackgroundTaskEnded, value: result }));\n\n        // After start running the task, we wait for the task process to exit and if it is a background task, we also wait for a feedback\n        // that a background task is active, as soon as one of the promises fulfills, we can continue and analyze the results.\n        const taskEndedInfo: TaskEndedInfo = await Promise.race([getExitCodePromise, isBackgroundTaskEndedPromise]);\n\n        if (taskEndedInfo.taskEndedType === TaskEndedTypes.BackgroundTaskEnded && taskEndedInfo.value) {\n            return true;\n        }\n        if (taskEndedInfo.taskEndedType === TaskEndedTypes.TaskExited && taskEndedInfo.value === 0) {\n            return true;\n        } else if (taskEndedInfo.taskEndedType === TaskEndedTypes.TaskExited && taskEndedInfo.value !== undefined) {\n            return this.doPostTaskAction(`Task '${taskName}' terminated with exit code ${taskEndedInfo.value}.`);\n        } else {\n            const signal = await this.taskService.getTerminateSignal(taskInfo.taskId);\n            if (signal !== undefined) {\n                return this.doPostTaskAction(`Task '${taskName}' terminated by signal ${signal}.`);\n            } else {\n                return this.doPostTaskAction(`Task '${taskName}' terminated for unknown reason.`);\n            }\n        }\n    }\n\n    protected async doPostTaskAction(errorMessage: string): Promise<boolean> {\n        const actions = ['Open launch.json', 'Cancel', 'Configure Task', 'Debug Anyway'];\n        const result = await this.messageService.error(errorMessage, ...actions);\n        switch (result) {\n            case actions[0]: // open launch.json\n                this.debugConfigurationManager.openConfiguration();\n                return false;\n            case actions[1]: // cancel\n                return false;\n            case actions[2]: // configure tasks\n                this.quickOpenTask.configure();\n                return false;\n            default: // continue debugging\n                return true;\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Emitter } from '@theia/core';\nimport { DebugConfiguration } from '../common/debug-common';\nimport { DebugCompound } from '../common/debug-compound';\n\nexport class DebugCompoundRoot {\n    private stopped = false;\n    private stopEmitter = new Emitter<void>();\n    onDidSessionStop = this.stopEmitter.event;\n\n    stopSession(): void {\n        if (!this.stopped) { // avoid sending extraneous terminate events\n            this.stopped = true;\n            this.stopEmitter.fire();\n        }\n    }\n}\n\nexport interface DebugSessionOptionsBase {\n    workspaceFolderUri?: string,\n}\n\nexport interface DebugConfigurationSessionOptions extends DebugSessionOptionsBase {\n    name: string; // derived from the configuration\n    configuration: DebugConfiguration;\n    compound?: never;\n    compoundRoot?: DebugCompoundRoot;\n    providerType?: string // Applicable to dynamic configurations\n}\n\nexport type DynamicDebugConfigurationSessionOptions = DebugConfigurationSessionOptions & { providerType: string };\n\nexport interface DebugCompoundSessionOptions extends DebugSessionOptionsBase {\n    name: string; // derived from the compound\n    configuration?: never;\n    compound: DebugCompound;\n    noDebug?: boolean,\n}\n\nexport type DebugSessionOptions = DebugConfigurationSessionOptions | DebugCompoundSessionOptions;\n\nexport namespace DebugSessionOptions {\n    export function isConfiguration(options?: DebugSessionOptions): options is DebugConfigurationSessionOptions {\n        return !!options && 'configuration' in options && !!options.configuration;\n    }\n\n    export function isDynamic(options?: DebugSessionOptions): options is DynamicDebugConfigurationSessionOptions {\n        return isConfiguration(options) && 'providerType' in options && !!options.providerType;\n    }\n\n    export function isCompound(options?: DebugSessionOptions): options is DebugCompoundSessionOptions {\n        return !!options && 'compound' in options && !!options.compound;\n    }\n}\n\n/**\n * Flat and partial version of a debug session options usable to find the options later in the manager.\n * @deprecated Not needed anymore, the recommended way is to serialize/deserialize the options directly using `JSON.stringify` and `JSON.parse`.\n */\nexport type DebugSessionOptionsData = DebugSessionOptionsBase & (DebugConfiguration | DebugCompound);\n\nexport type InternalDebugSessionOptions = DebugSessionOptions & { id: number };\n\nexport namespace InternalDebugSessionOptions {\n\n    const SEPARATOR = '__CONF__';\n    const SEPARATOR_CONFIGS = '__COMP__';\n\n    export function is(options: DebugSessionOptions): options is InternalDebugSessionOptions {\n        return 'id' in options;\n    }\n\n    /** @deprecated Please use `JSON.stringify` to serialize the options. */\n    export function toValue(options: DebugSessionOptions): string {\n        if (DebugSessionOptions.isCompound(options)) {\n            return options.compound.name + SEPARATOR +\n                options.workspaceFolderUri + SEPARATOR +\n                options.compound?.configurations.join(SEPARATOR_CONFIGS);\n        }\n        return options.configuration.name + SEPARATOR +\n            options.configuration.type + SEPARATOR +\n            options.configuration.request + SEPARATOR +\n            options.workspaceFolderUri + SEPARATOR +\n            options.providerType;\n    }\n\n    /** @deprecated Please use `JSON.parse` to restore previously serialized debug session options. */\n    // eslint-disable-next-line deprecation/deprecation\n    export function parseValue(value: string): DebugSessionOptionsData {\n        const split = value.split(SEPARATOR);\n        if (split.length === 5) {\n            return { name: split[0], type: split[1], request: split[2], workspaceFolderUri: split[3], providerType: split[4] };\n        }\n        if (split.length === 3) {\n            return { name: split[0], workspaceFolderUri: split[1], configurations: split[2].split(SEPARATOR_CONFIGS) };\n        }\n        throw new Error('Unexpected argument, the argument is expected to have been generated by the \\'toValue\\' function');\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as React from '@theia/core/shared/react';\nimport { LabelProvider } from '@theia/core/lib/browser';\nimport { DebugProtocol } from '@vscode/debugprotocol';\nimport { Emitter, Event, DisposableCollection, Disposable, MessageClient, MessageType, Mutable, ContributionProvider } from '@theia/core/lib/common';\nimport { TerminalService } from '@theia/terminal/lib/browser/base/terminal-service';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport { CompositeTreeElement } from '@theia/core/lib/browser/source-tree';\nimport { DebugSessionConnection, DebugRequestTypes, DebugEventTypes } from './debug-session-connection';\nimport { DebugThread, StoppedDetails, DebugThreadData } from './model/debug-thread';\nimport { DebugScope } from './console/debug-console-items';\nimport { DebugStackFrame } from './model/debug-stack-frame';\nimport { DebugSource } from './model/debug-source';\nimport { DebugBreakpoint, DebugBreakpointOptions } from './model/debug-breakpoint';\nimport { DebugSourceBreakpoint } from './model/debug-source-breakpoint';\nimport debounce = require('p-debounce');\nimport URI from '@theia/core/lib/common/uri';\nimport { BreakpointManager } from './breakpoint/breakpoint-manager';\nimport { DebugConfigurationSessionOptions, InternalDebugSessionOptions } from './debug-session-options';\nimport { DebugConfiguration, DebugConsoleMode } from '../common/debug-common';\nimport { SourceBreakpoint, ExceptionBreakpoint } from './breakpoint/breakpoint-marker';\nimport { TerminalWidgetOptions, TerminalWidget } from '@theia/terminal/lib/browser/base/terminal-widget';\nimport { DebugFunctionBreakpoint } from './model/debug-function-breakpoint';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { DebugContribution } from './debug-contribution';\nimport { Deferred, waitForEvent } from '@theia/core/lib/common/promise-util';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { DebugInstructionBreakpoint } from './model/debug-instruction-breakpoint';\nimport { nls } from '@theia/core';\n\nexport enum DebugState {\n    Inactive,\n    Initializing,\n    Running,\n    Stopped\n}\n/**\n * The mapped string values must not change as they are used for the `debugState` when context closure.\n * For more details see the `Debugger contexts` section of the [official doc](https://code.visualstudio.com/api/references/when-clause-contexts#available-contexts).\n */\nexport function debugStateContextValue(state: DebugState): string {\n    switch (state) {\n        case DebugState.Initializing: return 'initializing';\n        case DebugState.Stopped: return 'stopped';\n        case DebugState.Running: return 'running';\n        default: return 'inactive';\n    }\n}\n\n// FIXME: make injectable to allow easily inject services\nexport class DebugSession implements CompositeTreeElement {\n    protected readonly deferredOnDidConfigureCapabilities = new Deferred<void>();\n\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n    readonly onDidChange: Event<void> = this.onDidChangeEmitter.event;\n    protected fireDidChange(): void {\n        this.onDidChangeEmitter.fire(undefined);\n    }\n    protected readonly onDidFocusStackFrameEmitter = new Emitter<DebugStackFrame | undefined>();\n    get onDidFocusStackFrame(): Event<DebugStackFrame | undefined> {\n        return this.onDidFocusStackFrameEmitter.event;\n    }\n\n    protected readonly onDidChangeBreakpointsEmitter = new Emitter<URI>();\n    readonly onDidChangeBreakpoints: Event<URI> = this.onDidChangeBreakpointsEmitter.event;\n    protected fireDidChangeBreakpoints(uri: URI): void {\n        this.onDidChangeBreakpointsEmitter.fire(uri);\n    }\n\n    protected readonly childSessions = new Map<string, DebugSession>();\n    protected readonly toDispose = new DisposableCollection();\n\n    protected isStopping: boolean = false;\n\n    constructor(\n        readonly id: string,\n        readonly options: DebugConfigurationSessionOptions,\n        readonly parentSession: DebugSession | undefined,\n        protected readonly connection: DebugSessionConnection,\n        protected readonly terminalServer: TerminalService,\n        protected readonly editorManager: EditorManager,\n        protected readonly breakpoints: BreakpointManager,\n        protected readonly labelProvider: LabelProvider,\n        protected readonly messages: MessageClient,\n        protected readonly fileService: FileService,\n        protected readonly debugContributionProvider: ContributionProvider<DebugContribution>,\n        protected readonly workspaceService: WorkspaceService,\n        /**\n         * Number of millis after a `stop` request times out. It's 5 seconds by default.\n         */\n        protected readonly stopTimeout = 5_000,\n    ) {\n        this.connection.onRequest('runInTerminal', (request: DebugProtocol.RunInTerminalRequest) => this.runInTerminal(request));\n        this.connection.onDidClose(() => {\n            this.toDispose.dispose();\n        });\n        this.registerDebugContributions(options.configuration.type, this.connection);\n\n        if (parentSession) {\n            parentSession.childSessions.set(id, this);\n            this.toDispose.push(Disposable.create(() => {\n                this.parentSession?.childSessions?.delete(id);\n            }));\n        }\n        this.connection.onDidClose(() => this.toDispose.dispose());\n        this.toDispose.pushAll([\n            this.onDidChangeEmitter,\n            this.onDidChangeBreakpointsEmitter,\n            Disposable.create(() => {\n                this.clearBreakpoints();\n                this.doUpdateThreads([]);\n            }),\n            this.connection,\n            this.connection.on('initialized', () => this.configure()),\n            this.connection.on('breakpoint', ({ body }) => this.updateBreakpoint(body)),\n            this.connection.on('continued', e => this.handleContinued(e)),\n            this.connection.on('stopped', e => this.handleStopped(e)),\n            this.connection.on('thread', e => this.handleThread(e)),\n            this.connection.on('capabilities', event => this.updateCapabilities(event.body.capabilities)),\n            this.breakpoints.onDidChangeMarkers(uri => this.updateBreakpoints({ uri, sourceModified: true }))\n        ]);\n    }\n\n    get onDispose(): Event<void> {\n        return this.toDispose.onDispose;\n    }\n\n    get configuration(): DebugConfiguration {\n        return this.options.configuration;\n    }\n\n    protected _capabilities: DebugProtocol.Capabilities = {};\n    get capabilities(): DebugProtocol.Capabilities {\n        return this._capabilities;\n    }\n\n    protected readonly sources = new Map<string, DebugSource>();\n    getSource(raw: DebugProtocol.Source): DebugSource {\n        const uri = DebugSource.toUri(raw).toString();\n        const source = this.sources.get(uri) || new DebugSource(this, this.editorManager, this.labelProvider);\n        source.update({ raw });\n        this.sources.set(uri, source);\n        return source;\n    }\n\n    getSourceForUri(uri: URI): DebugSource | undefined {\n        return this.sources.get(uri.toString());\n    }\n\n    async toSource(uri: URI): Promise<DebugSource> {\n        const source = this.getSourceForUri(uri);\n        if (source) {\n            return source;\n        }\n\n        return this.getSource(await this.toDebugSource(uri));\n    }\n\n    async toDebugSource(uri: URI): Promise<DebugProtocol.Source> {\n        if (uri.scheme === DebugSource.SCHEME) {\n            return {\n                name: uri.path.toString(),\n                sourceReference: Number(uri.query)\n            };\n        }\n        const name = uri.displayName;\n        let path;\n        const underlying = await this.fileService.toUnderlyingResource(uri);\n        if (underlying.scheme === 'file') {\n            path = await this.fileService.fsPath(underlying);\n        } else {\n            path = uri.toString();\n        }\n        return { name, path };\n    }\n\n    protected _threads = new Map<number, DebugThread>();\n    get threads(): IterableIterator<DebugThread> {\n        return this._threads.values();\n    }\n\n    get threadCount(): number {\n        return this._threads.size;\n    }\n\n    *getThreads(filter: (thread: DebugThread) => boolean): IterableIterator<DebugThread> {\n        for (const thread of this.threads) {\n            if (filter(thread)) {\n                yield thread;\n            }\n        }\n    }\n\n    get runningThreads(): IterableIterator<DebugThread> {\n        return this.getThreads(thread => !thread.stopped);\n    }\n\n    get stoppedThreads(): IterableIterator<DebugThread> {\n        return this.getThreads(thread => thread.stopped);\n    }\n\n    async pauseAll(): Promise<void> {\n        const promises: Promise<void>[] = [];\n        for (const thread of this.runningThreads) {\n            promises.push((async () => {\n                try {\n                    await thread.pause();\n                } catch (e) {\n                    console.error('pauseAll failed:', e);\n                }\n            })());\n        }\n        await Promise.all(promises);\n    }\n\n    async continueAll(): Promise<void> {\n        const promises: Promise<void>[] = [];\n        for (const thread of this.stoppedThreads) {\n            promises.push((async () => {\n                try {\n                    await thread.continue();\n                } catch (e) {\n                    console.error('continueAll failed:', e);\n                }\n            })());\n        }\n        await Promise.all(promises);\n    }\n\n    get currentFrame(): DebugStackFrame | undefined {\n        return this.currentThread && this.currentThread.currentFrame;\n    }\n\n    protected _currentThread: DebugThread | undefined;\n    protected readonly toDisposeOnCurrentThread = new DisposableCollection();\n    get currentThread(): DebugThread | undefined {\n        return this._currentThread;\n    }\n    set currentThread(thread: DebugThread | undefined) {\n        this.toDisposeOnCurrentThread.dispose();\n        this._currentThread = thread;\n        this.fireDidChange();\n        if (thread) {\n            this.toDisposeOnCurrentThread.push(thread.onDidChanged(() => this.fireDidChange()));\n            this.toDisposeOnCurrentThread.push(thread.onDidFocusStackFrame(frame => this.onDidFocusStackFrameEmitter.fire(frame)));\n\n            // If this thread is missing stack frame information, then load that.\n            this.updateFrames();\n        }\n    }\n\n    get state(): DebugState {\n        if (this.connection.disposed) {\n            return DebugState.Inactive;\n        }\n        if (!this.initialized) {\n            return DebugState.Initializing;\n        }\n        const thread = this.currentThread;\n        if (thread) {\n            return thread.stopped ? DebugState.Stopped : DebugState.Running;\n        }\n        return !!this.stoppedThreads.next().value ? DebugState.Stopped : DebugState.Running;\n    }\n\n    async getScopes(): Promise<DebugScope[]> {\n        const { currentFrame } = this;\n        return currentFrame ? currentFrame.getScopes() : [];\n    }\n\n    async start(): Promise<void> {\n        await this.initialize();\n        await this.launchOrAttach();\n    }\n\n    protected async initialize(): Promise<void> {\n        try {\n            const response = await this.connection.sendRequest('initialize', {\n                clientID: 'Theia',\n                clientName: 'Theia IDE',\n                adapterID: this.configuration.type,\n                locale: 'en-US',\n                linesStartAt1: true,\n                columnsStartAt1: true,\n                pathFormat: 'path',\n                supportsVariableType: false,\n                supportsVariablePaging: false,\n                supportsRunInTerminalRequest: true\n            });\n            this.updateCapabilities(response?.body || {});\n            this.didReceiveCapabilities.resolve();\n        } catch (err) {\n            this.didReceiveCapabilities.reject(err);\n            throw err;\n        }\n    }\n\n    protected async launchOrAttach(): Promise<void> {\n        try {\n            await this.sendRequest((this.configuration.request as keyof DebugRequestTypes), this.configuration);\n        } catch (reason) {\n            this.messages.showMessage({\n                type: MessageType.Error,\n                text: reason.message || 'Debug session initialization failed. See console for details.',\n                options: {\n                    timeout: 10000\n                }\n            });\n            throw reason;\n        }\n    }\n\n    /**\n     * The `send('initialize')` request could resolve later than `on('initialized')` emits the event.\n     * Hence, the `configure` would use the empty object `capabilities`.\n     * Using the empty `capabilities` could result in missing exception breakpoint filters, as\n     * always `capabilities.exceptionBreakpointFilters` is falsy. This deferred promise works\n     * around this timing issue. https://github.com/eclipse-theia/theia/issues/11886\n     */\n    protected didReceiveCapabilities = new Deferred<void>();\n    protected initialized = false;\n    protected async configure(): Promise<void> {\n        await this.didReceiveCapabilities.promise;\n        if (this.capabilities.exceptionBreakpointFilters) {\n            const exceptionBreakpoints = [];\n            for (const filter of this.capabilities.exceptionBreakpointFilters) {\n                const origin = this.breakpoints.getExceptionBreakpoint(filter.filter);\n                exceptionBreakpoints.push(ExceptionBreakpoint.create(filter, origin));\n            }\n            this.breakpoints.setExceptionBreakpoints(exceptionBreakpoints);\n        }\n        await this.updateBreakpoints({ sourceModified: false });\n        if (this.capabilities.supportsConfigurationDoneRequest) {\n            await this.sendRequest('configurationDone', {});\n        }\n        this.initialized = true;\n        await this.updateThreads(undefined);\n    }\n\n    canTerminate(): boolean {\n        return !!this.capabilities.supportsTerminateRequest;\n    }\n\n    canRestart(): boolean {\n        return !!this.capabilities.supportsRestartRequest;\n    }\n\n    async restart(): Promise<void> {\n        if (this.canRestart()) {\n            await this.sendRequest('restart', {});\n        }\n    }\n\n    async stop(isRestart: boolean, callback: () => void): Promise<void> {\n        if (!this.isStopping) {\n            this.isStopping = true;\n            if (this.canTerminate()) {\n                const terminated = this.waitFor('terminated', this.stopTimeout);\n                try {\n                    await this.connection.sendRequest('terminate', { restart: isRestart }, this.stopTimeout);\n                    await terminated;\n                } catch (e) {\n                    this.handleTerminateError(e);\n                }\n            } else {\n                const terminateDebuggee = this.initialized && this.capabilities.supportTerminateDebuggee;\n                try {\n                    await this.sendRequest('disconnect', { restart: isRestart, terminateDebuggee }, this.stopTimeout);\n                } catch (e) {\n                    this.handleDisconnectError(e);\n                }\n            }\n            callback();\n        }\n    }\n\n    /**\n     * Invoked when sending the `terminate` request to the debugger is rejected or timed out.\n     */\n    protected handleTerminateError(err: unknown): void {\n        console.error('Did not receive terminated event in time', err);\n    }\n\n    /**\n     * Invoked when sending the `disconnect` request to the debugger is rejected or timed out.\n     */\n    protected handleDisconnectError(err: unknown): void {\n        console.error('Error on disconnect', err);\n    }\n\n    async disconnect(isRestart: boolean, callback: () => void): Promise<void> {\n        if (!this.isStopping) {\n            this.isStopping = true;\n            await this.sendRequest('disconnect', { restart: isRestart });\n            callback();\n        }\n    }\n\n    async completions(text: string, column: number, line: number): Promise<DebugProtocol.CompletionItem[]> {\n        const frameId = this.currentFrame && this.currentFrame.raw.id;\n        const response = await this.sendRequest('completions', { frameId, text, column, line });\n        return response.body.targets;\n    }\n\n    async evaluate(expression: string, context?: string): Promise<DebugProtocol.EvaluateResponse['body']> {\n        const frameId = this.currentFrame && this.currentFrame.raw.id;\n        const response = await this.sendRequest('evaluate', { expression, frameId, context });\n        return response.body;\n    }\n\n    sendRequest<K extends keyof DebugRequestTypes>(command: K, args: DebugRequestTypes[K][0], timeout?: number): Promise<DebugRequestTypes[K][1]> {\n        return this.connection.sendRequest(command, args, timeout);\n    }\n\n    sendCustomRequest<T extends DebugProtocol.Response>(command: string, args?: any): Promise<T> {\n        return this.connection.sendCustomRequest(command, args);\n    }\n\n    on<K extends keyof DebugEventTypes>(kind: K, listener: (e: DebugEventTypes[K]) => any): Disposable {\n        return this.connection.on(kind, listener);\n    }\n\n    waitFor<K extends keyof DebugEventTypes>(kind: K, ms: number): Promise<void> {\n        return waitForEvent(this.connection.onEvent(kind), ms).then();\n    }\n\n    get onDidCustomEvent(): Event<DebugProtocol.Event> {\n        return this.connection.onDidCustomEvent;\n    }\n\n    protected async runInTerminal({ arguments: { title, cwd, args, env } }: DebugProtocol.RunInTerminalRequest): Promise<DebugProtocol.RunInTerminalResponse['body']> {\n        const terminal = await this.doCreateTerminal({ title, cwd, env, useServerTitle: false });\n        const { processId } = terminal;\n        await terminal.executeCommand({ cwd, args, env });\n        return { processId: await processId };\n    }\n\n    protected async doCreateTerminal(options: TerminalWidgetOptions): Promise<TerminalWidget> {\n        let terminal = undefined;\n        for (const t of this.terminalServer.all) {\n            if ((t.title.label === options.title || t.title.caption === options.title) && (await t.hasChildProcesses()) === false) {\n                terminal = t;\n                break;\n            }\n        }\n\n        if (!terminal) {\n            terminal = await this.terminalServer.newTerminal(options);\n            await terminal.start();\n        }\n        this.terminalServer.open(terminal);\n        return terminal;\n    }\n\n    protected clearThreads(): void {\n        for (const thread of this.threads) {\n            thread.clear();\n        }\n        this.updateCurrentThread();\n    }\n\n    protected clearThread(threadId: number): void {\n        const thread = this._threads.get(threadId);\n        if (thread) {\n            thread.clear();\n        }\n        this.updateCurrentThread();\n    }\n\n    protected readonly scheduleUpdateThreads = debounce(() => this.updateThreads(undefined), 100);\n    protected pendingThreads = Promise.resolve();\n\n    updateThreads(stoppedDetails: StoppedDetails | undefined): Promise<void> {\n        return this.pendingThreads = this.pendingThreads.then(async () => {\n            try {\n                const response = await this.sendRequest('threads', {});\n                // java debugger returns an empty body sometimes\n                const threads = response && response.body && response.body.threads || [];\n                this.doUpdateThreads(threads, stoppedDetails);\n            } catch (e) {\n                console.error('updateThreads failed:', e);\n            }\n        });\n    }\n\n    protected doUpdateThreads(threads: DebugProtocol.Thread[], stoppedDetails?: StoppedDetails): void {\n        const existing = this._threads;\n        this._threads = new Map();\n        for (const raw of threads) {\n            const id = raw.id;\n            const thread = existing.get(id) || new DebugThread(this);\n            this._threads.set(id, thread);\n            const data: Partial<Mutable<DebugThreadData>> = { raw };\n            if (stoppedDetails) {\n                if (stoppedDetails.threadId === id) {\n                    data.stoppedDetails = stoppedDetails;\n                } else if (stoppedDetails.allThreadsStopped) {\n                    data.stoppedDetails = {\n                        // When a debug adapter notifies us that all threads are stopped,\n                        // we do not know why the others are stopped, so we should default\n                        // to something generic.\n                        reason: '',\n                    };\n                }\n            }\n            thread.update(data);\n        }\n        this.updateCurrentThread(stoppedDetails);\n    }\n\n    protected updateCurrentThread(stoppedDetails?: StoppedDetails): void {\n        const { currentThread } = this;\n        let threadId = currentThread && currentThread.raw.id;\n        if (stoppedDetails && !stoppedDetails.preserveFocusHint && !!stoppedDetails.threadId) {\n            threadId = stoppedDetails.threadId;\n        }\n        this.currentThread = typeof threadId === 'number' && this._threads.get(threadId)\n            || this._threads.values().next().value;\n    }\n\n    protected async updateFrames(): Promise<void> {\n        const thread = this._currentThread;\n        if (!thread || thread.pendingFrameCount || thread.frameCount) {\n            return;\n        }\n        if (this.capabilities.supportsDelayedStackTraceLoading) {\n            await thread.fetchFrames(1);\n            await thread.fetchFrames(19);\n        } else {\n            await thread.fetchFrames();\n        }\n    }\n\n    protected updateCapabilities(capabilities: DebugProtocol.Capabilities): void {\n        Object.assign(this._capabilities, capabilities);\n        this.deferredOnDidConfigureCapabilities.resolve();\n    }\n\n    protected readonly _breakpoints = new Map<string, DebugBreakpoint[]>();\n    get breakpointUris(): IterableIterator<string> {\n        return this._breakpoints.keys();\n    }\n\n    getSourceBreakpoints(uri?: URI): DebugSourceBreakpoint[] {\n        const breakpoints = [];\n        for (const breakpoint of this.getBreakpoints(uri)) {\n            if (breakpoint instanceof DebugSourceBreakpoint) {\n                breakpoints.push(breakpoint);\n            }\n        }\n        return breakpoints;\n    }\n\n    getFunctionBreakpoints(): DebugFunctionBreakpoint[] {\n        return this.getBreakpoints(BreakpointManager.FUNCTION_URI).filter((breakpoint): breakpoint is DebugFunctionBreakpoint => breakpoint instanceof DebugFunctionBreakpoint);\n    }\n\n    getInstructionBreakpoints(): DebugInstructionBreakpoint[] {\n        if (this.capabilities.supportsInstructionBreakpoints) {\n            return this.getBreakpoints(BreakpointManager.INSTRUCTION_URI)\n                .filter((breakpoint): breakpoint is DebugInstructionBreakpoint => breakpoint instanceof DebugInstructionBreakpoint);\n        }\n        return this.breakpoints.getInstructionBreakpoints().map(origin => new DebugInstructionBreakpoint(origin, this.asDebugBreakpointOptions()));\n    }\n\n    getBreakpoints(uri?: URI): DebugBreakpoint[] {\n        if (uri) {\n            return this._breakpoints.get(uri.toString()) || [];\n        }\n        const result = [];\n        for (const breakpoints of this._breakpoints.values()) {\n            result.push(...breakpoints);\n        }\n        return result;\n    }\n\n    getBreakpoint(id: string): DebugBreakpoint | undefined {\n        for (const breakpoints of this._breakpoints.values()) {\n            const breakpoint = breakpoints.find(b => b.id === id);\n            if (breakpoint) {\n                return breakpoint;\n            }\n\n        }\n        return undefined;\n    }\n\n    protected clearBreakpoints(): void {\n        const uris = [...this._breakpoints.keys()];\n        this._breakpoints.clear();\n        for (const uri of uris) {\n            this.fireDidChangeBreakpoints(new URI(uri));\n        }\n    }\n\n    protected updatingBreakpoints = false;\n\n    protected updateBreakpoint(body: DebugProtocol.BreakpointEvent['body']): void {\n        this.updatingBreakpoints = true;\n        try {\n            const raw = body.breakpoint;\n            if (body.reason === 'new') {\n                if (raw.source && typeof raw.line === 'number') {\n                    const uri = DebugSource.toUri(raw.source);\n                    const origin = SourceBreakpoint.create(uri, { line: raw.line, column: raw.column });\n                    if (this.breakpoints.addBreakpoint(origin)) {\n                        const breakpoints = this.getSourceBreakpoints(uri);\n                        const breakpoint = new DebugSourceBreakpoint(origin, this.asDebugBreakpointOptions());\n                        breakpoint.update({ raw });\n                        breakpoints.push(breakpoint);\n                        this.setSourceBreakpoints(uri, breakpoints);\n                    }\n                }\n            }\n            if (body.reason === 'removed' && raw.id) {\n                const toRemove = this.findBreakpoint(b => b.idFromAdapter === raw.id);\n                if (toRemove) {\n                    toRemove.remove();\n                    const breakpoints = this.getBreakpoints(toRemove.uri);\n                    const index = breakpoints.indexOf(toRemove);\n                    if (index !== -1) {\n                        breakpoints.splice(index, 1);\n                        this.setBreakpoints(toRemove.uri, breakpoints);\n                    }\n                }\n            }\n            if (body.reason === 'changed' && raw.id) {\n                const toUpdate = this.findBreakpoint(b => b.idFromAdapter === raw.id);\n                if (toUpdate) {\n                    toUpdate.update({ raw });\n                    if (toUpdate instanceof DebugSourceBreakpoint) {\n                        const sourceBreakpoints = this.getSourceBreakpoints(toUpdate.uri);\n                        // in order to dedup again if a debugger converted line breakpoint to inline breakpoint\n                        // i.e. assigned a column to a line breakpoint\n                        this.setSourceBreakpoints(toUpdate.uri, sourceBreakpoints);\n                    } else {\n                        this.fireDidChangeBreakpoints(toUpdate.uri);\n                    }\n                }\n            }\n        } finally {\n            this.updatingBreakpoints = false;\n        }\n    }\n    protected findBreakpoint(match: (breakpoint: DebugBreakpoint) => boolean): DebugBreakpoint | undefined {\n        for (const [, breakpoints] of this._breakpoints) {\n            for (const breakpoint of breakpoints) {\n                if (match(breakpoint)) {\n                    return breakpoint;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    protected async updateBreakpoints(options: {\n        uri?: URI,\n        sourceModified: boolean\n    }): Promise<void> {\n        if (this.updatingBreakpoints) {\n            return;\n        }\n        const { uri, sourceModified } = options;\n        await this.deferredOnDidConfigureCapabilities.promise;\n        for (const affectedUri of this.getAffectedUris(uri)) {\n            if (affectedUri.toString() === BreakpointManager.EXCEPTION_URI.toString()) {\n                await this.sendExceptionBreakpoints();\n            } else if (affectedUri.toString() === BreakpointManager.FUNCTION_URI.toString()) {\n                await this.sendFunctionBreakpoints(affectedUri);\n            } else if (affectedUri.toString() === BreakpointManager.INSTRUCTION_URI.toString()) {\n                await this.sendInstructionBreakpoints();\n            } else {\n                await this.sendSourceBreakpoints(affectedUri, sourceModified);\n            }\n        }\n    }\n\n    protected async sendExceptionBreakpoints(): Promise<void> {\n        const filters: string[] = [];\n        const filterOptions: DebugProtocol.ExceptionFilterOptions[] | undefined = this.capabilities.supportsExceptionFilterOptions ? [] : undefined;\n        for (const breakpoint of this.breakpoints.getExceptionBreakpoints()) {\n            if (breakpoint.enabled) {\n                if (filterOptions) {\n                    filterOptions.push({\n                        filterId: breakpoint.raw.filter,\n                        condition: breakpoint.condition\n                    });\n                } else {\n                    filters.push(breakpoint.raw.filter);\n                }\n            }\n        }\n        await this.sendRequest('setExceptionBreakpoints', { filters, filterOptions });\n    }\n\n    protected async sendFunctionBreakpoints(affectedUri: URI): Promise<void> {\n        const all = this.breakpoints.getFunctionBreakpoints().map(origin =>\n            new DebugFunctionBreakpoint(origin, this.asDebugBreakpointOptions())\n        );\n        const enabled = all.filter(b => b.enabled);\n        if (this.capabilities.supportsFunctionBreakpoints) {\n            try {\n                const response = await this.sendRequest('setFunctionBreakpoints', {\n                    breakpoints: enabled.map(b => b.origin.raw)\n                });\n                // Apparently, `body` and `breakpoints` can be missing.\n                // https://github.com/eclipse-theia/theia/issues/11885\n                // https://github.com/microsoft/vscode/blob/80004351ccf0884b58359f7c8c801c91bb827d83/src/vs/workbench/contrib/debug/browser/debugSession.ts#L448-L449\n                if (response && response.body) {\n                    response.body.breakpoints.forEach((raw, index) => {\n                        // node debug adapter returns more breakpoints sometimes\n                        if (enabled[index]) {\n                            enabled[index].update({ raw });\n                        }\n                    });\n                }\n            } catch (error) {\n                // could be error or promise rejection of DebugProtocol.SetFunctionBreakpoints\n                if (error instanceof Error) {\n                    console.error(`Error setting breakpoints: ${error.message}`);\n                } else {\n                    // handle adapters that send failed DebugProtocol.SetFunctionBreakpoints for invalid breakpoints\n                    const genericMessage: string = 'Function breakpoint not valid for current debug session';\n                    const message: string = error.message ? `${error.message}` : genericMessage;\n                    console.warn(`Could not handle function breakpoints: ${message}, disabling...`);\n                    enabled.forEach(b => b.update({\n                        raw: {\n                            verified: false,\n                            message\n                        }\n                    }));\n                }\n            }\n        }\n        this.setBreakpoints(affectedUri, all);\n    }\n\n    protected async sendSourceBreakpoints(affectedUri: URI, sourceModified?: boolean): Promise<void> {\n        const source = await this.toSource(affectedUri);\n        const all = this.breakpoints.findMarkers({ uri: affectedUri }).map(({ data }) =>\n            new DebugSourceBreakpoint(data, this.asDebugBreakpointOptions())\n        );\n        const enabled = all.filter(b => b.enabled);\n        try {\n            const breakpoints = enabled.map(({ origin }) => origin.raw);\n            const response = await this.sendRequest('setBreakpoints', {\n                source: source.raw,\n                sourceModified,\n                breakpoints,\n                lines: breakpoints.map(({ line }) => line)\n            });\n            response.body.breakpoints.forEach((raw, index) => {\n                // node debug adapter returns more breakpoints sometimes\n                if (enabled[index]) {\n                    enabled[index].update({ raw });\n                }\n            });\n        } catch (error) {\n            // could be error or promise rejection of DebugProtocol.SetBreakpointsResponse\n            if (error instanceof Error) {\n                console.error(`Error setting breakpoints: ${error.message}`);\n            } else {\n                // handle adapters that send failed DebugProtocol.SetBreakpointsResponse for invalid breakpoints\n                const genericMessage: string = 'Breakpoint not valid for current debug session';\n                const message: string = error.message ? `${error.message}` : genericMessage;\n                console.warn(`Could not handle breakpoints for ${affectedUri}: ${message}, disabling...`);\n                enabled.forEach(b => b.update({\n                    raw: {\n                        verified: false,\n                        message\n                    }\n                }));\n            }\n        }\n        this.setSourceBreakpoints(affectedUri, all);\n    }\n\n    protected async sendInstructionBreakpoints(): Promise<void> {\n        if (!this.capabilities.supportsInstructionBreakpoints) {\n            return;\n        }\n        const all = this.breakpoints.getInstructionBreakpoints().map(breakpoint => new DebugInstructionBreakpoint(breakpoint, this.asDebugBreakpointOptions()));\n        const enabled = all.filter(breakpoint => breakpoint.enabled);\n        try {\n            const response = await this.sendRequest('setInstructionBreakpoints', {\n                breakpoints: enabled.map(renderable => renderable.origin),\n            });\n            response.body.breakpoints.forEach((raw, index) => enabled[index]?.update({ raw }));\n        } catch {\n            enabled.forEach(breakpoint => breakpoint.update({ raw: { verified: false } }));\n        }\n        this.setBreakpoints(BreakpointManager.INSTRUCTION_URI, all);\n    }\n\n    protected setBreakpoints(uri: URI, breakpoints: DebugBreakpoint[]): void {\n        this._breakpoints.set(uri.toString(), breakpoints);\n        this.fireDidChangeBreakpoints(uri);\n    }\n\n    protected setSourceBreakpoints(uri: URI, breakpoints: DebugSourceBreakpoint[]): void {\n        const distinct = this.dedupSourceBreakpoints(breakpoints);\n        this.setBreakpoints(uri, distinct);\n    }\n\n    protected dedupSourceBreakpoints(all: DebugSourceBreakpoint[]): DebugSourceBreakpoint[] {\n        const positions = new Map<string, DebugSourceBreakpoint>();\n        for (const breakpoint of all) {\n            let primary = positions.get(breakpoint.renderPosition()) || breakpoint;\n            if (primary !== breakpoint) {\n                let secondary = breakpoint;\n                if (secondary.raw && secondary.raw.line === secondary.origin.raw.line && secondary.raw.column === secondary.origin.raw.column) {\n                    [primary, secondary] = [breakpoint, primary];\n                }\n                primary.origins.push(...secondary.origins);\n            }\n            positions.set(primary.renderPosition(), primary);\n        }\n        return [...positions.values()];\n    }\n\n    protected *getAffectedUris(uri?: URI): IterableIterator<URI> {\n        if (uri) {\n            yield uri;\n        } else {\n            for (const uriString of this.breakpoints.getUris()) {\n                yield new URI(uriString);\n            }\n            yield BreakpointManager.FUNCTION_URI;\n            yield BreakpointManager.EXCEPTION_URI;\n        }\n    }\n\n    protected asDebugBreakpointOptions(): DebugBreakpointOptions {\n        const { labelProvider, breakpoints, editorManager } = this;\n        return { labelProvider, breakpoints, editorManager, session: this };\n    }\n\n    get label(): string {\n        const suffixes = [];\n        if (InternalDebugSessionOptions.is(this.options) && this.options.id) {\n            suffixes.push(String(this.options.id + 1));\n        }\n        if (this.workspaceService.isMultiRootWorkspaceOpened && this.options.workspaceFolderUri) {\n            suffixes.push(this.labelProvider.getName(new URI(this.options.workspaceFolderUri)));\n        }\n        return suffixes.length === 0 ? this.configuration.name : this.configuration.name + ` (${suffixes.join(' - ')})`;\n    }\n\n    get visible(): boolean {\n        return this.state > DebugState.Inactive;\n    }\n\n    render(): React.ReactNode {\n        let label = '';\n        const state = this.state === DebugState.Stopped ? nls.localizeByDefault('Paused') : nls.localizeByDefault('Running');\n        const child = this.getSingleChildSession();\n        if (child && child.configuration.compact) {\n            // Inlines the name of the child debug session\n            label = `: ${child.label}`;\n        }\n        return <div className='theia-debug-session' title='Session'>\n            <span className='label'>{this.label + label}</span>\n            <span className='status'>{state}</span>\n        </div>;\n    }\n\n    *getElements(): IterableIterator<DebugThread | DebugSession> {\n        const child = this.getSingleChildSession();\n        if (child && child.configuration.compact) {\n            // Inlines the elements of the child debug session\n            return yield* child.getElements();\n        }\n        yield* this.threads;\n        yield* this.childSessions.values();\n    }\n\n    protected getSingleChildSession(): DebugSession | undefined {\n        if (this._threads.size === 0 && this.childSessions.size === 1) {\n            const child = this.childSessions.values().next().value as DebugSession;\n            return child;\n        }\n        return undefined;\n    }\n\n    protected async handleContinued({ body: { allThreadsContinued, threadId } }: DebugProtocol.ContinuedEvent): Promise<void> {\n        if (allThreadsContinued !== false) {\n            this.clearThreads();\n        } else {\n            this.clearThread(threadId);\n        }\n    };\n\n    protected async handleStopped({ body }: DebugProtocol.StoppedEvent): Promise<void> {\n        // Update thread list\n        await this.updateThreads(body);\n\n        // Update current thread's frames immediately\n        await this.updateFrames();\n    };\n\n    protected async handleThread({ body: { reason, threadId } }: DebugProtocol.ThreadEvent): Promise<void> {\n        if (reason === 'started') {\n            this.scheduleUpdateThreads();\n        } else if (reason === 'exited') {\n            this._threads.delete(threadId);\n            this.updateCurrentThread();\n        }\n    };\n\n    protected registerDebugContributions(configType: string, connection: DebugSessionConnection): void {\n        for (const contrib of this.debugContributionProvider.getContributions()) {\n            contrib.register(configType, connection);\n        }\n    };\n\n    /**\n     * Returns the top-most parent session that is responsible for the console. If this session uses a {@link DebugConsoleMode.Separate separate console}\n     * or does not have any parent session, undefined is returned.\n     */\n    public findConsoleParent(): DebugSession | undefined {\n        if (this.configuration.consoleMode !== DebugConsoleMode.MergeWithParent) {\n            return undefined;\n        }\n        let debugSession: DebugSession | undefined = this;\n        do {\n            debugSession = debugSession.parentSession;\n        } while (debugSession?.parentSession && debugSession.configuration.consoleMode === DebugConsoleMode.MergeWithParent);\n        return debugSession;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { Emitter } from '@theia/core/lib/common/event';\nimport { StorageService } from '@theia/core/lib/browser/storage-service';\n\n@injectable()\nexport class DebugWatchManager {\n\n    @inject(StorageService)\n    protected readonly storage: StorageService;\n\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n    readonly onDidChange = this.onDidChangeEmitter.event;\n\n    protected idSequence = 0;\n    protected readonly _watchExpressions = new Map<number, string>();\n\n    get watchExpressions(): IterableIterator<[number, string]> {\n        return this._watchExpressions.entries();\n    }\n\n    addWatchExpression(expression: string): number {\n        const id = this.idSequence++;\n        this._watchExpressions.set(id, expression);\n        this.onDidChangeEmitter.fire(undefined);\n        return id;\n    }\n\n    removeWatchExpression(id: number): boolean {\n        if (!this._watchExpressions.has(id)) {\n            return false;\n        }\n        this._watchExpressions.delete(id);\n        this.onDidChangeEmitter.fire(undefined);\n        return true;\n    }\n\n    removeWatchExpressions(): void {\n        if (this._watchExpressions.size) {\n            this.idSequence = 0;\n            this._watchExpressions.clear();\n            this.onDidChangeEmitter.fire(undefined);\n        }\n    }\n\n    async load(): Promise<void> {\n        const data = await this.storage.getData<DebugWatchData>(this.storageKey, {\n            expressions: []\n        });\n        this.restoreState(data);\n    }\n\n    save(): void {\n        const data = this.storeState();\n        this.storage.setData(this.storageKey, data);\n    }\n\n    protected get storageKey(): string {\n        return 'debug:watch';\n    }\n\n    protected storeState(): DebugWatchData {\n        return {\n            expressions: [...this._watchExpressions.values()]\n        };\n    }\n\n    protected restoreState(state: DebugWatchData): void {\n        for (const expression of state.expressions) {\n            this.addWatchExpression(expression);\n        }\n    }\n\n}\n\nexport interface DebugWatchData {\n    readonly expressions: string[];\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as React from '@theia/core/shared/react';\nimport { DebugProtocol } from '@vscode/debugprotocol/lib/debugProtocol';\nimport URI from '@theia/core/lib/common/uri';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport { LabelProvider, DISABLED_CLASS } from '@theia/core/lib/browser';\nimport { TreeElement } from '@theia/core/lib/browser/source-tree';\nimport { DebugSession } from '../debug-session';\nimport { BaseBreakpoint } from '../breakpoint/breakpoint-marker';\nimport { BreakpointManager } from '../breakpoint/breakpoint-manager';\n\nexport class DebugBreakpointData {\n    readonly raw?: DebugProtocol.Breakpoint;\n}\n\nexport class DebugBreakpointOptions {\n    readonly labelProvider: LabelProvider;\n    readonly breakpoints: BreakpointManager;\n    readonly editorManager: EditorManager;\n    readonly session?: DebugSession;\n}\n\nexport class DebugBreakpointDecoration {\n    readonly className: string;\n    readonly message: string[];\n}\n\nexport abstract class DebugBreakpoint<T extends BaseBreakpoint = BaseBreakpoint> extends DebugBreakpointOptions implements TreeElement {\n\n    readonly raw?: DebugProtocol.Breakpoint;\n\n    constructor(\n        readonly uri: URI,\n        options: DebugBreakpointOptions\n    ) {\n        super();\n        Object.assign(this, options);\n    }\n\n    abstract get origin(): T;\n\n    update(data: DebugBreakpointData): void {\n        Object.assign(this, data);\n    }\n\n    get idFromAdapter(): number | undefined {\n        return this.raw && this.raw.id;\n    }\n\n    get id(): string {\n        return this.origin.id;\n    }\n\n    get enabled(): boolean {\n        return this.breakpoints.breakpointsEnabled && this.origin.enabled;\n    }\n\n    get installed(): boolean {\n        return !!this.raw;\n    }\n\n    get verified(): boolean {\n        return !!this.raw ? this.raw.verified : true;\n    }\n\n    get message(): string {\n        return this.raw && this.raw.message || '';\n    }\n\n    abstract setEnabled(enabled: boolean): void;\n\n    abstract remove(): void;\n\n    protected readonly setBreakpointEnabled = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setEnabled(event.target.checked);\n    };\n\n    render(): React.ReactNode {\n        const classNames = ['theia-source-breakpoint'];\n        if (!this.isEnabled()) {\n            classNames.push(DISABLED_CLASS);\n        }\n        const decoration = this.getDecoration();\n        return <div title={decoration.message.join('\\n')} className={classNames.join(' ')}>\n            <span className={'theia-debug-breakpoint-icon codicon ' + decoration.className} />\n            <input className='theia-input' type='checkbox' checked={this.origin.enabled} onChange={this.setBreakpointEnabled} />\n            {this.doRender()}\n        </div>;\n    }\n\n    protected isEnabled(): boolean {\n        return this.breakpoints.breakpointsEnabled && this.verified;\n    }\n\n    protected abstract doRender(): React.ReactNode;\n\n    getDecoration(): DebugBreakpointDecoration {\n        if (!this.enabled) {\n            return this.getDisabledBreakpointDecoration();\n        }\n        if (this.installed && !this.verified) {\n            return this.getUnverifiedBreakpointDecoration();\n        }\n        return this.doGetDecoration();\n    }\n\n    protected getUnverifiedBreakpointDecoration(): DebugBreakpointDecoration {\n        const decoration = this.getBreakpointDecoration();\n        return {\n            className: decoration.className + '-unverified',\n            message: [this.message || 'Unverified ' + decoration.message[0]]\n        };\n    }\n\n    protected getDisabledBreakpointDecoration(message?: string): DebugBreakpointDecoration {\n        const decoration = this.getBreakpointDecoration();\n        return {\n            className: decoration.className + '-disabled',\n            message: [message || ('Disabled ' + decoration.message[0])]\n        };\n    }\n\n    protected doGetDecoration(messages: string[] = []): DebugBreakpointDecoration {\n        if (this.message) {\n            if (messages.length) {\n                messages[messages.length - 1].concat(', ' + this.message);\n            } else {\n                messages.push(this.message);\n            }\n        }\n        return this.getBreakpointDecoration(messages);\n    }\n\n    protected abstract getBreakpointDecoration(message?: string[]): DebugBreakpointDecoration;\n\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as React from '@theia/core/shared/react';\nimport { TreeElement } from '@theia/core/lib/browser/source-tree';\nimport { FunctionBreakpoint } from '../breakpoint/breakpoint-marker';\nimport { BreakpointManager } from '../breakpoint/breakpoint-manager';\nimport { DebugBreakpoint, DebugBreakpointOptions, DebugBreakpointDecoration } from './debug-breakpoint';\nimport { SingleTextInputDialog } from '@theia/core/lib/browser/dialogs';\nimport { nls } from '@theia/core';\n\nexport class DebugFunctionBreakpoint extends DebugBreakpoint<FunctionBreakpoint> implements TreeElement {\n\n    constructor(readonly origin: FunctionBreakpoint, options: DebugBreakpointOptions) {\n        super(BreakpointManager.FUNCTION_URI, options);\n    }\n\n    setEnabled(enabled: boolean): void {\n        const breakpoints = this.breakpoints.getFunctionBreakpoints();\n        const breakpoint = breakpoints.find(b => b.id === this.id);\n        if (breakpoint && breakpoint.enabled !== enabled) {\n            breakpoint.enabled = enabled;\n            this.breakpoints.setFunctionBreakpoints(breakpoints);\n        }\n    }\n\n    protected override isEnabled(): boolean {\n        return super.isEnabled() && this.isSupported();\n    }\n\n    protected isSupported(): boolean {\n        const { session } = this;\n        return !session || !!session.capabilities.supportsFunctionBreakpoints;\n    }\n\n    remove(): void {\n        const breakpoints = this.breakpoints.getFunctionBreakpoints();\n        const newBreakpoints = breakpoints.filter(b => b.id !== this.id);\n        if (breakpoints.length !== newBreakpoints.length) {\n            this.breakpoints.setFunctionBreakpoints(newBreakpoints);\n        }\n    }\n\n    get name(): string {\n        return this.origin.raw.name;\n    }\n\n    protected doRender(): React.ReactNode {\n        return <span className='line-info'>{this.name}</span>;\n    }\n\n    protected override doGetDecoration(): DebugBreakpointDecoration {\n        if (!this.isSupported()) {\n            return this.getDisabledBreakpointDecoration(nls.localizeByDefault('Function breakpoints are not supported by this debug type'));\n        }\n        return super.doGetDecoration();\n    }\n\n    protected getBreakpointDecoration(message?: string[]): DebugBreakpointDecoration {\n        return {\n            className: 'codicon-debug-breakpoint-function',\n            message: message || [nls.localizeByDefault('Function Breakpoint')]\n        };\n    }\n\n    async open(): Promise<void> {\n        const input = new SingleTextInputDialog({\n            title: nls.localizeByDefault('Add Function Breakpoint'),\n            initialValue: this.name\n        });\n        const newValue = await input.open();\n        if (newValue !== undefined && newValue !== this.name) {\n            const breakpoints = this.breakpoints.getFunctionBreakpoints();\n            const breakpoint = breakpoints.find(b => b.id === this.id);\n            if (breakpoint) {\n                if (breakpoint.raw.name !== newValue) {\n                    breakpoint.raw.name = newValue;\n                    this.breakpoints.setFunctionBreakpoints(breakpoints);\n                }\n            } else {\n                this.origin.raw.name = newValue;\n                breakpoints.push(this.origin);\n                this.breakpoints.setFunctionBreakpoints(breakpoints);\n            }\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { nls } from '@theia/core';\nimport * as React from '@theia/core/shared/react';\nimport { BreakpointManager } from '../breakpoint/breakpoint-manager';\nimport { InstructionBreakpoint } from '../breakpoint/breakpoint-marker';\nimport { DebugBreakpoint, DebugBreakpointDecoration, DebugBreakpointOptions } from './debug-breakpoint';\n\nexport class DebugInstructionBreakpoint extends DebugBreakpoint<InstructionBreakpoint> {\n    constructor(readonly origin: InstructionBreakpoint, options: DebugBreakpointOptions) {\n        super(BreakpointManager.INSTRUCTION_URI, options);\n    }\n\n    setEnabled(enabled: boolean): void {\n        if (enabled !== this.origin.enabled) {\n            this.breakpoints.updateInstructionBreakpoint(this.origin.id, { enabled });\n        }\n    }\n\n    protected override isEnabled(): boolean {\n        return super.isEnabled() && this.isSupported();\n    }\n\n    protected isSupported(): boolean {\n        return Boolean(this.session?.capabilities.supportsInstructionBreakpoints);\n    }\n\n    remove(): void {\n        this.breakpoints.removeInstructionBreakpoint(this.origin.instructionReference);\n    }\n\n    protected doRender(): React.ReactNode {\n        return <span className=\"line-info\">{this.origin.instructionReference}</span>;\n    }\n\n    protected getBreakpointDecoration(message?: string[]): DebugBreakpointDecoration {\n        if (!this.isSupported()) {\n            return {\n                className: 'codicon-debug-breakpoint-unsupported',\n                message: message ?? [nls.localize('theia/debug/instruction-breakpoint', 'Instruction Breakpoint')],\n            };\n        }\n        if (this.origin.condition || this.origin.hitCondition) {\n            return {\n                className: 'codicon-debug-breakpoint-conditional',\n                message: message || [nls.localizeByDefault('Conditional Breakpoint...')]\n            };\n        }\n        return {\n            className: 'codicon-debug-breakpoint',\n            message: message || [nls.localize('theia/debug/instruction-breakpoint', 'Instruction Breakpoint')]\n        };\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as React from '@theia/core/shared/react';\nimport { DebugProtocol } from '@vscode/debugprotocol/lib/debugProtocol';\nimport { RecursivePartial } from '@theia/core';\nimport URI from '@theia/core/lib/common/uri';\nimport { Range } from '@theia/editor/lib/browser';\nimport { TREE_NODE_INFO_CLASS, WidgetOpenerOptions } from '@theia/core/lib/browser';\nimport { TreeElement } from '@theia/core/lib/browser/source-tree';\nimport { SourceBreakpoint } from '../breakpoint/breakpoint-marker';\nimport { DebugSource } from './debug-source';\nimport { DebugBreakpoint, DebugBreakpointOptions, DebugBreakpointData, DebugBreakpointDecoration } from './debug-breakpoint';\n\nexport class DebugSourceBreakpointData extends DebugBreakpointData {\n    readonly origins: SourceBreakpoint[];\n}\n\nexport class DebugSourceBreakpoint extends DebugBreakpoint<SourceBreakpoint> implements TreeElement {\n\n    readonly origins: SourceBreakpoint[];\n\n    constructor(origin: SourceBreakpoint, options: DebugBreakpointOptions) {\n        super(new URI(origin.uri), options);\n        this.origins = [origin];\n    }\n\n    override update(data: Partial<DebugSourceBreakpointData>): void {\n        super.update(data);\n    }\n\n    get origin(): SourceBreakpoint {\n        return this.origins[0];\n    }\n\n    setEnabled(enabled: boolean): void {\n        const { uri, raw } = this;\n        let shouldUpdate = false;\n        let breakpoints = raw && this.doRemove(this.origins.filter(origin => !(origin.raw.line === raw.line && origin.raw.column === raw.column)));\n        // Check for breakpoints array with at least one entry\n        if (breakpoints && breakpoints.length) {\n            shouldUpdate = true;\n        } else {\n            breakpoints = this.breakpoints.getBreakpoints(uri);\n        }\n        for (const breakpoint of breakpoints) {\n            if (breakpoint.raw.line === this.origin.raw.line && breakpoint.raw.column === this.origin.raw.column && breakpoint.enabled !== enabled) {\n                breakpoint.enabled = enabled;\n                shouldUpdate = true;\n            }\n        }\n        if (shouldUpdate) {\n            this.breakpoints.setBreakpoints(this.uri, breakpoints);\n        }\n    }\n\n    updateOrigins(data: Partial<DebugProtocol.SourceBreakpoint>): void {\n        const breakpoints = this.breakpoints.getBreakpoints(this.uri);\n        let shouldUpdate = false;\n        const originPositions = new Set();\n        this.origins.forEach(origin => originPositions.add(origin.raw.line + ':' + origin.raw.column));\n        for (const breakpoint of breakpoints) {\n            if (originPositions.has(breakpoint.raw.line + ':' + breakpoint.raw.column)) {\n                Object.assign(breakpoint.raw, data);\n                shouldUpdate = true;\n            }\n        }\n        if (shouldUpdate) {\n            this.breakpoints.setBreakpoints(this.uri, breakpoints);\n        }\n    }\n\n    /** 1-based */\n    get line(): number {\n        return this.raw && this.raw.line || this.origins[0].raw.line;\n    }\n    get column(): number | undefined {\n        return this.raw && this.raw.column || this.origins[0].raw.column;\n    }\n    get endLine(): number | undefined {\n        return this.raw && this.raw.endLine;\n    }\n    get endColumn(): number | undefined {\n        return this.raw && this.raw.endColumn;\n    }\n\n    get condition(): string | undefined {\n        return this.origin.raw.condition;\n    }\n    get hitCondition(): string | undefined {\n        return this.origin.raw.hitCondition;\n    }\n    get logMessage(): string | undefined {\n        return this.origin.raw.logMessage;\n    }\n\n    get source(): DebugSource | undefined {\n        return this.raw && this.raw.source && this.session && this.session.getSource(this.raw.source);\n    }\n\n    async open(options: WidgetOpenerOptions = {\n        mode: 'reveal'\n    }): Promise<void> {\n        const { line, column, endLine, endColumn } = this;\n        const selection: RecursivePartial<Range> = {\n            start: {\n                line: line - 1,\n                character: typeof column === 'number' ? column - 1 : undefined\n            }\n        };\n        if (typeof endLine === 'number') {\n            selection.end = {\n                line: endLine - 1,\n                character: typeof endColumn === 'number' ? endColumn - 1 : undefined\n            };\n        }\n        if (this.source) {\n            await this.source.open({\n                ...options,\n                selection\n            });\n        } else {\n            await this.editorManager.open(this.uri, {\n                ...options,\n                selection\n            });\n        }\n    }\n\n    protected override setBreakpointEnabled = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setEnabled(event.target.checked);\n    };\n\n    protected doRender(): React.ReactNode {\n        return <React.Fragment>\n            <span className='line-info' title={this.labelProvider.getLongName(this.uri)}>\n                <span className='name'>{this.labelProvider.getName(this.uri)} </span>\n                <span className={'path ' + TREE_NODE_INFO_CLASS}>{this.labelProvider.getLongName(this.uri.parent)} </span>\n            </span>\n            <span className='line'>{this.renderPosition()}</span>\n        </React.Fragment>;\n    }\n\n    renderPosition(): string {\n        return this.line + (typeof this.column === 'number' ? ':' + this.column : '');\n    }\n\n    override doGetDecoration(messages: string[] = []): DebugBreakpointDecoration {\n        if (this.logMessage || this.condition || this.hitCondition) {\n            const { session } = this;\n            if (this.logMessage) {\n                if (session && !session.capabilities.supportsLogPoints) {\n                    return this.getUnsupportedBreakpointDecoration('Logpoints not supported by this debug type');\n                }\n                messages.push('Log Message: ' + this.logMessage);\n            }\n            if (this.condition) {\n                if (session && !session.capabilities.supportsConditionalBreakpoints) {\n                    return this.getUnsupportedBreakpointDecoration('Conditional breakpoints not supported by this debug type');\n                }\n                messages.push('Expression: ' + this.condition);\n            }\n            if (this.hitCondition) {\n                if (session && !session.capabilities.supportsHitConditionalBreakpoints) {\n                    return this.getUnsupportedBreakpointDecoration('Hit conditional breakpoints not supported by this debug type');\n                }\n                messages.push('Hit Count: ' + this.hitCondition);\n            }\n        }\n        return super.doGetDecoration(messages);\n    }\n\n    protected getUnsupportedBreakpointDecoration(message: string): DebugBreakpointDecoration {\n        return {\n            className: 'codicon-debug-breakpoint-unsupported',\n            message: [message]\n        };\n    }\n\n    protected getBreakpointDecoration(message?: string[]): DebugBreakpointDecoration {\n        if (this.logMessage) {\n            return {\n                className: 'codicon-debug-breakpoint-log',\n                message: message || ['Logpoint']\n            };\n        }\n        if (this.condition || this.hitCondition) {\n            return {\n                className: 'codicon-debug-breakpoint-conditional',\n                message: message || ['Conditional Breakpoint']\n            };\n        }\n        return {\n            className: 'codicon-debug-breakpoint',\n            message: message || ['Breakpoint']\n        };\n    }\n\n    remove(): void {\n        const breakpoints = this.doRemove(this.origins);\n        if (breakpoints) {\n            this.breakpoints.setBreakpoints(this.uri, breakpoints);\n        }\n    }\n    protected doRemove(origins: SourceBreakpoint[]): SourceBreakpoint[] | undefined {\n        if (!origins.length) {\n            return undefined;\n        }\n        const { uri } = this;\n        const toRemove = new Set();\n        origins.forEach(origin => toRemove.add(origin.raw.line + ':' + origin.raw.column));\n        let shouldUpdate = false;\n        const breakpoints = this.breakpoints.findMarkers({\n            uri,\n            dataFilter: data => {\n                const result = !toRemove.has(data.raw.line + ':' + data.raw.column);\n                shouldUpdate = shouldUpdate || !result;\n                return result;\n            }\n        }).map(({ data }) => data);\n        return shouldUpdate && breakpoints || undefined;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { LabelProvider } from '@theia/core/lib/browser';\nimport { EditorManager, EditorOpenerOptions, EditorWidget } from '@theia/editor/lib/browser';\nimport URI from '@theia/core/lib/common/uri';\nimport { DebugProtocol } from '@vscode/debugprotocol/lib/debugProtocol';\nimport { DebugSession } from '../debug-session';\nimport { URI as Uri } from '@theia/core/shared/vscode-uri';\nimport { DEBUG_SCHEME, SCHEME_PATTERN } from '../../common/debug-uri-utils';\n\nexport class DebugSourceData {\n    readonly raw: DebugProtocol.Source;\n}\n\nexport class DebugSource extends DebugSourceData {\n\n    constructor(\n        protected readonly session: DebugSession,\n        protected readonly editorManager: EditorManager,\n        protected readonly labelProvider: LabelProvider\n    ) {\n        super();\n    }\n\n    get uri(): URI {\n        return DebugSource.toUri(this.raw);\n    }\n\n    update(data: Partial<DebugSourceData>): void {\n        Object.assign(this, data);\n    }\n\n    open(options?: EditorOpenerOptions): Promise<EditorWidget> {\n        return this.editorManager.open(this.uri, options);\n    }\n\n    async load(): Promise<string> {\n        const source = this.raw;\n        const sourceReference = source.sourceReference!;\n        const response = await this.session.sendRequest('source', {\n            sourceReference,\n            source\n        });\n        return response.body.content;\n    }\n\n    get inMemory(): boolean {\n        return this.uri.scheme === DEBUG_SCHEME;\n    }\n\n    get name(): string {\n        if (this.inMemory) {\n            return this.raw.name || this.uri.path.base || this.uri.path.fsPath();\n        }\n        return this.labelProvider.getName(this.uri);\n    }\n\n    get longName(): string {\n        if (this.inMemory) {\n            return this.name;\n        }\n        return this.labelProvider.getLongName(this.uri);\n    }\n\n    static SCHEME = DEBUG_SCHEME;\n    static SCHEME_PATTERN = SCHEME_PATTERN;\n    static toUri(raw: DebugProtocol.Source): URI {\n        if (raw.sourceReference && raw.sourceReference > 0) {\n            return new URI().withScheme(DEBUG_SCHEME).withPath(raw.name!).withQuery(String(raw.sourceReference));\n        }\n        if (!raw.path) {\n            throw new Error('Unrecognized source type: ' + JSON.stringify(raw));\n        }\n        if (raw.path.match(SCHEME_PATTERN)) {\n            return new URI(raw.path);\n        }\n        return new URI(Uri.file(raw.path));\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// Based on https://github.com/theia-ide/vscode/blob/standalone/0.19.x/src/vs/workbench/contrib/debug/common/debugModel.ts\n\nimport * as React from '@theia/core/shared/react';\nimport { WidgetOpenerOptions, DISABLED_CLASS } from '@theia/core/lib/browser';\nimport { EditorWidget, Range, Position } from '@theia/editor/lib/browser';\nimport { DebugProtocol } from '@vscode/debugprotocol/lib/debugProtocol';\nimport { TreeElement } from '@theia/core/lib/browser/source-tree';\nimport { DebugScope } from '../console/debug-console-items';\nimport { DebugSource } from './debug-source';\nimport { RecursivePartial } from '@theia/core';\nimport { DebugSession } from '../debug-session';\nimport { DebugThread } from './debug-thread';\nimport * as monaco from '@theia/monaco-editor-core';\n\nexport class DebugStackFrameData {\n    readonly raw: DebugProtocol.StackFrame;\n}\n\nexport class DebugStackFrame extends DebugStackFrameData implements TreeElement {\n\n    constructor(\n        readonly thread: DebugThread,\n        readonly session: DebugSession\n    ) {\n        super();\n    }\n\n    get id(): string {\n        return this.session.id + ':' + this.thread.id + ':' + this.raw.id;\n    }\n\n    protected _source: DebugSource | undefined;\n    get source(): DebugSource | undefined {\n        return this._source;\n    }\n    update(data: Partial<DebugStackFrameData>): void {\n        Object.assign(this, data);\n        this._source = this.raw.source && this.session.getSource(this.raw.source);\n    }\n\n    async restart(): Promise<void> {\n        await this.session.sendRequest('restartFrame', this.toArgs({\n            threadId: this.thread.id\n        }));\n    }\n\n    async open(options?: WidgetOpenerOptions): Promise<EditorWidget | undefined> {\n        if (!this.source) {\n            return undefined;\n        }\n        const { line, column, endLine, endColumn } = this.raw;\n        const selection: RecursivePartial<Range> = {\n            start: Position.create(this.clampPositive(line - 1), this.clampPositive(column - 1))\n        };\n        if (typeof endLine === 'number') {\n            selection.end = {\n                line: this.clampPositive(endLine - 1),\n                character: typeof endColumn === 'number' ? this.clampPositive(endColumn - 1) : undefined\n            };\n        }\n        this.source.open({\n            mode: 'reveal',\n            ...options,\n            selection\n        });\n    }\n\n    /**\n     * Debugger can send `column: 0` value despite of initializing the debug session with `columnsStartAt1: true`.\n     * This method can be used to ensure that neither `column` nor `column` are negative numbers.\n     * See https://github.com/microsoft/vscode-mock-debug/issues/85.\n     */\n    protected clampPositive(value: number): number {\n        return Math.max(value, 0);\n    }\n\n    protected scopes: Promise<DebugScope[]> | undefined;\n    getScopes(): Promise<DebugScope[]> {\n        return this.scopes || (this.scopes = this.doGetScopes());\n    }\n    protected async doGetScopes(): Promise<DebugScope[]> {\n        let response;\n        try {\n            response = await this.session.sendRequest('scopes', this.toArgs());\n        } catch {\n            // no-op: ignore debug adapter errors\n        }\n        if (!response) {\n            return [];\n        }\n        return response.body.scopes.map(raw => new DebugScope(raw, () => this.session));\n    }\n\n    // https://github.com/theia-ide/vscode/blob/standalone/0.19.x/src/vs/workbench/contrib/debug/common/debugModel.ts#L324-L335\n    async getMostSpecificScopes(range: monaco.IRange): Promise<DebugScope[]> {\n        const scopes = await this.getScopes();\n        const nonExpensiveScopes = scopes.filter(s => !s.expensive);\n        const haveRangeInfo = nonExpensiveScopes.some(s => !!s.range);\n        if (!haveRangeInfo) {\n            return nonExpensiveScopes;\n        }\n\n        const scopesContainingRange = nonExpensiveScopes.filter(scope => scope.range && monaco.Range.containsRange(scope.range, range))\n            .sort((first, second) => (first.range!.endLineNumber - first.range!.startLineNumber) - (second.range!.endLineNumber - second.range!.startLineNumber));\n        return scopesContainingRange.length ? scopesContainingRange : nonExpensiveScopes;\n    }\n\n    protected toArgs<T extends object>(arg?: T): { frameId: number } & T {\n        return Object.assign({}, arg, {\n            frameId: this.raw.id\n        });\n    }\n\n    render(): React.ReactNode {\n        const classNames = ['theia-debug-stack-frame'];\n        if (this.raw.presentationHint === 'label') {\n            classNames.push('label');\n        }\n        if (this.raw.presentationHint === 'subtle') {\n            classNames.push('subtle');\n        }\n        if (!this.source || this.source.raw.presentationHint === 'deemphasize') {\n            classNames.push(DISABLED_CLASS);\n        }\n        return <div className={classNames.join(' ')}>\n            <span className='expression' title={this.raw.name}>{this.raw.name}</span>\n            {this.renderFile()}\n        </div>;\n    }\n    protected renderFile(): React.ReactNode {\n        const { source } = this;\n        if (!source) {\n            return undefined;\n        }\n        const origin = source.raw.origin && `\\n${source.raw.origin}` || '';\n        return <span className='file' title={source.longName + origin}>\n            <span className='name'>{source.name}</span>\n            <span className='line'>{this.raw.line}:{this.raw.column}</span>\n        </span>;\n    }\n\n    get range(): monaco.IRange | undefined {\n        const { source, line: startLine, column: startColumn, endLine, endColumn } = this.raw;\n        if (source) {\n            return new monaco.Range(startLine, startColumn, endLine || startLine, endColumn || startColumn);\n        }\n        return undefined;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as React from '@theia/core/shared/react';\nimport { CancellationTokenSource, Emitter, Event, nls } from '@theia/core';\nimport { DebugProtocol } from '@vscode/debugprotocol/lib/debugProtocol';\nimport { TreeElement } from '@theia/core/lib/browser/source-tree';\nimport { DebugStackFrame } from './debug-stack-frame';\nimport { DebugSession } from '../debug-session';\n\nexport type StoppedDetails = DebugProtocol.StoppedEvent['body'] & {\n    framesErrorMessage?: string\n    totalFrames?: number\n};\n\nexport class DebugThreadData {\n    readonly raw: DebugProtocol.Thread;\n    readonly stoppedDetails: StoppedDetails | undefined;\n}\n\nexport interface DebugExceptionInfo {\n    id?: string\n    description?: string\n    details?: DebugProtocol.ExceptionDetails\n}\n\nexport class DebugThread extends DebugThreadData implements TreeElement {\n\n    protected readonly onDidChangedEmitter = new Emitter<void>();\n    readonly onDidChanged: Event<void> = this.onDidChangedEmitter.event;\n    protected readonly onDidFocusStackFrameEmitter = new Emitter<DebugStackFrame | undefined>();\n    get onDidFocusStackFrame(): Event<DebugStackFrame | undefined> {\n        return this.onDidFocusStackFrameEmitter.event;\n    }\n\n    constructor(\n        readonly session: DebugSession\n    ) {\n        super();\n    }\n\n    get id(): string {\n        return this.session.id + ':' + this.raw.id;\n    }\n\n    protected _currentFrame: DebugStackFrame | undefined;\n    get currentFrame(): DebugStackFrame | undefined {\n        return this._currentFrame;\n    }\n    set currentFrame(frame: DebugStackFrame | undefined) {\n        this._currentFrame = frame;\n        this.onDidChangedEmitter.fire(undefined);\n        this.onDidFocusStackFrameEmitter.fire(frame);\n    }\n\n    get stopped(): boolean {\n        return !!this.stoppedDetails;\n    }\n\n    update(data: Partial<DebugThreadData>): void {\n        Object.assign(this, data);\n        if ('stoppedDetails' in data) {\n            this.clearFrames();\n        }\n    }\n\n    clear(): void {\n        this.update({\n            raw: this.raw,\n            stoppedDetails: undefined\n        });\n    }\n\n    continue(): Promise<DebugProtocol.ContinueResponse> {\n        return this.session.sendRequest('continue', this.toArgs());\n    }\n\n    stepOver(): Promise<DebugProtocol.NextResponse> {\n        return this.session.sendRequest('next', this.toArgs());\n    }\n\n    stepIn(): Promise<DebugProtocol.StepInResponse> {\n        return this.session.sendRequest('stepIn', this.toArgs());\n    }\n\n    stepOut(): Promise<DebugProtocol.StepOutResponse> {\n        return this.session.sendRequest('stepOut', this.toArgs());\n    }\n\n    pause(): Promise<DebugProtocol.PauseResponse> {\n        return this.session.sendRequest('pause', this.toArgs());\n    }\n\n    async getExceptionInfo(): Promise<DebugExceptionInfo | undefined> {\n        if (this.stoppedDetails && this.stoppedDetails.reason === 'exception') {\n            if (this.session.capabilities.supportsExceptionInfoRequest) {\n                const response = await this.session.sendRequest('exceptionInfo', this.toArgs());\n                return {\n                    id: response.body.exceptionId,\n                    description: response.body.description,\n                    details: response.body.details\n                };\n            }\n            return {\n                description: this.stoppedDetails.text\n            };\n        }\n        return undefined;\n    }\n\n    get supportsTerminate(): boolean {\n        return !!this.session.capabilities.supportsTerminateThreadsRequest;\n    }\n\n    async terminate(): Promise<void> {\n        if (this.supportsTerminate) {\n            await this.session.sendRequest('terminateThreads', {\n                threadIds: [this.raw.id]\n            });\n        }\n    }\n\n    protected readonly _frames = new Map<number, DebugStackFrame>();\n    get frames(): IterableIterator<DebugStackFrame> {\n        return this._frames.values();\n    }\n    get topFrame(): DebugStackFrame | undefined {\n        return this.frames.next().value;\n    }\n    get frameCount(): number {\n        return this._frames.size;\n    }\n\n    protected pendingFetch = Promise.resolve<DebugStackFrame[]>([]);\n    protected _pendingFetchCount: number = 0;\n    protected pendingFetchCancel = new CancellationTokenSource();\n    async fetchFrames(levels: number = 20): Promise<DebugStackFrame[]> {\n        const cancel = this.pendingFetchCancel.token;\n        this._pendingFetchCount += 1;\n\n        return this.pendingFetch = this.pendingFetch.then(async () => {\n            try {\n                const start = this.frameCount;\n                const frames = await this.doFetchFrames(start, levels);\n                if (cancel.isCancellationRequested) {\n                    return [];\n                }\n                return this.doUpdateFrames(frames);\n            } catch (e) {\n                console.error('fetchFrames failed:', e);\n                return [];\n            } finally {\n                if (!cancel.isCancellationRequested) {\n                    this._pendingFetchCount -= 1;\n                }\n            }\n        });\n    }\n    get pendingFrameCount(): number {\n        return this._pendingFetchCount;\n    }\n    protected async doFetchFrames(startFrame: number, levels: number): Promise<DebugProtocol.StackFrame[]> {\n        try {\n            const response = await this.session.sendRequest('stackTrace',\n                this.toArgs<Partial<DebugProtocol.StackTraceArguments>>({ startFrame, levels })\n            );\n            if (this.stoppedDetails) {\n                this.stoppedDetails.totalFrames = response.body.totalFrames;\n            }\n            return response.body.stackFrames;\n        } catch (e) {\n            if (this.stoppedDetails) {\n                this.stoppedDetails.framesErrorMessage = e.message;\n            }\n            return [];\n        }\n    }\n    protected doUpdateFrames(frames: DebugProtocol.StackFrame[]): DebugStackFrame[] {\n        const result = new Set<DebugStackFrame>();\n        for (const raw of frames) {\n            const id = raw.id;\n            const frame = this._frames.get(id) || new DebugStackFrame(this, this.session);\n            this._frames.set(id, frame);\n            frame.update({ raw });\n            result.add(frame);\n        }\n        this.updateCurrentFrame();\n        return [...result.values()];\n    }\n    protected clearFrames(): void {\n        // Clear all frames\n        this._frames.clear();\n\n        // Cancel all request promises\n        this.pendingFetchCancel.cancel();\n        this.pendingFetchCancel = new CancellationTokenSource();\n\n        // Empty all current requests\n        this.pendingFetch = Promise.resolve([]);\n        this._pendingFetchCount = 0;\n\n        this.updateCurrentFrame();\n    }\n    protected updateCurrentFrame(): void {\n        const { currentFrame } = this;\n        const frameId = currentFrame && currentFrame.raw.id;\n        this.currentFrame = typeof frameId === 'number' &&\n            this._frames.get(frameId) ||\n            this._frames.values().next().value;\n    }\n\n    protected toArgs<T extends object>(arg?: T): { threadId: number } & T {\n        return Object.assign({}, arg, {\n            threadId: this.raw.id\n        });\n    }\n\n    render(): React.ReactNode {\n        const reason = this.stoppedDetails && this.stoppedDetails.reason;\n        const localizedReason = this.getLocalizedReason(reason);\n\n        const status = this.stoppedDetails\n            ? reason\n                ? nls.localizeByDefault('Paused on {0}', localizedReason)\n                : nls.localizeByDefault('Paused')\n            : nls.localizeByDefault('Running');\n        return (\n            <div className=\"theia-debug-thread\" title={nls.localizeByDefault('Session')}>\n                <span className=\"label\">{this.raw.name}</span>\n                <span className=\"status\">{status}</span>\n            </div>\n        );\n    }\n\n    protected getLocalizedReason(reason: string | undefined): string {\n        switch (reason) {\n            case 'step':\n                return nls.localize('theia/debug/step', 'step');\n            case 'breakpoint':\n                return nls.localize('theia/debug/breakpoint', 'breakpoint');\n            case 'exception':\n                return nls.localize('theia/debug/exception', 'exception');\n            case 'pause':\n                return nls.localize('theia/debug/pause', 'pause');\n            case 'entry':\n                return nls.localize('theia/debug/entry', 'entry');\n            case 'goto':\n                return nls.localize('theia/debug/goto', 'goto');\n            case 'function breakpoint':\n                return nls.localize('theia/debug/functionBreakpoint', 'function breakpoint');\n             case 'data breakpoint':\n                return nls.localize('theia/debug/dataBreakpoint', 'data breakpoint');\n            case 'instruction breakpoint':\n                return nls.localize('theia/debug/instructionBreakpoint', 'instruction breakpoint');\n            default:\n                return '';\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as React from '@theia/core/shared/react';\nimport { codiconArray, DISABLED_CLASS } from '@theia/core/lib/browser';\n\nexport class DebugAction extends React.Component<DebugAction.Props> {\n\n    override render(): React.ReactNode {\n        const { enabled, label, iconClass } = this.props;\n        const classNames = ['debug-action'];\n        if (iconClass) {\n            classNames.push(...codiconArray(iconClass, true));\n        }\n        if (enabled === false) {\n            classNames.push(DISABLED_CLASS);\n        }\n        return <span tabIndex={0}\n            className={classNames.join(' ')}\n            title={label}\n            onClick={this.props.run}\n            ref={this.setRef} >\n            {!iconClass && <div>{label}</div>}\n        </span>;\n    }\n\n    focus(): void {\n        if (this.ref) {\n            this.ref.focus();\n        }\n    }\n\n    protected ref: HTMLElement | undefined;\n    protected setRef = (ref: HTMLElement | null) => this.ref = ref || undefined;\n\n}\nexport namespace DebugAction {\n    export interface Props {\n        label: string\n        iconClass: string\n        run: () => void\n        enabled?: boolean\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as React from '@theia/core/shared/react';\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { TreeSource, TreeElement } from '@theia/core/lib/browser/source-tree';\nimport { DebugThread } from '../model/debug-thread';\nimport { DebugViewModel } from './debug-view-model';\nimport debounce = require('p-debounce');\n\n@injectable()\nexport class DebugStackFramesSource extends TreeSource {\n\n    @inject(DebugViewModel)\n    protected readonly model: DebugViewModel;\n\n    @postConstruct()\n    protected init(): void {\n        this.refresh();\n        this.toDispose.push(this.model.onDidChange(() => this.refresh()));\n    }\n\n    protected readonly refresh = debounce(() => this.fireDidChange(), 100);\n\n    *getElements(): IterableIterator<TreeElement> {\n        const thread = this.model.currentThread;\n        if (!thread) {\n            return;\n        }\n        yield* thread.frames;\n        if (thread.stoppedDetails) {\n            const { framesErrorMessage, totalFrames } = thread.stoppedDetails;\n            if (framesErrorMessage) {\n                yield {\n                    render: () => <span title={framesErrorMessage}>{framesErrorMessage}</span>\n                };\n            }\n            if (totalFrames && totalFrames > thread.frameCount) {\n                yield new LoadMoreStackFrames(thread);\n            }\n        }\n    }\n}\n\nexport class LoadMoreStackFrames implements TreeElement {\n\n    constructor(\n        readonly thread: DebugThread\n    ) { }\n\n    render(): React.ReactNode {\n        return <span className='theia-load-more-frames'>Load More Stack Frames</span>;\n    }\n\n    async open(): Promise<void> {\n        const frames = await this.thread.fetchFrames();\n        if (frames[0]) {\n            this.thread.currentFrame = frames[0];\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct, interfaces, Container } from '@theia/core/shared/inversify';\nimport { MenuPath } from '@theia/core';\nimport { TreeNode, NodeProps, SelectableTreeNode } from '@theia/core/lib/browser';\nimport { SourceTreeWidget, TreeElementNode } from '@theia/core/lib/browser/source-tree';\nimport { DebugStackFramesSource, LoadMoreStackFrames } from './debug-stack-frames-source';\nimport { DebugStackFrame } from '../model/debug-stack-frame';\nimport { DebugViewModel } from './debug-view-model';\nimport { DebugCallStackItemTypeKey } from '../debug-call-stack-item-type-key';\nimport { nls } from '@theia/core/lib/common/nls';\n\n@injectable()\nexport class DebugStackFramesWidget extends SourceTreeWidget {\n\n    static CONTEXT_MENU: MenuPath = ['debug-frames-context-menu'];\n    static FACTORY_ID = 'debug:frames';\n    static override createContainer(parent: interfaces.Container): Container {\n        const child = SourceTreeWidget.createContainer(parent, {\n            contextMenuPath: DebugStackFramesWidget.CONTEXT_MENU,\n            virtualized: false,\n            scrollIfActive: true\n        });\n        child.bind(DebugStackFramesSource).toSelf();\n        child.unbind(SourceTreeWidget);\n        child.bind(DebugStackFramesWidget).toSelf();\n        return child;\n    }\n    static createWidget(parent: interfaces.Container): DebugStackFramesWidget {\n        return DebugStackFramesWidget.createContainer(parent).get(DebugStackFramesWidget);\n    }\n\n    @inject(DebugStackFramesSource)\n    protected readonly frames: DebugStackFramesSource;\n\n    @inject(DebugViewModel)\n    protected readonly viewModel: DebugViewModel;\n\n    @inject(DebugCallStackItemTypeKey)\n    protected readonly debugCallStackItemTypeKey: DebugCallStackItemTypeKey;\n\n    @postConstruct()\n    protected override init(): void {\n        super.init();\n        this.id = DebugStackFramesWidget.FACTORY_ID + ':' + this.viewModel.id;\n        this.title.label = nls.localizeByDefault('Call Stack');\n        this.toDispose.push(this.frames);\n        this.source = this.frames;\n\n        this.toDispose.push(this.viewModel.onDidChange(() => this.updateWidgetSelection()));\n        this.toDispose.push(this.model.onNodeRefreshed(() => this.updateWidgetSelection()));\n        this.toDispose.push(this.model.onSelectionChanged(() => this.updateModelSelection()));\n    }\n\n    protected updatingSelection = false;\n    protected async updateWidgetSelection(): Promise<void> {\n        if (this.updatingSelection) {\n            return;\n        }\n        this.updatingSelection = true;\n        try {\n            const { currentFrame } = this.viewModel;\n            if (currentFrame) {\n                const node = this.model.getNode(currentFrame.id);\n                if (SelectableTreeNode.is(node)) {\n                    this.model.selectNode(node);\n                }\n            }\n        } finally {\n            this.updatingSelection = false;\n        }\n    }\n    protected async updateModelSelection(): Promise<void> {\n        if (this.updatingSelection) {\n            return;\n        }\n        this.updatingSelection = true;\n        try {\n            const node = this.model.selectedNodes[0];\n            if (TreeElementNode.is(node)) {\n                if (node.element instanceof DebugStackFrame) {\n                    node.element.thread.currentFrame = node.element;\n                    this.debugCallStackItemTypeKey.set('stackFrame');\n                }\n            }\n        } finally {\n            this.updatingSelection = false;\n        }\n    }\n\n    protected override toContextMenuArgs(node: SelectableTreeNode): [string | number] | undefined {\n        if (TreeElementNode.is(node)) {\n            if (node.element instanceof DebugStackFrame) {\n                const source = node.element.source;\n                if (source) {\n                    if (source.inMemory) {\n                        const path = source.raw.path || source.raw.sourceReference;\n                        if (path !== undefined) {\n                            return [path];\n                        }\n                    } else {\n                        return [source.uri.toString()];\n                    }\n                }\n            }\n        }\n        return undefined;\n    }\n\n    protected override tapNode(node?: TreeNode): void {\n        if (TreeElementNode.is(node) && node.element instanceof LoadMoreStackFrames) {\n            node.element.open();\n        }\n        super.tapNode(node);\n    }\n\n    protected override getDefaultNodeStyle(node: TreeNode, props: NodeProps): React.CSSProperties | undefined {\n        return undefined;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { TreeSource, TreeElement } from '@theia/core/lib/browser/source-tree';\nimport { DebugViewModel } from './debug-view-model';\n\n@injectable()\nexport class DebugThreadsSource extends TreeSource {\n\n    @inject(DebugViewModel)\n    protected readonly model: DebugViewModel;\n\n    @postConstruct()\n    protected init(): void {\n        this.fireDidChange();\n        this.toDispose.push(this.model.onDidChange(() => this.fireDidChange()));\n    }\n\n    get multiSession(): boolean {\n        return this.model.sessionCount > 1;\n    }\n\n    *getElements(): IterableIterator<TreeElement> {\n        if (this.model.sessionCount === 1 && this.model.session && this.model.session.threadCount) {\n            return yield* this.model.session.threads;\n        }\n        for (const session of this.model.sessions) {\n            if (!session.parentSession) {\n                yield session;\n            }\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct, interfaces, Container } from '@theia/core/shared/inversify';\nimport { MenuPath } from '@theia/core';\nimport { TreeNode, NodeProps, SelectableTreeNode } from '@theia/core/lib/browser';\nimport { SourceTreeWidget, TreeElementNode } from '@theia/core/lib/browser/source-tree';\nimport { DebugThreadsSource } from './debug-threads-source';\nimport { DebugSession } from '../debug-session';\nimport { DebugThread } from '../model/debug-thread';\nimport { DebugViewModel } from '../view/debug-view-model';\nimport { DebugCallStackItemTypeKey } from '../debug-call-stack-item-type-key';\nimport { nls } from '@theia/core/lib/common/nls';\n\n@injectable()\nexport class DebugThreadsWidget extends SourceTreeWidget {\n\n    static CONTEXT_MENU: MenuPath = ['debug-threads-context-menu'];\n    static CONTROL_MENU = [...DebugThreadsWidget.CONTEXT_MENU, 'a_control'];\n    static TERMINATE_MENU = [...DebugThreadsWidget.CONTEXT_MENU, 'b_terminate'];\n    static OPEN_MENU = [...DebugThreadsWidget.CONTEXT_MENU, 'c_open'];\n    static FACTORY_ID = 'debug:threads';\n    static override createContainer(parent: interfaces.Container): Container {\n        const child = SourceTreeWidget.createContainer(parent, {\n            contextMenuPath: DebugThreadsWidget.CONTEXT_MENU,\n            virtualized: false,\n            scrollIfActive: true\n        });\n        child.bind(DebugThreadsSource).toSelf();\n        child.unbind(SourceTreeWidget);\n        child.bind(DebugThreadsWidget).toSelf();\n        return child;\n    }\n    static createWidget(parent: interfaces.Container): DebugThreadsWidget {\n        return DebugThreadsWidget.createContainer(parent).get(DebugThreadsWidget);\n    }\n\n    @inject(DebugThreadsSource)\n    protected readonly threads: DebugThreadsSource;\n\n    @inject(DebugViewModel)\n    protected readonly viewModel: DebugViewModel;\n\n    @inject(DebugCallStackItemTypeKey)\n    protected readonly debugCallStackItemTypeKey: DebugCallStackItemTypeKey;\n\n    @postConstruct()\n    protected override init(): void {\n        super.init();\n        this.id = DebugThreadsWidget.FACTORY_ID + ':' + this.viewModel.id;\n        this.title.label = nls.localize('theia/debug/threads', 'Threads');\n        this.toDispose.push(this.threads);\n        this.source = this.threads;\n\n        this.toDispose.push(this.viewModel.onDidChange(() => this.updateWidgetSelection()));\n        this.toDispose.push(this.model.onSelectionChanged(() => this.updateModelSelection()));\n    }\n\n    protected updatingSelection = false;\n    protected updateWidgetSelection(): void {\n        if (this.updatingSelection) {\n            return;\n        }\n        this.updatingSelection = true;\n        try {\n            const { currentThread } = this.viewModel;\n            if (currentThread) {\n                const node = this.model.getNode(currentThread.id);\n                if (SelectableTreeNode.is(node)) {\n                    this.model.selectNode(node);\n                }\n            }\n        } finally {\n            this.updatingSelection = false;\n        }\n    }\n    protected updateModelSelection(): void {\n        if (this.updatingSelection) {\n            return;\n        }\n        this.updatingSelection = true;\n        try {\n            const node = this.model.selectedNodes[0];\n            if (TreeElementNode.is(node)) {\n                if (node.element instanceof DebugSession) {\n                    this.viewModel.currentSession = node.element;\n                    this.debugCallStackItemTypeKey.set('session');\n                } else if (node.element instanceof DebugThread) {\n                    node.element.session.currentThread = node.element;\n                    this.debugCallStackItemTypeKey.set('thread');\n                }\n            }\n        } finally {\n            this.updatingSelection = false;\n        }\n    }\n\n    protected override toContextMenuArgs(node: SelectableTreeNode): [number] | undefined {\n        if (TreeElementNode.is(node) && node.element instanceof DebugThread) {\n            return [node.element.raw.id];\n        }\n        return undefined;\n    }\n\n    protected override getDefaultNodeStyle(node: TreeNode, props: NodeProps): React.CSSProperties | undefined {\n        if (this.threads.multiSession) {\n            return super.getDefaultNodeStyle(node, props);\n        }\n        return undefined;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as React from '@theia/core/shared/react';\nimport { inject, postConstruct, injectable } from '@theia/core/shared/inversify';\nimport { CommandMenuNode, CommandRegistry, CompoundMenuNode, Disposable, DisposableCollection, MenuModelRegistry, MenuPath } from '@theia/core';\nimport { ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nimport { ReactWidget } from '@theia/core/lib/browser/widgets';\nimport { DebugViewModel } from './debug-view-model';\nimport { DebugState } from '../debug-session';\nimport { DebugAction } from './debug-action';\nimport { nls } from '@theia/core/lib/common/nls';\n\n@injectable()\nexport class DebugToolBar extends ReactWidget {\n\n    static readonly MENU: MenuPath = ['debug-toolbar-menu'];\n\n    @inject(CommandRegistry) protected readonly commandRegistry: CommandRegistry;\n    @inject(MenuModelRegistry) protected readonly menuModelRegistry: MenuModelRegistry;\n    @inject(ContextKeyService) protected readonly contextKeyService: ContextKeyService;\n    @inject(DebugViewModel) protected readonly model: DebugViewModel;\n\n    protected readonly onRender = new DisposableCollection();\n\n    @postConstruct()\n    protected init(): void {\n        this.id = 'debug:toolbar:' + this.model.id;\n        this.addClass('debug-toolbar');\n        this.toDispose.push(this.model);\n        this.toDispose.push(this.model.onDidChange(() => this.update()));\n        this.scrollOptions = undefined;\n        this.update();\n    }\n\n    focus(): void {\n        if (!this.doFocus()) {\n            this.onRender.push(Disposable.create(() => this.doFocus()));\n            this.update();\n        }\n    }\n    protected doFocus(): boolean {\n        if (!this.stepRef) {\n            return false;\n        }\n        this.stepRef.focus();\n        return true;\n    }\n    protected stepRef: DebugAction | undefined;\n    protected setStepRef = (stepRef: DebugAction | null) => {\n        this.stepRef = stepRef || undefined;\n        this.onRender.dispose();\n    };\n\n    protected render(): React.ReactNode {\n        const { state } = this.model;\n        return <React.Fragment>\n            {this.renderContributedCommands()}\n            {this.renderContinue()}\n            <DebugAction enabled={state === DebugState.Stopped} run={this.stepOver} label={nls.localizeByDefault('Step Over')}\n                iconClass='debug-step-over' ref={this.setStepRef} />\n            <DebugAction enabled={state === DebugState.Stopped} run={this.stepIn} label={nls.localizeByDefault('Step Into')}\n                iconClass='debug-step-into' />\n            <DebugAction enabled={state === DebugState.Stopped} run={this.stepOut} label={nls.localizeByDefault('Step Out')}\n                iconClass='debug-step-out' />\n            <DebugAction enabled={state !== DebugState.Inactive} run={this.restart} label={nls.localizeByDefault('Restart')}\n                iconClass='debug-restart' />\n            {this.renderStart()}\n        </React.Fragment>;\n    }\n\n    protected renderContributedCommands(): React.ReactNode {\n        const debugActions: React.ReactNode[] = [];\n        // first, search for CompoundMenuNodes:\n        this.menuModelRegistry.getMenu(DebugToolBar.MENU).children.forEach(compoundMenuNode => {\n            if (CompoundMenuNode.is(compoundMenuNode) && this.matchContext(compoundMenuNode.when)) {\n                // second, search for nested CommandMenuNodes:\n                compoundMenuNode.children.forEach(commandMenuNode => {\n                    if (CommandMenuNode.is(commandMenuNode) && this.matchContext(commandMenuNode.when)) {\n                        debugActions.push(this.debugAction(commandMenuNode));\n                    }\n                });\n            }\n        });\n        return debugActions;\n    }\n\n    protected matchContext(when?: string): boolean {\n        return !when || this.contextKeyService.match(when);\n    }\n\n    protected debugAction(commandMenuNode: CommandMenuNode): React.ReactNode {\n        const { command, icon = '', label = '' } = commandMenuNode;\n        if (!label && !icon) {\n            const { when } = commandMenuNode;\n            console.warn(`Neither 'label' nor 'icon' properties were defined for the command menu node. (${JSON.stringify({ command, when })}}. Skipping.`);\n            return;\n        }\n        const run = () => this.commandRegistry.executeCommand(command);\n        return <DebugAction\n            key={command}\n            enabled={true}\n            label={label}\n            iconClass={icon}\n            run={run} />;\n    }\n\n    protected renderStart(): React.ReactNode {\n        const { state } = this.model;\n        if (state === DebugState.Inactive && this.model.sessionCount === 1) {\n            return <DebugAction run={this.start} label={nls.localizeByDefault('Start')} iconClass='debug-start' />;\n        }\n        return <DebugAction enabled={state !== DebugState.Inactive} run={this.stop} label={nls.localizeByDefault('Stop')} iconClass='debug-stop' />;\n    }\n    protected renderContinue(): React.ReactNode {\n        const { state } = this.model;\n        if (state === DebugState.Stopped) {\n            return <DebugAction run={this.continue} label={nls.localizeByDefault('Continue')} iconClass='debug-continue' />;\n        }\n        return <DebugAction enabled={state === DebugState.Running} run={this.pause} label={nls.localizeByDefault('Pause')} iconClass='debug-pause' />;\n    }\n\n    protected start = () => this.model.start();\n    protected restart = () => this.model.restart();\n    protected stop = () => this.model.terminate();\n    protected continue = () => this.model.currentThread && this.model.currentThread.continue();\n    protected pause = () => this.model.currentThread && this.model.currentThread.pause();\n    protected stepOver = () => this.model.currentThread && this.model.currentThread.stepOver();\n    protected stepIn = () => this.model.currentThread && this.model.currentThread.stepIn();\n    protected stepOut = () => this.model.currentThread && this.model.currentThread.stepOut();\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { TreeSource } from '@theia/core/lib/browser/source-tree';\nimport { DebugScope } from '../console/debug-console-items';\nimport { DebugViewModel } from './debug-view-model';\nimport debounce = require('p-debounce');\n\n@injectable()\nexport class DebugVariablesSource extends TreeSource {\n\n    @inject(DebugViewModel)\n    protected readonly model: DebugViewModel;\n\n    @postConstruct()\n    protected init(): void {\n        this.refresh();\n        this.toDispose.push(this.model.onDidChange(() => this.refresh()));\n    }\n\n    protected readonly refresh = debounce(() => this.fireDidChange(), 400);\n\n    async getElements(): Promise<IterableIterator<DebugScope>> {\n        const { currentSession } = this.model;\n        const scopes = currentSession ? await currentSession.getScopes() : [];\n        return scopes[Symbol.iterator]();\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct, interfaces, Container } from '@theia/core/shared/inversify';\nimport { MenuPath } from '@theia/core/lib/common';\nimport { SourceTreeWidget } from '@theia/core/lib/browser/source-tree';\nimport { DebugVariablesSource } from './debug-variables-source';\nimport { DebugViewModel } from './debug-view-model';\nimport { nls } from '@theia/core/lib/common/nls';\n\n@injectable()\nexport class DebugVariablesWidget extends SourceTreeWidget {\n\n    static CONTEXT_MENU: MenuPath = ['debug-variables-context-menu'];\n    static EDIT_MENU: MenuPath = [...DebugVariablesWidget.CONTEXT_MENU, 'a_edit'];\n    static WATCH_MENU: MenuPath = [...DebugVariablesWidget.CONTEXT_MENU, 'b_watch'];\n    static FACTORY_ID = 'debug:variables';\n    static override createContainer(parent: interfaces.Container): Container {\n        const child = SourceTreeWidget.createContainer(parent, {\n            contextMenuPath: DebugVariablesWidget.CONTEXT_MENU,\n            virtualized: false,\n            scrollIfActive: true\n        });\n        child.bind(DebugVariablesSource).toSelf();\n        child.unbind(SourceTreeWidget);\n        child.bind(DebugVariablesWidget).toSelf();\n        return child;\n    }\n    static createWidget(parent: interfaces.Container): DebugVariablesWidget {\n        return DebugVariablesWidget.createContainer(parent).get(DebugVariablesWidget);\n    }\n\n    @inject(DebugViewModel)\n    protected readonly viewModel: DebugViewModel;\n\n    @inject(DebugVariablesSource)\n    protected readonly variables: DebugVariablesSource;\n\n    @postConstruct()\n    protected override init(): void {\n        super.init();\n        this.id = DebugVariablesWidget.FACTORY_ID + ':' + this.viewModel.id;\n        this.title.label = nls.localizeByDefault('Variables');\n        this.toDispose.push(this.variables);\n        this.source = this.variables;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport debounce from 'p-debounce';\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { Disposable, DisposableCollection, Event, Emitter } from '@theia/core/lib/common';\nimport URI from '@theia/core/lib/common/uri';\nimport { DebugSession, DebugState } from '../debug-session';\nimport { DebugSessionManager } from '../debug-session-manager';\nimport { DebugThread } from '../model/debug-thread';\nimport { DebugStackFrame } from '../model/debug-stack-frame';\nimport { DebugSourceBreakpoint } from '../model/debug-source-breakpoint';\nimport { DebugWatchExpression } from './debug-watch-expression';\nimport { DebugWatchManager } from '../debug-watch-manager';\nimport { DebugFunctionBreakpoint } from '../model/debug-function-breakpoint';\nimport { DebugInstructionBreakpoint } from '../model/debug-instruction-breakpoint';\n\n@injectable()\nexport class DebugViewModel implements Disposable {\n\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n    readonly onDidChange: Event<void> = this.onDidChangeEmitter.event;\n    protected fireDidChange(): void {\n        this.refreshWatchExpressions();\n        this.onDidChangeEmitter.fire(undefined);\n    }\n\n    protected readonly onDidChangeBreakpointsEmitter = new Emitter<URI>();\n    readonly onDidChangeBreakpoints: Event<URI> = this.onDidChangeBreakpointsEmitter.event;\n    protected fireDidChangeBreakpoints(uri: URI): void {\n        this.onDidChangeBreakpointsEmitter.fire(uri);\n    }\n\n    protected readonly _watchExpressions = new Map<number, DebugWatchExpression>();\n\n    protected readonly onDidChangeWatchExpressionsEmitter = new Emitter<void>();\n    readonly onDidChangeWatchExpressions = this.onDidChangeWatchExpressionsEmitter.event;\n    protected fireDidChangeWatchExpressions(): void {\n        this.onDidChangeWatchExpressionsEmitter.fire(undefined);\n    }\n\n    protected readonly toDispose = new DisposableCollection(\n        this.onDidChangeEmitter,\n        this.onDidChangeBreakpointsEmitter,\n        this.onDidChangeWatchExpressionsEmitter,\n    );\n\n    @inject(DebugSessionManager)\n    protected readonly manager: DebugSessionManager;\n\n    @inject(DebugWatchManager)\n    protected readonly watch: DebugWatchManager;\n\n    get sessions(): IterableIterator<DebugSession> {\n        return this.manager.sessions[Symbol.iterator]();\n    }\n    get sessionCount(): number {\n        return this.manager.sessions.length;\n    }\n    get session(): DebugSession | undefined {\n        return this.currentSession;\n    }\n    get id(): string {\n        return this.session && this.session.id || '-1';\n    }\n    get label(): string {\n        return this.session && this.session.label || 'Unknown Session';\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.toDispose.push(this.manager.onDidChangeActiveDebugSession(() => {\n            this.fireDidChange();\n        }));\n        this.toDispose.push(this.manager.onDidChange(current => {\n            if (current === this.currentSession) {\n                this.fireDidChange();\n            }\n        }));\n        this.toDispose.push(this.manager.onDidChangeBreakpoints(({ session, uri }) => {\n            if (!session || session === this.currentSession) {\n                this.fireDidChangeBreakpoints(uri);\n            }\n        }));\n        this.updateWatchExpressions();\n        this.toDispose.push(this.watch.onDidChange(() => this.updateWatchExpressions()));\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    get currentSession(): DebugSession | undefined {\n        const { currentSession } = this.manager;\n        return currentSession;\n    }\n    set currentSession(currentSession: DebugSession | undefined) {\n        this.manager.currentSession = currentSession;\n    }\n\n    get state(): DebugState {\n        const { currentSession } = this;\n        return currentSession && currentSession.state || DebugState.Inactive;\n    }\n    get currentThread(): DebugThread | undefined {\n        const { currentSession } = this;\n        return currentSession && currentSession.currentThread;\n    }\n    get currentFrame(): DebugStackFrame | undefined {\n        const { currentThread } = this;\n        return currentThread && currentThread.currentFrame;\n    }\n\n    get breakpoints(): DebugSourceBreakpoint[] {\n        return this.manager.getBreakpoints(this.currentSession);\n    }\n\n    get functionBreakpoints(): DebugFunctionBreakpoint[] {\n        return this.manager.getFunctionBreakpoints(this.currentSession);\n    }\n\n    get instructionBreakpoints(): DebugInstructionBreakpoint[] {\n        return this.manager.getInstructionBreakpoints(this.currentSession);\n    }\n\n    async start(): Promise<void> {\n        const { session } = this;\n        if (!session) {\n            return;\n        }\n        const newSession = await this.manager.start(session.options);\n        if (newSession) {\n            this.fireDidChange();\n        }\n    }\n\n    async restart(): Promise<void> {\n        const { session } = this;\n        if (!session) {\n            return;\n        }\n        await this.manager.restartSession(session);\n        this.fireDidChange();\n    }\n\n    async terminate(): Promise<void> {\n        this.manager.terminateSession();\n    }\n\n    get watchExpressions(): IterableIterator<DebugWatchExpression> {\n        return this._watchExpressions.values();\n    }\n\n    async addWatchExpression(expression: string = ''): Promise<DebugWatchExpression | undefined> {\n        const watchExpression: DebugWatchExpression = new DebugWatchExpression({\n            id: Number.MAX_SAFE_INTEGER,\n            expression,\n            session: () => this.currentSession,\n            remove: () => this.removeWatchExpression(watchExpression),\n            onDidChange: () => { /* no-op */ },\n        });\n        await watchExpression.open();\n        if (!watchExpression.expression) {\n            return undefined;\n        }\n        const id = this.watch.addWatchExpression(watchExpression.expression);\n        return this._watchExpressions.get(id);\n    }\n\n    removeWatchExpressions(): void {\n        this.watch.removeWatchExpressions();\n    }\n\n    removeWatchExpression(expression: DebugWatchExpression): void {\n        this.watch.removeWatchExpression(expression.id);\n    }\n\n    protected updateWatchExpressions(): void {\n        let added = false;\n        const toRemove = new Set(this._watchExpressions.keys());\n        for (const [id, expression] of this.watch.watchExpressions) {\n            toRemove.delete(id);\n            if (!this._watchExpressions.has(id)) {\n                added = true;\n                const watchExpression: DebugWatchExpression = new DebugWatchExpression({\n                    id,\n                    expression,\n                    session: () => this.currentSession,\n                    remove: () => this.removeWatchExpression(watchExpression),\n                    onDidChange: () => this.fireDidChangeWatchExpressions()\n                });\n                this._watchExpressions.set(id, watchExpression);\n                watchExpression.evaluate();\n            }\n        }\n        for (const id of toRemove) {\n            this._watchExpressions.delete(id);\n        }\n        if (added || toRemove.size) {\n            this.fireDidChangeWatchExpressions();\n        }\n    }\n\n    protected refreshWatchExpressionsQueue = Promise.resolve();\n    protected refreshWatchExpressions = debounce(() => {\n        this.refreshWatchExpressionsQueue = this.refreshWatchExpressionsQueue.then(async () => {\n            try {\n                for (const watchExpression of this.watchExpressions) {\n                    await watchExpression.evaluate();\n                }\n            } catch (e) {\n                console.error('Failed to refresh watch expressions: ', e);\n            }\n        });\n    }, 50);\n\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as React from '@theia/core/shared/react';\nimport { SingleTextInputDialog } from '@theia/core/lib/browser/dialogs';\nimport { ExpressionItem, DebugSessionProvider } from '../console/debug-console-items';\nimport { DebugProtocol } from '@vscode/debugprotocol';\nimport { codicon, TREE_NODE_SEGMENT_GROW_CLASS } from '@theia/core/lib/browser';\nimport { nls } from '@theia/core';\n\nexport class DebugWatchExpression extends ExpressionItem {\n\n    readonly id: number;\n    protected isError: boolean;\n\n    constructor(protected readonly options: {\n        id: number,\n        expression: string,\n        session: DebugSessionProvider,\n        remove: () => void,\n        onDidChange: () => void\n    }) {\n        super(options.expression, options.session);\n        this.id = options.id;\n    }\n\n    override async evaluate(): Promise<void> {\n        await super.evaluate('watch');\n    }\n\n    protected override setResult(body?: DebugProtocol.EvaluateResponse['body'], error?: string): void {\n        if (this.options.session()) {\n            super.setResult(body, error);\n            this.isError = !!error;\n        }\n        this.options.onDidChange();\n    }\n\n    override render(): React.ReactNode {\n        return <div className='theia-debug-console-variable theia-debug-watch-expression'>\n            <div className={TREE_NODE_SEGMENT_GROW_CLASS}>\n                <span title={this.type || this._expression} className='name'>{this._expression}: </span>\n                <span title={this._value} ref={this.setValueRef} className={this.isError ? 'watch-error' : ''}>{this._value}</span>\n            </div>\n            <div className={codicon('close', true)} title={nls.localizeByDefault('Remove Expression')} onClick={this.options.remove} />\n        </div>;\n    }\n\n    async open(): Promise<void> {\n        const input = new SingleTextInputDialog({\n            title: nls.localizeByDefault('Edit Expression'),\n            initialValue: this.expression,\n            placeholder: nls.localizeByDefault('Expression to watch')\n        });\n        const newValue = await input.open();\n        if (newValue !== undefined) {\n            this._expression = newValue;\n            await this.evaluate();\n        }\n    }\n\n    get supportCopyValue(): boolean {\n        return !!this.valueRef && document.queryCommandSupported('copy');\n    }\n    copyValue(): void {\n        const selection = document.getSelection();\n        if (this.valueRef && selection) {\n            selection.selectAllChildren(this.valueRef);\n            document.execCommand('copy');\n        }\n    }\n    protected valueRef: HTMLSpanElement | undefined;\n    protected setValueRef = (valueRef: HTMLSpanElement | null) => this.valueRef = valueRef || undefined;\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n// FIXME: refactor extensions to get rid of this file and remove it\n\nexport * from './debug-configuration';\n","// *****************************************************************************\n// Copyright (C) 2022 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { isObject } from '@theia/core/lib/common';\nimport { TaskIdentifier } from '@theia/task/lib/common';\n\nexport const defaultCompound: DebugCompound = { name: 'Compound', configurations: [] };\n\nexport interface DebugCompound {\n    name: string;\n    stopAll?: boolean;\n    preLaunchTask?: string | TaskIdentifier;\n    configurations: (string | { name: string, folder: string })[];\n}\n\nexport namespace DebugCompound {\n    export function is(arg: unknown): arg is DebugCompound {\n        return isObject(arg) && 'name' in arg && 'configurations' in arg;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { isObject } from '@theia/core/lib/common';\nimport { TaskIdentifier } from '@theia/task/lib/common';\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Configuration for a debug adapter session.\n */\nexport interface DebugConfiguration {\n    /**\n     * The type of the debug adapter session.\n     */\n    type: string;\n\n    /**\n     * The name of the debug adapter session.\n     */\n    name: string;\n\n    /**\n     * Additional debug type specific properties.\n     */\n    [key: string]: any;\n\n    parentSessionId?: string;\n\n    lifecycleManagedByParent?: boolean;\n\n    consoleMode?: DebugConsoleMode;\n\n    compact?: boolean;\n\n    /**\n     * The request type of the debug adapter session.\n     */\n    request: string;\n\n    /**\n     * If noDebug is true the launch request should launch the program without enabling debugging.\n     */\n    noDebug?: boolean;\n\n    /**\n     * Optional data from the previous, restarted session.\n     * The data is sent as the 'restart' attribute of the 'terminated' event.\n     * The client should leave the data intact.\n     */\n    __restart?: boolean;\n\n    /** default: neverOpen */\n    openDebug?: 'neverOpen' | 'openOnSessionStart' | 'openOnFirstSessionStart' | 'openOnDebugBreak';\n\n    /** default: neverOpen */\n    internalConsoleOptions?: 'neverOpen' | 'openOnSessionStart' | 'openOnFirstSessionStart'\n\n    /** Task to run before debug session starts */\n    preLaunchTask?: string | TaskIdentifier;\n\n    /** Task to run after debug session ends */\n    postDebugTask?: string | TaskIdentifier;\n\n    /**\n     * When true, a save will not be triggered for open editors when starting a debug session,\n     * regardless of the value of the `debug.saveBeforeStart` setting.\n     */\n    suppressSaveBeforeStart?: boolean;\n\n    /** When true, the window statusbar color will not be changed for this session. */\n    suppressDebugStatusbar?: boolean;\n\n    /** When true, the debug viewlet will not be automatically revealed for this session. */\n    suppressDebugView?: boolean;\n}\nexport namespace DebugConfiguration {\n    export function is(arg: unknown): arg is DebugConfiguration {\n        return isObject(arg) && 'type' in arg && 'name' in arg && 'request' in arg;\n    }\n}\n\nexport interface DebugSessionOptions {\n    lifecycleManagedByParent?: boolean;\n    parentSessionId?: string;\n    consoleMode?: DebugConsoleMode;\n    noDebug?: boolean;\n    compact?: boolean;\n    suppressSaveBeforeStart?: boolean;\n    suppressDebugStatusbar?: boolean;\n    suppressDebugView?: boolean;\n}\n\nexport enum DebugConsoleMode {\n    Separate = 0,\n    MergeWithParent = 1\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Channel, Disposable, Emitter, Event } from '@theia/core';\nimport { ApplicationError } from '@theia/core/lib/common/application-error';\nimport { IJSONSchema, IJSONSchemaSnippet } from '@theia/core/lib/common/json-schema';\nimport { CommandIdVariables } from '@theia/variable-resolver/lib/common/variable-types';\nimport { DebugConfiguration } from './debug-configuration';\n\nexport interface DebuggerDescription {\n    type: string\n    label: string\n}\n\n/**\n * The WS endpoint path to the Debug service.\n */\nexport const DebugPath = '/services/debug';\n\n/**\n * DebugService symbol for DI.\n */\nexport const DebugService = Symbol('DebugService');\n\n/**\n * This service provides functionality to configure and to start a new debug adapter session.\n * The workflow is the following. If user wants to debug an application and\n * there is no debug configuration associated with the application then\n * the list of available providers is requested to create suitable debug configuration.\n * When configuration is chosen it is possible to alter the configuration\n * by filling in missing values or by adding/changing/removing attributes. For this purpose the\n * #resolveDebugConfiguration method is invoked. After that the debug adapter session will be started.\n */\nexport interface DebugService extends Disposable {\n    onDidChangeDebuggers?: Event<void>;\n\n    /**\n     * Finds and returns an array of registered debug types.\n     * @returns An array of registered debug types\n     */\n    debugTypes(): Promise<string[]>;\n\n    getDebuggersForLanguage(language: string): Promise<DebuggerDescription[]>;\n\n    /**\n     * Provide debugger contributed variables\n     * see \"variables\" at https://code.visualstudio.com/api/references/contribution-points#contributes.debuggers\n     */\n    provideDebuggerVariables(debugType: string): Promise<CommandIdVariables>;\n\n    /**\n     * Provides the schema attributes.\n     * @param debugType The registered debug type\n     * @returns An JSON Schema describing the configuration attributes for the given debug type\n     */\n    getSchemaAttributes(debugType: string): Promise<IJSONSchema[]>;\n\n    getConfigurationSnippets(): Promise<IJSONSchemaSnippet[]>;\n\n    /**\n     * Provides initial [debug configuration](#DebugConfiguration).\n     * @param debugType The registered debug type\n     * @returns An array of [debug configurations](#DebugConfiguration)\n     */\n    provideDebugConfigurations(debugType: string, workspaceFolderUri: string | undefined): Promise<DebugConfiguration[]>;\n\n    /**\n     * @returns A Record of debug configuration provider types and a corresponding dynamic debug configurations array\n     */\n    provideDynamicDebugConfigurations?(folder?: string): Promise<Record<string, DebugConfiguration[]>>;\n\n    /**\n     * Provides a dynamic debug configuration matching the name and the provider debug type\n     */\n    fetchDynamicDebugConfiguration(name: string, type: string, folder?: string): Promise<DebugConfiguration | undefined>;\n\n    /**\n     * Resolves a [debug configuration](#DebugConfiguration) by filling in missing values\n     * or by adding/changing/removing attributes before variable substitution.\n     * @param debugConfiguration The [debug configuration](#DebugConfiguration) to resolve.\n     * @returns The resolved debug configuration, undefined or null.\n     */\n    resolveDebugConfiguration(\n        config: DebugConfiguration,\n        workspaceFolderUri: string | undefined\n    ): Promise<DebugConfiguration | undefined | null>;\n\n    /**\n     * Resolves a [debug configuration](#DebugConfiguration) by filling in missing values\n     * or by adding/changing/removing attributes with substituted variables.\n     * @param debugConfiguration The [debug configuration](#DebugConfiguration) to resolve.\n     * @returns The resolved debug configuration, undefined or null.\n     */\n    resolveDebugConfigurationWithSubstitutedVariables(\n        config: DebugConfiguration,\n        workspaceFolderUri: string | undefined\n    ): Promise<DebugConfiguration | undefined | null>;\n\n    /**\n     * Creates a new [debug adapter session](#DebugAdapterSession).\n     * @param config The resolved [debug configuration](#DebugConfiguration).\n     * @param workspaceFolderUri The workspace folder for this sessions or undefined when folderless\n     * @returns The identifier of the created [debug adapter session](#DebugAdapterSession).\n     */\n    createDebugSession(config: DebugConfiguration, workspaceFolderUri: string | undefined): Promise<string>;\n\n    /**\n     * Stop a running session for the given session id.\n     */\n    terminateDebugSession(sessionId: string): Promise<void>;\n\n    /**\n     * Event handle to indicate when one or more dynamic debug configuration providers\n     * have been registered or unregistered.\n     */\n    onDidChangeDebugConfigurationProviders: Event<void>;\n}\n\n/**\n * The endpoint path to the debug adapter session.\n */\nexport const DebugAdapterPath = '/services/debug-adapter';\n\nexport namespace DebugError {\n    export const NotFound = ApplicationError.declare(-41000, (type: string) => ({\n        message: `'${type}' debugger type is not supported.`,\n        data: { type }\n    }));\n}\n\n/**\n * A closeable channel to send debug protocol messages over with error/close handling\n */\nexport interface DebugChannel {\n    send(content: string): void;\n    onMessage(cb: (message: string) => void): void;\n    onError(cb: (reason: unknown) => void): void;\n    onClose(cb: (code: number, reason: string) => void): void;\n    close(): void;\n}\n\n/**\n * A {@link DebugChannel} wrapper implementation that sends and receives messages to/from an underlying {@link Channel}.\n */\nexport class ForwardingDebugChannel implements DebugChannel {\n    private onMessageEmitter = new Emitter<string>();\n\n    constructor(private readonly underlyingChannel: Channel) {\n        this.underlyingChannel.onMessage(msg => this.onMessageEmitter.fire(msg().readString()));\n    }\n\n    send(content: string): void {\n        this.underlyingChannel.getWriteBuffer().writeString(content).commit();\n    }\n\n    onMessage(cb: (message: string) => void): void {\n        this.onMessageEmitter.event(cb);\n    }\n    onError(cb: (reason: unknown) => void): void {\n        this.underlyingChannel.onError(cb);\n    }\n    onClose(cb: (code: number, reason: string) => void): void {\n        this.underlyingChannel.onClose(event => cb(event.code ?? -1, event.reason));\n    }\n\n    close(): void {\n        this.underlyingChannel.close();\n        this.onMessageEmitter.dispose();\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation and others. All rights reserved.\n *  Licensed under the MIT License. See https://github.com/Microsoft/vscode/blob/master/LICENSE.txt for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, DisposableCollection, Event, Emitter } from '@theia/core';\nimport { TrackedRangeStickiness } from '@theia/editor/lib/browser';\nimport * as monaco from '@theia/monaco-editor-core';\n\nexport interface MonacoEditorViewZone extends monaco.editor.IViewZone {\n    id: string;\n}\n\nexport class MonacoEditorZoneWidget implements Disposable {\n\n    private arrow: Arrow | undefined;\n\n    readonly zoneNode = document.createElement('div');\n    readonly containerNode = document.createElement('div');\n\n    protected readonly onDidLayoutChangeEmitter = new Emitter<monaco.editor.IDimension>();\n    readonly onDidLayoutChange: Event<monaco.editor.IDimension> = this.onDidLayoutChangeEmitter.event;\n\n    protected viewZone: MonacoEditorViewZone | undefined;\n\n    protected readonly toHide = new DisposableCollection();\n\n    protected readonly toDispose = new DisposableCollection(\n        this.onDidLayoutChangeEmitter,\n        this.toHide\n    );\n\n    editor: monaco.editor.IStandaloneCodeEditor;\n\n    constructor(\n        editorInstance: monaco.editor.IStandaloneCodeEditor, readonly showArrow: boolean = true\n    ) {\n        this.editor = editorInstance;\n        this.zoneNode.classList.add('zone-widget');\n        this.containerNode.classList.add('zone-widget-container');\n        this.zoneNode.appendChild(this.containerNode);\n        this.updateWidth();\n        this.toDispose.push(this.editor.onDidLayoutChange(info => this.updateWidth(info)));\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n        this.hide();\n    }\n\n    protected _options: MonacoEditorZoneWidget.Options | undefined;\n    get options(): MonacoEditorZoneWidget.Options | undefined {\n        return this.viewZone ? this._options : undefined;\n    }\n\n    hide(): void {\n        this.toHide.dispose();\n    }\n\n    show(options: MonacoEditorZoneWidget.Options): void {\n        let { afterLineNumber, afterColumn, heightInLines } = this._options = { showFrame: true, ...options };\n        const lineHeight = this.editor.getOption(monaco.editor.EditorOption.lineHeight);\n        // adjust heightInLines to viewport\n        const maxHeightInLines = Math.max(12, (this.editor.getLayoutInfo().height / lineHeight) * 0.8);\n        heightInLines = Math.min(heightInLines, maxHeightInLines);\n        let arrowHeight = 0;\n        this.toHide.dispose();\n        this.editor.changeViewZones(accessor => {\n            this.zoneNode.style.top = '-1000px';\n            const domNode = document.createElement('div');\n            domNode.style.overflow = 'hidden';\n            const zone: monaco.editor.IViewZone = {\n                domNode,\n                afterLineNumber,\n                afterColumn,\n                heightInLines,\n                onDomNodeTop: zoneTop => this.updateTop(zoneTop),\n                onComputedHeight: zoneHeight => this.updateHeight(zoneHeight)\n            };\n            this.viewZone = Object.assign(zone, {\n                id: accessor.addZone(zone)\n            });\n            const id = this.viewZone.id;\n            this.toHide.push(Disposable.create(() => {\n                this.editor.changeViewZones(a => a.removeZone(id));\n                this.viewZone = undefined;\n            }));\n            if (this.showArrow) {\n                this.arrow = new Arrow(this.editor);\n                arrowHeight = Math.round(lineHeight / 3);\n                this.arrow.height = arrowHeight;\n                this.arrow.show({ lineNumber: options.afterLineNumber, column: 0 });\n\n                this.toHide.push(this.arrow);\n            }\n            const widget: monaco.editor.IOverlayWidget = {\n                getId: () => 'editor-zone-widget-' + id,\n                getDomNode: () => this.zoneNode,\n                // eslint-disable-next-line no-null/no-null\n                getPosition: () => null!\n            };\n            this.editor.addOverlayWidget(widget);\n            this.toHide.push(Disposable.create(() => this.editor.removeOverlayWidget(widget)));\n        });\n\n        this.containerNode.style.overflow = 'hidden';\n        this.updateContainerHeight(heightInLines * lineHeight);\n\n        const model = this.editor.getModel();\n        if (model) {\n            const revealLineNumber = Math.min(model.getLineCount(), Math.max(1, afterLineNumber + 1));\n            this.editor.revealLine(revealLineNumber, monaco.editor.ScrollType.Smooth);\n        }\n    }\n\n    layout(heightInLines: number): void {\n        if (this.viewZone && this.viewZone.heightInLines !== heightInLines) {\n            this.viewZone.heightInLines = heightInLines;\n            const id = this.viewZone.id;\n            this.editor.changeViewZones(accessor => accessor.layoutZone(id));\n        }\n    }\n\n    protected updateTop(top: number): void {\n        this.zoneNode.style.top = top + (this.showArrow ? 6 : 0) + 'px';\n    }\n    protected updateHeight(zoneHeight: number): void {\n        this.zoneNode.style.height = zoneHeight + 'px';\n        this.updateContainerHeight(zoneHeight);\n    }\n    protected updateContainerHeight(zoneHeight: number): void {\n        const { frameWidth, height } = this.computeContainerHeight(zoneHeight);\n        this.containerNode.style.height = height + 'px';\n        this.containerNode.style.borderTopWidth = frameWidth + 'px';\n        this.containerNode.style.borderBottomWidth = frameWidth + 'px';\n        const width = this.computeWidth();\n        this.onDidLayoutChangeEmitter.fire({ height, width });\n    }\n    protected computeContainerHeight(zoneHeight: number): {\n        height: number,\n        frameWidth: number\n    } {\n        const lineHeight = this.editor.getOption(monaco.editor.EditorOption.lineHeight);\n        const frameWidth = this._options && this._options.frameWidth;\n        const frameThickness = this._options && this._options.showFrame ? Math.round(lineHeight / 9) : 0;\n        return {\n            frameWidth: frameWidth !== undefined ? frameWidth : frameThickness,\n            height: zoneHeight - 2 * frameThickness\n        };\n    }\n\n    protected updateWidth(info: monaco.editor.EditorLayoutInfo = this.editor.getLayoutInfo()): void {\n        const width = this.computeWidth(info);\n        this.zoneNode.style.width = width + 'px';\n        this.zoneNode.style.left = this.computeLeft(info) + 'px';\n    }\n    protected computeWidth(info: monaco.editor.EditorLayoutInfo = this.editor.getLayoutInfo()): number {\n        return info.width - info.minimap.minimapWidth - info.verticalScrollbarWidth;\n    }\n    protected computeLeft(info: monaco.editor.EditorLayoutInfo = this.editor.getLayoutInfo()): number {\n        // If minimap is to the left, we move beyond it\n        if (info.minimap.minimapWidth > 0 && info.minimap.minimapLeft === 0) {\n            return info.minimap.minimapWidth;\n        }\n        return 0;\n    }\n\n}\n\nclass IdGenerator {\n    private lastId: number;\n    constructor(private prefix: string) {\n        this.lastId = 0;\n    }\n\n    nextId(): string {\n        return this.prefix + (++this.lastId);\n    }\n}\n\nclass Arrow implements Disposable {\n\n    private readonly idGenerator = new IdGenerator('.arrow-decoration-');\n\n    private readonly ruleName = this.idGenerator.nextId();\n    private decorations: string[] = [];\n    private _height: number = -1;\n\n    constructor(\n        private readonly _editor: monaco.editor.ICodeEditor\n    ) { }\n\n    dispose(): void {\n        this.hide();\n    }\n\n    set height(value: number) {\n        if (this._height !== value) {\n            this._height = value;\n            this._updateStyle();\n        }\n    }\n\n    private _updateStyle(): void {\n        const style = document.createElement('style');\n        style.type = 'text/css';\n        style.media = 'screen';\n        document.getElementsByTagName('head')[0].appendChild(style);\n        const selector = `.monaco-editor ${this.ruleName}`;\n        const cssText = `border-style: solid; border-color: transparent transparent var(--theia-peekView-border); border-width:\n            ${this._height}px; bottom: -${this._height}px; margin-left: -${this._height}px; `;\n        (<CSSStyleSheet>style.sheet).insertRule(selector + '{' + cssText + '}', 0);\n    }\n\n    show(where: monaco.IPosition): void {\n        this.decorations = this._editor.deltaDecorations(\n            this.decorations,\n            [{ range: monaco.Range.fromPositions(where), options: { className: this.ruleName, stickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges } }]\n        );\n    }\n\n    hide(): void {\n        this._editor.deltaDecorations(this.decorations, []);\n    }\n}\n\nexport namespace MonacoEditorZoneWidget {\n    export interface Options {\n        afterLineNumber: number,\n        afterColumn?: number,\n        heightInLines: number,\n        showFrame?: boolean,\n        frameWidth?: number\n    }\n}\n"],"names":[],"sourceRoot":""}