{"version":3,"file":"vendors-node_modules_theia_monaco_lib_browser_monaco-editor-provider_js.js","mappings":"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","sources":["webpack:///./node_modules/@theia/core/shared/@phosphor/commands/index.js?","webpack:///./node_modules/@theia/monaco/src/browser/monaco-bulk-edit-service.ts?","webpack:///./node_modules/@theia/monaco/src/browser/monaco-color-registry.ts?","webpack:///./node_modules/@theia/monaco/src/browser/monaco-command-service.ts?","webpack:///./node_modules/@theia/monaco/src/browser/monaco-context-menu.ts?","webpack:///./node_modules/@theia/monaco/src/browser/monaco-diff-editor.ts?","webpack:///./node_modules/@theia/monaco/src/browser/monaco-diff-navigator-factory.ts?","webpack:///./node_modules/@theia/monaco/src/browser/monaco-editor-provider.ts?","webpack:///./node_modules/@theia/monaco/src/browser/monaco-editor-service.ts?","webpack:///./node_modules/@theia/monaco/src/browser/monaco-keycode-map.ts?","webpack:///./node_modules/@theia/monaco/src/browser/monaco-quick-input-service.ts?","webpack:///./node_modules/@theia/monaco/src/browser/monaco-resolved-keybinding.ts?"],"sourcesContent":["module.exports = require('@phosphor/commands');\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { MonacoWorkspace } from './monaco-workspace';\nimport {\n    IBulkEditOptions, IBulkEditPreviewHandler, IBulkEditResult, IBulkEditService, ResourceEdit\n} from '@theia/monaco-editor-core/esm/vs/editor/browser/services/bulkEditService';\nimport { IDisposable } from '@theia/monaco-editor-core/esm/vs/base/common/lifecycle';\nimport { WorkspaceEdit } from '@theia/monaco-editor-core/esm/vs/editor/common/languages';\n\n@injectable()\nexport class MonacoBulkEditService implements IBulkEditService {\n    declare readonly _serviceBrand: undefined;\n\n    @inject(MonacoWorkspace)\n    protected readonly workspace: MonacoWorkspace;\n\n    private _previewHandler?: IBulkEditPreviewHandler;\n\n    async apply(editsIn: ResourceEdit[] | WorkspaceEdit, options?: IBulkEditOptions): Promise<IBulkEditResult & { success: boolean }> {\n        const edits = Array.isArray(editsIn) ? editsIn : ResourceEdit.convert(editsIn);\n\n        if (this._previewHandler && (options?.showPreview || edits.some(value => value.metadata?.needsConfirmation))) {\n            editsIn = await this._previewHandler(edits, options);\n            return { ariaSummary: '', success: true };\n        } else {\n            return this.workspace.applyBulkEdit(edits, options);\n        }\n    }\n\n    hasPreviewHandler(): boolean {\n        return Boolean(this._previewHandler);\n    }\n\n    setPreviewHandler(handler: IBulkEditPreviewHandler): IDisposable {\n        this._previewHandler = handler;\n\n        const disposePreviewHandler = () => {\n            if (this._previewHandler === handler) {\n                this._previewHandler = undefined;\n            }\n        };\n\n        return {\n            dispose(): void {\n                disposePreviewHandler();\n            }\n        };\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { ColorRegistry } from '@theia/core/lib/browser/color-registry';\nimport { Color, ColorDefinition } from '@theia/core/lib/common/color';\nimport { Disposable } from '@theia/core/lib/common/disposable';\nimport { ColorDefaults, ColorValue, getColorRegistry } from '@theia/monaco-editor-core/esm/vs/platform/theme/common/colorRegistry';\nimport { StandaloneServices } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneServices';\nimport { IStandaloneThemeService } from '@theia/monaco-editor-core/esm/vs/editor/standalone/common/standaloneTheme';\nimport { Color as MonacoColor, HSLA, RGBA } from '@theia/monaco-editor-core/esm/vs/base/common/color';\nimport * as Colors from '@theia/monaco-editor-core/esm/vs/platform/theme/common/colorRegistry';\n\n@injectable()\nexport class MonacoColorRegistry extends ColorRegistry {\n\n    protected readonly monacoThemeService = StandaloneServices.get(IStandaloneThemeService);\n    protected readonly monacoColorRegistry = getColorRegistry();\n\n    override *getColors(): IterableIterator<string> {\n        for (const { id } of this.monacoColorRegistry.getColors()) {\n            yield id;\n        }\n    }\n\n    override getCurrentColor(id: string): string | undefined {\n        return this.monacoThemeService.getColorTheme().getColor(id)?.toString();\n    }\n\n    getColor(id: string): MonacoColor | undefined {\n        return this.monacoThemeService.getColorTheme().getColor(id);\n    }\n\n    protected override doRegister(definition: ColorDefinition): Disposable {\n        const defaults: ColorDefaults = {\n            dark: this.toColor(definition.defaults?.dark),\n            light: this.toColor(definition.defaults?.light),\n            hcDark: this.toColor(definition.defaults?.hcDark ?? definition.defaults?.hc),\n            hcLight: this.toColor(definition.defaults?.hcLight),\n        };\n        const identifier = this.monacoColorRegistry.registerColor(definition.id, defaults, definition.description);\n        return Disposable.create(() => this.monacoColorRegistry.deregisterColor(identifier));\n    }\n\n    protected toColor(value: Color | undefined): ColorValue | null {\n        if (!value || typeof value === 'string') {\n            return value ?? null; // eslint-disable-line no-null/no-null\n        }\n        if ('kind' in value) {\n            return Colors[value.kind](value.v, value.f);\n        } else if ('r' in value) {\n            const { r, g, b, a } = value;\n            return new MonacoColor(new RGBA(r, g, b, a));\n        } else {\n            const { h, s, l, a } = value;\n            return new MonacoColor(new HSLA(h, s, l, a));\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { CommandRegistry } from '@theia/core/lib/common/command';\nimport { Emitter } from '@theia/core/lib/common/event';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { ICommandEvent, ICommandService } from '@theia/monaco-editor-core/esm/vs/platform/commands/common/commands';\nimport { StandaloneCommandService } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneServices';\nimport * as monaco from '@theia/monaco-editor-core';\n\nexport const MonacoCommandServiceFactory = Symbol('MonacoCommandServiceFactory');\nexport interface MonacoCommandServiceFactory {\n    (): MonacoCommandService;\n}\n\n@injectable()\nexport class MonacoCommandService implements ICommandService, Disposable {\n    declare readonly _serviceBrand: undefined; // Required for type compliance.\n    protected readonly onWillExecuteCommandEmitter = new Emitter<ICommandEvent>();\n    protected readonly onDidExecuteCommandEmitter = new Emitter<ICommandEvent>();\n    protected readonly toDispose = new DisposableCollection(\n        this.onWillExecuteCommandEmitter,\n        this.onDidExecuteCommandEmitter\n    );\n\n    protected delegate: StandaloneCommandService | undefined;\n    protected readonly delegateListeners = new DisposableCollection();\n\n    constructor(\n        @inject(CommandRegistry) protected readonly commandRegistry: CommandRegistry\n    ) {\n        this.toDispose.push(this.commandRegistry.onWillExecuteCommand(e => this.onWillExecuteCommandEmitter.fire(e)));\n        this.toDispose.push(this.commandRegistry.onDidExecuteCommand(e => this.onDidExecuteCommandEmitter.fire(e)));\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    get onWillExecuteCommand(): monaco.IEvent<ICommandEvent> {\n        return this.onWillExecuteCommandEmitter.event;\n    }\n\n    get onDidExecuteCommand(): monaco.IEvent<ICommandEvent> {\n        return this.onDidExecuteCommandEmitter.event;\n    }\n\n    setDelegate(delegate: StandaloneCommandService | undefined): void {\n        if (this.toDispose.disposed) {\n            return;\n        }\n        this.delegateListeners.dispose();\n        this.toDispose.push(this.delegateListeners);\n        this.delegate = delegate;\n        if (this.delegate) {\n            this.delegateListeners.push(this.delegate.onWillExecuteCommand(event =>\n                this.onWillExecuteCommandEmitter.fire(event)\n            ));\n            this.delegateListeners.push(this.delegate.onDidExecuteCommand(event =>\n                this.onDidExecuteCommandEmitter.fire(event)\n            ));\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async executeCommand(commandId: any, ...args: any[]): Promise<any> {\n        try {\n            await this.commandRegistry.executeCommand(commandId, ...args);\n        } catch (e) {\n            if (e.code === 'NO_ACTIVE_HANDLER') {\n                return this.executeMonacoCommand(commandId, ...args);\n            }\n            throw e;\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async executeMonacoCommand(commandId: any, ...args: any[]): Promise<any> {\n        if (this.delegate) {\n            return this.delegate.executeCommand(commandId, ...args);\n        }\n        throw new Error(`command '${commandId}' not found`);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { MenuPath } from '@theia/core/lib/common/menu';\nimport { EDITOR_CONTEXT_MENU } from '@theia/editor/lib/browser';\nimport { ContextMenuRenderer, toAnchor } from '@theia/core/lib/browser';\nimport { Menu } from '@theia/core/shared/@phosphor/widgets';\nimport { CommandRegistry } from '@theia/core/shared/@phosphor/commands';\nimport { IContextMenuService } from '@theia/monaco-editor-core/esm/vs/platform/contextview/browser/contextView';\nimport { IContextMenuDelegate } from '@theia/monaco-editor-core/esm/vs/base/browser/contextmenu';\nimport { MenuItemAction } from '@theia/monaco-editor-core/esm/vs/platform/actions/common/actions';\nimport { Event, Emitter } from '@theia/monaco-editor-core/esm/vs/base/common/event';\n\n@injectable()\nexport class MonacoContextMenuService implements IContextMenuService {\n    declare readonly _serviceBrand: undefined;\n\n    protected readonly onDidShowContextMenuEmitter = new Emitter<void>();\n    get onDidShowContextMenu(): Event<void> {\n        return this.onDidShowContextMenuEmitter.event;\n    };\n    protected readonly onDidHideContextMenuEmitter = new Emitter<void>();\n    get onDidHideContextMenu(): Event<void> {\n        return this.onDidShowContextMenuEmitter.event;\n    };\n\n    constructor(@inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer) {\n    }\n\n    showContextMenu(delegate: IContextMenuDelegate): void {\n        const anchor = toAnchor(delegate.getAnchor());\n        const actions = delegate.getActions();\n        const onHide = () => {\n            delegate.onHide?.(false);\n            this.onDidHideContextMenuEmitter.fire();\n        };\n\n        // Actions for editor context menu come as 'MenuItemAction' items\n        // In case of 'Quick Fix' actions come as 'CodeActionAction' items\n        if (actions.length > 0 && actions[0] instanceof MenuItemAction) {\n            this.contextMenuRenderer.render({\n                menuPath: this.menuPath(),\n                anchor,\n                onHide\n            });\n        } else {\n            const commands = new CommandRegistry();\n            const menu = new Menu({\n                commands\n            });\n\n            for (const action of actions) {\n                const commandId = 'quickfix_' + actions.indexOf(action);\n                commands.addCommand(commandId, {\n                    label: action.label,\n                    className: action.class,\n                    isToggled: () => Boolean(action.checked),\n                    isEnabled: () => action.enabled,\n                    execute: () => action.run()\n                });\n                menu.addItem({\n                    type: 'command',\n                    command: commandId\n                });\n            }\n            menu.aboutToClose.connect(() => onHide());\n            menu.open(anchor.x, anchor.y);\n        }\n        this.onDidShowContextMenuEmitter.fire();\n    }\n\n    protected menuPath(): MenuPath {\n        return EDITOR_CONTEXT_MENU;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport URI from '@theia/core/lib/common/uri';\nimport { Disposable } from '@theia/core/lib/common';\nimport { Dimension, DiffNavigator, DeltaDecorationParams } from '@theia/editor/lib/browser';\nimport { MonacoEditorModel } from './monaco-editor-model';\nimport { EditorServiceOverrides, MonacoEditor, MonacoEditorServices } from './monaco-editor';\nimport { MonacoDiffNavigatorFactory } from './monaco-diff-navigator-factory';\nimport { DiffUris } from '@theia/core/lib/browser/diff-uris';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { IDiffEditorConstructionOptions } from '@theia/monaco-editor-core/esm/vs/editor/browser/editorBrowser';\nimport { IDiffNavigatorOptions } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneEditor';\nimport { StandaloneDiffEditor } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneCodeEditor';\n\nexport namespace MonacoDiffEditor {\n    export interface IOptions extends MonacoEditor.ICommonOptions, IDiffEditorConstructionOptions, IDiffNavigatorOptions {\n    }\n}\n\nexport class MonacoDiffEditor extends MonacoEditor {\n    protected _diffEditor: monaco.editor.IStandaloneDiffEditor;\n    protected _diffNavigator: DiffNavigator;\n\n    constructor(\n        uri: URI,\n        node: HTMLElement,\n        readonly originalModel: MonacoEditorModel,\n        readonly modifiedModel: MonacoEditorModel,\n        services: MonacoEditorServices,\n        protected readonly diffNavigatorFactory: MonacoDiffNavigatorFactory,\n        options?: MonacoDiffEditor.IOptions,\n        override?: EditorServiceOverrides,\n    ) {\n        super(uri, modifiedModel, node, services, options, override);\n        this.documents.add(originalModel);\n        const original = originalModel.textEditorModel;\n        const modified = modifiedModel.textEditorModel;\n        this._diffNavigator = diffNavigatorFactory.createdDiffNavigator(this._diffEditor, options);\n        this._diffEditor.setModel({ original, modified });\n    }\n\n    get diffEditor(): monaco.editor.IStandaloneDiffEditor {\n        return this._diffEditor;\n    }\n\n    get diffNavigator(): DiffNavigator {\n        return this._diffNavigator;\n    }\n\n    protected override create(options?: IDiffEditorConstructionOptions, override?: EditorServiceOverrides): Disposable {\n        const instantiator = this.getInstantiatorWithOverrides(override);\n        /**\n         *  @monaco-uplift. Should be guaranteed to work.\n         *  Incomparable enums prevent TypeScript from believing that public IStandaloneDiffEditor is satisfied by private StandaloneDiffEditor\n         */\n        this._diffEditor = instantiator\n            .createInstance(StandaloneDiffEditor, this.node, { ...options, fixedOverflowWidgets: true }) as unknown as monaco.editor.IStandaloneDiffEditor;\n        this.editor = this._diffEditor.getModifiedEditor();\n        return this._diffEditor;\n    }\n\n    protected override resize(dimension: Dimension | null): void {\n        if (this.node) {\n            const layoutSize = this.computeLayoutSize(this.node, dimension);\n            this._diffEditor.layout(layoutSize);\n        }\n    }\n\n    override isActionSupported(id: string): boolean {\n        const action = this._diffEditor.getSupportedActions().find(a => a.id === id);\n        return !!action && action.isSupported() && super.isActionSupported(id);\n    }\n\n    override deltaDecorations(params: DeltaDecorationParams): string[] {\n        console.warn('`deltaDecorations` should be called on either the original, or the modified editor.');\n        return [];\n    }\n\n    override getResourceUri(): URI {\n        return new URI(this.originalModel.uri);\n    }\n    override createMoveToUri(resourceUri: URI): URI {\n        const [left, right] = DiffUris.decode(this.uri);\n        return DiffUris.encode(left.withPath(resourceUri.path), right.withPath(resourceUri.path));\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { DiffNavigator } from '@theia/editor/lib/browser';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { DiffNavigator as MonacoDiffNavigator } from '@theia/monaco-editor-core/esm/vs/editor/browser/widget/diffNavigator';\nimport { IStandaloneDiffEditor } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneCodeEditor';\n\n@injectable()\nexport class MonacoDiffNavigatorFactory {\n\n    static nullNavigator = <DiffNavigator>{\n        canNavigate: () => false,\n        hasNext: () => false,\n        hasPrevious: () => false,\n        next: () => { },\n        previous: () => { },\n    };\n\n    createdDiffNavigator(editor: IStandaloneDiffEditor | monaco.editor.IStandaloneDiffEditor, options?: monaco.editor.IDiffNavigatorOptions): DiffNavigator {\n        const navigator = new MonacoDiffNavigator(editor as IStandaloneDiffEditor, options);\n        const ensureInitialized = (fwd: boolean) => {\n            if (navigator['nextIdx'] < 0) {\n                navigator['_initIdx'](fwd);\n            }\n        };\n        return {\n            canNavigate: () => navigator.canNavigate(),\n            hasNext: () => {\n                if (navigator.canNavigate()) {\n                    ensureInitialized(true);\n                    return navigator['nextIdx'] + 1 < navigator['ranges'].length;\n                }\n                return false;\n            },\n            hasPrevious: () => {\n                if (navigator.canNavigate()) {\n                    ensureInitialized(false);\n                    return navigator['nextIdx'] > 0;\n                }\n                return false;\n            },\n            next: () => navigator.next(),\n            previous: () => navigator.previous(),\n        };\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport URI from '@theia/core/lib/common/uri';\nimport { EditorPreferenceChange, EditorPreferences, TextEditor, DiffNavigator } from '@theia/editor/lib/browser';\nimport { DiffUris } from '@theia/core/lib/browser/diff-uris';\nimport { inject, injectable, named } from '@theia/core/shared/inversify';\nimport { DisposableCollection, deepClone, Disposable } from '@theia/core/lib/common';\nimport { TextDocumentSaveReason } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { MonacoCommandServiceFactory } from './monaco-command-service';\nimport { MonacoContextMenuService } from './monaco-context-menu';\nimport { MonacoDiffEditor } from './monaco-diff-editor';\nimport { MonacoDiffNavigatorFactory } from './monaco-diff-navigator-factory';\nimport { EditorServiceOverrides, MonacoEditor, MonacoEditorServices } from './monaco-editor';\nimport { MonacoEditorModel, WillSaveMonacoModelEvent } from './monaco-editor-model';\nimport { MonacoEditorService } from './monaco-editor-service';\nimport { MonacoTextModelService } from './monaco-text-model-service';\nimport { MonacoWorkspace } from './monaco-workspace';\nimport { MonacoBulkEditService } from './monaco-bulk-edit-service';\nimport { ApplicationServer } from '@theia/core/lib/common/application-protocol';\nimport { ContributionProvider } from '@theia/core';\nimport { KeybindingRegistry, OpenerService, open, WidgetOpenerOptions, FormatType } from '@theia/core/lib/browser';\nimport { MonacoResolvedKeybinding } from './monaco-resolved-keybinding';\nimport { HttpOpenHandlerOptions } from '@theia/core/lib/browser/http-open-handler';\nimport { MonacoToProtocolConverter } from './monaco-to-protocol-converter';\nimport { ProtocolToMonacoConverter } from './protocol-to-monaco-converter';\nimport { FileSystemPreferences } from '@theia/filesystem/lib/browser';\nimport { MonacoQuickInputImplementation } from './monaco-quick-input-service';\nimport { ContextKeyService } from '@theia/monaco-editor-core/esm/vs/platform/contextkey/browser/contextKeyService';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { OpenerService as MonacoOpenerService } from '@theia/monaco-editor-core/esm/vs/editor/browser/services/openerService';\nimport { StandaloneCommandService, StandaloneServices } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneServices';\nimport { IOpenerService, OpenExternalOptions, OpenInternalOptions } from '@theia/monaco-editor-core/esm/vs/platform/opener/common/opener';\nimport { SimpleKeybinding } from '@theia/monaco-editor-core/esm/vs/base/common/keybindings';\nimport { ICodeEditorService } from '@theia/monaco-editor-core/esm/vs/editor/browser/services/codeEditorService';\nimport { IInstantiationService } from '@theia/monaco-editor-core/esm/vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from '@theia/monaco-editor-core/esm/vs/platform/keybinding/common/keybinding';\nimport { timeoutReject } from '@theia/core/lib/common/promise-util';\nimport { ITextModelService } from '@theia/monaco-editor-core/esm/vs/editor/common/services/resolverService';\nimport { IContextMenuService } from '@theia/monaco-editor-core/esm/vs/platform/contextview/browser/contextView';\nimport { IBulkEditService } from '@theia/monaco-editor-core/esm/vs/editor/browser/services/bulkEditService';\nimport { IContextKeyService } from '@theia/monaco-editor-core/esm/vs/platform/contextkey/common/contextkey';\nimport { IQuickInputService } from '@theia/monaco-editor-core/esm/vs/platform/quickinput/common/quickInput';\nimport { ICommandService } from '@theia/monaco-editor-core/esm/vs/platform/commands/common/commands';\n\nexport const MonacoEditorFactory = Symbol('MonacoEditorFactory');\nexport interface MonacoEditorFactory {\n    readonly scheme: string;\n    create(model: MonacoEditorModel, defaultOptions: MonacoEditor.IOptions, defaultOverrides: EditorServiceOverrides): MonacoEditor;\n}\n\n@injectable()\nexport class MonacoEditorProvider {\n\n    @inject(ContributionProvider)\n    @named(MonacoEditorFactory)\n    protected readonly factories: ContributionProvider<MonacoEditorFactory>;\n\n    @inject(MonacoBulkEditService)\n    protected readonly bulkEditService: MonacoBulkEditService;\n\n    @inject(MonacoEditorServices)\n    protected readonly services: MonacoEditorServices;\n\n    @inject(KeybindingRegistry)\n    protected readonly keybindingRegistry: KeybindingRegistry;\n\n    @inject(OpenerService)\n    protected readonly openerService: OpenerService;\n\n    @inject(FileSystemPreferences)\n    protected readonly filePreferences: FileSystemPreferences;\n\n    @inject(MonacoQuickInputImplementation)\n    protected readonly quickInputService: MonacoQuickInputImplementation;\n\n    protected _current: MonacoEditor | undefined;\n    /**\n     * Returns the last focused MonacoEditor.\n     * It takes into account inline editors as well.\n     * If you are interested only in standalone editors then use `MonacoEditor.getCurrent(EditorManager)`\n     */\n    get current(): MonacoEditor | undefined {\n        return this._current;\n    }\n\n    constructor(\n        @inject(MonacoEditorService) protected readonly codeEditorService: MonacoEditorService,\n        @inject(MonacoTextModelService) protected readonly textModelService: MonacoTextModelService,\n        @inject(MonacoContextMenuService) protected readonly contextMenuService: MonacoContextMenuService,\n        @inject(MonacoToProtocolConverter) protected readonly m2p: MonacoToProtocolConverter,\n        @inject(ProtocolToMonacoConverter) protected readonly p2m: ProtocolToMonacoConverter,\n        @inject(MonacoWorkspace) protected readonly workspace: MonacoWorkspace,\n        @inject(MonacoCommandServiceFactory) protected readonly commandServiceFactory: MonacoCommandServiceFactory,\n        @inject(EditorPreferences) protected readonly editorPreferences: EditorPreferences,\n        @inject(MonacoDiffNavigatorFactory) protected readonly diffNavigatorFactory: MonacoDiffNavigatorFactory,\n        /** @deprecated since 1.6.0 */\n        @inject(ApplicationServer) protected readonly applicationServer: ApplicationServer,\n        @inject(ContextKeyService) protected readonly contextKeyService: ContextKeyService\n    ) {\n        StandaloneServices.initialize({\n            [ICodeEditorService.toString()]: codeEditorService,\n        });\n    }\n\n    protected async getModel(uri: URI, toDispose: DisposableCollection): Promise<MonacoEditorModel> {\n        const reference = await this.textModelService.createModelReference(uri);\n        // if document is invalid makes sure that all events from underlying resource are processed before throwing invalid model\n        if (!reference.object.valid) {\n            await reference.object.sync();\n        }\n        if (!reference.object.valid) {\n            reference.dispose();\n            throw Object.assign(new Error(`'${uri.toString()}' is invalid`), { code: 'MODEL_IS_INVALID' });\n        }\n        toDispose.push(reference);\n        return reference.object;\n    }\n\n    async get(uri: URI): Promise<MonacoEditor> {\n        await this.editorPreferences.ready;\n        return this.doCreateEditor(uri, (override, toDispose) => this.createEditor(uri, override, toDispose));\n    }\n\n    protected async doCreateEditor(uri: URI, factory: (\n        override: EditorServiceOverrides, toDispose: DisposableCollection) => Promise<MonacoEditor>\n    ): Promise<MonacoEditor> {\n        const commandService = this.commandServiceFactory();\n        const domNode = document.createElement('div');\n        const contextKeyService = this.contextKeyService.createScoped(domNode);\n        const { codeEditorService, textModelService, contextMenuService } = this;\n        const workspaceEditService = this.bulkEditService;\n        const toDispose = new DisposableCollection(commandService);\n        const openerService = new MonacoOpenerService(codeEditorService, commandService);\n        openerService.registerOpener({\n            open: (u, options) => this.interceptOpen(u, options)\n        });\n        const overrides: EditorServiceOverrides = [\n            [ICodeEditorService, codeEditorService],\n            [ITextModelService, textModelService],\n            [IContextMenuService, contextMenuService],\n            [IBulkEditService, workspaceEditService],\n            [IContextKeyService, contextKeyService],\n            [IOpenerService, openerService],\n            [IQuickInputService, this.quickInputService],\n            [ICommandService, commandService]\n        ];\n        const editor = await factory(overrides, toDispose);\n        editor.onDispose(() => toDispose.dispose());\n\n        this.injectKeybindingResolver(editor);\n\n        const standaloneCommandService = new StandaloneCommandService(StandaloneServices.get(IInstantiationService));\n        commandService.setDelegate(standaloneCommandService);\n\n        toDispose.push(editor.onFocusChanged(focused => {\n            if (focused) {\n                this._current = editor;\n            }\n        }));\n        toDispose.push(Disposable.create(() => {\n            if (this._current === editor) {\n                this._current = undefined;\n            }\n        }));\n\n        return editor;\n    }\n\n    /**\n     * Intercept internal Monaco open calls and delegate to OpenerService.\n     */\n    protected async interceptOpen(monacoUri: monaco.Uri | string, monacoOptions?: OpenInternalOptions | OpenExternalOptions): Promise<boolean> {\n        let options = undefined;\n        if (monacoOptions) {\n            if ('openToSide' in monacoOptions && monacoOptions.openToSide) {\n                options = Object.assign(options || {}, <WidgetOpenerOptions>{\n                    widgetOptions: {\n                        mode: 'split-right'\n                    }\n                });\n            }\n            if ('openExternal' in monacoOptions && monacoOptions.openExternal) {\n                options = Object.assign(options || {}, <HttpOpenHandlerOptions>{\n                    openExternal: true\n                });\n            }\n        }\n        const uri = new URI(monacoUri.toString());\n        try {\n            await open(this.openerService, uri, options);\n            return true;\n        } catch (e) {\n            console.error(`Fail to open '${uri.toString()}':`, e);\n            return false;\n        }\n    }\n\n    protected injectKeybindingResolver(editor: MonacoEditor): void {\n        const keybindingService = StandaloneServices.get(IKeybindingService);\n        keybindingService.resolveKeybinding = keybinding => [new MonacoResolvedKeybinding(MonacoResolvedKeybinding.keySequence(keybinding), this.keybindingRegistry)];\n        keybindingService.resolveKeyboardEvent = keyboardEvent => {\n            const keybinding = new SimpleKeybinding(\n                keyboardEvent.ctrlKey,\n                keyboardEvent.shiftKey,\n                keyboardEvent.altKey,\n                keyboardEvent.metaKey,\n                keyboardEvent.keyCode\n            ).toChord();\n            return new MonacoResolvedKeybinding(MonacoResolvedKeybinding.keySequence(keybinding), this.keybindingRegistry);\n        };\n    }\n\n    protected createEditor(uri: URI, override: EditorServiceOverrides, toDispose: DisposableCollection): Promise<MonacoEditor> {\n        if (DiffUris.isDiffUri(uri)) {\n            return this.createMonacoDiffEditor(uri, override, toDispose);\n        }\n        return this.createMonacoEditor(uri, override, toDispose);\n    }\n\n    protected get preferencePrefixes(): string[] {\n        return ['editor.'];\n    }\n    async createMonacoEditor(uri: URI, override: EditorServiceOverrides, toDispose: DisposableCollection): Promise<MonacoEditor> {\n        const model = await this.getModel(uri, toDispose);\n        const options = this.createMonacoEditorOptions(model);\n        const factory = this.factories.getContributions().find(({ scheme }) => uri.scheme === scheme);\n        const editor = factory\n            ? factory.create(model, options, override)\n            : new MonacoEditor(uri, model, document.createElement('div'), this.services, options, override);\n        toDispose.push(this.editorPreferences.onPreferenceChanged(event => {\n            if (event.affects(uri.toString(), model.languageId)) {\n                this.updateMonacoEditorOptions(editor, event);\n            }\n        }));\n        toDispose.push(editor.onLanguageChanged(() => this.updateMonacoEditorOptions(editor)));\n        editor.document.onWillSaveModel(event => event.waitUntil(this.formatOnSave(editor, event)));\n        return editor;\n    }\n    protected createMonacoEditorOptions(model: MonacoEditorModel): MonacoEditor.IOptions {\n        const options = this.createOptions(this.preferencePrefixes, model.uri, model.languageId);\n        options.model = model.textEditorModel;\n        options.readOnly = model.readOnly;\n        options.lineNumbersMinChars = model.lineNumbersMinChars;\n        return options;\n    }\n    protected updateMonacoEditorOptions(editor: MonacoEditor, event?: EditorPreferenceChange): void {\n        if (event) {\n            const preferenceName = event.preferenceName;\n            const overrideIdentifier = editor.document.languageId;\n            const newValue = this.editorPreferences.get({ preferenceName, overrideIdentifier }, undefined, editor.uri.toString());\n            editor.getControl().updateOptions(this.setOption(preferenceName, newValue, this.preferencePrefixes));\n        } else {\n            const options = this.createMonacoEditorOptions(editor.document);\n            delete options.model;\n            editor.getControl().updateOptions(options);\n        }\n    }\n\n    protected shouldFormat(editor: MonacoEditor, event: WillSaveMonacoModelEvent): boolean {\n        if (event.reason !== TextDocumentSaveReason.Manual) {\n            return false;\n        }\n        if (event.options?.formatType) {\n            switch (event.options.formatType) {\n                case FormatType.ON: return true;\n                case FormatType.OFF: return false;\n                case FormatType.DIRTY: return editor.document.dirty;\n            }\n        }\n        return true;\n    }\n\n    protected async formatOnSave(editor: MonacoEditor, event: WillSaveMonacoModelEvent): Promise<monaco.editor.IIdentifiedSingleEditOperation[]> {\n        if (!this.shouldFormat(editor, event)) {\n            return [];\n        }\n        const overrideIdentifier = editor.document.languageId;\n        const uri = editor.uri.toString();\n        const formatOnSave = this.editorPreferences.get({ preferenceName: 'editor.formatOnSave', overrideIdentifier }, undefined, uri);\n        if (formatOnSave) {\n            const formatOnSaveTimeout = this.editorPreferences.get({ preferenceName: 'editor.formatOnSaveTimeout', overrideIdentifier }, undefined, uri)!;\n            await Promise.race([\n                timeoutReject(formatOnSaveTimeout, `Aborted format on save after ${formatOnSaveTimeout}ms`),\n                editor.runAction('editor.action.formatDocument')\n            ]);\n        }\n        const shouldRemoveWhiteSpace = this.filePreferences.get({ preferenceName: 'files.trimTrailingWhitespace', overrideIdentifier }, undefined, uri);\n        if (shouldRemoveWhiteSpace) {\n            await editor.runAction('editor.action.trimTrailingWhitespace');\n        }\n        return [];\n    }\n\n    protected get diffPreferencePrefixes(): string[] {\n        return [...this.preferencePrefixes, 'diffEditor.'];\n    }\n    protected async createMonacoDiffEditor(uri: URI, override: EditorServiceOverrides, toDispose: DisposableCollection): Promise<MonacoDiffEditor> {\n        const [original, modified] = DiffUris.decode(uri);\n\n        const [originalModel, modifiedModel] = await Promise.all([this.getModel(original, toDispose), this.getModel(modified, toDispose)]);\n\n        const options = this.createMonacoDiffEditorOptions(originalModel, modifiedModel);\n        const editor = new MonacoDiffEditor(\n            uri,\n            document.createElement('div'),\n            originalModel, modifiedModel,\n            this.services,\n            this.diffNavigatorFactory,\n            options,\n            override);\n        toDispose.push(this.editorPreferences.onPreferenceChanged(event => {\n            const originalFileUri = original.withoutQuery().withScheme('file').toString();\n            if (event.affects(originalFileUri, editor.document.languageId)) {\n                this.updateMonacoDiffEditorOptions(editor, event, originalFileUri);\n            }\n        }));\n        toDispose.push(editor.onLanguageChanged(() => this.updateMonacoDiffEditorOptions(editor)));\n        return editor;\n    }\n    protected createMonacoDiffEditorOptions(original: MonacoEditorModel, modified: MonacoEditorModel): MonacoDiffEditor.IOptions {\n        const options = this.createOptions(this.diffPreferencePrefixes, modified.uri, modified.languageId);\n        options.originalEditable = !original.readOnly;\n        options.readOnly = modified.readOnly;\n        return options;\n    }\n    protected updateMonacoDiffEditorOptions(editor: MonacoDiffEditor, event?: EditorPreferenceChange, resourceUri?: string): void {\n        if (event) {\n            const preferenceName = event.preferenceName;\n            const overrideIdentifier = editor.document.languageId;\n            const newValue = this.editorPreferences.get({ preferenceName, overrideIdentifier }, undefined, resourceUri);\n            editor.diffEditor.updateOptions(this.setOption(preferenceName, newValue, this.diffPreferencePrefixes));\n        } else {\n            const options = this.createMonacoDiffEditorOptions(editor.originalModel, editor.modifiedModel);\n            editor.diffEditor.updateOptions(options);\n        }\n    }\n\n    /** @deprecated always pass a language as an overrideIdentifier */\n    protected createOptions(prefixes: string[], uri: string): Record<string, any>;\n    protected createOptions(prefixes: string[], uri: string, overrideIdentifier: string): Record<string, any>;\n    protected createOptions(prefixes: string[], uri: string, overrideIdentifier?: string): Record<string, any> {\n        const flat: Record<string, any> = {};\n        for (const preferenceName of Object.keys(this.editorPreferences)) {\n            flat[preferenceName] = (<any>this.editorPreferences).get({ preferenceName, overrideIdentifier }, undefined, uri);\n        }\n        return Object.entries(flat).reduce((tree, [preferenceName, value]) => this.setOption(preferenceName, deepClone(value), prefixes, tree), {});\n    }\n\n    protected setOption(preferenceName: string, value: any, prefixes: string[], options: Record<string, any> = {}): {\n        [name: string]: any;\n    } {\n        const optionName = this.toOptionName(preferenceName, prefixes);\n        this.doSetOption(options, value, optionName.split('.'));\n        return options;\n    }\n    protected toOptionName(preferenceName: string, prefixes: string[]): string {\n        for (const prefix of prefixes) {\n            if (preferenceName.startsWith(prefix)) {\n                return preferenceName.substring(prefix.length);\n            }\n        }\n        return preferenceName;\n    }\n    protected doSetOption(obj: Record<string, any>, value: any, names: string[]): void {\n        for (let i = 0; i < names.length - 1; i++) {\n            const name = names[i];\n            if (obj[name] === undefined) {\n                obj = obj[name] = {};\n            } else if (typeof obj[name] !== 'object' || obj[name] === null) { // eslint-disable-line no-null/no-null\n                console.warn(`Preference (diff)editor.${names.join('.')} conflicts with another preference name.`);\n                obj = obj[name] = {};\n            } else {\n                obj = obj[name];\n            }\n        }\n        obj[names[names.length - 1]] = value;\n    }\n\n    getDiffNavigator(editor: TextEditor): DiffNavigator {\n        if (editor instanceof MonacoDiffEditor) {\n            return editor.diffNavigator;\n        }\n        return MonacoDiffNavigatorFactory.nullNavigator;\n    }\n\n    async createInline(uri: URI, node: HTMLElement, options?: MonacoEditor.IOptions): Promise<MonacoEditor> {\n        return this.doCreateEditor(uri, async (override, toDispose) => {\n            const overrides = override ? Array.from(override) : [];\n            overrides.push([IContextMenuService, { showContextMenu: () => {/** no op! */ } }]);\n            const document = new MonacoEditorModel({\n                    uri,\n                    readContents: async () => '',\n                    dispose: () => { }\n                }, this.m2p, this.p2m);\n            toDispose.push(document);\n            const model = (await document.load()).textEditorModel;\n            return new MonacoEditor(\n                uri,\n                document,\n                node,\n                this.services,\n                Object.assign({\n                    model,\n                    isSimpleWidget: true,\n                    autoSizing: false,\n                    minHeight: 1,\n                    maxHeight: 1\n                }, MonacoEditorProvider.inlineOptions, options),\n                overrides\n            );\n        });\n    }\n\n    static inlineOptions: monaco.editor.IEditorConstructionOptions = {\n        wordWrap: 'on',\n        overviewRulerLanes: 0,\n        glyphMargin: false,\n        lineNumbers: 'off',\n        folding: false,\n        selectOnLineNumbers: false,\n        hideCursorInOverviewRuler: true,\n        selectionHighlight: false,\n        scrollbar: {\n            horizontal: 'hidden'\n        },\n        lineDecorationsWidth: 0,\n        overviewRulerBorder: false,\n        scrollBeyondLastLine: false,\n        renderLineHighlight: 'none',\n        fixedOverflowWidgets: true,\n        acceptSuggestionOnEnter: 'smart',\n        minimap: {\n            enabled: false\n        }\n    };\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, decorate } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { OpenerService, open, WidgetOpenMode, ApplicationShell, PreferenceService } from '@theia/core/lib/browser';\nimport { EditorWidget, EditorOpenerOptions, EditorManager, CustomEditorWidget } from '@theia/editor/lib/browser';\nimport { MonacoEditor } from './monaco-editor';\nimport { MonacoToProtocolConverter } from './monaco-to-protocol-converter';\nimport { MonacoEditorModel } from './monaco-editor-model';\nimport { IResourceEditorInput, ITextResourceEditorInput } from '@theia/monaco-editor-core/esm/vs/platform/editor/common/editor';\nimport { StandaloneServices } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneServices';\nimport { IStandaloneThemeService } from '@theia/monaco-editor-core/esm/vs/editor/standalone/common/standaloneTheme';\nimport { StandaloneCodeEditorService } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneCodeEditorService';\nimport { StandaloneCodeEditor } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneCodeEditor';\nimport { ICodeEditor } from '@theia/monaco-editor-core/esm/vs/editor/browser/editorBrowser';\nimport { ContextKeyService as VSCodeContextKeyService } from '@theia/monaco-editor-core/esm/vs/platform/contextkey/browser/contextKeyService';\n\ndecorate(injectable(), StandaloneCodeEditorService);\n\n@injectable()\nexport class MonacoEditorService extends StandaloneCodeEditorService {\n\n    public static readonly ENABLE_PREVIEW_PREFERENCE: string = 'editor.enablePreview';\n\n    @inject(OpenerService)\n    protected readonly openerService: OpenerService;\n\n    @inject(MonacoToProtocolConverter)\n    protected readonly m2p: MonacoToProtocolConverter;\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    @inject(EditorManager)\n    protected readonly editors: EditorManager;\n\n    @inject(PreferenceService)\n    protected readonly preferencesService: PreferenceService;\n\n    constructor(@inject(VSCodeContextKeyService) contextKeyService: VSCodeContextKeyService) {\n        super(contextKeyService, StandaloneServices.get(IStandaloneThemeService));\n    }\n\n    /**\n     * Monaco active editor is either focused or last focused editor.\n     */\n    override getActiveCodeEditor(): StandaloneCodeEditor | null {\n        let editor = MonacoEditor.getCurrent(this.editors);\n        if (!editor && CustomEditorWidget.is(this.shell.activeWidget)) {\n            const model = this.shell.activeWidget.modelRef.object;\n            if (model.editorTextModel instanceof MonacoEditorModel) {\n                editor = MonacoEditor.findByDocument(this.editors, model.editorTextModel)[0];\n            }\n        }\n        const candidate = editor?.getControl();\n        // Since we extend a private super class, we have to check that the thing that matches the public interface also matches the private expectations the superclass.\n        /* eslint-disable-next-line no-null/no-null */\n        return candidate instanceof StandaloneCodeEditor ? candidate : null;\n    }\n\n    override async openCodeEditor(input: IResourceEditorInput, source: ICodeEditor | null, sideBySide?: boolean): Promise<ICodeEditor | null> {\n        const uri = new URI(input.resource.toString());\n        const openerOptions = this.createEditorOpenerOptions(input, source, sideBySide);\n        const widget = await open(this.openerService, uri, openerOptions);\n        const editorWidget = await this.findEditorWidgetByUri(widget, uri.toString());\n        if (editorWidget && editorWidget.editor instanceof MonacoEditor) {\n            const candidate = editorWidget.editor.getControl();\n            // Since we extend a private super class, we have to check that the thing that matches the public interface also matches the private expectations the superclass.\n            // eslint-disable-next-line no-null/no-null\n            return candidate instanceof StandaloneCodeEditor ? candidate : null;\n        }\n        // eslint-disable-next-line no-null/no-null\n        return null;\n    }\n\n    protected async findEditorWidgetByUri(widget: object | undefined, uriAsString: string): Promise<EditorWidget | undefined> {\n        if (widget instanceof EditorWidget) {\n            if (widget.editor.uri.toString() === uriAsString) {\n                return widget;\n            }\n            return undefined;\n        }\n        if (ApplicationShell.TrackableWidgetProvider.is(widget)) {\n            for (const childWidget of widget.getTrackableWidgets()) {\n                const editorWidget = await this.findEditorWidgetByUri(childWidget, uriAsString);\n                if (editorWidget) {\n                    return editorWidget;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    protected createEditorOpenerOptions(input: IResourceEditorInput | ITextResourceEditorInput, source: ICodeEditor | null, sideBySide?: boolean): EditorOpenerOptions {\n        const mode = this.getEditorOpenMode(input);\n        const widgetOptions = this.getWidgetOptions(source, sideBySide);\n        const selection = this.getSelection(input);\n        const preview = !!this.preferencesService.get<boolean>(MonacoEditorService.ENABLE_PREVIEW_PREFERENCE, false);\n        return { mode, widgetOptions, preview, selection };\n    }\n\n    protected getSelection(input: IResourceEditorInput | ITextResourceEditorInput): EditorOpenerOptions['selection'] {\n        if ('options' in input && input.options && 'selection' in input.options) {\n            return this.m2p.asRange(input.options.selection);\n        }\n    }\n\n    protected getEditorOpenMode(input: IResourceEditorInput): WidgetOpenMode {\n        const options = {\n            preserveFocus: false,\n            revealIfVisible: true,\n            ...input.options\n        };\n        if (options.preserveFocus) {\n            return 'reveal';\n        }\n        return options.revealIfVisible ? 'activate' : 'open';\n    }\n\n    protected getWidgetOptions(source: ICodeEditor | null, sideBySide?: boolean): ApplicationShell.WidgetOptions | undefined {\n        const ref = MonacoEditor.getWidgetFor(this.editors, source);\n        if (!ref) {\n            return undefined;\n        }\n        const area = (ref && this.shell.getAreaFor(ref)) || 'main';\n        const mode = ref && sideBySide ? 'split-right' : undefined;\n        return { area, mode, ref };\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as browser from '@theia/core/lib/browser';\n// This is exported as part of the public API, but we use it with private API's so we need to refer to the private version.\nimport { KeyCode } from '@theia/monaco-editor-core/esm/vs/base/common/keyCodes';\nimport * as MonacoPlatform from '@theia/monaco-editor-core/esm/vs/base/common/platform';\n\nexport const KEY_CODE_MAP: KeyCode[] = [];\n(function (): void {\n    KEY_CODE_MAP[3] = KeyCode.PauseBreak; // VK_CANCEL 0x03 Control-break processing\n    KEY_CODE_MAP[8] = KeyCode.Backspace;\n    KEY_CODE_MAP[9] = KeyCode.Tab;\n    KEY_CODE_MAP[13] = KeyCode.Enter;\n    KEY_CODE_MAP[16] = KeyCode.Shift;\n    KEY_CODE_MAP[17] = KeyCode.Ctrl;\n    KEY_CODE_MAP[18] = KeyCode.Alt;\n    KEY_CODE_MAP[19] = KeyCode.PauseBreak;\n    KEY_CODE_MAP[20] = KeyCode.CapsLock;\n    KEY_CODE_MAP[27] = KeyCode.Escape;\n    KEY_CODE_MAP[32] = KeyCode.Space;\n    KEY_CODE_MAP[33] = KeyCode.PageUp;\n    KEY_CODE_MAP[34] = KeyCode.PageDown;\n    KEY_CODE_MAP[35] = KeyCode.End;\n    KEY_CODE_MAP[36] = KeyCode.Home;\n    KEY_CODE_MAP[37] = KeyCode.LeftArrow;\n    KEY_CODE_MAP[38] = KeyCode.UpArrow;\n    KEY_CODE_MAP[39] = KeyCode.RightArrow;\n    KEY_CODE_MAP[40] = KeyCode.DownArrow;\n    KEY_CODE_MAP[45] = KeyCode.Insert;\n    KEY_CODE_MAP[46] = KeyCode.Delete;\n\n    KEY_CODE_MAP[48] = KeyCode.Digit0;\n    KEY_CODE_MAP[49] = KeyCode.Digit1;\n    KEY_CODE_MAP[50] = KeyCode.Digit2;\n    KEY_CODE_MAP[51] = KeyCode.Digit3;\n    KEY_CODE_MAP[52] = KeyCode.Digit4;\n    KEY_CODE_MAP[53] = KeyCode.Digit5;\n    KEY_CODE_MAP[54] = KeyCode.Digit6;\n    KEY_CODE_MAP[55] = KeyCode.Digit7;\n    KEY_CODE_MAP[56] = KeyCode.Digit8;\n    KEY_CODE_MAP[57] = KeyCode.Digit9;\n\n    KEY_CODE_MAP[65] = KeyCode.KeyA;\n    KEY_CODE_MAP[66] = KeyCode.KeyB;\n    KEY_CODE_MAP[67] = KeyCode.KeyC;\n    KEY_CODE_MAP[68] = KeyCode.KeyD;\n    KEY_CODE_MAP[69] = KeyCode.KeyE;\n    KEY_CODE_MAP[70] = KeyCode.KeyF;\n    KEY_CODE_MAP[71] = KeyCode.KeyG;\n    KEY_CODE_MAP[72] = KeyCode.KeyH;\n    KEY_CODE_MAP[73] = KeyCode.KeyI;\n    KEY_CODE_MAP[74] = KeyCode.KeyJ;\n    KEY_CODE_MAP[75] = KeyCode.KeyK;\n    KEY_CODE_MAP[76] = KeyCode.KeyL;\n    KEY_CODE_MAP[77] = KeyCode.KeyM;\n    KEY_CODE_MAP[78] = KeyCode.KeyN;\n    KEY_CODE_MAP[79] = KeyCode.KeyO;\n    KEY_CODE_MAP[80] = KeyCode.KeyP;\n    KEY_CODE_MAP[81] = KeyCode.KeyQ;\n    KEY_CODE_MAP[82] = KeyCode.KeyR;\n    KEY_CODE_MAP[83] = KeyCode.KeyS;\n    KEY_CODE_MAP[84] = KeyCode.KeyT;\n    KEY_CODE_MAP[85] = KeyCode.KeyU;\n    KEY_CODE_MAP[86] = KeyCode.KeyV;\n    KEY_CODE_MAP[87] = KeyCode.KeyW;\n    KEY_CODE_MAP[88] = KeyCode.KeyX;\n    KEY_CODE_MAP[89] = KeyCode.KeyY;\n    KEY_CODE_MAP[90] = KeyCode.KeyZ;\n\n    KEY_CODE_MAP[93] = KeyCode.ContextMenu;\n\n    KEY_CODE_MAP[96] = KeyCode.Numpad0;\n    KEY_CODE_MAP[97] = KeyCode.Numpad1;\n    KEY_CODE_MAP[98] = KeyCode.Numpad2;\n    KEY_CODE_MAP[99] = KeyCode.Numpad3;\n    KEY_CODE_MAP[100] = KeyCode.Numpad4;\n    KEY_CODE_MAP[101] = KeyCode.Numpad5;\n    KEY_CODE_MAP[102] = KeyCode.Numpad6;\n    KEY_CODE_MAP[103] = KeyCode.Numpad7;\n    KEY_CODE_MAP[104] = KeyCode.Numpad8;\n    KEY_CODE_MAP[105] = KeyCode.Numpad9;\n    KEY_CODE_MAP[106] = KeyCode.NumpadMultiply;\n    KEY_CODE_MAP[107] = KeyCode.NumpadAdd;\n    KEY_CODE_MAP[108] = KeyCode.NUMPAD_SEPARATOR;\n    KEY_CODE_MAP[109] = KeyCode.NumpadSubtract;\n    KEY_CODE_MAP[110] = KeyCode.NumpadDecimal;\n    KEY_CODE_MAP[111] = KeyCode.NumpadDivide;\n\n    KEY_CODE_MAP[112] = KeyCode.F1;\n    KEY_CODE_MAP[113] = KeyCode.F2;\n    KEY_CODE_MAP[114] = KeyCode.F3;\n    KEY_CODE_MAP[115] = KeyCode.F4;\n    KEY_CODE_MAP[116] = KeyCode.F5;\n    KEY_CODE_MAP[117] = KeyCode.F6;\n    KEY_CODE_MAP[118] = KeyCode.F7;\n    KEY_CODE_MAP[119] = KeyCode.F8;\n    KEY_CODE_MAP[120] = KeyCode.F9;\n    KEY_CODE_MAP[121] = KeyCode.F10;\n    KEY_CODE_MAP[122] = KeyCode.F11;\n    KEY_CODE_MAP[123] = KeyCode.F12;\n    KEY_CODE_MAP[124] = KeyCode.F13;\n    KEY_CODE_MAP[125] = KeyCode.F14;\n    KEY_CODE_MAP[126] = KeyCode.F15;\n    KEY_CODE_MAP[127] = KeyCode.F16;\n    KEY_CODE_MAP[128] = KeyCode.F17;\n    KEY_CODE_MAP[129] = KeyCode.F18;\n    KEY_CODE_MAP[130] = KeyCode.F19;\n\n    KEY_CODE_MAP[144] = KeyCode.NumLock;\n    KEY_CODE_MAP[145] = KeyCode.ScrollLock;\n\n    KEY_CODE_MAP[186] = KeyCode.Semicolon;\n    KEY_CODE_MAP[187] = KeyCode.Equal;\n    KEY_CODE_MAP[188] = KeyCode.Comma;\n    KEY_CODE_MAP[189] = KeyCode.Minus;\n    KEY_CODE_MAP[190] = KeyCode.Period;\n    KEY_CODE_MAP[191] = KeyCode.Slash;\n    KEY_CODE_MAP[192] = KeyCode.Backquote;\n    KEY_CODE_MAP[193] = KeyCode.ABNT_C1;\n    KEY_CODE_MAP[194] = KeyCode.ABNT_C2;\n    KEY_CODE_MAP[219] = KeyCode.BracketLeft;\n    KEY_CODE_MAP[220] = KeyCode.Backslash;\n    KEY_CODE_MAP[221] = KeyCode.BracketRight;\n    KEY_CODE_MAP[222] = KeyCode.Quote;\n    KEY_CODE_MAP[223] = KeyCode.OEM_8;\n\n    KEY_CODE_MAP[226] = KeyCode.IntlBackslash;\n\n    /**\n     * https://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n     * If an Input Method Editor is processing key input and the event is keydown, return 229.\n     */\n    KEY_CODE_MAP[229] = KeyCode.KEY_IN_COMPOSITION;\n\n    if (browser.isIE) {\n        KEY_CODE_MAP[91] = KeyCode.Meta;\n    } else if (browser.isFirefox) {\n        KEY_CODE_MAP[59] = KeyCode.Semicolon;\n        KEY_CODE_MAP[107] = KeyCode.Equal;\n        KEY_CODE_MAP[109] = KeyCode.Minus;\n        if (MonacoPlatform.OS === MonacoPlatform.OperatingSystem.Macintosh) {\n            KEY_CODE_MAP[224] = KeyCode.Meta;\n        }\n    } else if (browser.isWebKit) {\n        KEY_CODE_MAP[91] = KeyCode.Meta;\n        if (MonacoPlatform.OS === MonacoPlatform.OperatingSystem.Macintosh) {\n            // the two meta keys in the Mac have different key codes (91 and 93)\n            KEY_CODE_MAP[93] = KeyCode.Meta;\n        } else {\n            KEY_CODE_MAP[92] = KeyCode.Meta;\n        }\n    }\n})();\n","// *****************************************************************************\n// Copyright (C) 2021 SAP SE or an SAP affiliate company and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport {\n    ApplicationShell,\n    InputBox, InputOptions, KeybindingRegistry, NormalizedQuickInputButton, PickOptions,\n    QuickInputButton, QuickInputHideReason, QuickInputService, QuickPick, QuickPickItem,\n    QuickPickItemButtonEvent, QuickPickItemHighlights, QuickPickOptions, QuickPickSeparator, codiconArray\n} from '@theia/core/lib/browser';\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport {\n    IInputBox, IInputOptions, IKeyMods, IPickOptions, IQuickInput, IQuickInputButton,\n    IQuickInputService, IQuickNavigateConfiguration, IQuickPick, IQuickPickItem, IQuickPickItemButtonEvent, IQuickPickSeparator, QuickPickInput\n} from '@theia/monaco-editor-core/esm/vs/platform/quickinput/common/quickInput';\nimport { IQuickInputOptions, IQuickInputStyles, QuickInputController } from '@theia/monaco-editor-core/esm/vs/base/parts/quickinput/browser/quickInput';\nimport { MonacoResolvedKeybinding } from './monaco-resolved-keybinding';\nimport { IQuickAccessController } from '@theia/monaco-editor-core/esm/vs/platform/quickinput/common/quickAccess';\nimport { QuickAccessController } from '@theia/monaco-editor-core/esm/vs/platform/quickinput/browser/quickAccess';\nimport { ContextKeyService as VSCodeContextKeyService } from '@theia/monaco-editor-core/esm/vs/platform/contextkey/browser/contextKeyService';\nimport { IContextKey } from '@theia/monaco-editor-core/esm/vs/platform/contextkey/common/contextkey';\nimport { IListOptions, List } from '@theia/monaco-editor-core/esm/vs/base/browser/ui/list/listWidget';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { ResolvedKeybinding } from '@theia/monaco-editor-core/esm/vs/base/common/keybindings';\nimport { IInstantiationService } from '@theia/monaco-editor-core/esm/vs/platform/instantiation/common/instantiation';\nimport { StandaloneServices } from '@theia/monaco-editor-core/esm/vs/editor/standalone/browser/standaloneServices';\nimport { IMatch } from '@theia/monaco-editor-core/esm/vs/base/common/filters';\nimport { IListRenderer, IListVirtualDelegate } from '@theia/monaco-editor-core/esm/vs/base/browser/ui/list/list';\nimport { Event } from '@theia/core';\nimport { MonacoColorRegistry } from './monaco-color-registry';\nimport { ThemeService } from '@theia/core/lib/browser/theming';\nimport { IStandaloneThemeService } from '@theia/monaco-editor-core/esm/vs/editor/standalone/common/standaloneTheme';\nimport { ThemeIcon } from '@theia/monaco-editor-core/esm/vs/platform/theme/common/themeService';\n\n// Copied from @vscode/src/vs/base/parts/quickInput/browser/quickInputList.ts\nexport interface IListElement {\n    readonly index: number;\n    readonly item: IQuickPickItem;\n    readonly saneLabel: string;\n    readonly saneAriaLabel: string;\n    readonly saneDescription?: string;\n    readonly saneDetail?: string;\n    readonly labelHighlights?: IMatch[];\n    readonly descriptionHighlights?: IMatch[];\n    readonly detailHighlights?: IMatch[];\n    readonly checked: boolean;\n    readonly separator?: IQuickPickSeparator;\n    readonly fireButtonTriggered: (event: IQuickPickItemButtonEvent<IQuickPickItem>) => void;\n}\n\n@injectable()\nexport class MonacoQuickInputImplementation implements IQuickInputService {\n    declare readonly _serviceBrand: undefined;\n\n    controller: QuickInputController;\n    quickAccess: IQuickAccessController;\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    @inject(MonacoColorRegistry)\n    protected readonly colorRegistry: MonacoColorRegistry;\n\n    @inject(ThemeService)\n    protected readonly themeService: ThemeService;\n\n    @inject(VSCodeContextKeyService)\n    protected readonly contextKeyService: VSCodeContextKeyService;\n\n    protected container: HTMLElement;\n    private quickInputList: List<unknown>;\n\n    protected inQuickOpen: IContextKey<boolean>;\n\n    get backButton(): IQuickInputButton { return this.controller.backButton; }\n    get onShow(): monaco.IEvent<void> { return this.controller.onShow; }\n    get onHide(): monaco.IEvent<void> { return this.controller.onHide; }\n\n    @postConstruct()\n    protected init(): void {\n        this.initContainer();\n        this.initController();\n        this.quickAccess = new QuickAccessController(this, StandaloneServices.get(IInstantiationService));\n        this.inQuickOpen = this.contextKeyService.createKey<boolean>('inQuickOpen', false);\n        this.controller.onShow(() => {\n            this.container.style.top = this.shell.mainPanel.node.getBoundingClientRect().top + 'px';\n            this.inQuickOpen.set(true);\n        });\n        this.controller.onHide(() => this.inQuickOpen.set(false));\n\n        this.themeService.initialized.then(() => this.controller.applyStyles(this.getStyles()));\n        // Hook into the theming service of Monaco to ensure that the updates are ready.\n        StandaloneServices.get(IStandaloneThemeService).onDidColorThemeChange(() => this.controller.applyStyles(this.getStyles()));\n        window.addEventListener('resize', () => this.updateLayout());\n    }\n\n    setContextKey(key: string | undefined): void {\n        if (key) {\n            this.contextKeyService.createKey<string>(key, undefined);\n        }\n    }\n\n    createQuickPick<T extends IQuickPickItem>(): IQuickPick<T> {\n        return this.controller.createQuickPick<T>();\n    }\n\n    createInputBox(): IInputBox {\n        return this.controller.createInputBox();\n    }\n\n    open(filter: string): void {\n        this.quickAccess.show(filter);\n        setTimeout(() => {\n            this.quickInputList.focusNth(0);\n        }, 300);\n    }\n\n    input(options?: IInputOptions, token?: monaco.CancellationToken): Promise<string | undefined> {\n        return this.controller.input(options, token);\n    }\n\n    pick<T extends IQuickPickItem, O extends IPickOptions<T>>(\n        picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options?: O, token?: monaco.CancellationToken\n    ): Promise<(O extends { canPickMany: true; } ? T[] : T) | undefined> {\n        return this.controller.pick(picks, options, token);\n    }\n\n    hide(): void {\n        this.controller.hide();\n    }\n\n    focus(): void {\n        this.controller.focus();\n    }\n\n    toggle(): void {\n        this.controller.toggle();\n    }\n\n    applyStyles(styles: IQuickInputStyles): void {\n        this.controller.applyStyles(styles);\n    }\n\n    layout(dimension: monaco.editor.IDimension, titleBarOffset: number): void {\n        this.controller.layout(dimension, titleBarOffset);\n    }\n\n    navigate(next: boolean, quickNavigate?: IQuickNavigateConfiguration): void {\n        this.controller.navigate(next, quickNavigate);\n    }\n\n    dispose(): void {\n        this.controller.dispose();\n    }\n\n    async cancel(): Promise<void> {\n        this.controller.cancel();\n    }\n\n    async back(): Promise<void> {\n        this.controller.back();\n    }\n\n    async accept(keyMods?: IKeyMods): Promise<void> {\n        this.controller.accept(keyMods);\n    }\n\n    private initContainer(): void {\n        const container = this.container = document.createElement('div');\n        container.id = 'quick-input-container';\n        document.body.appendChild(this.container);\n    }\n\n    private initController(): void {\n        this.controller = new QuickInputController(this.getOptions());\n        this.updateLayout();\n    }\n\n    private updateLayout(): void {\n        // Initialize the layout using screen dimensions as monaco computes the actual sizing.\n        // https://github.com/microsoft/vscode/blob/6261075646f055b99068d3688932416f2346dd3b/src/vs/base/parts/quickinput/browser/quickInput.ts#L1799\n        this.controller.layout(this.getClientDimension(), 0);\n    }\n\n    private getClientDimension(): monaco.editor.IDimension {\n        return { width: window.innerWidth, height: window.innerHeight };\n    }\n\n    private getOptions(): IQuickInputOptions {\n        const options: IQuickInputOptions = {\n            idPrefix: 'quickInput_',\n            container: this.container,\n            styles: { widget: {}, list: {}, inputBox: {}, countBadge: {}, button: {}, progressBar: {}, keybindingLabel: {}, },\n            ignoreFocusOut: () => false,\n            isScreenReaderOptimized: () => false, // TODO change to true once support is added.\n            backKeybindingLabel: () => undefined,\n            setContextKey: (id?: string) => this.setContextKey(id),\n            returnFocus: () => this.container.focus(),\n            createList: <T>(\n                user: string, container: HTMLElement, delegate: IListVirtualDelegate<T>, renderers: IListRenderer<T, unknown>[], listOptions: IListOptions<T>\n            ): List<T> => this.quickInputList = new List(user, container, delegate, renderers, listOptions),\n        };\n        return options;\n    }\n\n    // @monaco-uplift\n    // Keep the styles up to date with https://github.com/microsoft/vscode/blob/7888ff3a6b104e9e2e3d0f7890ca92dd0828215f/src/vs/platform/quickinput/browser/quickInput.ts#L171.\n    private getStyles(): IQuickInputStyles {\n        return {\n            widget: {\n                quickInputBackground: this.colorRegistry.getColor('quickInput.background'),\n                quickInputForeground: this.colorRegistry.getColor('quickInput.foreground'),\n                quickInputTitleBackground: this.colorRegistry.getColor('quickInputTitle.background')\n            },\n            list: {\n                listBackground: this.colorRegistry.getColor('quickInput.background'),\n                listInactiveFocusForeground: this.colorRegistry.getColor('quickInputList.focusForeground'),\n                listInactiveSelectionIconForeground: this.colorRegistry.getColor('quickInputList.focusIconForeground'),\n                listInactiveFocusBackground: this.colorRegistry.getColor('quickInputList.focusBackground'),\n                listFocusOutline: this.colorRegistry.getColor('activeContrastBorder'),\n                listInactiveFocusOutline: this.colorRegistry.getColor('activeContrastBorder'),\n                pickerGroupBorder: this.colorRegistry.getColor('pickerGroup.border'),\n                pickerGroupForeground: this.colorRegistry.getColor('pickerGroup.foreground')\n            },\n            inputBox: {\n                inputForeground: this.colorRegistry.getColor('inputForeground'),\n                inputBackground: this.colorRegistry.getColor('inputBackground'),\n                inputBorder: this.colorRegistry.getColor('inputBorder'),\n                inputValidationInfoBackground: this.colorRegistry.getColor('inputValidation.infoBackground'),\n                inputValidationInfoForeground: this.colorRegistry.getColor('inputValidation.infoForeground'),\n                inputValidationInfoBorder: this.colorRegistry.getColor('inputValidation.infoBorder'),\n                inputValidationWarningBackground: this.colorRegistry.getColor('inputValidation.warningBackground'),\n                inputValidationWarningForeground: this.colorRegistry.getColor('inputValidation.warningForeground'),\n                inputValidationWarningBorder: this.colorRegistry.getColor('inputValidation.warningBorder'),\n                inputValidationErrorBackground: this.colorRegistry.getColor('inputValidation.errorBackground'),\n                inputValidationErrorForeground: this.colorRegistry.getColor('inputValidation.errorForeground'),\n                inputValidationErrorBorder: this.colorRegistry.getColor('inputValidation.errorBorder'),\n            },\n            countBadge: {\n                badgeBackground: this.colorRegistry.getColor('badge.background'),\n                badgeForeground: this.colorRegistry.getColor('badge.foreground'),\n                badgeBorder: this.colorRegistry.getColor('contrastBorder')\n            },\n            button: {\n                buttonForeground: this.colorRegistry.getColor('button.foreground'),\n                buttonBackground: this.colorRegistry.getColor('button.background'),\n                buttonHoverBackground: this.colorRegistry.getColor('button.hoverBackground'),\n                buttonBorder: this.colorRegistry.getColor('contrastBorder')\n            },\n            progressBar: {\n                progressBarBackground: this.colorRegistry.getColor('progressBar.background')\n            },\n            keybindingLabel: {\n                keybindingLabelBackground: this.colorRegistry.getColor('keybindingLabe.background'),\n                keybindingLabelForeground: this.colorRegistry.getColor('keybindingLabel.foreground'),\n                keybindingLabelBorder: this.colorRegistry.getColor('keybindingLabel.border'),\n                keybindingLabelBottomBorder: this.colorRegistry.getColor('keybindingLabel.bottomBorder'),\n                keybindingLabelShadow: this.colorRegistry.getColor('widget.shadow')\n            },\n        };\n    }\n}\n\n@injectable()\nexport class MonacoQuickInputService implements QuickInputService {\n    @inject(MonacoQuickInputImplementation)\n    private monacoService: MonacoQuickInputImplementation;\n\n    @inject(KeybindingRegistry)\n    protected readonly keybindingRegistry: KeybindingRegistry;\n\n    get backButton(): QuickInputButton {\n        return this.monacoService.backButton;\n    }\n\n    get onShow(): Event<void> { return this.monacoService.onShow; }\n    get onHide(): Event<void> { return this.monacoService.onHide; }\n\n    open(filter: string): void {\n        this.monacoService.open(filter);\n    }\n\n    createInputBox(): InputBox {\n        return this.monacoService.createInputBox();\n    }\n\n    input(options?: InputOptions, token?: monaco.CancellationToken): Promise<string | undefined> {\n        let inputOptions: IInputOptions | undefined;\n        if (options) {\n            const { validateInput, ...props } = options;\n            inputOptions = { ...props };\n            if (validateInput) {\n                inputOptions.validateInput = async input => validateInput(input);\n            }\n        }\n        return this.monacoService.input(inputOptions, token);\n    }\n\n    async pick<T extends QuickPickItem, O extends PickOptions<T> = PickOptions<T>>(\n        picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options?: O, token?: monaco.CancellationToken\n    ): Promise<(O extends { canPickMany: true; } ? T[] : T) | undefined> {\n        type M = T & { buttons?: NormalizedQuickInputButton[] };\n        type R = (O extends { canPickMany: true; } ? T[] : T);\n\n        const monacoPicks: Promise<QuickPickInput<IQuickPickItem>[]> = new Promise(async resolve => {\n            const updatedPicks = (await picks).map(pick => {\n                if (pick.type !== 'separator') {\n                    const icon = pick.iconPath;\n                    // @monaco-uplift\n                    // Other kind of icons (URI and URI dark/light) shall be supported once monaco editor has been upgraded to at least 1.81.\n                    // see https://github.com/eclipse-theia/theia/pull/12945#issue-1913645228\n                    if (ThemeIcon.isThemeIcon(icon)) {\n                        const codicon = codiconArray(icon.id);\n                        if (pick.iconClasses) {\n                            pick.iconClasses.push(...codicon);\n                        } else {\n                            pick.iconClasses = codicon;\n                        }\n                    }\n                    pick.buttons &&= pick.buttons.map(QuickInputButton.normalize);\n                }\n                return pick as M;\n            });\n            resolve(updatedPicks);\n        });\n        const monacoOptions = options as IPickOptions<M>;\n        const picked = await this.monacoService.pick(monacoPicks, monacoOptions, token);\n        if (!picked) { return picked; }\n        if (options?.canPickMany) {\n            return (Array.isArray(picked) ? picked : [picked]) as R;\n        }\n        return Array.isArray(picked) ? picked[0] : picked;\n    }\n\n    showQuickPick<T extends QuickPickItem>(items: Array<T | QuickPickSeparator>, options?: QuickPickOptions<T>): Promise<T | undefined> {\n        return new Promise<T | undefined>((resolve, reject) => {\n            const wrapped = this.createQuickPick<T>();\n            wrapped.items = items;\n\n            if (options) {\n                wrapped.canSelectMany = !!options.canSelectMany;\n                wrapped.contextKey = options.contextKey;\n                wrapped.description = options.description;\n                wrapped.enabled = options.enabled ?? true;\n                wrapped.ignoreFocusOut = !!options.ignoreFocusOut;\n                wrapped.matchOnDescription = options.matchOnDescription ?? true;\n                wrapped.matchOnDetail = options.matchOnDetail ?? true;\n                wrapped.keepScrollPosition = options.keepScrollPosition ?? false;\n                wrapped.placeholder = options.placeholder;\n                wrapped.step = options.step;\n                wrapped.title = options.title;\n                wrapped.totalSteps = options.totalSteps;\n\n                if (options.activeItem) {\n                    wrapped.activeItems = [options.activeItem];\n                }\n\n                wrapped.onDidAccept(() => {\n                    if (options?.onDidAccept) {\n                        options.onDidAccept();\n                    }\n                    wrapped.hide();\n                    resolve(wrapped.selectedItems[0]);\n                });\n\n                wrapped.onDidHide(() => {\n                    if (options.onDidHide) {\n                        options.onDidHide();\n                    };\n                    wrapped.dispose();\n                    setTimeout(() => resolve(undefined));\n                });\n                wrapped.onDidChangeValue((filter: string) => {\n                    if (options.onDidChangeValue) {\n                        options.onDidChangeValue(wrapped, filter);\n                    }\n                });\n                wrapped.onDidChangeActive((activeItems: Array<T>) => {\n                    if (options.onDidChangeActive) {\n                        options.onDidChangeActive(wrapped, activeItems);\n                    }\n                });\n                wrapped.onDidTriggerButton((button: IQuickInputButton) => {\n                    if (options.onDidTriggerButton) {\n                        options.onDidTriggerButton(button);\n                    }\n                });\n                wrapped.onDidTriggerItemButton((event: QuickPickItemButtonEvent<T>) => {\n                    if (options.onDidTriggerItemButton) {\n                        // https://github.com/theia-ide/vscode/blob/standalone/0.23.x/src/vs/base/parts/quickinput/browser/quickInput.ts#L1387\n                        options.onDidTriggerItemButton(\n                            {\n                                ...event,\n                                removeItem: () => {\n                                    wrapped.items = wrapped.items.filter(item => item !== event.item);\n                                    wrapped.activeItems = wrapped.activeItems.filter(item => item !== event.item);\n                                }\n                            });\n                    }\n                });\n                wrapped.onDidChangeSelection((selectedItems: Array<T>) => {\n                    if (options.onDidChangeSelection) {\n                        options.onDidChangeSelection(wrapped, selectedItems);\n                    }\n                });\n            }\n            wrapped.show();\n        }).then(item => {\n            if (item?.execute) {\n                item.execute();\n            }\n            return item;\n        });\n    }\n\n    createQuickPick<T extends QuickPickItem>(): QuickPick<T> {\n        const quickPick = this.monacoService.createQuickPick<MonacoQuickPickItem<T>>();\n        return this.wrapQuickPick(quickPick);\n    }\n\n    wrapQuickPick<T extends QuickPickItem>(wrapped: IQuickPick<MonacoQuickPickItem<T>>): QuickPick<T> {\n        return new MonacoQuickPick(wrapped, this.keybindingRegistry);\n    }\n\n    protected convertItems<T extends QuickPickItem>(item: T): MonacoQuickPickItem<T> {\n        return new MonacoQuickPickItem(item, this.keybindingRegistry);\n    }\n\n    hide(): void {\n        return this.monacoService.hide();\n    }\n}\n\nclass MonacoQuickInput {\n    constructor(protected readonly wrapped: IQuickInput) {\n    }\n\n    get onDidHide(): Event<{ reason: QuickInputHideReason }> { return this.wrapped.onDidHide; }\n    get onDispose(): Event<void> { return this.wrapped.onDispose; }\n\n    get title(): string | undefined {\n        return this.wrapped.title;\n    }\n\n    set title(v: string | undefined) {\n        this.wrapped.title = v;\n    }\n\n    get description(): string | undefined {\n        return this.wrapped.description;\n    }\n\n    set description(v: string | undefined) {\n        this.wrapped.description = v;\n    }\n    get step(): number | undefined {\n        return this.wrapped.step;\n    }\n\n    set step(v: number | undefined) {\n        this.wrapped.step = v;\n    }\n\n    get enabled(): boolean {\n        return this.wrapped.enabled;\n    }\n\n    set enabled(v: boolean) {\n        this.wrapped.enabled = v;\n    }\n    get totalSteps(): number | undefined {\n        return this.wrapped.totalSteps;\n    }\n\n    set totalSteps(v: number | undefined) {\n        this.wrapped.totalSteps = v;\n    }\n    get contextKey(): string | undefined {\n        return this.wrapped.contextKey;\n    }\n\n    set contextKey(v: string | undefined) {\n        this.wrapped.contextKey = v;\n    }\n\n    get busy(): boolean {\n        return this.wrapped.busy;\n    }\n\n    set busy(v: boolean) {\n        this.wrapped.busy = v;\n    }\n\n    get ignoreFocusOut(): boolean {\n        return this.wrapped.ignoreFocusOut;\n    }\n\n    set ignoreFocusOut(v: boolean) {\n        this.wrapped.ignoreFocusOut = v;\n    }\n\n    show(): void {\n        this.wrapped.show();\n    }\n    hide(): void {\n        this.wrapped.hide();\n    }\n    dispose(): void {\n        this.wrapped.dispose();\n    }\n\n}\n\nclass MonacoQuickPick<T extends QuickPickItem> extends MonacoQuickInput implements QuickPick<T> {\n    constructor(protected override readonly wrapped: IQuickPick<MonacoQuickPickItem<T>>, protected readonly keybindingRegistry: KeybindingRegistry) {\n        super(wrapped);\n    }\n\n    get value(): string {\n        return this.wrapped.value;\n    };\n\n    set value(v: string) {\n        this.wrapped.value = v;\n    }\n\n    get placeholder(): string | undefined {\n        return this.wrapped.placeholder;\n    }\n\n    set placeholder(v: string | undefined) {\n        this.wrapped.placeholder = v;\n    }\n\n    get canSelectMany(): boolean {\n        return this.wrapped.canSelectMany;\n    }\n\n    set canSelectMany(v: boolean) {\n        this.wrapped.canSelectMany = v;\n    }\n\n    get matchOnDescription(): boolean {\n        return this.wrapped.matchOnDescription;\n    }\n\n    set matchOnDescription(v: boolean) {\n        this.wrapped.matchOnDescription = v;\n    }\n\n    get matchOnDetail(): boolean {\n        return this.wrapped.matchOnDetail;\n    }\n\n    set matchOnDetail(v: boolean) {\n        this.wrapped.matchOnDetail = v;\n    }\n\n    get keepScrollPosition(): boolean {\n        return this.wrapped.keepScrollPosition;\n    }\n\n    set keepScrollPosition(v: boolean) {\n        this.wrapped.keepScrollPosition = v;\n    }\n\n    get items(): readonly (T | QuickPickSeparator)[] {\n        return this.wrapped.items.map(item => QuickPickSeparator.is(item) ? item : item.item);\n    }\n\n    set items(itemList: readonly (T | QuickPickSeparator)[]) {\n        // We need to store and apply the currently selected active items.\n        // Since monaco compares these items by reference equality, creating new wrapped items will unmark any active items.\n        // Assigning the `activeItems` again will restore all active items even after the items array has changed.\n        // See also the `findMonacoItemReferences` method.\n        const active = this.activeItems;\n        this.wrapped.items = itemList.map(item => QuickPickSeparator.is(item) ? item : new MonacoQuickPickItem<T>(item, this.keybindingRegistry));\n        if (active.length !== 0) {\n            this.activeItems = active; // If this is done with an empty activeItems array, then it will undo first item focus on quick menus.\n        }\n    }\n\n    set activeItems(itemList: readonly T[]) {\n        this.wrapped.activeItems = this.findMonacoItemReferences(this.wrapped.items, itemList);\n    }\n\n    get activeItems(): readonly (T)[] {\n        return this.wrapped.activeItems.map(item => item.item);\n    }\n\n    set selectedItems(itemList: readonly T[]) {\n        this.wrapped.selectedItems = this.findMonacoItemReferences(this.wrapped.items, itemList);\n    }\n\n    get selectedItems(): readonly (T)[] {\n        return this.wrapped.selectedItems.map(item => item.item);\n    }\n\n    readonly onDidAccept: Event<{ inBackground: boolean }> = this.wrapped.onDidAccept;\n    readonly onDidChangeValue: Event<string> = this.wrapped.onDidChangeValue;\n    readonly onDidTriggerButton: Event<QuickInputButton> = this.wrapped.onDidTriggerButton;\n    readonly onDidTriggerItemButton: Event<QuickPickItemButtonEvent<T>> =\n        Event.map(this.wrapped.onDidTriggerItemButton, (evt: IQuickPickItemButtonEvent<MonacoQuickPickItem<T>>) => ({\n            item: evt.item.item,\n            button: evt.button\n        }));\n    readonly onDidChangeActive: Event<T[]> = Event.map(\n        this.wrapped.onDidChangeActive,\n        (items: MonacoQuickPickItem<T>[]) => items.map(item => item.item));\n    readonly onDidChangeSelection: Event<T[]> = Event.map(\n        this.wrapped.onDidChangeSelection, (items: MonacoQuickPickItem<T>[]) => items.map(item => item.item));\n\n    /**\n     * Monaco doesn't check for deep equality when setting the `activeItems` or `selectedItems`.\n     * Instead we have to find the references of the monaco wrappers that contain the selected/active items\n     */\n    protected findMonacoItemReferences(source: readonly (MonacoQuickPickItem<T> | IQuickPickSeparator)[], items: readonly QuickPickItem[]): MonacoQuickPickItem<T>[] {\n        const monacoReferences: MonacoQuickPickItem<T>[] = [];\n        for (const item of items) {\n            for (const wrappedItem of source) {\n                if (!QuickPickSeparator.is(wrappedItem) && wrappedItem.item === item) {\n                    monacoReferences.push(wrappedItem);\n                }\n            }\n        }\n        return monacoReferences;\n    }\n}\n\nexport class MonacoQuickPickItem<T extends QuickPickItem> implements IQuickPickItem {\n    readonly type?: 'item';\n    readonly id?: string;\n    readonly label: string;\n    readonly meta?: string;\n    readonly ariaLabel?: string;\n    readonly description?: string;\n    readonly detail?: string;\n    readonly keybinding?: ResolvedKeybinding;\n    readonly iconClasses?: string[];\n    buttons?: IQuickInputButton[];\n    readonly alwaysShow?: boolean;\n    readonly highlights?: QuickPickItemHighlights;\n\n    constructor(readonly item: T, kbRegistry: KeybindingRegistry) {\n        this.type = item.type;\n        this.id = item.id;\n        this.label = item.label;\n        this.meta = item.meta;\n        this.ariaLabel = item.ariaLabel;\n        this.description = item.description;\n        this.detail = item.detail;\n        this.keybinding = item.keySequence ? new MonacoResolvedKeybinding(item.keySequence, kbRegistry) : undefined;\n        this.iconClasses = item.iconClasses;\n        this.buttons = item.buttons?.map(QuickInputButton.normalize);\n        this.alwaysShow = item.alwaysShow;\n        this.highlights = item.highlights;\n    }\n\n    accept(): void {\n        if (this.item.execute) {\n            this.item.execute();\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { KeyCode as MonacoKeyCode } from '@theia/monaco-editor-core/esm/vs/base/common/keyCodes';\nimport {\n    ChordKeybinding, KeybindingModifier, ResolvedKeybinding, ResolvedKeybindingPart, ScanCodeBinding, SimpleKeybinding\n} from '@theia/monaco-editor-core/esm/vs/base/common/keybindings';\nimport { ElectronAcceleratorLabelProvider, UILabelProvider, UserSettingsLabelProvider } from '@theia/monaco-editor-core/esm/vs/base/common/keybindingLabels';\nimport { USLayoutResolvedKeybinding } from '@theia/monaco-editor-core/esm/vs/platform/keybinding/common/usLayoutResolvedKeybinding';\nimport * as MonacoPlatform from '@theia/monaco-editor-core/esm/vs/base/common/platform';\nimport { KeybindingRegistry } from '@theia/core/lib/browser/keybinding';\nimport { KeyCode, KeySequence, Keystroke, Key, KeyModifier } from '@theia/core/lib/browser/keys';\nimport { isOSX } from '@theia/core/lib/common/os';\nimport { KEY_CODE_MAP } from './monaco-keycode-map';\n\nexport class MonacoResolvedKeybinding extends ResolvedKeybinding {\n\n    protected readonly parts: ResolvedKeybindingPart[];\n\n    constructor(protected readonly keySequence: KeySequence, keybindingService: KeybindingRegistry) {\n        super();\n        this.parts = keySequence.map(keyCode => {\n            // eslint-disable-next-line no-null/no-null\n            const keyLabel = keyCode.key ? keybindingService.acceleratorForKey(keyCode.key) : null;\n            const keyAriaLabel = keyLabel;\n            return new ResolvedKeybindingPart(\n                keyCode.ctrl,\n                keyCode.shift,\n                keyCode.alt,\n                keyCode.meta,\n                keyLabel,\n                keyAriaLabel\n            );\n        });\n    }\n\n    getLabel(): string | null {\n        return UILabelProvider.toLabel(MonacoPlatform.OS, this.parts, p => p.keyLabel);\n    }\n\n    getAriaLabel(): string | null {\n        return UILabelProvider.toLabel(MonacoPlatform.OS, this.parts, p => p.keyAriaLabel);\n    }\n\n    getElectronAccelerator(): string | null {\n        if (this.isChord()) {\n            // Electron cannot handle chords\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        return ElectronAcceleratorLabelProvider.toLabel(MonacoPlatform.OS, this.parts, p => p.keyLabel);\n    }\n\n    getUserSettingsLabel(): string | null {\n        return UserSettingsLabelProvider.toLabel(MonacoPlatform.OS, this.parts, p => p.keyLabel);\n    }\n\n    isWYSIWYG(): boolean {\n        return true;\n    }\n\n    isChord(): boolean {\n        return this.parts.length > 1;\n    }\n\n    getDispatchParts(): (string | null)[] {\n        return this.keySequence.map(keyCode => USLayoutResolvedKeybinding.getDispatchStr(this.toKeybinding(keyCode)));\n    }\n\n    getSingleModifierDispatchParts(): (KeybindingModifier | null)[] {\n        return this.keySequence.map(keybinding => this.getSingleModifierDispatchPart(keybinding));\n    }\n\n    protected getSingleModifierDispatchPart(code: KeyCode): KeybindingModifier | null {\n        if (code.key?.keyCode === undefined) {\n            return null; // eslint-disable-line no-null/no-null\n        }\n        if (KEY_CODE_MAP[code.key?.keyCode] === MonacoKeyCode.Ctrl && !code.shift && !code.alt && !code.meta) {\n            return 'ctrl';\n        }\n        if (KEY_CODE_MAP[code.key?.keyCode] === MonacoKeyCode.Shift && !code.ctrl && !code.alt && !code.meta) {\n            return 'shift';\n        }\n        if (KEY_CODE_MAP[code.key?.keyCode] === MonacoKeyCode.Alt && !code.shift && !code.ctrl && !code.meta) {\n            return 'alt';\n        }\n        if (KEY_CODE_MAP[code.key?.keyCode] === MonacoKeyCode.Meta && !code.shift && !code.alt && !code.ctrl) {\n            return 'meta';\n        }\n        return null; // eslint-disable-line no-null/no-null\n    }\n\n    private toKeybinding(keyCode: KeyCode): SimpleKeybinding {\n        return new SimpleKeybinding(\n            keyCode.ctrl,\n            keyCode.shift,\n            keyCode.alt,\n            keyCode.meta,\n            KEY_CODE_MAP[keyCode.key!.keyCode]\n        );\n    }\n\n    public getParts(): ResolvedKeybindingPart[] {\n        return this.parts;\n    }\n\n    static toKeybinding(keybindings: Array<SimpleKeybinding | ScanCodeBinding>): string {\n        return keybindings.map(binding => this.keyCode(binding)).join(' ');\n    }\n\n    static keyCode(keybinding: SimpleKeybinding | ScanCodeBinding): KeyCode {\n        const keyCode = keybinding instanceof SimpleKeybinding ? keybinding.keyCode : USLayoutResolvedKeybinding['_scanCodeToKeyCode'](keybinding.scanCode);\n        const sequence: Keystroke = {\n            first: Key.getKey(this.monaco2BrowserKeyCode(keyCode & 0xff)),\n            modifiers: []\n        };\n        if (keybinding.ctrlKey) {\n            if (isOSX) {\n                sequence.modifiers!.push(KeyModifier.MacCtrl);\n            } else {\n                sequence.modifiers!.push(KeyModifier.CtrlCmd);\n            }\n        }\n        if (keybinding.shiftKey) {\n            sequence.modifiers!.push(KeyModifier.Shift);\n        }\n        if (keybinding.altKey) {\n            sequence.modifiers!.push(KeyModifier.Alt);\n        }\n        if (keybinding.metaKey && sequence.modifiers!.indexOf(KeyModifier.CtrlCmd) === -1) {\n            sequence.modifiers!.push(KeyModifier.CtrlCmd);\n        }\n        return KeyCode.createKeyCode(sequence);\n    }\n\n    static keySequence(keybinding: ChordKeybinding): KeySequence {\n        return keybinding.parts.map(part => this.keyCode(part));\n    }\n\n    private static monaco2BrowserKeyCode(keyCode: MonacoKeyCode): number {\n        for (let i = 0; i < KEY_CODE_MAP.length; i++) {\n            if (KEY_CODE_MAP[i] === keyCode) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n}\n"],"names":[],"sourceRoot":""}