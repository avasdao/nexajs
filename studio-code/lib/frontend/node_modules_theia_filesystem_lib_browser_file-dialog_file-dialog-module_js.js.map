{"version":3,"file":"node_modules_theia_filesystem_lib_browser_file-dialog_file-dialog-module_js.js","mappings":";;;;;;;;;;AAAA,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;AAEhF,oIAA+D;AAC/D,4HAA6G;AAC7G,4MAA4H;AAC5H,kKAAoF;AACpF,yJAAoD;AACpD,4MAAgK;AAChK,qBAAe,IAAI,2BAAe,CAAC,IAAI,CAAC,EAAE;IACtC,IAAI,CAAC,8CAAwB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAC3D,IAAI,CAAC,uCAAiB,CAAC,CAAC,SAAS,CAAC,8CAAwB,CAAC,CAAC;IAC5D,IAAI,CAAC,sCAA2B,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,OAAoC,EAAE,EAAE;QAC5F,MAAM,cAAc,GAAG,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QACvD,cAAc,CAAC,IAAI,CAAC,sCAA2B,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAC1E,cAAc,CAAC,IAAI,CAAC,+BAAoB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;QACtE,OAAO,cAAc,CAAC,GAAG,CAAC,+BAAoB,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;IACH,IAAI,CAAC,wEAAoC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,OAA6C,EAAE,EAAE;QAC9G,MAAM,cAAc,GAAG,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QACvD,cAAc,CAAC,IAAI,CAAC,wEAAoC,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACnF,cAAc,CAAC,IAAI,CAAC,iEAA6B,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;QAC/E,OAAO,cAAc,CAAC,GAAG,CAAC,iEAA6B,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;IACH,IAAI,CAAC,oEAAgC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,CAAC,cAA8B,EAAE,EAAE;QACnG,MAAM,KAAK,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC;QACtC,KAAK,CAAC,IAAI,CAAC,iCAAc,CAAC,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;QAC3D,KAAK,CAAC,IAAI,CAAC,uEAAmC,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;QAC5E,OAAO,KAAK,CAAC,GAAG,CAAC,uEAAmC,CAAC,CAAC;IAC1D,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sources":["webpack:///./node_modules/@theia/filesystem/src/browser/file-dialog/file-dialog-module.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { LocationListRenderer, LocationListRendererFactory, LocationListRendererOptions } from '../location';\nimport { FileDialogHiddenFilesToggleRenderer, HiddenFilesToggleRendererFactory } from './file-dialog-hidden-files-renderer';\nimport { DefaultFileDialogService, FileDialogService } from './file-dialog-service';\nimport { FileDialogTree } from './file-dialog-tree';\nimport { FileDialogTreeFiltersRenderer, FileDialogTreeFiltersRendererFactory, FileDialogTreeFiltersRendererOptions } from './file-dialog-tree-filters-renderer';\nexport default new ContainerModule(bind => {\n    bind(DefaultFileDialogService).toSelf().inSingletonScope();\n    bind(FileDialogService).toService(DefaultFileDialogService);\n    bind(LocationListRendererFactory).toFactory(context => (options: LocationListRendererOptions) => {\n        const childContainer = context.container.createChild();\n        childContainer.bind(LocationListRendererOptions).toConstantValue(options);\n        childContainer.bind(LocationListRenderer).toSelf().inSingletonScope();\n        return childContainer.get(LocationListRenderer);\n    });\n    bind(FileDialogTreeFiltersRendererFactory).toFactory(context => (options: FileDialogTreeFiltersRendererOptions) => {\n        const childContainer = context.container.createChild();\n        childContainer.bind(FileDialogTreeFiltersRendererOptions).toConstantValue(options);\n        childContainer.bind(FileDialogTreeFiltersRenderer).toSelf().inSingletonScope();\n        return childContainer.get(FileDialogTreeFiltersRenderer);\n    });\n    bind(HiddenFilesToggleRendererFactory).toFactory(({ container }) => (fileDialogTree: FileDialogTree) => {\n        const child = container.createChild();\n        child.bind(FileDialogTree).toConstantValue(fileDialogTree);\n        child.bind(FileDialogHiddenFilesToggleRenderer).toSelf().inSingletonScope();\n        return child.get(FileDialogHiddenFilesToggleRenderer);\n    });\n});\n"],"names":[],"sourceRoot":""}