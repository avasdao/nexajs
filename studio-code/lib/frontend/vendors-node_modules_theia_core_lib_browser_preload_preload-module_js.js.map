{"version":3,"file":"vendors-node_modules_theia_core_lib_browser_preload_preload-module_js.js","mappings":"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","sources":["webpack:///./node_modules/@theia/core/src/browser/preload/i18n-preload-contribution.ts?","webpack:///./node_modules/@theia/core/src/browser/preload/os-preload-contribution.ts?","webpack:///./node_modules/@theia/core/src/browser/preload/preload-module.ts?","webpack:///./node_modules/@theia/core/src/browser/preload/theme-preload-contribution.ts?","webpack:///./node_modules/@theia/core/src/common/i18n/localization-server.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { PreloadContribution } from './preloader';\nimport { FrontendApplicationConfigProvider } from '../frontend-application-config-provider';\nimport { nls } from '../../common/nls';\nimport { inject, injectable } from 'inversify';\nimport { LocalizationServer } from '../../common/i18n/localization-server';\n\n@injectable()\nexport class I18nPreloadContribution implements PreloadContribution {\n\n    @inject(LocalizationServer)\n    protected readonly localizationServer: LocalizationServer;\n\n    async initialize(): Promise<void> {\n        const defaultLocale = FrontendApplicationConfigProvider.get().defaultLocale;\n        if (defaultLocale && !nls.locale) {\n            Object.assign(nls, {\n                locale: defaultLocale\n            });\n        }\n        if (nls.locale) {\n            const localization = await this.localizationServer.loadLocalization(nls.locale);\n            if (localization.languagePack) {\n                nls.localization = localization;\n            } else {\n                // In case the localization that we've loaded doesn't localize Theia completely (languagePack is false)\n                // We simply reset the locale to the default again\n                Object.assign(nls, {\n                    locale: defaultLocale || undefined\n                });\n            }\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from 'inversify';\nimport { OS, OSBackendProvider } from '../../common';\nimport { PreloadContribution } from './preloader';\n\n@injectable()\nexport class OSPreloadContribution implements PreloadContribution {\n\n    @inject(OSBackendProvider)\n    protected readonly osBackendProvider: OSBackendProvider;\n\n    async initialize(): Promise<void> {\n        const osType = await this.osBackendProvider.getBackendOS();\n        const isWindows = osType === 'Windows';\n        const isOSX = osType === 'OSX';\n        OS.backend.isOSX = isOSX;\n        OS.backend.isWindows = isWindows;\n        OS.backend.type = () => osType;\n        OS.backend.EOL = isWindows ? '\\r\\n' : '\\n';\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from 'inversify';\nimport { PreloadContribution, Preloader } from './preloader';\nimport { bindContributionProvider } from '../../common/contribution-provider';\nimport { I18nPreloadContribution } from './i18n-preload-contribution';\nimport { OSPreloadContribution } from './os-preload-contribution';\nimport { ThemePreloadContribution } from './theme-preload-contribution';\nimport { LocalizationServer, LocalizationServerPath } from '../../common/i18n/localization-server';\nimport { WebSocketConnectionProvider } from '../messaging/ws-connection-provider';\nimport { OSBackendProvider, OSBackendProviderPath } from '../../common/os';\n\nexport default new ContainerModule(bind => {\n    bind(Preloader).toSelf().inSingletonScope();\n    bindContributionProvider(bind, PreloadContribution);\n\n    bind(LocalizationServer).toDynamicValue(ctx =>\n        WebSocketConnectionProvider.createProxy<LocalizationServer>(ctx.container, LocalizationServerPath)\n    ).inSingletonScope();\n\n    bind(OSBackendProvider).toDynamicValue(ctx =>\n        WebSocketConnectionProvider.createProxy<OSBackendProvider>(ctx.container, OSBackendProviderPath)\n    ).inSingletonScope();\n\n    bind(I18nPreloadContribution).toSelf().inSingletonScope();\n    bind(PreloadContribution).toService(I18nPreloadContribution);\n    bind(OSPreloadContribution).toSelf().inSingletonScope();\n    bind(PreloadContribution).toService(OSPreloadContribution);\n    bind(ThemePreloadContribution).toSelf().inSingletonScope();\n    bind(PreloadContribution).toService(ThemePreloadContribution);\n});\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { PreloadContribution } from './preloader';\nimport { DEFAULT_BACKGROUND_COLOR_STORAGE_KEY } from '../frontend-application-config-provider';\nimport { injectable } from 'inversify';\nimport { DefaultTheme } from '@theia/application-package/lib/application-props';\n\n@injectable()\nexport class ThemePreloadContribution implements PreloadContribution {\n\n    initialize(): void {\n        const dark = window.matchMedia?.('(prefers-color-scheme: dark)').matches;\n        const value = window.localStorage.getItem(DEFAULT_BACKGROUND_COLOR_STORAGE_KEY) || DefaultTheme.defaultBackgroundColor(dark);\n        document.documentElement.style.setProperty('--theia-editor-background', value);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Localization } from './localization';\n\nexport const LocalizationServerPath = '/localization-server';\n\nexport const LocalizationServer = Symbol('LocalizationServer');\n\nexport interface LocalizationServer {\n    loadLocalization(languageId: string): Promise<Localization>;\n}\n"],"names":[],"sourceRoot":""}