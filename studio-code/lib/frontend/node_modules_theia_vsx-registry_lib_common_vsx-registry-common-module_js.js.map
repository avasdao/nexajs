{"version":3,"file":"node_modules_theia_vsx-registry_lib_common_vsx-registry-common-module_js.js","mappings":"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","sources":["webpack:///./node_modules/@theia/core/shared/@theia/request/index.js?","webpack:///./node_modules/@theia/vsx-registry/src/common/index.ts?","webpack:///./node_modules/@theia/vsx-registry/src/common/vsx-extension-uri.ts?","webpack:///./node_modules/@theia/vsx-registry/src/common/vsx-registry-common-module.ts?"],"sourcesContent":["module.exports = require('@theia/request');\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport { OVSXClientProvider, OVSXUrlResolver } from './ovsx-client-provider';\nexport { VSXEnvironment } from './vsx-environment';\nexport { VSXExtensionUri } from './vsx-extension-uri';\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { VSCodeExtensionUri as VSXExtensionUri } from '@theia/plugin-ext-vscode/lib/common/plugin-vscode-uri';\n/** @deprecated since 1.25.0. Import `VSCodeExtensionUri from `plugin-ext-vscode` package instead. */\nexport { VSXExtensionUri };\n\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { OVSXClientProvider, OVSXUrlResolver } from '../common';\nimport { RequestService } from '@theia/core/shared/@theia/request';\nimport { ExtensionIdMatchesFilterFactory, OVSXApiFilter, OVSXApiFilterImpl, OVSXClient, OVSXHttpClient, OVSXRouterClient, RequestContainsFilterFactory } from '@theia/ovsx-client';\nimport { VSXEnvironment } from './vsx-environment';\n\nexport default new ContainerModule(bind => {\n    bind(OVSXUrlResolver)\n        .toFunction(url => url);\n    bind(OVSXClientProvider)\n        .toDynamicValue(ctx => {\n            const vsxEnvironment = ctx.container.get<VSXEnvironment>(VSXEnvironment);\n            const requestService = ctx.container.get<RequestService>(RequestService);\n            const urlResolver = ctx.container.get(OVSXUrlResolver);\n            const clientPromise = Promise\n                .all([\n                    vsxEnvironment.getRegistryApiUri(),\n                    vsxEnvironment.getOvsxRouterConfig?.(),\n                ])\n                .then<OVSXClient>(async ([apiUrl, ovsxRouterConfig]) => {\n                    if (ovsxRouterConfig) {\n                        const clientFactory = OVSXHttpClient.createClientFactory(requestService);\n                        return OVSXRouterClient.FromConfig(\n                            ovsxRouterConfig,\n                            async url => clientFactory(await urlResolver(url)),\n                            [RequestContainsFilterFactory, ExtensionIdMatchesFilterFactory]\n                        );\n                    }\n                    return new OVSXHttpClient(\n                        await urlResolver(apiUrl),\n                        requestService\n                    );\n                });\n            // reuse the promise for subsequent calls to this provider\n            return () => clientPromise;\n        })\n        .inSingletonScope();\n    bind(OVSXApiFilter)\n        .toDynamicValue(ctx => {\n            const vsxEnvironment = ctx.container.get<VSXEnvironment>(VSXEnvironment);\n            const apiFilter = new OVSXApiFilterImpl('-- temporary invalid version value --');\n            vsxEnvironment.getVscodeApiVersion()\n                .then(apiVersion => apiFilter.supportedApiVersion = apiVersion);\n            return apiFilter;\n        })\n        .inSingletonScope();\n});\n"],"names":[],"sourceRoot":""}